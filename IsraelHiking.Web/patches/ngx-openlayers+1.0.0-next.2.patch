patch-package
deleted file mode 100644
--- a/node_modules/ngx-openlayers/CHANGELOG.md
+++ /dev/null
@@ -1,48 +0,0 @@
-# Change Log
-
-All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.
-
-<a name="1.0.0-next.2"></a>
-# [1.0.0-next.2](https://github.com/quentin-ol/ngx-openlayers/compare/1.0.0-next.1...1.0.0-next.2) (2018-11-21)
-
-
-### Features
-
-* **geom:** add circle geometry ([#210](https://github.com/quentin-ol/ngx-openlayers/issues/210)) ([d789ccf](https://github.com/quentin-ol/ngx-openlayers/commit/d789ccf))
-* **source:** add Image ArcGIS source ([#209](https://github.com/quentin-ol/ngx-openlayers/issues/209)) ([98d1577](https://github.com/quentin-ol/ngx-openlayers/commit/98d1577))
-
-
-
-<a name="1.0.0-next.1"></a>
-# [1.0.0-next.1](https://github.com/quentin-ol/ngx-openlayers/compare/1.0.0-next.0...1.0.0-next.1) (2018-11-06)
-
-
-### Bug Fixes
-
-* **source:** check host instance before setSource ([#193](https://github.com/quentin-ol/ngx-openlayers/issues/193)) ([afeb1a9](https://github.com/quentin-ol/ngx-openlayers/commit/afeb1a9))
-
-
-### Features
-
-* **source:** update params when input changes (TileWMS and ImageWMS) ([#199](https://github.com/quentin-ol/ngx-openlayers/issues/199)) ([f7578a4](https://github.com/quentin-ol/ngx-openlayers/commit/f7578a4))
-* **view:** add zoom change output ([884429f](https://github.com/quentin-ol/ngx-openlayers/commit/884429f))
-
-
-
-<a name="1.0.0-next.0"></a>
-# [1.0.0-next.0](https://github.com/quentin-ol/ngx-openlayers/compare/v0.8.22...v1.0.0-next.0) (2018-09-21)
-
-
-### Features
-
-* **demo:** add example of a cursor position ([9a8988e](https://github.com/quentin-ol/ngx-openlayers/commit/9a8988e))
-* **demo:** add example of geojson feature : point, polygon, linestring ([367c72d](https://github.com/quentin-ol/ngx-openlayers/commit/367c72d))
-* **demo:** add example of map position with longitude, latitude and zoom ([251bbf7](https://github.com/quentin-ol/ngx-openlayers/commit/251bbf7))
-* **demo:** add example to display geometry of a geojson file ([fe977e6](https://github.com/quentin-ol/ngx-openlayers/commit/fe977e6))
-* **demo:** example change color on hover or on select ([2e7bda4](https://github.com/quentin-ol/ngx-openlayers/commit/2e7bda4))
-* **demo:** example draw a polygon ([2737e6b](https://github.com/quentin-ol/ngx-openlayers/commit/2737e6b))
-* **demo:** example modify polygon ([18c95fa](https://github.com/quentin-ol/ngx-openlayers/commit/18c95fa))
-* **demo:** example of marker with svg ([b5f57b3](https://github.com/quentin-ol/ngx-openlayers/commit/b5f57b3))
-* **demo:** example of overlay ([b7749f9](https://github.com/quentin-ol/ngx-openlayers/commit/b7749f9))
-* **demo:** example of side by side ([4b5b08b](https://github.com/quentin-ol/ngx-openlayers/commit/4b5b08b))
-* **demo:** example of swipe ([9aa4dab](https://github.com/quentin-ol/ngx-openlayers/commit/9aa4dab))
--- a/node_modules/ngx-openlayers/bundles/ngx-openlayers.umd.js
+++ b/node_modules/ngx-openlayers/bundles/ngx-openlayers.umd.js
@@ -573,7 +573,10 @@
             ];
         };
         LayerVectorComponent.propDecorators = {
-            renderBuffer: [{ type: core.Input }]
+            renderBuffer: [{ type: core.Input }],
+            style: [{ type: core.Input }],
+            updateWhileAnimating: [{ type: core.Input }],
+            updateWhileInteracting: [{ type: core.Input }]
         };
         return LayerVectorComponent;
     }(LayerComponent));
@@ -4036,4 +4039,4 @@
 
 })));
 
-//# sourceMappingURL=data:application/json;charset=utf-8;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,
\ No newline at end of file
--- a/node_modules/ngx-openlayers/bundles/ngx-openlayers.umd.js.map
+++ b/node_modules/ngx-openlayers/bundles/ngx-openlayers.umd.js.map
@@ -1 +1 @@
-{"version":3,"file":"ngx-openlayers.umd.js.map","sources":["ng://ngx-openlayers/lib/map.component.ts","ng://ngx-openlayers/lib/view.component.ts","ng://ngx-openlayers/lib/graticule.component.ts",null,"ng://ngx-openlayers/lib/layers/layer.component.ts","ng://ngx-openlayers/lib/layers/layergroup.component.ts","ng://ngx-openlayers/lib/layers/layerimage.component.ts","ng://ngx-openlayers/lib/layers/layertile.component.ts","ng://ngx-openlayers/lib/layers/layervector.component.ts","ng://ngx-openlayers/lib/layers/layervectortile.component.ts","ng://ngx-openlayers/lib/sources/source.component.ts","ng://ngx-openlayers/lib/tilegrid.component.ts","ng://ngx-openlayers/lib/sources/raster.component.ts","ng://ngx-openlayers/lib/sources/xyz.component.ts","ng://ngx-openlayers/lib/sources/osm.component.ts","ng://ngx-openlayers/lib/sources/bingmaps.component.ts","ng://ngx-openlayers/lib/sources/vector.component.ts","ng://ngx-openlayers/lib/sources/cluster.component.ts","ng://ngx-openlayers/lib/tilegridwmts.component.ts","ng://ngx-openlayers/lib/sources/tilewmts.component.ts","ng://ngx-openlayers/lib/formats/format.component.ts","ng://ngx-openlayers/lib/sources/vectortile.component.ts","ng://ngx-openlayers/lib/sources/tilewms.component.ts","ng://ngx-openlayers/lib/sources/tilejson.component.ts","ng://ngx-openlayers/lib/sources/geojson.component.ts","ng://ngx-openlayers/lib/sources/imagestatic.component.ts","ng://ngx-openlayers/lib/sources/imagewms.component.ts","ng://ngx-openlayers/lib/sources/imagearcgisrest.component.ts","ng://ngx-openlayers/lib/feature.component.ts","ng://ngx-openlayers/lib/geometry.components.ts","ng://ngx-openlayers/lib/content.component.ts","ng://ngx-openlayers/lib/overlay.component.ts","ng://ngx-openlayers/lib/coordinate.component.ts","ng://ngx-openlayers/lib/styles/style.component.ts","ng://ngx-openlayers/lib/styles/circle.component.ts","ng://ngx-openlayers/lib/styles/text.component.ts","ng://ngx-openlayers/lib/styles/stroke.component.ts","ng://ngx-openlayers/lib/styles/icon.component.ts","ng://ngx-openlayers/lib/styles/fill.component.ts","ng://ngx-openlayers/lib/controls/default.component.ts","ng://ngx-openlayers/lib/controls/control.component.ts","ng://ngx-openlayers/lib/controls/attribution.component.ts","ng://ngx-openlayers/lib/controls/fullscreen.component.ts","ng://ngx-openlayers/lib/controls/mouseposition.component.ts","ng://ngx-openlayers/lib/controls/overviewmap.component.ts","ng://ngx-openlayers/lib/controls/rotate.component.ts","ng://ngx-openlayers/lib/controls/scaleline.component.ts","ng://ngx-openlayers/lib/controls/zoom.component.ts","ng://ngx-openlayers/lib/controls/zoomslider.component.ts","ng://ngx-openlayers/lib/controls/zoomtoextent.component.ts","ng://ngx-openlayers/lib/formats/mvt.component.ts","ng://ngx-openlayers/lib/interactions/default.component.ts","ng://ngx-openlayers/lib/interactions/doubleclickzoom.component.ts","ng://ngx-openlayers/lib/interactions/draganddrop.component.ts","ng://ngx-openlayers/lib/interactions/dragbox.component.ts","ng://ngx-openlayers/lib/interactions/dragpan.component.ts","ng://ngx-openlayers/lib/interactions/dragrotate.component.ts","ng://ngx-openlayers/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-openlayers/lib/interactions/dragzoom.component.ts","ng://ngx-openlayers/lib/interactions/mousewheelzoom.component.ts","ng://ngx-openlayers/lib/interactions/pinchzoom.component.ts","ng://ngx-openlayers/lib/interactions/draw.component.ts","ng://ngx-openlayers/lib/interactions/select.component.ts","ng://ngx-openlayers/lib/interactions/modify.component.ts","ng://ngx-openlayers/lib/interactions/translate.component.ts","ng://ngx-openlayers/lib/attribution.component.ts","ng://ngx-openlayers/lib/attributions.component.ts","ng://ngx-openlayers/public_api.ts"],"sourcesContent":["import {\n  Component,\n  OnInit,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { Map, MapBrowserEvent, MapEvent, render, ObjectEvent, control, interaction } from 'openlayers';\n\n@Component({\n  selector: 'aol-map',\n  template: `\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\n    <ng-content></ng-content>\n  `,\n})\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\n  public instance: Map;\n  public componentType = 'map';\n\n  @Input()\n  width = '100%';\n  @Input()\n  height = '100%';\n  @Input()\n  pixelRatio: number;\n  @Input()\n  keyboardEventTarget: Element | string;\n  @Input()\n  loadTilesWhileAnimating: boolean;\n  @Input()\n  loadTilesWhileInteracting: boolean;\n  @Input()\n  logo: string | boolean;\n  @Input()\n  renderer: 'canvas' | 'webgl';\n\n  @Output()\n  onClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onDblClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onMoveEnd: EventEmitter<MapEvent>;\n  @Output()\n  onPointerDrag: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onPointerMove: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onPostCompose: EventEmitter<render.Event>;\n  @Output()\n  onPostRender: EventEmitter<MapEvent>;\n  @Output()\n  onPreCompose: EventEmitter<render.Event>;\n  @Output()\n  onPropertyChange: EventEmitter<ObjectEvent>;\n  @Output()\n  onSingleClick: EventEmitter<MapBrowserEvent>;\n\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\n  controls: control.Control[] = [];\n  interactions: interaction.Interaction[] = [];\n\n  constructor(private host: ElementRef) {\n    this.onClick = new EventEmitter<MapBrowserEvent>();\n    this.onDblClick = new EventEmitter<MapBrowserEvent>();\n    this.onMoveEnd = new EventEmitter<MapEvent>();\n    this.onPointerDrag = new EventEmitter<MapBrowserEvent>();\n    this.onPointerMove = new EventEmitter<MapBrowserEvent>();\n    this.onPostCompose = new EventEmitter<render.Event>();\n    this.onPostRender = new EventEmitter<MapEvent>();\n    this.onPreCompose = new EventEmitter<render.Event>();\n    this.onPropertyChange = new EventEmitter<ObjectEvent>();\n    this.onSingleClick = new EventEmitter<MapBrowserEvent>();\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.Map instance with:', this);\n    this.instance = new Map(this);\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\n    this.instance.on('click', (event: MapBrowserEvent) => this.onClick.emit(event));\n    this.instance.on('dblclick', (event: MapBrowserEvent) => this.onDblClick.emit(event));\n    this.instance.on('moveend', (event: MapEvent) => this.onMoveEnd.emit(event));\n    this.instance.on('pointerdrag', (event: MapBrowserEvent) => this.onPointerDrag.emit(event));\n    this.instance.on('pointermove', (event: MapBrowserEvent) => this.onPointerMove.emit(event));\n    this.instance.on('postcompose', (event: render.Event) => this.onPostCompose.emit(event));\n    this.instance.on('postrender', (event: MapEvent) => this.onPostRender.emit(event));\n    this.instance.on('precompose', (event: render.Event) => this.onPreCompose.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.onPropertyChange.emit(event));\n    this.instance.on('singleclick', (event: MapBrowserEvent) => this.onSingleClick.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngAfterViewInit() {\n    this.instance.updateSize();\n  }\n}\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { View, Extent, ObjectEvent, Coordinate } from 'openlayers';\nimport { MapComponent } from './map.component';\n\n@Component({\n  selector: 'aol-view',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: View;\n  public componentType = 'view';\n\n  @Input()\n  constrainRotation: boolean | number;\n  @Input()\n  enableRotation: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  resolution: number;\n  @Input()\n  resolutions: number[];\n  @Input()\n  rotation: number;\n  @Input()\n  zoom: number;\n  @Input()\n  zoomFactor: number;\n  @Input()\n  center: Coordinate;\n  @Input()\n  projection: string;\n\n  @Input()\n  zoomAnimation = false;\n\n  @Output()\n  onChangeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n\n  constructor(private host: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.View instance with: ', this);\n    this.instance = new View(this);\n    this.host.instance.setView(this.instance);\n\n    this.instance.on('change:zoom', (event: ObjectEvent) => this.onChangeZoom.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'zoom':\n            /** Work-around: setting the zoom via setProperties does not work. */\n            if (this.zoomAnimation) {\n              this.instance.animate({ zoom: changes[key].currentValue });\n            } else {\n              this.instance.setZoom(changes[key].currentValue);\n            }\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-view');\n  }\n}\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Graticule, style } from 'openlayers';\nimport { MapComponent } from './map.component';\n\n@Component({\n  selector: 'aol-graticule',\n  template: '<ng-content></ng-content>',\n})\nexport class GraticuleComponent implements AfterContentInit, OnChanges {\n  instance: any;\n  public componentType = 'graticule';\n\n  @Input()\n  strokeStyle: style.Stroke;\n  @Input()\n  showLabels: boolean;\n  @Input()\n  lonLabelPosition: number;\n  @Input()\n  latLabelPosition: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    if (properties) {\n      this.instance = new Graticule(properties);\n    }\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngAfterContentInit(): void {\n    this.instance = new Graticule({\n      strokeStyle: this.strokeStyle,\n      showLabels: this.showLabels,\n      lonLabelPosition: this.lonLabelPosition,\n      latLabelPosition: this.latLabelPosition,\n    });\n    this.instance.setMap(this.map.instance);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Extent } from 'openlayers';\nimport { LayerGroupComponent } from './layergroup.component';\n\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: any;\n  public componentType = 'layer';\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  zIndex: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n\n  @Input()\n  precompose: (evt: ol.events.Event) => void;\n  @Input()\n  postcompose: (evt: ol.events.Event) => void;\n\n  constructor(protected host: LayerGroupComponent | MapComponent) {}\n\n  ngOnInit() {\n    if (this.precompose !== null && this.precompose !== undefined) {\n      this.instance.on('precompose', this.precompose);\n    }\n    if (this.postcompose !== null && this.postcompose !== undefined) {\n      this.instance.on('postcompose', this.postcompose);\n    }\n    this.host.instance.getLayers().push(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.getLayers().remove(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n        if (key === 'precompose') {\n          this.instance.un('precompose', changes[key].previousValue);\n          this.instance.on('precompose', changes[key].currentValue);\n        }\n        if (key === 'postcompose') {\n          this.instance.un('postcompose', changes[key].previousValue);\n          this.instance.on('postcompose', changes[key].currentValue);\n        }\n      }\n    }\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n}\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\nimport { layer } from 'openlayers';\nimport { LayerComponent } from './layer.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-layer-group',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\n  public instance: ol.layer.Group;\n\n  constructor(\n    map: MapComponent,\n    @SkipSelf()\n    @Optional()\n    group?: LayerGroupComponent\n  ) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log(`creating ol.layer.Group instance with:`, this);\n    this.instance = new layer.Group(this);\n    super.ngOnInit();\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { Extent, layer, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-image',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\n  public source: source.Image;\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  zIndex: number;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    this.instance = new layer.Image(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { layer, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-tile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: source.Tile;\n\n  @Input()\n  preload: number;\n  @Input()\n  useInterimTilesOnError: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Tile instance with:', this);\n    this.instance = new layer.Tile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { layer, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: source.Vector;\n\n  @Input()\n  renderBuffer: number;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Vector instance with:', this);\n    this.instance = new layer.Vector(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnInit, Input, Optional, SimpleChanges, OnChanges } from '@angular/core';\nimport { layer, style, StyleFunction } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\n  @Input()\n  renderBuffer: number;\n  @Input()\n  renderMode: layer.VectorTileRenderType | string;\n  /* not marked as optional in the typings */\n  @Input()\n  renderOrder: (feature1: ol.Feature, feature2: ol.Feature) => number;\n  @Input()\n  style: style.Style | style.Style[] | StyleFunction;\n  @Input()\n  updateWhileAnimating: boolean;\n  @Input()\n  updateWhileInteracting: boolean;\n  @Input()\n  visible: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.VectorTile instance with:', this);\n    this.instance = new layer.VectorTile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Input, OnDestroy } from '@angular/core';\nimport { source } from 'openlayers';\nimport { LayerComponent } from '../layers/layer.component';\nimport AttributionLike = ol.AttributionLike;\nimport { SourceRasterComponent } from './raster.component';\n\nexport class SourceComponent implements OnDestroy {\n  public instance: source.Source;\n  public componentType = 'source';\n\n  @Input()\n  attributions: AttributionLike;\n\n  constructor(protected host: LayerComponent, protected raster?: SourceRasterComponent) {}\n\n  ngOnDestroy() {\n    if (this.host && this.host.instance) {\n      this.host.instance.setSource(null);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [];\n    }\n  }\n\n  protected _register(s: source.Source) {\n    if (this.host) {\n      this.host.instance.setSource(s);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [s];\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { tilegrid, Extent, Size, Coordinate } from 'openlayers';\n\n@Component({\n  selector: 'aol-tilegrid',\n  template: '',\n})\nexport class TileGridComponent implements OnInit, OnChanges {\n  instance: tilegrid.TileGrid;\n\n  @Input()\n  extent: Extent;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  resolutions: number[];\n\n  ngOnInit() {\n    if (!this.resolutions) {\n      this.instance = tilegrid.createXYZ(this);\n    } else {\n      this.instance = new tilegrid.TileGrid(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.resolutions) {\n      this.instance = tilegrid.createXYZ(this);\n    } else {\n      this.instance = new tilegrid.TileGrid(this);\n    }\n  }\n}\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Output } from '@angular/core';\nimport { RasterOperation, RasterOperationType, source } from 'openlayers';\n\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-raster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [\n    {\n      provide: SourceComponent,\n      useExisting: forwardRef(() => SourceRasterComponent),\n    },\n  ],\n})\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\n  instance: source.Raster;\n\n  @Input()\n  operation?: RasterOperation;\n  @Input()\n  threads?: number;\n  @Input()\n  lib?: Object;\n  @Input()\n  operationType?: RasterOperationType;\n\n  @Output()\n  beforeOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\n  @Output()\n  afterOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\n\n  sources: source.Source[] = [];\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.instance = new source.Raster(this);\n\n    this.instance.on('beforeoperations', (event: source.RasterEvent) => this.beforeOperations.emit(event));\n    this.instance.on('afteroperations', (event: source.RasterEvent) => this.afterOperations.emit(event));\n\n    this._register(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  AfterContentInit,\n  forwardRef,\n  OnChanges,\n  ContentChild,\n  SimpleChanges,\n  Optional,\n} from '@angular/core';\nimport { source, Size, TileUrlFunctionType, TileLoadFunctionType, tilegrid } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceRasterComponent } from './raster.component';\n\n@Component({\n  selector: 'aol-source-xyz',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\n})\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: source.XYZ;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  opaque: boolean;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  tileGrid: tilegrid.TileGrid;\n  @Input()\n  tileLoadFunction?: TileLoadFunctionType;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  tileUrlFunction: TileUrlFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(TileGridComponent)\n  tileGridXYZ: TileGridComponent;\n\n  constructor(\n    @Optional()\n    @Host()\n    layer: LayerTileComponent,\n    @Optional()\n    @Host()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n    this.instance = new source.XYZ(this);\n    this._register(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    this.instance.setProperties(properties, false);\n    if (changes.hasOwnProperty('url')) {\n      this.instance = new source.XYZ(this);\n      this._register(this.instance);\n    }\n  }\n}\n","import { Component, Host, forwardRef, Input, AfterContentInit, Optional } from '@angular/core';\nimport { source, AttributionLike, TileLoadFunctionType } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { SourceXYZComponent } from './xyz.component';\nimport { SourceRasterComponent } from './raster.component';\n\n@Component({\n  selector: 'aol-source-osm',\n  template: `\n    <div class=\"aol-source-osm\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\n})\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\n  instance: source.OSM;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  maxZoom: number;\n  @Input()\n  opaque: boolean;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: TileLoadFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  wrapX: boolean;\n\n  constructor(\n    @Host()\n    @Optional()\n    layer: LayerTileComponent,\n    @Host()\n    @Optional()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n    this.instance = new source.OSM(this);\n    this._register(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source, TileLoadFunctionType } from 'openlayers';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\n\n@Component({\n  selector: 'aol-source-bingmaps',\n  template: `\n    <div class=\"aol-source-bingmaps\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\n})\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\n  instance: source.BingMaps;\n\n  @Input()\n  cacheSize: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  culture: string;\n  @Input()\n  key: string;\n  @Input()\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\n  @Input()\n  maxZoom: number;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: TileLoadFunctionType;\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.BingMaps(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source } from 'openlayers';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\n})\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\n  instance: source.Vector;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  useSpatialIndex: boolean;\n  @Input()\n  wrapX: boolean;\n  @Input()\n  url: string;\n  @Input()\n  format: ol.format.Feature;\n  @Input()\n  strategy: ol.LoadingStrategy;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { source, Feature, geom } from 'openlayers';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { SourceVectorComponent } from './vector.component';\n\n@Component({\n  selector: 'aol-source-cluster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\n})\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit {\n  instance: source.Cluster;\n\n  @Input()\n  distance: number;\n  @Input()\n  geometryFunction?: ((feature: Feature) => geom.Point);\n\n  @ContentChild(SourceVectorComponent)\n  sourceVectorComponent: SourceVectorComponent;\n  source: source.Vector;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.source = this.sourceVectorComponent.instance;\n\n    this.instance = new source.Cluster(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { tilegrid, Size, Coordinate } from 'openlayers';\nimport { TileGridComponent } from './tilegrid.component';\n\n@Component({\n  selector: 'aol-tilegrid-wmts',\n  template: '',\n})\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\n  instance: tilegrid.WMTS;\n\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  origins?: Coordinate[];\n  @Input()\n  resolutions: number[];\n  @Input()\n  matrixIds: string[];\n  @Input()\n  sizes?: Size[];\n  @Input()\n  tileSizes?: (number | Size)[];\n  @Input()\n  widths?: number[];\n\n  ngOnInit() {\n    this.instance = new tilegrid.WMTS(this);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  AfterContentInit,\n  ContentChild,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { TileLoadFunctionType, tilegrid, ProjectionLike, source, ImageTile, TileCoord, Tile } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\n\n@Component({\n  selector: 'aol-source-tilewmts',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\n})\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: source.WMTS;\n  @Input()\n  cacheSize?: number;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  logo?: string | olx.LogoOptions;\n  @Input()\n  tileGrid: tilegrid.WMTS;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  reprojectionErrorThreshold?: number;\n  @Input()\n  requestEncoding?: source.WMTSRequestEncoding | string;\n  @Input()\n  layer: string;\n  @Input()\n  style: string;\n  @Input()\n  tileClass?: ((\n    n: ImageTile,\n    coords: TileCoord,\n    state: Tile.State,\n    s1: string,\n    s2: string,\n    type: TileLoadFunctionType\n  ) => any);\n  @Input()\n  tilePixelRatio?: number;\n  @Input()\n  version?: string;\n  @Input()\n  format?: string;\n  @Input()\n  matrixSet: string;\n  @Input()\n  dimensions?: GlobalObject;\n  @Input()\n  url?: string;\n  @Input()\n  tileLoadFunction?: TileLoadFunctionType;\n  @Input()\n  urls?: string[];\n  @Input()\n  wrapX?: boolean;\n\n  @ContentChild(TileGridWMTSComponent)\n  tileGridWMTS: TileGridWMTSComponent;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n\n  setLayerSource(): void {\n    this.instance = new source.WMTS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngAfterContentInit(): void {\n    if (this.tileGridWMTS) {\n      this.tileGrid = this.tileGridWMTS.instance;\n      this.setLayerSource();\n    }\n  }\n}\n","import { format } from 'openlayers';\n\nexport class FormatComponent {\n  public instance: format.Feature;\n  public componentType = 'format';\n}\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { source, ProjectionLike, TileUrlFunctionType, format, tilegrid } from 'openlayers';\nimport { LayerVectorTileComponent } from '../layers/layervectortile.component';\nimport { FormatComponent } from '../formats/format.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent) }],\n})\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\n  public instance: source.VectorTile;\n  @Input()\n  cacheSize: number;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileUrlFunction: TileUrlFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(FormatComponent)\n  formatComponent: FormatComponent;\n  format: format.Feature;\n  @ContentChild(TileGridComponent)\n  tileGridComponent: TileGridComponent;\n  tileGrid: tilegrid.TileGrid;\n\n  constructor(@Host() layer: LayerVectorTileComponent) {\n    super(layer);\n  }\n\n  /* need the children to construct the OL3 object */\n  ngAfterContentInit() {\n    this.format = this.formatComponent.instance;\n    this.tileGrid = this.tileGridComponent.instance;\n    // console.log('creating ol.source.VectorTile instance with:', this);\n    this.instance = new source.VectorTile(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\nimport { source, TileLoadFunctionType, tilegrid } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-tilewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\n})\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: source.TileWMS;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  gutter: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  params: Object;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  serverType: string;\n  @Input()\n  tileGrid: tilegrid.TileGrid;\n  @Input()\n  tileLoadFunction: TileLoadFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.TileWMS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-tilejson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\n})\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\n  instance: source.TileJSON;\n\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.TileJSON(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source, ProjectionLike, format } from 'openlayers';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-geojson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\n})\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\n  instance: source.Vector;\n  format: format.Feature;\n  @Input()\n  defaultDataProjection: ProjectionLike;\n  @Input()\n  featureProjection: ProjectionLike;\n  @Input()\n  geometryName: string;\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.format = new format.GeoJSON(this);\n    this.instance = new source.Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { ProjectionLike, source, Extent, AttributionLike, ImageLoadFunctionType, Size } from 'openlayers';\nimport { SourceComponent } from './source.component';\nimport { LayerImageComponent } from '../layers/layerimage.component';\n\n@Component({\n  selector: 'aol-source-imagestatic',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\n})\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit {\n  instance: source.ImageStatic;\n\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  imageExtent: Extent;\n  @Input()\n  url: string;\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  imageLoadFunction?: ImageLoadFunctionType;\n  @Input()\n  logo?: string | olx.LogoOptions;\n  @Input()\n  imageSize?: Size;\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.ImageStatic(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\nimport { AttributionLike, ImageLoadFunctionType, ProjectionLike, source } from 'openlayers';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-imagewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\n})\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: source.ImageWMS;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  serverType: string;\n  @Input()\n  imageLoadFunction?: ImageLoadFunctionType;\n  @Input()\n  logo: string | olx.LogoOptions;\n  @Input()\n  params: Object;\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  ratio: number;\n  @Input()\n  resolutions: Array<number>;\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.ImageWMS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, forwardRef, Host, Input, OnInit } from '@angular/core';\nimport { source, ProjectionLike, Attribution, ImageLoadFunctionType } from 'openlayers';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-imagearcgisrest',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\n})\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit {\n  instance: source.ImageArcGISRest;\n\n  @Input() projection: ProjectionLike | string;\n  @Input() url: string;\n  @Input() attributions: Attribution[];\n  @Input() crossOrigin?: string;\n  @Input() imageLoadFunction?: ImageLoadFunctionType;\n  @Input() params?: { [k: string]: any };\n  @Input() ratio = 1;\n  @Input() resolutions?: number[];\n  @Input() logo?: string | olx.LogoOptions;\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.ImageArcGISRest(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Feature } from 'openlayers';\nimport { SourceVectorComponent } from './sources/vector.component';\n\n@Component({\n  selector: 'aol-feature',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\n  public componentType = 'feature';\n  public instance: Feature;\n\n  @Input()\n  id: string | number | undefined;\n\n  constructor(private host: SourceVectorComponent) {}\n\n  ngOnInit() {\n    this.instance = new Feature();\n    if (this.id !== undefined) {\n      this.instance.setId(this.id);\n    }\n    this.host.instance.addFeature(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.removeFeature(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance) {\n      this.instance.setId(this.id);\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { geom } from 'openlayers';\nimport { FeatureComponent } from './feature.component';\n\n@Component({\n  selector: 'aol-geometry-linestring',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryLinestringComponent implements OnInit, OnDestroy {\n  public componentType = 'geometry-linestring';\n  public instance: geom.LineString;\n\n  constructor(private host: FeatureComponent) {\n    // console.log('instancing aol-geometry-linestring');\n  }\n\n  ngOnInit() {\n    this.instance = new geom.LineString([]);\n    this.host.instance.setGeometry(this.instance);\n  }\n  ngOnDestroy() {\n    // this.host.setGeometry(null);\n  }\n}\n\n@Component({\n  selector: 'aol-geometry-point',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPointComponent implements OnInit, OnDestroy {\n  public componentType = 'geometry-point';\n  public instance: geom.Point;\n\n  constructor(private host: FeatureComponent) {\n    // console.log('creating aol-geometry-point');\n  }\n\n  ngOnInit() {\n    this.instance = new geom.Point([0, 0]); // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.host.instance.setGeometry(this.instance);\n  }\n\n  ngOnDestroy() {\n    // this.host.setGeometry(null);\n  }\n}\n\n@Component({\n  selector: 'aol-geometry-polygon',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPolygonComponent implements OnInit, OnDestroy {\n  public componentType = 'geometry-polygon';\n  public instance: geom.Polygon;\n\n  constructor(private host: FeatureComponent) {\n    // console.log('creating aol-geometry-polygon');\n  }\n\n  ngOnInit() {\n    // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.instance = new geom.Polygon([[[0, 0], [1, 0], [1, 1]]]);\n    this.host.instance.setGeometry(this.instance);\n  }\n\n  ngOnDestroy() {\n    // this.host.setGeometry(null);\n  }\n}\n\n@Component({\n  selector: 'aol-geometry-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryCircleComponent implements OnInit {\n  public componentType = 'geometry-circle';\n  public instance: geom.Circle;\n\n  @Input()\n  get radius(): number {\n    return this.instance.getRadius();\n  }\n  set radius(radius: number) {\n    this.instance.setRadius(radius);\n  }\n\n  constructor(private host: FeatureComponent) {\n    // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.instance = new geom.Circle([0, 0]);\n  }\n\n  ngOnInit() {\n    this.host.instance.setGeometry(this.instance);\n  }\n}\n","import { Component, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'aol-content',\n  template: '<ng-content></ng-content>',\n})\nexport class ContentComponent {\n  constructor(public elementRef: ElementRef) {}\n}\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport { Overlay, OverlayPositioning } from 'openlayers';\nimport { ContentComponent } from './content.component';\n\n@Component({\n  selector: 'aol-overlay',\n  template: '<ng-content></ng-content>',\n})\nexport class OverlayComponent implements OnInit, OnDestroy {\n  componentType = 'overlay';\n  instance: Overlay;\n  element: Element;\n  @ContentChild(ContentComponent)\n  content: ContentComponent;\n\n  @Input()\n  id: number | string;\n  @Input()\n  offset: number[];\n  @Input()\n  positioning: OverlayPositioning | string;\n  @Input()\n  stopEvent: boolean;\n  @Input()\n  insertFirst: boolean;\n  @Input()\n  autoPan: boolean;\n  @Input()\n  autoPanAnimation: olx.animation.PanOptions;\n  @Input()\n  autoPanMargin: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Overlay(this);\n      this.map.instance.addOverlay(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeOverlay(this.instance);\n    }\n  }\n}\n","import { Component, Optional, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { proj, Coordinate } from 'openlayers';\nimport { MapComponent } from './map.component';\nimport {\n  GeometryPointComponent,\n  GeometryLinestringComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n} from './geometry.components';\nimport { ViewComponent } from './view.component';\nimport { OverlayComponent } from './overlay.component';\n\n@Component({\n  selector: 'aol-coordinate',\n  template: `\n    <div class=\"aol-coordinate\"></div>\n  `,\n})\nexport class CoordinateComponent implements OnChanges {\n  private host: any;\n\n  @Input()\n  x: number;\n  @Input()\n  y: number;\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() viewHost: ViewComponent,\n    @Optional() geometryPointHost: GeometryPointComponent,\n    @Optional() geometryCircleHost: GeometryCircleComponent,\n    @Optional() overlayHost: OverlayComponent\n  ) {\n    // console.log('instancing aol-coordinate');\n    if (geometryPointHost !== null) {\n      this.host = geometryPointHost;\n    } else if (geometryCircleHost !== null) {\n      this.host = geometryCircleHost;\n    } else if (viewHost !== null) {\n      this.host = viewHost;\n    } else if (overlayHost !== null) {\n      this.host = overlayHost;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let referenceProjection: proj.Projection;\n    let referenceProjectionCode: string;\n    let transformedCoordinates: number[];\n\n    referenceProjection = this.map.instance.getView().getProjection();\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\n\n    if (this.srid === referenceProjectionCode) {\n      transformedCoordinates = [this.x, this.y];\n    } else {\n      transformedCoordinates = proj.transform([this.x, this.y], this.srid, referenceProjectionCode);\n    }\n\n    switch (this.host.componentType) {\n      case 'geometry-point':\n        this.host.instance.setCoordinates(transformedCoordinates);\n        break;\n      case 'geometry-circle':\n      case 'view':\n        this.host.instance.setCenter(transformedCoordinates);\n        break;\n      case 'overlay':\n        this.host.instance.setPosition(transformedCoordinates);\n        break;\n    }\n  }\n}\n\n@Component({\n  selector: 'aol-collection-coordinates',\n  template: `\n    <div class=\"aol-collection-coordinates\"></div>\n  `,\n})\nexport class CollectionCoordinatesComponent implements OnChanges {\n  private host: any;\n\n  @Input()\n  coordinates: [number, number][];\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() geometryLinestring: GeometryLinestringComponent,\n    @Optional() geometryPolygon: GeometryPolygonComponent\n  ) {\n    // console.log('creating aol-collection-coordinates');\n    if (!!geometryLinestring) {\n      this.host = geometryLinestring;\n    } else if (!!geometryPolygon) {\n      this.host = geometryPolygon;\n    } else {\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let referenceProjection: proj.Projection;\n    let referenceProjectionCode: string;\n    let transformedCoordinates: Array<Coordinate>;\n\n    // console.log('coordinates change: ', this.coordinates);\n\n    referenceProjection = this.map.instance.getView().getProjection();\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\n\n    if (this.srid === referenceProjectionCode) {\n      transformedCoordinates = this.coordinates;\n    } else {\n      transformedCoordinates = [];\n      this.coordinates.forEach(\n        function(coordinate: Coordinate) {\n          transformedCoordinates.push(proj.transform(coordinate, this.srid, referenceProjectionCode));\n        }.bind(this)\n      );\n    }\n    switch (this.host.componentType) {\n      case 'geometry-linestring':\n        this.host.instance.setCoordinates(transformedCoordinates);\n        break;\n      case 'geometry-polygon':\n        this.host.instance.setCoordinates([transformedCoordinates]);\n        break;\n      default:\n        throw new Error('aol-collection-coordinates host is of unknown type: ' + this.host.componentType);\n      // break;\n    }\n  }\n}\n","import { Component, Input, Optional, OnInit } from '@angular/core';\nimport { style, StyleGeometryFunction, geom } from 'openlayers';\nimport { FeatureComponent } from '../feature.component';\nimport { LayerVectorComponent } from '../layers/layervector.component';\n\n@Component({\n  selector: 'aol-style',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleComponent implements OnInit {\n  private host: FeatureComponent | LayerVectorComponent;\n  public instance: style.Style;\n  public componentType = 'style';\n\n  @Input()\n  geometry: string | geom.Geometry | StyleGeometryFunction;\n  @Input()\n  fill: style.Fill;\n  @Input()\n  image: style.Image;\n  @Input()\n  stroke: style.Stroke;\n  @Input()\n  text: style.Text;\n  @Input()\n  zIndex: number;\n\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\n    // console.log('creating aol-style');\n    this.host = !!featureHost ? featureHost : layerHost;\n    if (!this.host) {\n      throw new Error('aol-style must be applied to a feature or a layer');\n    }\n  }\n\n  update() {\n    // console.log('updating style\\'s host: ', this.host);\n    this.host.instance.changed();\n  }\n\n  ngOnInit() {\n    // console.log('creating aol-style instance with: ', this);\n    this.instance = new style.Style(this);\n    this.host.instance.setStyle(this.instance);\n  }\n}\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { style } from 'openlayers';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  public componentType = 'style-circle';\n  public instance: style.Circle;\n\n  @Input()\n  fill: style.Fill;\n  @Input()\n  radius: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  stroke: style.Stroke;\n  @Input()\n  atlasManager: style.AtlasManager;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  /**\n   * WORK-AROUND: since the re-rendering is not triggered on style change\n   * we trigger a radius change.\n   * see openlayers #6233 and #5775\n   */\n  update() {\n    if (!!this.instance) {\n      // console.log('setting ol.style.Circle instance\\'s radius');\n      this.instance.setRadius(this.radius);\n    }\n    this.host.update();\n  }\n\n  ngAfterContentInit() {\n    // console.log('creating ol.style.Circle instance with: ', this);\n    this.instance = new style.Circle(this);\n    this.host.instance.setImage(this.instance);\n    this.host.update();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['radius']) {\n      this.instance.setRadius(changes['radius'].currentValue);\n    }\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-style-circle');\n    this.host.instance.setImage(null);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style } from 'openlayers';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-text',\n  template: `\n    <div class=\"aol-style-text\"></div>\n  `,\n})\nexport class StyleTextComponent implements OnInit, OnChanges {\n  public instance: style.Text;\n  public componentType = 'style-text';\n\n  @Input()\n  font: string | undefined;\n  @Input()\n  offsetX: number | undefined;\n  @Input()\n  offsetY: number | undefined;\n  @Input()\n  scale: number | undefined;\n  @Input()\n  rotateWithView: boolean | undefined;\n  @Input()\n  rotation: number | undefined;\n  @Input()\n  text: string | undefined;\n  @Input()\n  textAlign: string | undefined;\n  @Input()\n  textBaseLine: string | undefined;\n\n  constructor(@Optional() private host: StyleComponent) {\n    if (!host) {\n      throw new Error('aol-style-text must be a descendant of aol-style');\n    }\n    // console.log('creating aol-style-text with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Text instance with: ', this);\n    this.instance = new style.Text(this);\n    this.host.instance.setText(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['font']) {\n      this.instance.setFont(changes['font'].currentValue);\n    }\n    if (changes['offsetX']) {\n      this.instance.setOffsetX(changes['offsetX'].currentValue);\n    }\n    if (changes['offsetY']) {\n      this.instance.setOffsetY(changes['offsetY'].currentValue);\n    }\n    if (changes['scale']) {\n      this.instance.setScale(changes['scale'].currentValue);\n    }\n    if (changes['rotation']) {\n      this.instance.setRotation(changes['rotation'].currentValue);\n    }\n    if (changes['text']) {\n      this.instance.setText(changes['text'].currentValue);\n    }\n    if (changes['textAlign']) {\n      this.instance.setTextAlign(changes['textAlign'].currentValue);\n    }\n    if (changes['textBaseLine']) {\n      this.instance.setTextBaseline(changes['textBaseLine'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style, Color } from 'openlayers';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\n\n@Component({\n  selector: 'aol-style-stroke',\n  template: `\n    <div class=\"aol-style-stroke\"></div>\n  `,\n})\nexport class StyleStrokeComponent implements OnInit, OnChanges {\n  public instance: style.Stroke;\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n\n  @Input()\n  color: Color | undefined;\n  @Input()\n  lineCap: string | undefined;\n  @Input()\n  lineDash: number[] | undefined;\n  @Input()\n  lineJoin: string | undefined;\n  @Input()\n  miterLimit: number | undefined;\n  @Input()\n  width: number | undefined;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-stroke with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Stroke instance with: ', this);\n    this.instance = new style.Stroke(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setStroke(this.instance);\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setStroke(this.instance);\n        break;\n      case 'style-circle':\n        this.host.stroke = this.instance;\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['color']) {\n      this.instance.setColor(changes['color'].currentValue);\n    }\n    if (changes['lineCap']) {\n      this.instance.setLineCap(changes['lineCap'].currentValue);\n    }\n    if (changes['lineDash']) {\n      this.instance.setLineDash(changes['lineDash'].currentValue);\n    }\n    if (changes['lineJoin']) {\n      this.instance.setLineJoin(changes['lineJoin'].currentValue);\n    }\n    if (changes['miterLimit']) {\n      this.instance.setMiterLimit(changes['miterLimit'].currentValue);\n    }\n    if (changes['width']) {\n      this.instance.setWidth(changes['width'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style } from 'openlayers';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-icon',\n  template: `\n    <div class=\"aol-style-icon\"></div>\n  `,\n})\nexport class StyleIconComponent implements OnInit, OnChanges {\n  public instance: style.Icon;\n\n  @Input()\n  anchor: [number, number];\n  @Input()\n  anchorXUnits: style.IconAnchorUnits;\n  @Input()\n  anchorYUnits: style.IconAnchorUnits;\n  @Input()\n  anchorOrigin: style.IconOrigin;\n  @Input()\n  color: [number, number, number, number];\n  @Input()\n  crossOrigin: style.IconOrigin;\n  @Input()\n  img: string;\n  @Input()\n  offset: [number, number];\n  @Input()\n  offsetOrigin: style.IconOrigin;\n  @Input()\n  opacity: number;\n  @Input()\n  scale: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  rotateWithView: boolean;\n  @Input()\n  rotation: number;\n  @Input()\n  size: [number, number];\n  @Input()\n  imgSize: [number, number];\n  @Input()\n  src: string;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.style.Icon instance with: ', this);\n    this.instance = new style.Icon(this);\n    this.host.instance.setImage(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['opacity']) {\n      this.instance.setOpacity(changes['opacity'].currentValue);\n    }\n    if (changes['rotation']) {\n      this.instance.setRotation(changes['rotation'].currentValue);\n    }\n    if (changes['scale']) {\n      this.instance.setScale(changes['scale'].currentValue);\n    }\n    if (changes['src']) {\n      this.instance = new style.Icon(this);\n      this.host.instance.setImage(this.instance);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-icon: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style, Color, ColorLike } from 'openlayers';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\n\n@Component({\n  selector: 'aol-style-fill',\n  template: `\n    <div class=\"aol-style-fill\"></div>\n  `,\n})\nexport class StyleFillComponent implements OnInit, OnChanges {\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n  public instance: style.Fill;\n\n  @Input()\n  color: Color | ColorLike;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-fill with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Fill instance with: ', this);\n    this.instance = new style.Fill(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setFill(this.instance);\n        // console.log('setting ol.style instance\\'s fill:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setFill(this.instance);\n        break;\n      case 'style-circle':\n        this.host.fill = this.instance;\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['color']) {\n      this.instance.setColor(changes['color'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { control, Collection } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-defaults',\n  template: '',\n})\nexport class DefaultControlComponent implements OnInit, OnDestroy {\n  instance: Collection<control.Control>;\n  @Input()\n  attribution: boolean;\n  @Input()\n  attributionOptions: olx.control.AttributionOptions;\n  @Input()\n  rotate: boolean;\n  @Input()\n  rotateOptions: olx.control.RotateOptions;\n  @Input()\n  zoom: boolean;\n  @Input()\n  zoomOptions: olx.control.ZoomOptions;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('ol.control.defaults init: ', this);\n    this.instance = control.defaults(this);\n    this.instance.forEach(c => this.map.instance.addControl(c));\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-defaults');\n    this.instance.forEach(c => this.map.instance.removeControl(c));\n  }\n}\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { ContentComponent } from '../content.component';\n\n@Component({\n  selector: 'aol-control',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: control.Control;\n  element: Element;\n  @ContentChild(ContentComponent)\n  content: ContentComponent;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new control.Control(this);\n      this.map.instance.addControl(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeControl(this.instance);\n    }\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-attribution',\n  template: ``,\n})\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: control.Attribution;\n  target: Element;\n  @Input()\n  collapsible: boolean;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.Attribution init: ', this);\n    this.instance = new control.Attribution(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-attribution');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-fullscreen',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\n  instance: control.FullScreen;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  labelActive: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  keys: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-fullscreen');\n  }\n\n  ngOnInit() {\n    this.instance = new control.FullScreen(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-fullscreen');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control, CoordinateFormatType, ProjectionLike } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-mouseposition',\n  template: ``,\n})\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\n  instance: control.MousePosition;\n  @Input()\n  coordinateFormat: CoordinateFormatType;\n  @Input()\n  projection: ProjectionLike;\n  target: Element;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.MousePosition init: ', this);\n    this.instance = new control.MousePosition(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-mouseposition');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control, View, layer } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-overviewmap',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlOverviewMapComponent implements OnInit, OnDestroy {\n  instance: control.OverviewMap;\n  @Input()\n  collapsed: boolean;\n  @Input()\n  collapseLabel: string;\n  @Input()\n  collapsible: boolean;\n  @Input()\n  label: string;\n  @Input()\n  layers: layer.Layer[];\n  @Input()\n  target: Element;\n  @Input()\n  tipLabel: string;\n  @Input()\n  view: View;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-overviewmap');\n  }\n\n  ngOnInit() {\n    this.instance = new control.OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-overviewmap');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-rotate',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlRotateComponent implements OnInit, OnDestroy {\n  instance: control.Rotate;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  duration: number;\n  @Input()\n  autoHide: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-rotate');\n  }\n\n  ngOnInit() {\n    this.instance = new control.Rotate(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-rotate');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-scaleline',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\n  instance: control.ScaleLine;\n  @Input()\n  units: string;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-scaleline');\n  }\n\n  ngOnInit() {\n    this.instance = new control.ScaleLine(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-scaleline');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoom',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomComponent implements OnInit, OnDestroy {\n  instance: control.Zoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  zoomInLabel: string | Node;\n  @Input()\n  zoomOutLabel: string | Node;\n  @Input()\n  zoomInTipLabel: string;\n  @Input()\n  zoomOutTipLabel: string;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoom');\n  }\n\n  ngOnInit() {\n    this.instance = new control.Zoom(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoom');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoomslider',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\n  instance: control.ZoomSlider;\n\n  @Input()\n  className: string;\n  @Input()\n  duration: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomslider');\n  }\n\n  ngOnInit() {\n    this.instance = new control.ZoomSlider(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomslider');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control, Extent } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoomtoextent',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\n  instance: control.ZoomToExtent;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string | Node;\n  @Input()\n  tipLabel: string;\n  @Input()\n  extent: Extent;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomtoextent');\n  }\n\n  ngOnInit() {\n    this.instance = new control.ZoomToExtent(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomtoextent');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { format, geom } from 'openlayers';\nimport { FormatComponent } from './format.component';\n\n@Component({\n  selector: 'aol-format-mvt',\n  template: '',\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\n})\nexport class FormatMVTComponent extends FormatComponent {\n  instance: format.MVT;\n\n  @Input()\n  featureClass:\n    | ((geom: geom.Geometry | { [k: string]: any }) => any)\n    | ((geom: geom.GeometryType, arg2: number[], arg3: number[] | number[][], arg4: { [k: string]: any }) => any);\n  @Input()\n  geometryName: string;\n  @Input()\n  layerName: string;\n  @Input()\n  layers: string[];\n\n  constructor() {\n    super();\n    this.instance = new format.MVT(this);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { interaction, Collection } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-default',\n  template: '',\n})\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\n  instance: Collection<interaction.Interaction>;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = interaction.defaults();\n    this.instance.forEach(i => this.map.instance.addInteraction(i));\n  }\n\n  ngOnDestroy() {\n    this.instance.forEach(i => this.map.instance.removeInteraction(i));\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-doubleclickzoom',\n  template: '',\n})\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DoubleClickZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DoubleClickZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { interaction, format, ProjectionLike } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-draganddrop',\n  template: '',\n})\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragAndDrop;\n\n  @Input()\n  formatConstructors: ((n: format.Feature) => any)[];\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  target: Element;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragAndDrop(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType, DragBoxEndConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragbox',\n  template: '',\n})\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragBox;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  boxEndCondition: DragBoxEndConditionType;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragBox(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType, Kinetic } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragpan',\n  template: '',\n})\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragPan;\n\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  kinetic: Kinetic;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragPan(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragrotate',\n  template: '',\n})\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragRotate;\n\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragRotate(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragrotateandzoom',\n  template: '',\n})\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragRotate;\n\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragRotateAndZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragzoom',\n  template: '',\n})\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragZoom;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  duration: number;\n  @Input()\n  out: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-mousewheelzoom',\n  template: '',\n})\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.MouseWheelZoom;\n  @Input()\n  duration: number;\n  @Input()\n  timeout: number;\n  @Input()\n  useAnchor: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.MouseWheelZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-pinchzoom',\n  template: '',\n})\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.PinchZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  constrainResolution: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.PinchZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-draw',\n  template: '',\n})\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Draw;\n\n  @Input()\n  clickTolerance?: number;\n  @Input()\n  features?: ol.Collection<ol.Feature>;\n  @Input()\n  source?: ol.source.Vector;\n  @Input()\n  snapTolerance?: number;\n  @Input()\n  type: ol.geom.GeometryType;\n  @Input()\n  maxPoints?: number;\n  @Input()\n  minPoints?: number;\n  @Input()\n  finishCondition?: ol.EventsConditionType;\n  @Input()\n  style?: ol.style.Style | ol.style.Style[] | ol.StyleFunction;\n  @Input()\n  geometryFunction?: ol.DrawGeometryFunctionType;\n  @Input()\n  geometryName?: string;\n  @Input()\n  condition?: ol.EventsConditionType;\n  @Input()\n  freehandCondition?: ol.EventsConditionType;\n  @Input()\n  freehand?: boolean;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  onChange = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onChangeActive = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onDrawEnd = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onDrawStart = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onPropertyChange = new EventEmitter<ol.interaction.Draw.Event>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.Draw(this);\n    this.instance.on('change', (event: ol.interaction.Draw.Event) => this.onChange.emit(event));\n    this.instance.on('change:active', (event: ol.interaction.Draw.Event) => this.onChangeActive.emit(event));\n    this.instance.on('drawend', (event: ol.interaction.Draw.Event) => this.onDrawEnd.emit(event));\n    this.instance.on('drawstart', (event: ol.interaction.Draw.Event) => this.onDrawStart.emit(event));\n    this.instance.on('propertychange', (event: ol.interaction.Draw.Event) => this.onPropertyChange.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {\n  interaction,\n  EventsConditionType,\n  layer,\n  style,\n  Collection,\n  SelectFilterFunction,\n  StyleFunction,\n  Feature,\n} from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-select',\n  template: '',\n})\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Select;\n\n  @Input()\n  addCondition?: EventsConditionType;\n  @Input()\n  condition?: EventsConditionType;\n  @Input()\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\n  @Input()\n  style?: style.Style | style.Style[] | StyleFunction;\n  @Input()\n  removeCondition?: EventsConditionType;\n  @Input()\n  toggleCondition?: EventsConditionType;\n  @Input()\n  multi?: boolean;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  filter?: SelectFilterFunction;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  onChange = new EventEmitter<interaction.Select.Event>();\n  @Output()\n  onSelect = new EventEmitter<interaction.Select.Event>();\n  @Output()\n  onPropertyChange = new EventEmitter<interaction.Select.Event>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.Select(this);\n\n    this.instance.on('change', (event: interaction.Select.Event) => this.onChange.emit(event));\n    this.instance.on('select', (event: interaction.Select.Event) => this.onSelect.emit(event));\n    this.instance.on('propertychange', (event: interaction.Select.Event) => this.onPropertyChange.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { interaction, EventsConditionType, style, StyleFunction, Collection, Feature, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-modify',\n  template: '',\n})\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Modify;\n\n  @Input()\n  condition?: EventsConditionType;\n  @Input()\n  deleteCondition?: EventsConditionType;\n  @Input()\n  pixelTolerance?: number;\n  @Input()\n  style?: style.Style | style.Style[] | StyleFunction;\n  @Input()\n  features: Collection<Feature>;\n  @Input()\n  wrapX?: boolean;\n  @Input()\n  source?: source.Vector;\n\n  @Output()\n  onModifyEnd = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onModifyStart = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onChange = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onChangeActive = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onPropertyChange = new EventEmitter<interaction.Modify.Event>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.Modify(this);\n    this.instance.on('change', (event: interaction.Modify.Event) => this.onChange.emit(event));\n    this.instance.on('change:active', (event: interaction.Modify.Event) => this.onChangeActive.emit(event));\n    this.instance.on('propertychange', (event: interaction.Modify.Event) => this.onPropertyChange.emit(event));\n    this.instance.on('modifyend', (event: interaction.Modify.Event) => this.onModifyEnd.emit(event));\n    this.instance.on('modifystart', (event: interaction.Modify.Event) => this.onModifyStart.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { interaction, layer, Collection, Feature } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-translate',\n  template: '',\n})\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Translate;\n\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\n  @Input()\n  hitTolerance?: number;\n\n  @Output()\n  onChange: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onPropertyChange: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onTranslateEnd: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onTranslateStart: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onTranslating: EventEmitter<interaction.Translate.Event>;\n\n  constructor(private map: MapComponent) {\n    this.onChange = new EventEmitter<interaction.Translate.Event>();\n    this.onPropertyChange = new EventEmitter<interaction.Translate.Event>();\n    this.onTranslateEnd = new EventEmitter<interaction.Translate.Event>();\n    this.onTranslateStart = new EventEmitter<interaction.Translate.Event>();\n    this.onTranslating = new EventEmitter<interaction.Translate.Event>();\n  }\n\n  ngOnInit() {\n    this.instance = new interaction.Translate(this);\n\n    this.instance.on('change', (event: interaction.Translate.Event) => this.onChange.emit(event));\n    this.instance.on('propertychange', (event: interaction.Translate.Event) => this.onPropertyChange.emit(event));\n    this.instance.on('translateend', (event: interaction.Translate.Event) => this.onTranslateEnd.emit(event));\n    this.instance.on('translatestart', (event: interaction.Translate.Event) => this.onTranslateStart.emit(event));\n    this.instance.on('translating', (event: interaction.Translate.Event) => this.onTranslating.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Attribution } from 'openlayers';\n\n@Component({\n  selector: 'aol-attribution',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionComponent implements OnInit {\n  instance: Attribution;\n  html: string;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    this.html = this.elementRef.nativeElement.innerHTML;\n    this.instance = new Attribution(this);\n  }\n}\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\nimport { Attribution } from 'openlayers';\nimport { SourceComponent } from './sources/source.component';\nimport { AttributionComponent } from './attribution.component';\n\n@Component({\n  selector: 'aol-attributions',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionsComponent implements AfterViewInit {\n  instance: Array<Attribution>;\n\n  @ContentChildren(AttributionComponent)\n  attributions: QueryList<AttributionComponent>;\n\n  constructor(@Host() private source: SourceComponent) {}\n\n  /* we can do this at the very end */\n  ngAfterViewInit() {\n    if (this.attributions.length) {\n      this.instance = this.attributions.map(cmp => cmp.instance);\n      // console.log('setting attributions:', this.instance);\n      this.source.instance.setAttributions(this.instance);\n    }\n  }\n}\n","/*\n * Public API Surface of ngx-openlayers\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewComponent } from './lib/view.component';\nimport { GraticuleComponent } from './lib/graticule.component';\nimport { LayerGroupComponent } from './lib/layers/layergroup.component';\nimport { LayerImageComponent } from './lib/layers/layerimage.component';\nimport { LayerTileComponent } from './lib/layers/layertile.component';\nimport { MapComponent } from './lib/map.component';\nimport { LayerVectorComponent } from './lib/layers/layervector.component';\nimport { LayerVectorTileComponent } from './lib/layers/layervectortile.component';\nimport { SourceOsmComponent } from './lib/sources/osm.component';\nimport { SourceBingmapsComponent } from './lib/sources/bingmaps.component';\nimport { SourceClusterComponent } from './lib/sources/cluster.component';\nimport { SourceVectorComponent } from './lib/sources/vector.component';\nimport { SourceXYZComponent } from './lib/sources/xyz.component';\nimport { SourceTileWMTSComponent } from './lib/sources/tilewmts.component';\nimport { SourceVectorTileComponent } from './lib/sources/vectortile.component';\nimport { SourceTileWMSComponent } from './lib/sources/tilewms.component';\nimport { SourceTileJSONComponent } from './lib/sources/tilejson.component';\nimport { SourceGeoJSONComponent } from './lib/sources/geojson.component';\nimport { SourceImageStaticComponent } from './lib/sources/imagestatic.component';\nimport { SourceImageWMSComponent } from './lib/sources/imagewms.component';\nimport { SourceImageArcGISRestComponent } from './lib/sources/imagearcgisrest.component';\nimport { SourceRasterComponent } from './lib/sources/raster.component';\nimport { FeatureComponent } from './lib/feature.component';\nimport {\n  GeometryLinestringComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n} from './lib/geometry.components';\nimport { CollectionCoordinatesComponent, CoordinateComponent } from './lib/coordinate.component';\nimport { StyleComponent } from './lib/styles/style.component';\nimport { StyleCircleComponent } from './lib/styles/circle.component';\nimport { StyleStrokeComponent } from './lib/styles/stroke.component';\nimport { StyleIconComponent } from './lib/styles/icon.component';\nimport { StyleFillComponent } from './lib/styles/fill.component';\nimport { StyleTextComponent } from './lib/styles/text.component';\nimport { DefaultControlComponent } from './lib/controls/default.component';\nimport { ControlComponent } from './lib/controls/control.component';\nimport { ControlAttributionComponent } from './lib/controls/attribution.component';\nimport { ControlFullScreenComponent } from './lib/controls/fullscreen.component';\nimport { ControlMousePositionComponent } from './lib/controls/mouseposition.component';\nimport { ControlOverviewMapComponent } from './lib/controls/overviewmap.component';\nimport { ControlRotateComponent } from './lib/controls/rotate.component';\nimport { ControlScaleLineComponent } from './lib/controls/scaleline.component';\nimport { ControlZoomComponent } from './lib/controls/zoom.component';\nimport { ControlZoomSliderComponent } from './lib/controls/zoomslider.component';\nimport { ControlZoomToExtentComponent } from './lib/controls/zoomtoextent.component';\nimport { FormatMVTComponent } from './lib/formats/mvt.component';\nimport { TileGridComponent } from './lib/tilegrid.component';\nimport { TileGridWMTSComponent } from './lib/tilegridwmts.component';\nimport { DefaultInteractionComponent } from './lib/interactions/default.component';\nimport { DoubleClickZoomInteractionComponent } from './lib/interactions/doubleclickzoom.component';\nimport { DragAndDropInteractionComponent } from './lib/interactions/draganddrop.component';\nimport { DragBoxInteractionComponent } from './lib/interactions/dragbox.component';\nimport { DragPanInteractionComponent } from './lib/interactions/dragpan.component';\nimport { DragRotateInteractionComponent } from './lib/interactions/dragrotate.component';\nimport { DragRotateAndZoomInteractionComponent } from './lib/interactions/dragrotateandzoom.component';\nimport { DragZoomInteractionComponent } from './lib/interactions/dragzoom.component';\nimport { MouseWheelZoomInteractionComponent } from './lib/interactions/mousewheelzoom.component';\nimport { PinchZoomInteractionComponent } from './lib/interactions/pinchzoom.component';\nimport { DrawInteractionComponent } from './lib/interactions/draw.component';\nimport { SelectInteractionComponent } from './lib/interactions/select.component';\nimport { ModifyInteractionComponent } from './lib/interactions/modify.component';\nimport { TranslateInteractionComponent } from './lib/interactions/translate.component';\nimport { OverlayComponent } from './lib/overlay.component';\nimport { ContentComponent } from './lib/content.component';\nimport { AttributionComponent } from './lib/attribution.component';\nimport { AttributionsComponent } from './lib/attributions.component';\n\nexport {\n  MapComponent,\n  ViewComponent,\n  GraticuleComponent,\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceRasterComponent,\n  SourceImageArcGISRestComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n  OverlayComponent,\n  ContentComponent,\n  AttributionComponent,\n  AttributionsComponent,\n};\n\nconst COMPONENTS = [\n  MapComponent,\n\n  ViewComponent,\n  GraticuleComponent,\n\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceImageArcGISRestComponent,\n  SourceRasterComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n\n  OverlayComponent,\n  ContentComponent,\n  AttributionComponent,\n  AttributionsComponent,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  imports: [CommonModule],\n  exports: COMPONENTS,\n})\nexport class AngularOpenlayersModule {}\n"],"names":["EventEmitter","Map","Component","ElementRef","Input","Output","View","Graticule","tslib_1.__extends","layer","SkipSelf","Optional","tilegrid","source","forwardRef","Host","ContentChild","format","Feature","geom","Overlay","proj","style","control","interaction","Attribution","ContentChildren","NgModule","CommonModule"],"mappings":"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"}
+{"version":3,"file":"ngx-openlayers.umd.js.map","sources":["ng://ngx-openlayers/lib/map.component.ts","ng://ngx-openlayers/lib/view.component.ts","ng://ngx-openlayers/lib/graticule.component.ts",null,"ng://ngx-openlayers/lib/layers/layer.component.ts","ng://ngx-openlayers/lib/layers/layergroup.component.ts","ng://ngx-openlayers/lib/layers/layerimage.component.ts","ng://ngx-openlayers/lib/layers/layertile.component.ts","ng://ngx-openlayers/lib/layers/layervector.component.ts","ng://ngx-openlayers/lib/layers/layervectortile.component.ts","ng://ngx-openlayers/lib/sources/source.component.ts","ng://ngx-openlayers/lib/tilegrid.component.ts","ng://ngx-openlayers/lib/sources/raster.component.ts","ng://ngx-openlayers/lib/sources/xyz.component.ts","ng://ngx-openlayers/lib/sources/osm.component.ts","ng://ngx-openlayers/lib/sources/bingmaps.component.ts","ng://ngx-openlayers/lib/sources/vector.component.ts","ng://ngx-openlayers/lib/sources/cluster.component.ts","ng://ngx-openlayers/lib/tilegridwmts.component.ts","ng://ngx-openlayers/lib/sources/tilewmts.component.ts","ng://ngx-openlayers/lib/formats/format.component.ts","ng://ngx-openlayers/lib/sources/vectortile.component.ts","ng://ngx-openlayers/lib/sources/tilewms.component.ts","ng://ngx-openlayers/lib/sources/tilejson.component.ts","ng://ngx-openlayers/lib/sources/geojson.component.ts","ng://ngx-openlayers/lib/sources/imagestatic.component.ts","ng://ngx-openlayers/lib/sources/imagewms.component.ts","ng://ngx-openlayers/lib/sources/imagearcgisrest.component.ts","ng://ngx-openlayers/lib/feature.component.ts","ng://ngx-openlayers/lib/geometry.components.ts","ng://ngx-openlayers/lib/content.component.ts","ng://ngx-openlayers/lib/overlay.component.ts","ng://ngx-openlayers/lib/coordinate.component.ts","ng://ngx-openlayers/lib/styles/style.component.ts","ng://ngx-openlayers/lib/styles/circle.component.ts","ng://ngx-openlayers/lib/styles/text.component.ts","ng://ngx-openlayers/lib/styles/stroke.component.ts","ng://ngx-openlayers/lib/styles/icon.component.ts","ng://ngx-openlayers/lib/styles/fill.component.ts","ng://ngx-openlayers/lib/controls/default.component.ts","ng://ngx-openlayers/lib/controls/control.component.ts","ng://ngx-openlayers/lib/controls/attribution.component.ts","ng://ngx-openlayers/lib/controls/fullscreen.component.ts","ng://ngx-openlayers/lib/controls/mouseposition.component.ts","ng://ngx-openlayers/lib/controls/overviewmap.component.ts","ng://ngx-openlayers/lib/controls/rotate.component.ts","ng://ngx-openlayers/lib/controls/scaleline.component.ts","ng://ngx-openlayers/lib/controls/zoom.component.ts","ng://ngx-openlayers/lib/controls/zoomslider.component.ts","ng://ngx-openlayers/lib/controls/zoomtoextent.component.ts","ng://ngx-openlayers/lib/formats/mvt.component.ts","ng://ngx-openlayers/lib/interactions/default.component.ts","ng://ngx-openlayers/lib/interactions/doubleclickzoom.component.ts","ng://ngx-openlayers/lib/interactions/draganddrop.component.ts","ng://ngx-openlayers/lib/interactions/dragbox.component.ts","ng://ngx-openlayers/lib/interactions/dragpan.component.ts","ng://ngx-openlayers/lib/interactions/dragrotate.component.ts","ng://ngx-openlayers/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-openlayers/lib/interactions/dragzoom.component.ts","ng://ngx-openlayers/lib/interactions/mousewheelzoom.component.ts","ng://ngx-openlayers/lib/interactions/pinchzoom.component.ts","ng://ngx-openlayers/lib/interactions/draw.component.ts","ng://ngx-openlayers/lib/interactions/select.component.ts","ng://ngx-openlayers/lib/interactions/modify.component.ts","ng://ngx-openlayers/lib/interactions/translate.component.ts","ng://ngx-openlayers/lib/attribution.component.ts","ng://ngx-openlayers/lib/attributions.component.ts","ng://ngx-openlayers/public_api.ts"],"sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { Map, MapBrowserEvent, MapEvent, render, ObjectEvent, control, interaction } from 'openlayers';\r\n\r\n@Component({\r\n  selector: 'aol-map',\r\n  template: `\r\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\r\n  public instance: Map;\r\n  public componentType = 'map';\r\n\r\n  @Input()\r\n  width = '100%';\r\n  @Input()\r\n  height = '100%';\r\n  @Input()\r\n  pixelRatio: number;\r\n  @Input()\r\n  keyboardEventTarget: Element | string;\r\n  @Input()\r\n  loadTilesWhileAnimating: boolean;\r\n  @Input()\r\n  loadTilesWhileInteracting: boolean;\r\n  @Input()\r\n  logo: string | boolean;\r\n  @Input()\r\n  renderer: 'canvas' | 'webgl';\r\n\r\n  @Output()\r\n  onClick: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onDblClick: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onMoveEnd: EventEmitter<MapEvent>;\r\n  @Output()\r\n  onPointerDrag: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onPointerMove: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onPostCompose: EventEmitter<render.Event>;\r\n  @Output()\r\n  onPostRender: EventEmitter<MapEvent>;\r\n  @Output()\r\n  onPreCompose: EventEmitter<render.Event>;\r\n  @Output()\r\n  onPropertyChange: EventEmitter<ObjectEvent>;\r\n  @Output()\r\n  onSingleClick: EventEmitter<MapBrowserEvent>;\r\n\r\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\r\n  controls: control.Control[] = [];\r\n  interactions: interaction.Interaction[] = [];\r\n\r\n  constructor(private host: ElementRef) {\r\n    this.onClick = new EventEmitter<MapBrowserEvent>();\r\n    this.onDblClick = new EventEmitter<MapBrowserEvent>();\r\n    this.onMoveEnd = new EventEmitter<MapEvent>();\r\n    this.onPointerDrag = new EventEmitter<MapBrowserEvent>();\r\n    this.onPointerMove = new EventEmitter<MapBrowserEvent>();\r\n    this.onPostCompose = new EventEmitter<render.Event>();\r\n    this.onPostRender = new EventEmitter<MapEvent>();\r\n    this.onPreCompose = new EventEmitter<render.Event>();\r\n    this.onPropertyChange = new EventEmitter<ObjectEvent>();\r\n    this.onSingleClick = new EventEmitter<MapBrowserEvent>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.Map instance with:', this);\r\n    this.instance = new Map(this);\r\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\r\n    this.instance.on('click', (event: MapBrowserEvent) => this.onClick.emit(event));\r\n    this.instance.on('dblclick', (event: MapBrowserEvent) => this.onDblClick.emit(event));\r\n    this.instance.on('moveend', (event: MapEvent) => this.onMoveEnd.emit(event));\r\n    this.instance.on('pointerdrag', (event: MapBrowserEvent) => this.onPointerDrag.emit(event));\r\n    this.instance.on('pointermove', (event: MapBrowserEvent) => this.onPointerMove.emit(event));\r\n    this.instance.on('postcompose', (event: render.Event) => this.onPostCompose.emit(event));\r\n    this.instance.on('postrender', (event: MapEvent) => this.onPostRender.emit(event));\r\n    this.instance.on('precompose', (event: render.Event) => this.onPreCompose.emit(event));\r\n    this.instance.on('propertychange', (event: ObjectEvent) => this.onPropertyChange.emit(event));\r\n    this.instance.on('singleclick', (event: MapBrowserEvent) => this.onSingleClick.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.instance.updateSize();\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\r\nimport { View, Extent, ObjectEvent, Coordinate } from 'openlayers';\r\nimport { MapComponent } from './map.component';\r\n\r\n@Component({\r\n  selector: 'aol-view',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\r\n  public instance: View;\r\n  public componentType = 'view';\r\n\r\n  @Input()\r\n  constrainRotation: boolean | number;\r\n  @Input()\r\n  enableRotation: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  resolution: number;\r\n  @Input()\r\n  resolutions: number[];\r\n  @Input()\r\n  rotation: number;\r\n  @Input()\r\n  zoom: number;\r\n  @Input()\r\n  zoomFactor: number;\r\n  @Input()\r\n  center: Coordinate;\r\n  @Input()\r\n  projection: string;\r\n\r\n  @Input()\r\n  zoomAnimation = false;\r\n\r\n  @Output()\r\n  onChangeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\r\n\r\n  constructor(private host: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.View instance with: ', this);\r\n    this.instance = new View(this);\r\n    this.host.instance.setView(this.instance);\r\n\r\n    this.instance.on('change:zoom', (event: ObjectEvent) => this.onChangeZoom.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        switch (key) {\r\n          case 'zoom':\r\n            /** Work-around: setting the zoom via setProperties does not work. */\r\n            if (this.zoomAnimation) {\r\n              this.instance.animate({ zoom: changes[key].currentValue });\r\n            } else {\r\n              this.instance.setZoom(changes[key].currentValue);\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-view');\r\n  }\r\n}\r\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Graticule, style } from 'openlayers';\r\nimport { MapComponent } from './map.component';\r\n\r\n@Component({\r\n  selector: 'aol-graticule',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class GraticuleComponent implements AfterContentInit, OnChanges {\r\n  instance: any;\r\n  public componentType = 'graticule';\r\n\r\n  @Input()\r\n  strokeStyle: style.Stroke;\r\n  @Input()\r\n  showLabels: boolean;\r\n  @Input()\r\n  lonLabelPosition: number;\r\n  @Input()\r\n  latLabelPosition: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n\r\n    if (properties) {\r\n      this.instance = new Graticule(properties);\r\n    }\r\n    this.instance.setMap(this.map.instance);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.instance = new Graticule({\r\n      strokeStyle: this.strokeStyle,\r\n      showLabels: this.showLabels,\r\n      lonLabelPosition: this.lonLabelPosition,\r\n      latLabelPosition: this.latLabelPosition,\r\n    });\r\n    this.instance.setMap(this.map.instance);\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { MapComponent } from '../map.component';\r\nimport { Extent } from 'openlayers';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\r\n  public instance: any;\r\n  public componentType = 'layer';\r\n\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  zIndex: number;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxResolution: number;\r\n\r\n  @Input()\r\n  precompose: (evt: ol.events.Event) => void;\r\n  @Input()\r\n  postcompose: (evt: ol.events.Event) => void;\r\n\r\n  constructor(protected host: LayerGroupComponent | MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.precompose !== null && this.precompose !== undefined) {\r\n      this.instance.on('precompose', this.precompose);\r\n    }\r\n    if (this.postcompose !== null && this.postcompose !== undefined) {\r\n      this.instance.on('postcompose', this.postcompose);\r\n    }\r\n    this.host.instance.getLayers().push(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.host.instance.getLayers().remove(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n        if (key === 'precompose') {\r\n          this.instance.un('precompose', changes[key].previousValue);\r\n          this.instance.on('precompose', changes[key].currentValue);\r\n        }\r\n        if (key === 'postcompose') {\r\n          this.instance.un('postcompose', changes[key].previousValue);\r\n          this.instance.on('postcompose', changes[key].currentValue);\r\n        }\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\r\nimport { layer } from 'openlayers';\r\nimport { LayerComponent } from './layer.component';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-group',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\r\n  public instance: ol.layer.Group;\r\n\r\n  constructor(\r\n    map: MapComponent,\r\n    @SkipSelf()\r\n    @Optional()\r\n    group?: LayerGroupComponent\r\n  ) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log(`creating ol.layer.Group instance with:`, this);\r\n    this.instance = new layer.Group(this);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\r\nimport { Extent, layer, source } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-image',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\r\n  public source: source.Image;\r\n\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  zIndex: number;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new layer.Image(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { layer, source } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-tile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\r\n  public source: source.Tile;\r\n\r\n  @Input()\r\n  preload: number;\r\n  @Input()\r\n  useInterimTilesOnError: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.Tile instance with:', this);\r\n    this.instance = new layer.Tile(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { layer, source, style, StyleFunction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-vector',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\r\n  public source: source.Vector;\r\n\r\n  @Input()\r\n  renderBuffer: number;\r\n\r\n  @Input()\r\n  style: style.Style | style.Style[] | StyleFunction;\r\n\r\n  @Input()\r\n  updateWhileAnimating: boolean;\r\n\r\n  @Input()\r\n  updateWhileInteracting: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.Vector instance with:', this);\r\n    this.instance = new layer.Vector(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Optional, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { layer, style, StyleFunction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-vectortile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  renderBuffer: number;\r\n  @Input()\r\n  renderMode: layer.VectorTileRenderType | string;\r\n  /* not marked as optional in the typings */\r\n  @Input()\r\n  renderOrder: (feature1: ol.Feature, feature2: ol.Feature) => number;\r\n  @Input()\r\n  style: style.Style | style.Style[] | StyleFunction;\r\n  @Input()\r\n  updateWhileAnimating: boolean;\r\n  @Input()\r\n  updateWhileInteracting: boolean;\r\n  @Input()\r\n  visible: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.VectorTile instance with:', this);\r\n    this.instance = new layer.VectorTile(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Input, OnDestroy } from '@angular/core';\r\nimport { source } from 'openlayers';\r\nimport { LayerComponent } from '../layers/layer.component';\r\nimport AttributionLike = ol.AttributionLike;\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\nexport class SourceComponent implements OnDestroy {\r\n  public instance: source.Source;\r\n  public componentType = 'source';\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n\r\n  constructor(protected host: LayerComponent, protected raster?: SourceRasterComponent) {}\r\n\r\n  ngOnDestroy() {\r\n    if (this.host && this.host.instance) {\r\n      this.host.instance.setSource(null);\r\n    }\r\n\r\n    if (this.raster) {\r\n      this.raster.sources = [];\r\n    }\r\n  }\r\n\r\n  protected _register(s: source.Source) {\r\n    if (this.host) {\r\n      this.host.instance.setSource(s);\r\n    }\r\n\r\n    if (this.raster) {\r\n      this.raster.sources = [s];\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { tilegrid, Extent, Size, Coordinate } from 'openlayers';\r\n\r\n@Component({\r\n  selector: 'aol-tilegrid',\r\n  template: '',\r\n})\r\nexport class TileGridComponent implements OnInit, OnChanges {\r\n  instance: tilegrid.TileGrid;\r\n\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  tileSize: number | Size;\r\n  @Input()\r\n  origin?: Coordinate;\r\n  @Input()\r\n  resolutions: number[];\r\n\r\n  ngOnInit() {\r\n    if (!this.resolutions) {\r\n      this.instance = tilegrid.createXYZ(this);\r\n    } else {\r\n      this.instance = new tilegrid.TileGrid(this);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.resolutions) {\r\n      this.instance = tilegrid.createXYZ(this);\r\n    } else {\r\n      this.instance = new tilegrid.TileGrid(this);\r\n    }\r\n  }\r\n}\r\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Output } from '@angular/core';\r\nimport { RasterOperation, RasterOperationType, source } from 'openlayers';\r\n\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-raster',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [\r\n    {\r\n      provide: SourceComponent,\r\n      useExisting: forwardRef(() => SourceRasterComponent),\r\n    },\r\n  ],\r\n})\r\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\r\n  instance: source.Raster;\r\n\r\n  @Input()\r\n  operation?: RasterOperation;\r\n  @Input()\r\n  threads?: number;\r\n  @Input()\r\n  lib?: Object;\r\n  @Input()\r\n  operationType?: RasterOperationType;\r\n\r\n  @Output()\r\n  beforeOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\r\n  @Output()\r\n  afterOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\r\n\r\n  sources: source.Source[] = [];\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.instance = new source.Raster(this);\r\n\r\n    this.instance.on('beforeoperations', (event: source.RasterEvent) => this.beforeOperations.emit(event));\r\n    this.instance.on('afteroperations', (event: source.RasterEvent) => this.afterOperations.emit(event));\r\n\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  AfterContentInit,\r\n  forwardRef,\r\n  OnChanges,\r\n  ContentChild,\r\n  SimpleChanges,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { source, Size, TileUrlFunctionType, TileLoadFunctionType, tilegrid } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileGridComponent } from '../tilegrid.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-xyz',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\r\n})\r\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\r\n  instance: source.XYZ;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  opaque: boolean;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  tileGrid: tilegrid.TileGrid;\r\n  @Input()\r\n  tileLoadFunction?: TileLoadFunctionType;\r\n  @Input()\r\n  tilePixelRatio: number;\r\n  @Input()\r\n  tileSize: number | Size;\r\n  @Input()\r\n  tileUrlFunction: TileUrlFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @ContentChild(TileGridComponent)\r\n  tileGridXYZ: TileGridComponent;\r\n\r\n  constructor(\r\n    @Optional()\r\n    @Host()\r\n    layer: LayerTileComponent,\r\n    @Optional()\r\n    @Host()\r\n    raster?: SourceRasterComponent\r\n  ) {\r\n    super(layer, raster);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.tileGridXYZ) {\r\n      this.tileGrid = this.tileGridXYZ.instance;\r\n    }\r\n    this.instance = new source.XYZ(this);\r\n    this._register(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n\r\n    this.instance.setProperties(properties, false);\r\n    if (changes.hasOwnProperty('url')) {\r\n      this.instance = new source.XYZ(this);\r\n      this._register(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, forwardRef, Input, AfterContentInit, Optional } from '@angular/core';\r\nimport { source, AttributionLike, TileLoadFunctionType } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { SourceXYZComponent } from './xyz.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-osm',\r\n  template: `\r\n    <div class=\"aol-source-osm\"></div>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\r\n})\r\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\r\n  instance: source.OSM;\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  opaque: boolean;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  tileLoadFunction: TileLoadFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(\r\n    @Host()\r\n    @Optional()\r\n    layer: LayerTileComponent,\r\n    @Host()\r\n    @Optional()\r\n    raster?: SourceRasterComponent\r\n  ) {\r\n    super(layer, raster);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.tileGridXYZ) {\r\n      this.tileGrid = this.tileGridXYZ.instance;\r\n    }\r\n    this.instance = new source.OSM(this);\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source, TileLoadFunctionType } from 'openlayers';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-bingmaps',\r\n  template: `\r\n    <div class=\"aol-source-bingmaps\"></div>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\r\n})\r\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\r\n  instance: source.BingMaps;\r\n\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  culture: string;\r\n  @Input()\r\n  key: string;\r\n  @Input()\r\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  tileLoadFunction: TileLoadFunctionType;\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.BingMaps(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source } from 'openlayers';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-vector',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\r\n})\r\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\r\n  instance: source.Vector;\r\n  @Input()\r\n  overlaps: boolean;\r\n  @Input()\r\n  useSpatialIndex: boolean;\r\n  @Input()\r\n  wrapX: boolean;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  format: ol.format.Feature;\r\n  @Input()\r\n  strategy: ol.LoadingStrategy;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.Vector(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { source, Feature, geom } from 'openlayers';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { SourceVectorComponent } from './vector.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-cluster',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\r\n})\r\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit {\r\n  instance: source.Cluster;\r\n\r\n  @Input()\r\n  distance: number;\r\n  @Input()\r\n  geometryFunction?: ((feature: Feature) => geom.Point);\r\n\r\n  @ContentChild(SourceVectorComponent)\r\n  sourceVectorComponent: SourceVectorComponent;\r\n  source: source.Vector;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.source = this.sourceVectorComponent.instance;\r\n\r\n    this.instance = new source.Cluster(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { tilegrid, Size, Coordinate } from 'openlayers';\r\nimport { TileGridComponent } from './tilegrid.component';\r\n\r\n@Component({\r\n  selector: 'aol-tilegrid-wmts',\r\n  template: '',\r\n})\r\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\r\n  instance: tilegrid.WMTS;\r\n\r\n  @Input()\r\n  origin?: Coordinate;\r\n  @Input()\r\n  origins?: Coordinate[];\r\n  @Input()\r\n  resolutions: number[];\r\n  @Input()\r\n  matrixIds: string[];\r\n  @Input()\r\n  sizes?: Size[];\r\n  @Input()\r\n  tileSizes?: (number | Size)[];\r\n  @Input()\r\n  widths?: number[];\r\n\r\n  ngOnInit() {\r\n    this.instance = new tilegrid.WMTS(this);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  forwardRef,\r\n  AfterContentInit,\r\n  ContentChild,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { TileLoadFunctionType, tilegrid, ProjectionLike, source, ImageTile, TileCoord, Tile } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilewmts',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\r\n})\r\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\r\n  instance: source.WMTS;\r\n  @Input()\r\n  cacheSize?: number;\r\n  @Input()\r\n  crossOrigin?: string;\r\n  @Input()\r\n  logo?: string | olx.LogoOptions;\r\n  @Input()\r\n  tileGrid: tilegrid.WMTS;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  reprojectionErrorThreshold?: number;\r\n  @Input()\r\n  requestEncoding?: source.WMTSRequestEncoding | string;\r\n  @Input()\r\n  layer: string;\r\n  @Input()\r\n  style: string;\r\n  @Input()\r\n  tileClass?: ((\r\n    n: ImageTile,\r\n    coords: TileCoord,\r\n    state: Tile.State,\r\n    s1: string,\r\n    s2: string,\r\n    type: TileLoadFunctionType\r\n  ) => any);\r\n  @Input()\r\n  tilePixelRatio?: number;\r\n  @Input()\r\n  version?: string;\r\n  @Input()\r\n  format?: string;\r\n  @Input()\r\n  matrixSet: string;\r\n  @Input()\r\n  dimensions?: GlobalObject;\r\n  @Input()\r\n  url?: string;\r\n  @Input()\r\n  tileLoadFunction?: TileLoadFunctionType;\r\n  @Input()\r\n  urls?: string[];\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @ContentChild(TileGridWMTSComponent)\r\n  tileGridWMTS: TileGridWMTSComponent;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        switch (key) {\r\n          case 'url':\r\n            this.url = changes[key].currentValue;\r\n            this.setLayerSource();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  setLayerSource(): void {\r\n    this.instance = new source.WMTS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this.tileGridWMTS) {\r\n      this.tileGrid = this.tileGridWMTS.instance;\r\n      this.setLayerSource();\r\n    }\r\n  }\r\n}\r\n","import { format } from 'openlayers';\r\n\r\nexport class FormatComponent {\r\n  public instance: format.Feature;\r\n  public componentType = 'format';\r\n}\r\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { source, ProjectionLike, TileUrlFunctionType, format, tilegrid } from 'openlayers';\r\nimport { LayerVectorTileComponent } from '../layers/layervectortile.component';\r\nimport { FormatComponent } from '../formats/format.component';\r\nimport { TileGridComponent } from '../tilegrid.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-vectortile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent) }],\r\n})\r\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\r\n  public instance: source.VectorTile;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  overlaps: boolean;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  tilePixelRatio: number;\r\n  @Input()\r\n  tileUrlFunction: TileUrlFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @ContentChild(FormatComponent)\r\n  formatComponent: FormatComponent;\r\n  format: format.Feature;\r\n  @ContentChild(TileGridComponent)\r\n  tileGridComponent: TileGridComponent;\r\n  tileGrid: tilegrid.TileGrid;\r\n\r\n  constructor(@Host() layer: LayerVectorTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  /* need the children to construct the OL3 object */\r\n  ngAfterContentInit() {\r\n    this.format = this.formatComponent.instance;\r\n    this.tileGrid = this.tileGridComponent.instance;\r\n    // console.log('creating ol.source.VectorTile instance with:', this);\r\n    this.instance = new source.VectorTile(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\r\nimport { source, TileLoadFunctionType, tilegrid } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilewms',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\r\n})\r\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\r\n  instance: source.TileWMS;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  gutter: number;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  params: Object;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  serverType: string;\r\n  @Input()\r\n  tileGrid: tilegrid.TileGrid;\r\n  @Input()\r\n  tileLoadFunction: TileLoadFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.TileWMS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilejson',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\r\n})\r\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\r\n  instance: source.TileJSON;\r\n\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.TileJSON(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source, ProjectionLike, format } from 'openlayers';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-geojson',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\r\n})\r\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\r\n  instance: source.Vector;\r\n  format: format.Feature;\r\n  @Input()\r\n  defaultDataProjection: ProjectionLike;\r\n  @Input()\r\n  featureProjection: ProjectionLike;\r\n  @Input()\r\n  geometryName: string;\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.format = new format.GeoJSON(this);\r\n    this.instance = new source.Vector(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { ProjectionLike, source, Extent, AttributionLike, ImageLoadFunctionType, Size } from 'openlayers';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagestatic',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\r\n})\r\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit {\r\n  instance: source.ImageStatic;\r\n\r\n  @Input()\r\n  projection: ProjectionLike | string;\r\n  @Input()\r\n  imageExtent: Extent;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  crossOrigin?: string;\r\n  @Input()\r\n  imageLoadFunction?: ImageLoadFunctionType;\r\n  @Input()\r\n  logo?: string | olx.LogoOptions;\r\n  @Input()\r\n  imageSize?: Size;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.ImageStatic(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\r\nimport { AttributionLike, ImageLoadFunctionType, ProjectionLike, source } from 'openlayers';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagewms',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\r\n})\r\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\r\n  instance: source.ImageWMS;\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  serverType: string;\r\n  @Input()\r\n  imageLoadFunction?: ImageLoadFunctionType;\r\n  @Input()\r\n  logo: string | olx.LogoOptions;\r\n  @Input()\r\n  params: Object;\r\n  @Input()\r\n  projection: ProjectionLike | string;\r\n  @Input()\r\n  ratio: number;\r\n  @Input()\r\n  resolutions: Array<number>;\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.ImageWMS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, forwardRef, Host, Input, OnInit } from '@angular/core';\r\nimport { source, ProjectionLike, Attribution, ImageLoadFunctionType } from 'openlayers';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagearcgisrest',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\r\n})\r\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit {\r\n  instance: source.ImageArcGISRest;\r\n\r\n  @Input() projection: ProjectionLike | string;\r\n  @Input() url: string;\r\n  @Input() attributions: Attribution[];\r\n  @Input() crossOrigin?: string;\r\n  @Input() imageLoadFunction?: ImageLoadFunctionType;\r\n  @Input() params?: { [k: string]: any };\r\n  @Input() ratio = 1;\r\n  @Input() resolutions?: number[];\r\n  @Input() logo?: string | olx.LogoOptions;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.ImageArcGISRest(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { Feature } from 'openlayers';\r\nimport { SourceVectorComponent } from './sources/vector.component';\r\n\r\n@Component({\r\n  selector: 'aol-feature',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\r\n  public componentType = 'feature';\r\n  public instance: Feature;\r\n\r\n  @Input()\r\n  id: string | number | undefined;\r\n\r\n  constructor(private host: SourceVectorComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new Feature();\r\n    if (this.id !== undefined) {\r\n      this.instance.setId(this.id);\r\n    }\r\n    this.host.instance.addFeature(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.host.instance.removeFeature(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance) {\r\n      this.instance.setId(this.id);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { geom } from 'openlayers';\r\nimport { FeatureComponent } from './feature.component';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-linestring',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryLinestringComponent implements OnInit, OnDestroy {\r\n  public componentType = 'geometry-linestring';\r\n  public instance: geom.LineString;\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // console.log('instancing aol-geometry-linestring');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new geom.LineString([]);\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n  ngOnDestroy() {\r\n    // this.host.setGeometry(null);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-geometry-point',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryPointComponent implements OnInit, OnDestroy {\r\n  public componentType = 'geometry-point';\r\n  public instance: geom.Point;\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // console.log('creating aol-geometry-point');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new geom.Point([0, 0]); // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.host.setGeometry(null);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-geometry-polygon',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryPolygonComponent implements OnInit, OnDestroy {\r\n  public componentType = 'geometry-polygon';\r\n  public instance: geom.Polygon;\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // console.log('creating aol-geometry-polygon');\r\n  }\r\n\r\n  ngOnInit() {\r\n    // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.instance = new geom.Polygon([[[0, 0], [1, 0], [1, 1]]]);\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.host.setGeometry(null);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-geometry-circle',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryCircleComponent implements OnInit {\r\n  public componentType = 'geometry-circle';\r\n  public instance: geom.Circle;\r\n\r\n  @Input()\r\n  get radius(): number {\r\n    return this.instance.getRadius();\r\n  }\r\n  set radius(radius: number) {\r\n    this.instance.setRadius(radius);\r\n  }\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.instance = new geom.Circle([0, 0]);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aol-content',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class ContentComponent {\r\n  constructor(public elementRef: ElementRef) {}\r\n}\r\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { MapComponent } from './map.component';\r\nimport { Overlay, OverlayPositioning } from 'openlayers';\r\nimport { ContentComponent } from './content.component';\r\n\r\n@Component({\r\n  selector: 'aol-overlay',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class OverlayComponent implements OnInit, OnDestroy {\r\n  componentType = 'overlay';\r\n  instance: Overlay;\r\n  element: Element;\r\n  @ContentChild(ContentComponent)\r\n  content: ContentComponent;\r\n\r\n  @Input()\r\n  id: number | string;\r\n  @Input()\r\n  offset: number[];\r\n  @Input()\r\n  positioning: OverlayPositioning | string;\r\n  @Input()\r\n  stopEvent: boolean;\r\n  @Input()\r\n  insertFirst: boolean;\r\n  @Input()\r\n  autoPan: boolean;\r\n  @Input()\r\n  autoPanAnimation: olx.animation.PanOptions;\r\n  @Input()\r\n  autoPanMargin: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.content) {\r\n      this.element = this.content.elementRef.nativeElement;\r\n      this.instance = new Overlay(this);\r\n      this.map.instance.addOverlay(this.instance);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.instance) {\r\n      this.map.instance.removeOverlay(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, Optional, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { proj, Coordinate } from 'openlayers';\r\nimport { MapComponent } from './map.component';\r\nimport {\r\n  GeometryPointComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n} from './geometry.components';\r\nimport { ViewComponent } from './view.component';\r\nimport { OverlayComponent } from './overlay.component';\r\n\r\n@Component({\r\n  selector: 'aol-coordinate',\r\n  template: `\r\n    <div class=\"aol-coordinate\"></div>\r\n  `,\r\n})\r\nexport class CoordinateComponent implements OnChanges {\r\n  private host: any;\r\n\r\n  @Input()\r\n  x: number;\r\n  @Input()\r\n  y: number;\r\n  @Input()\r\n  srid = 'EPSG:3857';\r\n\r\n  constructor(\r\n    private map: MapComponent,\r\n    @Optional() viewHost: ViewComponent,\r\n    @Optional() geometryPointHost: GeometryPointComponent,\r\n    @Optional() geometryCircleHost: GeometryCircleComponent,\r\n    @Optional() overlayHost: OverlayComponent\r\n  ) {\r\n    // console.log('instancing aol-coordinate');\r\n    if (geometryPointHost !== null) {\r\n      this.host = geometryPointHost;\r\n    } else if (geometryCircleHost !== null) {\r\n      this.host = geometryCircleHost;\r\n    } else if (viewHost !== null) {\r\n      this.host = viewHost;\r\n    } else if (overlayHost !== null) {\r\n      this.host = overlayHost;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    let referenceProjection: proj.Projection;\r\n    let referenceProjectionCode: string;\r\n    let transformedCoordinates: number[];\r\n\r\n    referenceProjection = this.map.instance.getView().getProjection();\r\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\r\n\r\n    if (this.srid === referenceProjectionCode) {\r\n      transformedCoordinates = [this.x, this.y];\r\n    } else {\r\n      transformedCoordinates = proj.transform([this.x, this.y], this.srid, referenceProjectionCode);\r\n    }\r\n\r\n    switch (this.host.componentType) {\r\n      case 'geometry-point':\r\n        this.host.instance.setCoordinates(transformedCoordinates);\r\n        break;\r\n      case 'geometry-circle':\r\n      case 'view':\r\n        this.host.instance.setCenter(transformedCoordinates);\r\n        break;\r\n      case 'overlay':\r\n        this.host.instance.setPosition(transformedCoordinates);\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-collection-coordinates',\r\n  template: `\r\n    <div class=\"aol-collection-coordinates\"></div>\r\n  `,\r\n})\r\nexport class CollectionCoordinatesComponent implements OnChanges {\r\n  private host: any;\r\n\r\n  @Input()\r\n  coordinates: [number, number][];\r\n  @Input()\r\n  srid = 'EPSG:3857';\r\n\r\n  constructor(\r\n    private map: MapComponent,\r\n    @Optional() geometryLinestring: GeometryLinestringComponent,\r\n    @Optional() geometryPolygon: GeometryPolygonComponent\r\n  ) {\r\n    // console.log('creating aol-collection-coordinates');\r\n    if (!!geometryLinestring) {\r\n      this.host = geometryLinestring;\r\n    } else if (!!geometryPolygon) {\r\n      this.host = geometryPolygon;\r\n    } else {\r\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    let referenceProjection: proj.Projection;\r\n    let referenceProjectionCode: string;\r\n    let transformedCoordinates: Array<Coordinate>;\r\n\r\n    // console.log('coordinates change: ', this.coordinates);\r\n\r\n    referenceProjection = this.map.instance.getView().getProjection();\r\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\r\n\r\n    if (this.srid === referenceProjectionCode) {\r\n      transformedCoordinates = this.coordinates;\r\n    } else {\r\n      transformedCoordinates = [];\r\n      this.coordinates.forEach(\r\n        function(coordinate: Coordinate) {\r\n          transformedCoordinates.push(proj.transform(coordinate, this.srid, referenceProjectionCode));\r\n        }.bind(this)\r\n      );\r\n    }\r\n    switch (this.host.componentType) {\r\n      case 'geometry-linestring':\r\n        this.host.instance.setCoordinates(transformedCoordinates);\r\n        break;\r\n      case 'geometry-polygon':\r\n        this.host.instance.setCoordinates([transformedCoordinates]);\r\n        break;\r\n      default:\r\n        throw new Error('aol-collection-coordinates host is of unknown type: ' + this.host.componentType);\r\n      // break;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit } from '@angular/core';\r\nimport { style, StyleGeometryFunction, geom } from 'openlayers';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\n\r\n@Component({\r\n  selector: 'aol-style',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class StyleComponent implements OnInit {\r\n  private host: FeatureComponent | LayerVectorComponent;\r\n  public instance: style.Style;\r\n  public componentType = 'style';\r\n\r\n  @Input()\r\n  geometry: string | geom.Geometry | StyleGeometryFunction;\r\n  @Input()\r\n  fill: style.Fill;\r\n  @Input()\r\n  image: style.Image;\r\n  @Input()\r\n  stroke: style.Stroke;\r\n  @Input()\r\n  text: style.Text;\r\n  @Input()\r\n  zIndex: number;\r\n\r\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\r\n    // console.log('creating aol-style');\r\n    this.host = !!featureHost ? featureHost : layerHost;\r\n    if (!this.host) {\r\n      throw new Error('aol-style must be applied to a feature or a layer');\r\n    }\r\n  }\r\n\r\n  update() {\r\n    // console.log('updating style\\'s host: ', this.host);\r\n    this.host.instance.changed();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating aol-style instance with: ', this);\r\n    this.instance = new style.Style(this);\r\n    this.host.instance.setStyle(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { style } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-circle',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\r\n  public componentType = 'style-circle';\r\n  public instance: style.Circle;\r\n\r\n  @Input()\r\n  fill: style.Fill;\r\n  @Input()\r\n  radius: number;\r\n  @Input()\r\n  snapToPixel: boolean;\r\n  @Input()\r\n  stroke: style.Stroke;\r\n  @Input()\r\n  atlasManager: style.AtlasManager;\r\n\r\n  constructor(@Host() private host: StyleComponent) {}\r\n\r\n  /**\r\n   * WORK-AROUND: since the re-rendering is not triggered on style change\r\n   * we trigger a radius change.\r\n   * see openlayers #6233 and #5775\r\n   */\r\n  update() {\r\n    if (!!this.instance) {\r\n      // console.log('setting ol.style.Circle instance\\'s radius');\r\n      this.instance.setRadius(this.radius);\r\n    }\r\n    this.host.update();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // console.log('creating ol.style.Circle instance with: ', this);\r\n    this.instance = new style.Circle(this);\r\n    this.host.instance.setImage(this.instance);\r\n    this.host.update();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['radius']) {\r\n      this.instance.setRadius(changes['radius'].currentValue);\r\n    }\r\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-style-circle');\r\n    this.host.instance.setImage(null);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-text',\r\n  template: `\r\n    <div class=\"aol-style-text\"></div>\r\n  `,\r\n})\r\nexport class StyleTextComponent implements OnInit, OnChanges {\r\n  public instance: style.Text;\r\n  public componentType = 'style-text';\r\n\r\n  @Input()\r\n  font: string | undefined;\r\n  @Input()\r\n  offsetX: number | undefined;\r\n  @Input()\r\n  offsetY: number | undefined;\r\n  @Input()\r\n  scale: number | undefined;\r\n  @Input()\r\n  rotateWithView: boolean | undefined;\r\n  @Input()\r\n  rotation: number | undefined;\r\n  @Input()\r\n  text: string | undefined;\r\n  @Input()\r\n  textAlign: string | undefined;\r\n  @Input()\r\n  textBaseLine: string | undefined;\r\n\r\n  constructor(@Optional() private host: StyleComponent) {\r\n    if (!host) {\r\n      throw new Error('aol-style-text must be a descendant of aol-style');\r\n    }\r\n    // console.log('creating aol-style-text with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Text instance with: ', this);\r\n    this.instance = new style.Text(this);\r\n    this.host.instance.setText(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['font']) {\r\n      this.instance.setFont(changes['font'].currentValue);\r\n    }\r\n    if (changes['offsetX']) {\r\n      this.instance.setOffsetX(changes['offsetX'].currentValue);\r\n    }\r\n    if (changes['offsetY']) {\r\n      this.instance.setOffsetY(changes['offsetY'].currentValue);\r\n    }\r\n    if (changes['scale']) {\r\n      this.instance.setScale(changes['scale'].currentValue);\r\n    }\r\n    if (changes['rotation']) {\r\n      this.instance.setRotation(changes['rotation'].currentValue);\r\n    }\r\n    if (changes['text']) {\r\n      this.instance.setText(changes['text'].currentValue);\r\n    }\r\n    if (changes['textAlign']) {\r\n      this.instance.setTextAlign(changes['textAlign'].currentValue);\r\n    }\r\n    if (changes['textBaseLine']) {\r\n      this.instance.setTextBaseline(changes['textBaseLine'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style, Color } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\nimport { StyleCircleComponent } from './circle.component';\r\nimport { StyleTextComponent } from './text.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-stroke',\r\n  template: `\r\n    <div class=\"aol-style-stroke\"></div>\r\n  `,\r\n})\r\nexport class StyleStrokeComponent implements OnInit, OnChanges {\r\n  public instance: style.Stroke;\r\n  /* the typings do not have the setters */\r\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\r\n\r\n  @Input()\r\n  color: Color | undefined;\r\n  @Input()\r\n  lineCap: string | undefined;\r\n  @Input()\r\n  lineDash: number[] | undefined;\r\n  @Input()\r\n  lineJoin: string | undefined;\r\n  @Input()\r\n  miterLimit: number | undefined;\r\n  @Input()\r\n  width: number | undefined;\r\n\r\n  constructor(\r\n    @Optional() styleHost: StyleComponent,\r\n    @Optional() styleCircleHost: StyleCircleComponent,\r\n    @Optional() styleTextHost: StyleTextComponent\r\n  ) {\r\n    if (!styleHost) {\r\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\r\n    }\r\n    if (!!styleTextHost) {\r\n      this.host = styleTextHost;\r\n    } else if (!!styleCircleHost) {\r\n      this.host = styleCircleHost;\r\n    } else {\r\n      this.host = styleHost;\r\n    }\r\n    // console.log('creating aol-style-stroke with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Stroke instance with: ', this);\r\n    this.instance = new style.Stroke(this);\r\n    switch (this.host.componentType) {\r\n      case 'style':\r\n        this.host.instance.setStroke(this.instance);\r\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\r\n        break;\r\n      case 'style-text':\r\n        this.host.instance.setStroke(this.instance);\r\n        break;\r\n      case 'style-circle':\r\n        this.host.stroke = this.instance;\r\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\r\n        break;\r\n      default:\r\n        throw new Error('unknown host type: ' + this.host);\r\n      // break;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['color']) {\r\n      this.instance.setColor(changes['color'].currentValue);\r\n    }\r\n    if (changes['lineCap']) {\r\n      this.instance.setLineCap(changes['lineCap'].currentValue);\r\n    }\r\n    if (changes['lineDash']) {\r\n      this.instance.setLineDash(changes['lineDash'].currentValue);\r\n    }\r\n    if (changes['lineJoin']) {\r\n      this.instance.setLineJoin(changes['lineJoin'].currentValue);\r\n    }\r\n    if (changes['miterLimit']) {\r\n      this.instance.setMiterLimit(changes['miterLimit'].currentValue);\r\n    }\r\n    if (changes['width']) {\r\n      this.instance.setWidth(changes['width'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-icon',\r\n  template: `\r\n    <div class=\"aol-style-icon\"></div>\r\n  `,\r\n})\r\nexport class StyleIconComponent implements OnInit, OnChanges {\r\n  public instance: style.Icon;\r\n\r\n  @Input()\r\n  anchor: [number, number];\r\n  @Input()\r\n  anchorXUnits: style.IconAnchorUnits;\r\n  @Input()\r\n  anchorYUnits: style.IconAnchorUnits;\r\n  @Input()\r\n  anchorOrigin: style.IconOrigin;\r\n  @Input()\r\n  color: [number, number, number, number];\r\n  @Input()\r\n  crossOrigin: style.IconOrigin;\r\n  @Input()\r\n  img: string;\r\n  @Input()\r\n  offset: [number, number];\r\n  @Input()\r\n  offsetOrigin: style.IconOrigin;\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  scale: number;\r\n  @Input()\r\n  snapToPixel: boolean;\r\n  @Input()\r\n  rotateWithView: boolean;\r\n  @Input()\r\n  rotation: number;\r\n  @Input()\r\n  size: [number, number];\r\n  @Input()\r\n  imgSize: [number, number];\r\n  @Input()\r\n  src: string;\r\n\r\n  constructor(@Host() private host: StyleComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Icon instance with: ', this);\r\n    this.instance = new style.Icon(this);\r\n    this.host.instance.setImage(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['opacity']) {\r\n      this.instance.setOpacity(changes['opacity'].currentValue);\r\n    }\r\n    if (changes['rotation']) {\r\n      this.instance.setRotation(changes['rotation'].currentValue);\r\n    }\r\n    if (changes['scale']) {\r\n      this.instance.setScale(changes['scale'].currentValue);\r\n    }\r\n    if (changes['src']) {\r\n      this.instance = new style.Icon(this);\r\n      this.host.instance.setImage(this.instance);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-icon: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style, Color, ColorLike } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\nimport { StyleCircleComponent } from './circle.component';\r\nimport { StyleTextComponent } from './text.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-fill',\r\n  template: `\r\n    <div class=\"aol-style-fill\"></div>\r\n  `,\r\n})\r\nexport class StyleFillComponent implements OnInit, OnChanges {\r\n  /* the typings do not have the setters */\r\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\r\n  public instance: style.Fill;\r\n\r\n  @Input()\r\n  color: Color | ColorLike;\r\n\r\n  constructor(\r\n    @Optional() styleHost: StyleComponent,\r\n    @Optional() styleCircleHost: StyleCircleComponent,\r\n    @Optional() styleTextHost: StyleTextComponent\r\n  ) {\r\n    if (!styleHost) {\r\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\r\n    }\r\n    if (!!styleTextHost) {\r\n      this.host = styleTextHost;\r\n    } else if (!!styleCircleHost) {\r\n      this.host = styleCircleHost;\r\n    } else {\r\n      this.host = styleHost;\r\n    }\r\n    // console.log('creating aol-style-fill with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Fill instance with: ', this);\r\n    this.instance = new style.Fill(this);\r\n    switch (this.host.componentType) {\r\n      case 'style':\r\n        this.host.instance.setFill(this.instance);\r\n        // console.log('setting ol.style instance\\'s fill:', this.host);\r\n        break;\r\n      case 'style-text':\r\n        this.host.instance.setFill(this.instance);\r\n        break;\r\n      case 'style-circle':\r\n        this.host.fill = this.instance;\r\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\r\n        break;\r\n      default:\r\n        throw new Error('unknown host type: ' + this.host);\r\n      // break;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['color']) {\r\n      this.instance.setColor(changes['color'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { control, Collection } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-defaults',\r\n  template: '',\r\n})\r\nexport class DefaultControlComponent implements OnInit, OnDestroy {\r\n  instance: Collection<control.Control>;\r\n  @Input()\r\n  attribution: boolean;\r\n  @Input()\r\n  attributionOptions: olx.control.AttributionOptions;\r\n  @Input()\r\n  rotate: boolean;\r\n  @Input()\r\n  rotateOptions: olx.control.RotateOptions;\r\n  @Input()\r\n  zoom: boolean;\r\n  @Input()\r\n  zoomOptions: olx.control.ZoomOptions;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('ol.control.defaults init: ', this);\r\n    this.instance = control.defaults(this);\r\n    this.instance.forEach(c => this.map.instance.addControl(c));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-defaults');\r\n    this.instance.forEach(c => this.map.instance.removeControl(c));\r\n  }\r\n}\r\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { ContentComponent } from '../content.component';\r\n\r\n@Component({\r\n  selector: 'aol-control',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlComponent implements OnInit, OnDestroy {\r\n  public componentType = 'control';\r\n  instance: control.Control;\r\n  element: Element;\r\n  @ContentChild(ContentComponent)\r\n  content: ContentComponent;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.content) {\r\n      this.element = this.content.elementRef.nativeElement;\r\n      this.instance = new control.Control(this);\r\n      this.map.instance.addControl(this.instance);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.instance) {\r\n      this.map.instance.removeControl(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-attribution',\r\n  template: ``,\r\n})\r\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\r\n  public componentType = 'control';\r\n  instance: control.Attribution;\r\n  target: Element;\r\n  @Input()\r\n  collapsible: boolean;\r\n\r\n  constructor(private map: MapComponent, private element: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.target = this.element.nativeElement;\r\n    // console.log('ol.control.Attribution init: ', this);\r\n    this.instance = new control.Attribution(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-attribution');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-fullscreen',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\r\n  instance: control.FullScreen;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  labelActive: string;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  keys: boolean;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-fullscreen');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.FullScreen(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-fullscreen');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control, CoordinateFormatType, ProjectionLike } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-mouseposition',\r\n  template: ``,\r\n})\r\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\r\n  instance: control.MousePosition;\r\n  @Input()\r\n  coordinateFormat: CoordinateFormatType;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  target: Element;\r\n\r\n  constructor(private map: MapComponent, private element: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.target = this.element.nativeElement;\r\n    // console.log('ol.control.MousePosition init: ', this);\r\n    this.instance = new control.MousePosition(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-mouseposition');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control, View, layer } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-overviewmap',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlOverviewMapComponent implements OnInit, OnDestroy {\r\n  instance: control.OverviewMap;\r\n  @Input()\r\n  collapsed: boolean;\r\n  @Input()\r\n  collapseLabel: string;\r\n  @Input()\r\n  collapsible: boolean;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  layers: layer.Layer[];\r\n  @Input()\r\n  target: Element;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  view: View;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-overviewmap');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.OverviewMap(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-overviewmap');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-rotate',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlRotateComponent implements OnInit, OnDestroy {\r\n  instance: control.Rotate;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  autoHide: boolean;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-rotate');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.Rotate(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-rotate');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-scaleline',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\r\n  instance: control.ScaleLine;\r\n  @Input()\r\n  units: string;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-scaleline');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.ScaleLine(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-scaleline');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoom',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomComponent implements OnInit, OnDestroy {\r\n  instance: control.Zoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  zoomInLabel: string | Node;\r\n  @Input()\r\n  zoomOutLabel: string | Node;\r\n  @Input()\r\n  zoomInTipLabel: string;\r\n  @Input()\r\n  zoomOutTipLabel: string;\r\n  @Input()\r\n  delta: number;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoom');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.Zoom(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoom');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoomslider',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\r\n  instance: control.ZoomSlider;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  minResolution: number;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoomslider');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.ZoomSlider(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoomslider');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control, Extent } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoomtoextent',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\r\n  instance: control.ZoomToExtent;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string | Node;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  extent: Extent;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoomtoextent');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.ZoomToExtent(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoomtoextent');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, forwardRef, Input } from '@angular/core';\r\nimport { format, geom } from 'openlayers';\r\nimport { FormatComponent } from './format.component';\r\n\r\n@Component({\r\n  selector: 'aol-format-mvt',\r\n  template: '',\r\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\r\n})\r\nexport class FormatMVTComponent extends FormatComponent {\r\n  instance: format.MVT;\r\n\r\n  @Input()\r\n  featureClass:\r\n    | ((geom: geom.Geometry | { [k: string]: any }) => any)\r\n    | ((geom: geom.GeometryType, arg2: number[], arg3: number[] | number[][], arg4: { [k: string]: any }) => any);\r\n  @Input()\r\n  geometryName: string;\r\n  @Input()\r\n  layerName: string;\r\n  @Input()\r\n  layers: string[];\r\n\r\n  constructor() {\r\n    super();\r\n    this.instance = new format.MVT(this);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction, Collection } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-default',\r\n  template: '',\r\n})\r\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Collection<interaction.Interaction>;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = interaction.defaults();\r\n    this.instance.forEach(i => this.map.instance.addInteraction(i));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.instance.forEach(i => this.map.instance.removeInteraction(i));\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-doubleclickzoom',\r\n  template: '',\r\n})\r\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DoubleClickZoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  delta: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DoubleClickZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction, format, ProjectionLike } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-draganddrop',\r\n  template: '',\r\n})\r\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragAndDrop;\r\n\r\n  @Input()\r\n  formatConstructors: ((n: format.Feature) => any)[];\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  target: Element;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragAndDrop(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType, DragBoxEndConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragbox',\r\n  template: '',\r\n})\r\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragBox;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  boxEndCondition: DragBoxEndConditionType;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragBox(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType, Kinetic } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragpan',\r\n  template: '',\r\n})\r\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragPan;\r\n\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  kinetic: Kinetic;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragPan(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragrotate',\r\n  template: '',\r\n})\r\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragRotate;\r\n\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  duration: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragRotate(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragrotateandzoom',\r\n  template: '',\r\n})\r\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragRotate;\r\n\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  duration: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragRotateAndZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragzoom',\r\n  template: '',\r\n})\r\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragZoom;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  out: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-mousewheelzoom',\r\n  template: '',\r\n})\r\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.MouseWheelZoom;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  timeout: number;\r\n  @Input()\r\n  useAnchor: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.MouseWheelZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-pinchzoom',\r\n  template: '',\r\n})\r\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.PinchZoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  constrainResolution: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.PinchZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-draw',\r\n  template: '',\r\n})\r\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Draw;\r\n\r\n  @Input()\r\n  clickTolerance?: number;\r\n  @Input()\r\n  features?: ol.Collection<ol.Feature>;\r\n  @Input()\r\n  source?: ol.source.Vector;\r\n  @Input()\r\n  snapTolerance?: number;\r\n  @Input()\r\n  type: ol.geom.GeometryType;\r\n  @Input()\r\n  maxPoints?: number;\r\n  @Input()\r\n  minPoints?: number;\r\n  @Input()\r\n  finishCondition?: ol.EventsConditionType;\r\n  @Input()\r\n  style?: ol.style.Style | ol.style.Style[] | ol.StyleFunction;\r\n  @Input()\r\n  geometryFunction?: ol.DrawGeometryFunctionType;\r\n  @Input()\r\n  geometryName?: string;\r\n  @Input()\r\n  condition?: ol.EventsConditionType;\r\n  @Input()\r\n  freehandCondition?: ol.EventsConditionType;\r\n  @Input()\r\n  freehand?: boolean;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @Output()\r\n  onChange = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onChangeActive = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onDrawEnd = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onDrawStart = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<ol.interaction.Draw.Event>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Draw(this);\r\n    this.instance.on('change', (event: ol.interaction.Draw.Event) => this.onChange.emit(event));\r\n    this.instance.on('change:active', (event: ol.interaction.Draw.Event) => this.onChangeActive.emit(event));\r\n    this.instance.on('drawend', (event: ol.interaction.Draw.Event) => this.onDrawEnd.emit(event));\r\n    this.instance.on('drawstart', (event: ol.interaction.Draw.Event) => this.onDrawStart.emit(event));\r\n    this.instance.on('propertychange', (event: ol.interaction.Draw.Event) => this.onPropertyChange.emit(event));\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport {\r\n  interaction,\r\n  EventsConditionType,\r\n  layer,\r\n  style,\r\n  Collection,\r\n  SelectFilterFunction,\r\n  StyleFunction,\r\n  Feature,\r\n} from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-select',\r\n  template: '',\r\n})\r\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Select;\r\n\r\n  @Input()\r\n  addCondition?: EventsConditionType;\r\n  @Input()\r\n  condition?: EventsConditionType;\r\n  @Input()\r\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\r\n  @Input()\r\n  style?: style.Style | style.Style[] | StyleFunction;\r\n  @Input()\r\n  removeCondition?: EventsConditionType;\r\n  @Input()\r\n  toggleCondition?: EventsConditionType;\r\n  @Input()\r\n  multi?: boolean;\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  filter?: SelectFilterFunction;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @Output()\r\n  onChange = new EventEmitter<interaction.Select.Event>();\r\n  @Output()\r\n  onSelect = new EventEmitter<interaction.Select.Event>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<interaction.Select.Event>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Select(this);\r\n\r\n    this.instance.on('change', (event: interaction.Select.Event) => this.onChange.emit(event));\r\n    this.instance.on('select', (event: interaction.Select.Event) => this.onSelect.emit(event));\r\n    this.instance.on('propertychange', (event: interaction.Select.Event) => this.onPropertyChange.emit(event));\r\n\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { interaction, EventsConditionType, style, StyleFunction, Collection, Feature, source } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-modify',\r\n  template: '',\r\n})\r\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Modify;\r\n\r\n  @Input()\r\n  condition?: EventsConditionType;\r\n  @Input()\r\n  deleteCondition?: EventsConditionType;\r\n  @Input()\r\n  pixelTolerance?: number;\r\n  @Input()\r\n  style?: style.Style | style.Style[] | StyleFunction;\r\n  @Input()\r\n  features: Collection<Feature>;\r\n  @Input()\r\n  wrapX?: boolean;\r\n  @Input()\r\n  source?: source.Vector;\r\n\r\n  @Output()\r\n  onModifyEnd = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onModifyStart = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onChange = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onChangeActive = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<interaction.Modify.Event>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Modify(this);\r\n    this.instance.on('change', (event: interaction.Modify.Event) => this.onChange.emit(event));\r\n    this.instance.on('change:active', (event: interaction.Modify.Event) => this.onChangeActive.emit(event));\r\n    this.instance.on('propertychange', (event: interaction.Modify.Event) => this.onPropertyChange.emit(event));\r\n    this.instance.on('modifyend', (event: interaction.Modify.Event) => this.onModifyEnd.emit(event));\r\n    this.instance.on('modifystart', (event: interaction.Modify.Event) => this.onModifyStart.emit(event));\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { interaction, layer, Collection, Feature } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-translate',\r\n  template: '',\r\n})\r\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Translate;\r\n\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\r\n  @Input()\r\n  hitTolerance?: number;\r\n\r\n  @Output()\r\n  onChange: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onPropertyChange: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onTranslateEnd: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onTranslateStart: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onTranslating: EventEmitter<interaction.Translate.Event>;\r\n\r\n  constructor(private map: MapComponent) {\r\n    this.onChange = new EventEmitter<interaction.Translate.Event>();\r\n    this.onPropertyChange = new EventEmitter<interaction.Translate.Event>();\r\n    this.onTranslateEnd = new EventEmitter<interaction.Translate.Event>();\r\n    this.onTranslateStart = new EventEmitter<interaction.Translate.Event>();\r\n    this.onTranslating = new EventEmitter<interaction.Translate.Event>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Translate(this);\r\n\r\n    this.instance.on('change', (event: interaction.Translate.Event) => this.onChange.emit(event));\r\n    this.instance.on('propertychange', (event: interaction.Translate.Event) => this.onPropertyChange.emit(event));\r\n    this.instance.on('translateend', (event: interaction.Translate.Event) => this.onTranslateEnd.emit(event));\r\n    this.instance.on('translatestart', (event: interaction.Translate.Event) => this.onTranslateStart.emit(event));\r\n    this.instance.on('translating', (event: interaction.Translate.Event) => this.onTranslating.emit(event));\r\n\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { Attribution } from 'openlayers';\r\n\r\n@Component({\r\n  selector: 'aol-attribution',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class AttributionComponent implements OnInit {\r\n  instance: Attribution;\r\n  html: string;\r\n\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.html = this.elementRef.nativeElement.innerHTML;\r\n    this.instance = new Attribution(this);\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\r\nimport { Attribution } from 'openlayers';\r\nimport { SourceComponent } from './sources/source.component';\r\nimport { AttributionComponent } from './attribution.component';\r\n\r\n@Component({\r\n  selector: 'aol-attributions',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class AttributionsComponent implements AfterViewInit {\r\n  instance: Array<Attribution>;\r\n\r\n  @ContentChildren(AttributionComponent)\r\n  attributions: QueryList<AttributionComponent>;\r\n\r\n  constructor(@Host() private source: SourceComponent) {}\r\n\r\n  /* we can do this at the very end */\r\n  ngAfterViewInit() {\r\n    if (this.attributions.length) {\r\n      this.instance = this.attributions.map(cmp => cmp.instance);\r\n      // console.log('setting attributions:', this.instance);\r\n      this.source.instance.setAttributions(this.instance);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ngx-openlayers\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ViewComponent } from './lib/view.component';\r\nimport { GraticuleComponent } from './lib/graticule.component';\r\nimport { LayerGroupComponent } from './lib/layers/layergroup.component';\r\nimport { LayerImageComponent } from './lib/layers/layerimage.component';\r\nimport { LayerTileComponent } from './lib/layers/layertile.component';\r\nimport { MapComponent } from './lib/map.component';\r\nimport { LayerVectorComponent } from './lib/layers/layervector.component';\r\nimport { LayerVectorTileComponent } from './lib/layers/layervectortile.component';\r\nimport { SourceOsmComponent } from './lib/sources/osm.component';\r\nimport { SourceBingmapsComponent } from './lib/sources/bingmaps.component';\r\nimport { SourceClusterComponent } from './lib/sources/cluster.component';\r\nimport { SourceVectorComponent } from './lib/sources/vector.component';\r\nimport { SourceXYZComponent } from './lib/sources/xyz.component';\r\nimport { SourceTileWMTSComponent } from './lib/sources/tilewmts.component';\r\nimport { SourceVectorTileComponent } from './lib/sources/vectortile.component';\r\nimport { SourceTileWMSComponent } from './lib/sources/tilewms.component';\r\nimport { SourceTileJSONComponent } from './lib/sources/tilejson.component';\r\nimport { SourceGeoJSONComponent } from './lib/sources/geojson.component';\r\nimport { SourceImageStaticComponent } from './lib/sources/imagestatic.component';\r\nimport { SourceImageWMSComponent } from './lib/sources/imagewms.component';\r\nimport { SourceImageArcGISRestComponent } from './lib/sources/imagearcgisrest.component';\r\nimport { SourceRasterComponent } from './lib/sources/raster.component';\r\nimport { FeatureComponent } from './lib/feature.component';\r\nimport {\r\n  GeometryLinestringComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n} from './lib/geometry.components';\r\nimport { CollectionCoordinatesComponent, CoordinateComponent } from './lib/coordinate.component';\r\nimport { StyleComponent } from './lib/styles/style.component';\r\nimport { StyleCircleComponent } from './lib/styles/circle.component';\r\nimport { StyleStrokeComponent } from './lib/styles/stroke.component';\r\nimport { StyleIconComponent } from './lib/styles/icon.component';\r\nimport { StyleFillComponent } from './lib/styles/fill.component';\r\nimport { StyleTextComponent } from './lib/styles/text.component';\r\nimport { DefaultControlComponent } from './lib/controls/default.component';\r\nimport { ControlComponent } from './lib/controls/control.component';\r\nimport { ControlAttributionComponent } from './lib/controls/attribution.component';\r\nimport { ControlFullScreenComponent } from './lib/controls/fullscreen.component';\r\nimport { ControlMousePositionComponent } from './lib/controls/mouseposition.component';\r\nimport { ControlOverviewMapComponent } from './lib/controls/overviewmap.component';\r\nimport { ControlRotateComponent } from './lib/controls/rotate.component';\r\nimport { ControlScaleLineComponent } from './lib/controls/scaleline.component';\r\nimport { ControlZoomComponent } from './lib/controls/zoom.component';\r\nimport { ControlZoomSliderComponent } from './lib/controls/zoomslider.component';\r\nimport { ControlZoomToExtentComponent } from './lib/controls/zoomtoextent.component';\r\nimport { FormatMVTComponent } from './lib/formats/mvt.component';\r\nimport { TileGridComponent } from './lib/tilegrid.component';\r\nimport { TileGridWMTSComponent } from './lib/tilegridwmts.component';\r\nimport { DefaultInteractionComponent } from './lib/interactions/default.component';\r\nimport { DoubleClickZoomInteractionComponent } from './lib/interactions/doubleclickzoom.component';\r\nimport { DragAndDropInteractionComponent } from './lib/interactions/draganddrop.component';\r\nimport { DragBoxInteractionComponent } from './lib/interactions/dragbox.component';\r\nimport { DragPanInteractionComponent } from './lib/interactions/dragpan.component';\r\nimport { DragRotateInteractionComponent } from './lib/interactions/dragrotate.component';\r\nimport { DragRotateAndZoomInteractionComponent } from './lib/interactions/dragrotateandzoom.component';\r\nimport { DragZoomInteractionComponent } from './lib/interactions/dragzoom.component';\r\nimport { MouseWheelZoomInteractionComponent } from './lib/interactions/mousewheelzoom.component';\r\nimport { PinchZoomInteractionComponent } from './lib/interactions/pinchzoom.component';\r\nimport { DrawInteractionComponent } from './lib/interactions/draw.component';\r\nimport { SelectInteractionComponent } from './lib/interactions/select.component';\r\nimport { ModifyInteractionComponent } from './lib/interactions/modify.component';\r\nimport { TranslateInteractionComponent } from './lib/interactions/translate.component';\r\nimport { OverlayComponent } from './lib/overlay.component';\r\nimport { ContentComponent } from './lib/content.component';\r\nimport { AttributionComponent } from './lib/attribution.component';\r\nimport { AttributionsComponent } from './lib/attributions.component';\r\n\r\nexport {\r\n  MapComponent,\r\n  ViewComponent,\r\n  GraticuleComponent,\r\n  LayerGroupComponent,\r\n  LayerImageComponent,\r\n  LayerTileComponent,\r\n  LayerVectorComponent,\r\n  LayerVectorTileComponent,\r\n  SourceOsmComponent,\r\n  SourceBingmapsComponent,\r\n  SourceClusterComponent,\r\n  SourceVectorComponent,\r\n  SourceXYZComponent,\r\n  SourceVectorTileComponent,\r\n  SourceTileWMSComponent,\r\n  SourceTileWMTSComponent,\r\n  SourceTileJSONComponent,\r\n  SourceGeoJSONComponent,\r\n  SourceImageStaticComponent,\r\n  SourceImageWMSComponent,\r\n  SourceRasterComponent,\r\n  SourceImageArcGISRestComponent,\r\n  FeatureComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n  CoordinateComponent,\r\n  CollectionCoordinatesComponent,\r\n  StyleComponent,\r\n  StyleCircleComponent,\r\n  StyleFillComponent,\r\n  StyleIconComponent,\r\n  StyleStrokeComponent,\r\n  StyleTextComponent,\r\n  DefaultControlComponent,\r\n  ControlComponent,\r\n  ControlAttributionComponent,\r\n  ControlFullScreenComponent,\r\n  ControlMousePositionComponent,\r\n  ControlOverviewMapComponent,\r\n  ControlRotateComponent,\r\n  ControlScaleLineComponent,\r\n  ControlZoomComponent,\r\n  ControlZoomSliderComponent,\r\n  ControlZoomToExtentComponent,\r\n  FormatMVTComponent,\r\n  TileGridComponent,\r\n  TileGridWMTSComponent,\r\n  DefaultInteractionComponent,\r\n  DoubleClickZoomInteractionComponent,\r\n  DragAndDropInteractionComponent,\r\n  DragBoxInteractionComponent,\r\n  DragPanInteractionComponent,\r\n  DragRotateInteractionComponent,\r\n  DragRotateAndZoomInteractionComponent,\r\n  DragZoomInteractionComponent,\r\n  MouseWheelZoomInteractionComponent,\r\n  PinchZoomInteractionComponent,\r\n  DrawInteractionComponent,\r\n  SelectInteractionComponent,\r\n  ModifyInteractionComponent,\r\n  TranslateInteractionComponent,\r\n  OverlayComponent,\r\n  ContentComponent,\r\n  AttributionComponent,\r\n  AttributionsComponent,\r\n};\r\n\r\nconst COMPONENTS = [\r\n  MapComponent,\r\n\r\n  ViewComponent,\r\n  GraticuleComponent,\r\n\r\n  LayerGroupComponent,\r\n  LayerImageComponent,\r\n  LayerTileComponent,\r\n  LayerVectorComponent,\r\n  LayerVectorTileComponent,\r\n\r\n  SourceOsmComponent,\r\n  SourceBingmapsComponent,\r\n  SourceClusterComponent,\r\n  SourceVectorComponent,\r\n  SourceXYZComponent,\r\n  SourceVectorTileComponent,\r\n  SourceTileWMSComponent,\r\n  SourceTileWMTSComponent,\r\n  SourceTileJSONComponent,\r\n  SourceGeoJSONComponent,\r\n  SourceImageStaticComponent,\r\n  SourceImageWMSComponent,\r\n  SourceImageArcGISRestComponent,\r\n  SourceRasterComponent,\r\n  FeatureComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n  CoordinateComponent,\r\n  CollectionCoordinatesComponent,\r\n\r\n  StyleComponent,\r\n  StyleCircleComponent,\r\n  StyleFillComponent,\r\n  StyleIconComponent,\r\n  StyleStrokeComponent,\r\n  StyleTextComponent,\r\n\r\n  DefaultControlComponent,\r\n  ControlComponent,\r\n  ControlAttributionComponent,\r\n  ControlFullScreenComponent,\r\n  ControlMousePositionComponent,\r\n  ControlOverviewMapComponent,\r\n  ControlRotateComponent,\r\n  ControlScaleLineComponent,\r\n  ControlZoomComponent,\r\n  ControlZoomSliderComponent,\r\n  ControlZoomToExtentComponent,\r\n\r\n  FormatMVTComponent,\r\n  TileGridComponent,\r\n  TileGridWMTSComponent,\r\n\r\n  DefaultInteractionComponent,\r\n  DoubleClickZoomInteractionComponent,\r\n  DragAndDropInteractionComponent,\r\n  DragBoxInteractionComponent,\r\n  DragPanInteractionComponent,\r\n  DragRotateInteractionComponent,\r\n  DragRotateAndZoomInteractionComponent,\r\n  DragZoomInteractionComponent,\r\n  MouseWheelZoomInteractionComponent,\r\n  PinchZoomInteractionComponent,\r\n  DrawInteractionComponent,\r\n  SelectInteractionComponent,\r\n  ModifyInteractionComponent,\r\n  TranslateInteractionComponent,\r\n\r\n  OverlayComponent,\r\n  ContentComponent,\r\n  AttributionComponent,\r\n  AttributionsComponent,\r\n];\r\n\r\n@NgModule({\r\n  declarations: COMPONENTS,\r\n  imports: [CommonModule],\r\n  exports: COMPONENTS,\r\n})\r\nexport class AngularOpenlayersModule {}\r\n"],"names":["EventEmitter","Map","Component","ElementRef","Input","Output","View","Graticule","tslib_1.__extends","layer","SkipSelf","Optional","tilegrid","source","forwardRef","Host","ContentChild","format","Feature","geom","Overlay","proj","style","control","interaction","Attribution","ContentChildren","NgModule","CommonModule"],"mappings":"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"}
--- a/node_modules/ngx-openlayers/bundles/ngx-openlayers.umd.min.js
+++ b/node_modules/ngx-openlayers/bundles/ngx-openlayers.umd.min.js
@@ -1,2 +1,2 @@
-!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("openlayers"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-openlayers",["exports","@angular/core","openlayers","@angular/common"],n):n(t["ngx-openlayers"]={},t.ng.core,null,t.ng.common)}(this,function(t,o,r,n){"use strict";var i=function(){function t(t){this.host=t,this.componentType="map",this.width="100%",this.height="100%",this.controls=[],this.interactions=[],this.onClick=new o.EventEmitter,this.onDblClick=new o.EventEmitter,this.onMoveEnd=new o.EventEmitter,this.onPointerDrag=new o.EventEmitter,this.onPointerMove=new o.EventEmitter,this.onPostCompose=new o.EventEmitter,this.onPostRender=new o.EventEmitter,this.onPreCompose=new o.EventEmitter,this.onPropertyChange=new o.EventEmitter,this.onSingleClick=new o.EventEmitter}return t.prototype.ngOnInit=function(){var n=this;this.instance=new r.Map(this),this.instance.setTarget(this.host.nativeElement.firstElementChild),this.instance.on("click",function(t){return n.onClick.emit(t)}),this.instance.on("dblclick",function(t){return n.onDblClick.emit(t)}),this.instance.on("moveend",function(t){return n.onMoveEnd.emit(t)}),this.instance.on("pointerdrag",function(t){return n.onPointerDrag.emit(t)}),this.instance.on("pointermove",function(t){return n.onPointerMove.emit(t)}),this.instance.on("postcompose",function(t){return n.onPostCompose.emit(t)}),this.instance.on("postrender",function(t){return n.onPostRender.emit(t)}),this.instance.on("precompose",function(t){return n.onPreCompose.emit(t)}),this.instance.on("propertychange",function(t){return n.onPropertyChange.emit(t)}),this.instance.on("singleclick",function(t){return n.onSingleClick.emit(t)})},t.prototype.ngOnChanges=function(t){var n={};if(this.instance){for(var e in t)t.hasOwnProperty(e)&&(n[e]=t[e].currentValue);this.instance.setProperties(n,!1)}},t.prototype.ngAfterViewInit=function(){this.instance.updateSize()},t.decorators=[{type:o.Component,args:[{selector:"aol-map",template:'\n    <div [style.width]="width" [style.height]="height"></div>\n    <ng-content></ng-content>\n  '}]}],t.ctorParameters=function(){return[{type:o.ElementRef}]},t.propDecorators={width:[{type:o.Input}],height:[{type:o.Input}],pixelRatio:[{type:o.Input}],keyboardEventTarget:[{type:o.Input}],loadTilesWhileAnimating:[{type:o.Input}],loadTilesWhileInteracting:[{type:o.Input}],logo:[{type:o.Input}],renderer:[{type:o.Input}],onClick:[{type:o.Output}],onDblClick:[{type:o.Output}],onMoveEnd:[{type:o.Output}],onPointerDrag:[{type:o.Output}],onPointerMove:[{type:o.Output}],onPostCompose:[{type:o.Output}],onPostRender:[{type:o.Output}],onPreCompose:[{type:o.Output}],onPropertyChange:[{type:o.Output}],onSingleClick:[{type:o.Output}]},t}(),e=function(){function t(t){this.host=t,this.componentType="view",this.zoomAnimation=!1,this.onChangeZoom=new o.EventEmitter}return t.prototype.ngOnInit=function(){var n=this;this.instance=new r.View(this),this.host.instance.setView(this.instance),this.instance.on("change:zoom",function(t){return n.onChangeZoom.emit(t)})},t.prototype.ngOnChanges=function(t){var n={};if(this.instance){for(var e in t)if(t.hasOwnProperty(e)){switch(e){case"zoom":this.zoomAnimation?this.instance.animate({zoom:t[e].currentValue}):this.instance.setZoom(t[e].currentValue)}n[e]=t[e].currentValue}this.instance.setProperties(n,!1)}},t.prototype.ngOnDestroy=function(){},t.decorators=[{type:o.Component,args:[{selector:"aol-view",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={constrainRotation:[{type:o.Input}],enableRotation:[{type:o.Input}],extent:[{type:o.Input}],maxResolution:[{type:o.Input}],minResolution:[{type:o.Input}],maxZoom:[{type:o.Input}],minZoom:[{type:o.Input}],resolution:[{type:o.Input}],resolutions:[{type:o.Input}],rotation:[{type:o.Input}],zoom:[{type:o.Input}],zoomFactor:[{type:o.Input}],center:[{type:o.Input}],projection:[{type:o.Input}],zoomAnimation:[{type:o.Input}],onChangeZoom:[{type:o.Output}]},t}(),s=function(){function t(t){this.map=t,this.componentType="graticule"}return t.prototype.ngOnChanges=function(t){var n={};if(this.instance){for(var e in t)t.hasOwnProperty(e)&&(n[e]=t[e].currentValue);n&&(this.instance=new r.Graticule(n)),this.instance.setMap(this.map.instance)}},t.prototype.ngAfterContentInit=function(){this.instance=new r.Graticule({strokeStyle:this.strokeStyle,showLabels:this.showLabels,lonLabelPosition:this.lonLabelPosition,latLabelPosition:this.latLabelPosition}),this.instance.setMap(this.map.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-graticule",template:"<ng-content></ng-content>"}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={strokeStyle:[{type:o.Input}],showLabels:[{type:o.Input}],lonLabelPosition:[{type:o.Input}],latLabelPosition:[{type:o.Input}]},t}(),p=function(t,n){return(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(t,n)};function a(t,n){function e(){this.constructor=t}p(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}var c=function(){function t(t){this.host=t,this.componentType="layer"}return t.prototype.ngOnInit=function(){null!==this.precompose&&this.precompose!==undefined&&this.instance.on("precompose",this.precompose),null!==this.postcompose&&this.postcompose!==undefined&&this.instance.on("postcompose",this.postcompose),this.host.instance.getLayers().push(this.instance)},t.prototype.ngOnDestroy=function(){this.host.instance.getLayers().remove(this.instance)},t.prototype.ngOnChanges=function(t){var n={};if(this.instance){for(var e in t)t.hasOwnProperty(e)&&(n[e]=t[e].currentValue,"precompose"===e&&(this.instance.un("precompose",t[e].previousValue),this.instance.on("precompose",t[e].currentValue)),"postcompose"===e&&(this.instance.un("postcompose",t[e].previousValue),this.instance.on("postcompose",t[e].currentValue)));this.instance.setProperties(n,!1)}},t.propDecorators={opacity:[{type:o.Input}],visible:[{type:o.Input}],extent:[{type:o.Input}],zIndex:[{type:o.Input}],minResolution:[{type:o.Input}],maxResolution:[{type:o.Input}],precompose:[{type:o.Input}],postcompose:[{type:o.Input}]},t}(),u=function(e){function t(t,n){return e.call(this,n||t)||this}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.layer.Group(this),e.prototype.ngOnInit.call(this)},t.decorators=[{type:o.Component,args:[{selector:"aol-layer-group",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i},{type:t,decorators:[{type:o.SkipSelf},{type:o.Optional}]}]},t}(c),y=function(e){function t(t,n){return e.call(this,n||t)||this}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.layer.Image(this),e.prototype.ngOnInit.call(this)},t.prototype.ngOnChanges=function(t){e.prototype.ngOnChanges.call(this,t)},t.decorators=[{type:o.Component,args:[{selector:"aol-layer-image",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i},{type:u,decorators:[{type:o.Optional}]}]},t.propDecorators={opacity:[{type:o.Input}],visible:[{type:o.Input}],extent:[{type:o.Input}],minResolution:[{type:o.Input}],maxResolution:[{type:o.Input}],zIndex:[{type:o.Input}]},t}(c),h=function(e){function t(t,n){return e.call(this,n||t)||this}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.layer.Tile(this),e.prototype.ngOnInit.call(this)},t.prototype.ngOnChanges=function(t){e.prototype.ngOnChanges.call(this,t)},t.decorators=[{type:o.Component,args:[{selector:"aol-layer-tile",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i},{type:u,decorators:[{type:o.Optional}]}]},t.propDecorators={preload:[{type:o.Input}],useInterimTilesOnError:[{type:o.Input}]},t}(c),l=function(e){function t(t,n){return e.call(this,n||t)||this}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.layer.Vector(this),e.prototype.ngOnInit.call(this)},t.prototype.ngOnChanges=function(t){e.prototype.ngOnChanges.call(this,t)},t.decorators=[{type:o.Component,args:[{selector:"aol-layer-vector",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i},{type:u,decorators:[{type:o.Optional}]}]},t.propDecorators={renderBuffer:[{type:o.Input}]},t}(c),m=function(e){function t(t,n){return e.call(this,n||t)||this}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.layer.VectorTile(this),e.prototype.ngOnInit.call(this)},t.prototype.ngOnChanges=function(t){e.prototype.ngOnChanges.call(this,t)},t.decorators=[{type:o.Component,args:[{selector:"aol-layer-vectortile",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i},{type:u,decorators:[{type:o.Optional}]}]},t.propDecorators={renderBuffer:[{type:o.Input}],renderMode:[{type:o.Input}],renderOrder:[{type:o.Input}],style:[{type:o.Input}],updateWhileAnimating:[{type:o.Input}],updateWhileInteracting:[{type:o.Input}],visible:[{type:o.Input}]},t}(c),f=function(){function t(t,n){this.host=t,this.raster=n,this.componentType="source"}return t.prototype.ngOnDestroy=function(){this.host&&this.host.instance&&this.host.instance.setSource(null),this.raster&&(this.raster.sources=[])},t.prototype._register=function(t){this.host&&this.host.instance.setSource(t),this.raster&&(this.raster.sources=[t])},t.propDecorators={attributions:[{type:o.Input}]},t}(),g=function(){function t(){}return t.prototype.ngOnInit=function(){this.resolutions?this.instance=new r.tilegrid.TileGrid(this):this.instance=r.tilegrid.createXYZ(this)},t.prototype.ngOnChanges=function(t){this.resolutions?this.instance=new r.tilegrid.TileGrid(this):this.instance=r.tilegrid.createXYZ(this)},t.decorators=[{type:o.Component,args:[{selector:"aol-tilegrid",template:""}]}],t.propDecorators={extent:[{type:o.Input}],maxZoom:[{type:o.Input}],minZoom:[{type:o.Input}],tileSize:[{type:o.Input}],origin:[{type:o.Input}],resolutions:[{type:o.Input}]},t}(),I=function(e){function t(t){var n=e.call(this,t)||this;return n.beforeOperations=new o.EventEmitter,n.afterOperations=new o.EventEmitter,n.sources=[],n}return a(t,e),t.prototype.ngAfterContentInit=function(){var n=this;this.instance=new r.source.Raster(this),this.instance.on("beforeoperations",function(t){return n.beforeOperations.emit(t)}),this.instance.on("afteroperations",function(t){return n.afterOperations.emit(t)}),this._register(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-raster",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:y,decorators:[{type:o.Host}]}]},t.propDecorators={operation:[{type:o.Input}],threads:[{type:o.Input}],lib:[{type:o.Input}],operationType:[{type:o.Input}],beforeOperations:[{type:o.Output}],afterOperations:[{type:o.Output}]},t}(f),d=function(e){function t(t,n){return e.call(this,t,n)||this}return a(t,e),t.prototype.ngAfterContentInit=function(){this.tileGridXYZ&&(this.tileGrid=this.tileGridXYZ.instance),this.instance=new r.source.XYZ(this),this._register(this.instance)},t.prototype.ngOnChanges=function(t){var n={};if(this.instance){for(var e in t)t.hasOwnProperty(e)&&(n[e]=t[e].currentValue);this.instance.setProperties(n,!1),t.hasOwnProperty("url")&&(this.instance=new r.source.XYZ(this),this._register(this.instance))}},t.decorators=[{type:o.Component,args:[{selector:"aol-source-xyz",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:h,decorators:[{type:o.Optional},{type:o.Host}]},{type:I,decorators:[{type:o.Optional},{type:o.Host}]}]},t.propDecorators={cacheSize:[{type:o.Input}],crossOrigin:[{type:o.Input}],opaque:[{type:o.Input}],projection:[{type:o.Input}],reprojectionErrorThreshold:[{type:o.Input}],minZoom:[{type:o.Input}],maxZoom:[{type:o.Input}],tileGrid:[{type:o.Input}],tileLoadFunction:[{type:o.Input}],tilePixelRatio:[{type:o.Input}],tileSize:[{type:o.Input}],tileUrlFunction:[{type:o.Input}],url:[{type:o.Input}],urls:[{type:o.Input}],wrapX:[{type:o.Input}],tileGridXYZ:[{type:o.ContentChild,args:[g]}]},t}(f),C=function(e){function t(t,n){return e.call(this,t,n)||this}return a(t,e),t.prototype.ngAfterContentInit=function(){this.tileGridXYZ&&(this.tileGrid=this.tileGridXYZ.instance),this.instance=new r.source.OSM(this),this._register(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-osm",template:'\n    <div class="aol-source-osm"></div>\n  ',providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:h,decorators:[{type:o.Host},{type:o.Optional}]},{type:I,decorators:[{type:o.Host},{type:o.Optional}]}]},t.propDecorators={attributions:[{type:o.Input}],cacheSize:[{type:o.Input}],crossOrigin:[{type:o.Input}],maxZoom:[{type:o.Input}],opaque:[{type:o.Input}],reprojectionErrorThreshold:[{type:o.Input}],tileLoadFunction:[{type:o.Input}],url:[{type:o.Input}],wrapX:[{type:o.Input}]},t}(d),O=function(e){function t(t){var n=e.call(this,t)||this;return n.imagerySet="Aerial",n}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.source.BingMaps(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-bingmaps",template:'\n    <div class="aol-source-bingmaps"></div>\n  ',providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:h,decorators:[{type:o.Host}]}]},t.propDecorators={cacheSize:[{type:o.Input}],hidpi:[{type:o.Input}],culture:[{type:o.Input}],key:[{type:o.Input}],imagerySet:[{type:o.Input}],maxZoom:[{type:o.Input}],reprojectionErrorThreshold:[{type:o.Input}],tileLoadFunction:[{type:o.Input}],wrapX:[{type:o.Input}]},t}(f),w=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnInit=function(){this.instance=new r.source.Vector(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-vector",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:l,decorators:[{type:o.Host}]}]},t.propDecorators={overlaps:[{type:o.Input}],useSpatialIndex:[{type:o.Input}],wrapX:[{type:o.Input}],url:[{type:o.Input}],format:[{type:o.Input}],strategy:[{type:o.Input}]},t}(f),v=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngAfterContentInit=function(){this.source=this.sourceVectorComponent.instance,this.instance=new r.source.Cluster(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-cluster",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:l,decorators:[{type:o.Host}]}]},t.propDecorators={distance:[{type:o.Input}],geometryFunction:[{type:o.Input}],sourceVectorComponent:[{type:o.ContentChild,args:[w]}]},t}(f),P=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return a(n,t),n.prototype.ngOnInit=function(){this.instance=new r.tilegrid.WMTS(this)},n.decorators=[{type:o.Component,args:[{selector:"aol-tilegrid-wmts",template:""}]}],n.propDecorators={origin:[{type:o.Input}],origins:[{type:o.Input}],resolutions:[{type:o.Input}],matrixIds:[{type:o.Input}],sizes:[{type:o.Input}],tileSizes:[{type:o.Input}],widths:[{type:o.Input}]},n}(g),D=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnChanges=function(t){var n={};if(this.instance){for(var e in t)if(t.hasOwnProperty(e)){switch(e){case"url":this.url=t[e].currentValue,this.setLayerSource()}n[e]=t[e].currentValue}this.instance.setProperties(n,!1)}},t.prototype.setLayerSource=function(){this.instance=new r.source.WMTS(this),this.host.instance.setSource(this.instance)},t.prototype.ngAfterContentInit=function(){this.tileGridWMTS&&(this.tileGrid=this.tileGridWMTS.instance,this.setLayerSource())},t.decorators=[{type:o.Component,args:[{selector:"aol-source-tilewmts",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:h,decorators:[{type:o.Host}]}]},t.propDecorators={cacheSize:[{type:o.Input}],crossOrigin:[{type:o.Input}],logo:[{type:o.Input}],tileGrid:[{type:o.Input}],projection:[{type:o.Input}],reprojectionErrorThreshold:[{type:o.Input}],requestEncoding:[{type:o.Input}],layer:[{type:o.Input}],style:[{type:o.Input}],tileClass:[{type:o.Input}],tilePixelRatio:[{type:o.Input}],version:[{type:o.Input}],format:[{type:o.Input}],matrixSet:[{type:o.Input}],dimensions:[{type:o.Input}],url:[{type:o.Input}],tileLoadFunction:[{type:o.Input}],urls:[{type:o.Input}],wrapX:[{type:o.Input}],tileGridWMTS:[{type:o.ContentChild,args:[P]}]},t}(f),E=function Dt(){this.componentType="format"},S=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngAfterContentInit=function(){this.format=this.formatComponent.instance,this.tileGrid=this.tileGridComponent.instance,this.instance=new r.source.VectorTile(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-vectortile",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:m,decorators:[{type:o.Host}]}]},t.propDecorators={cacheSize:[{type:o.Input}],overlaps:[{type:o.Input}],projection:[{type:o.Input}],tilePixelRatio:[{type:o.Input}],tileUrlFunction:[{type:o.Input}],url:[{type:o.Input}],urls:[{type:o.Input}],wrapX:[{type:o.Input}],formatComponent:[{type:o.ContentChild,args:[E]}],tileGridComponent:[{type:o.ContentChild,args:[g]}]},t}(f),b=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnInit=function(){this.instance=new r.source.TileWMS(this),this.host.instance.setSource(this.instance)},t.prototype.ngOnChanges=function(t){this.instance&&t.hasOwnProperty("params")&&this.instance.updateParams(this.params)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-tilewms",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:h,decorators:[{type:o.Host}]}]},t.propDecorators={cacheSize:[{type:o.Input}],crossOrigin:[{type:o.Input}],gutter:[{type:o.Input}],hidpi:[{type:o.Input}],params:[{type:o.Input}],projection:[{type:o.Input}],reprojectionErrorThreshold:[{type:o.Input}],serverType:[{type:o.Input}],tileGrid:[{type:o.Input}],tileLoadFunction:[{type:o.Input}],url:[{type:o.Input}],urls:[{type:o.Input}],wrapX:[{type:o.Input}]},t}(f),T=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnInit=function(){this.instance=new r.source.TileJSON(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-tilejson",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:h,decorators:[{type:o.Host}]}]},t.propDecorators={url:[{type:o.Input}]},t}(f),x=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnInit=function(){this.format=new r.format.GeoJSON(this),this.instance=new r.source.Vector(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-geojson",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:l,decorators:[{type:o.Host}]}]},t.propDecorators={defaultDataProjection:[{type:o.Input}],featureProjection:[{type:o.Input}],geometryName:[{type:o.Input}],url:[{type:o.Input}]},t}(f),R=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnInit=function(){this.instance=new r.source.ImageStatic(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-imagestatic",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:y,decorators:[{type:o.Host}]}]},t.propDecorators={projection:[{type:o.Input}],imageExtent:[{type:o.Input}],url:[{type:o.Input}],attributions:[{type:o.Input}],crossOrigin:[{type:o.Input}],imageLoadFunction:[{type:o.Input}],logo:[{type:o.Input}],imageSize:[{type:o.Input}]},t}(f),V=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnInit=function(){this.instance=new r.source.ImageWMS(this),this.host.instance.setSource(this.instance)},t.prototype.ngOnChanges=function(t){this.instance&&t.hasOwnProperty("params")&&this.instance.updateParams(this.params)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-imagewms",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:y,decorators:[{type:o.Host}]}]},t.propDecorators={attributions:[{type:o.Input}],crossOrigin:[{type:o.Input}],hidpi:[{type:o.Input}],serverType:[{type:o.Input}],imageLoadFunction:[{type:o.Input}],logo:[{type:o.Input}],params:[{type:o.Input}],projection:[{type:o.Input}],ratio:[{type:o.Input}],resolutions:[{type:o.Input}],url:[{type:o.Input}]},t}(f),L=function(e){function t(t){var n=e.call(this,t)||this;return n.ratio=1,n}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.source.ImageArcGISRest(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-imagearcgisrest",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:y,decorators:[{type:o.Host}]}]},t.propDecorators={projection:[{type:o.Input}],url:[{type:o.Input}],attributions:[{type:o.Input}],crossOrigin:[{type:o.Input}],imageLoadFunction:[{type:o.Input}],params:[{type:o.Input}],ratio:[{type:o.Input}],resolutions:[{type:o.Input}],logo:[{type:o.Input}]},t}(f),M=function(){function t(t){this.host=t,this.componentType="feature"}return t.prototype.ngOnInit=function(){this.instance=new r.Feature,this.id!==undefined&&this.instance.setId(this.id),this.host.instance.addFeature(this.instance)},t.prototype.ngOnDestroy=function(){this.host.instance.removeFeature(this.instance)},t.prototype.ngOnChanges=function(t){this.instance&&this.instance.setId(this.id)},t.decorators=[{type:o.Component,args:[{selector:"aol-feature",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:w}]},t.propDecorators={id:[{type:o.Input}]},t}(),k=function(){function t(t){this.host=t,this.componentType="geometry-linestring"}return t.prototype.ngOnInit=function(){this.instance=new r.geom.LineString([]),this.host.instance.setGeometry(this.instance)},t.prototype.ngOnDestroy=function(){},t.decorators=[{type:o.Component,args:[{selector:"aol-geometry-linestring",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:M}]},t}(),A=function(){function t(t){this.host=t,this.componentType="geometry-point"}return t.prototype.ngOnInit=function(){this.instance=new r.geom.Point([0,0]),this.host.instance.setGeometry(this.instance)},t.prototype.ngOnDestroy=function(){},t.decorators=[{type:o.Component,args:[{selector:"aol-geometry-point",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:M}]},t}(),G=function(){function t(t){this.host=t,this.componentType="geometry-polygon"}return t.prototype.ngOnInit=function(){this.instance=new r.geom.Polygon([[[0,0],[1,0],[1,1]]]),this.host.instance.setGeometry(this.instance)},t.prototype.ngOnDestroy=function(){},t.decorators=[{type:o.Component,args:[{selector:"aol-geometry-polygon",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:M}]},t}(),z=function(){function t(t){this.host=t,this.componentType="geometry-circle",this.instance=new r.geom.Circle([0,0])}return Object.defineProperty(t.prototype,"radius",{get:function(){return this.instance.getRadius()},set:function(t){this.instance.setRadius(t)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.host.instance.setGeometry(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-geometry-circle",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:M}]},t.propDecorators={radius:[{type:o.Input}]},t}(),Z=function(){function t(t){this.elementRef=t}return t.decorators=[{type:o.Component,args:[{selector:"aol-content",template:"<ng-content></ng-content>"}]}],t.ctorParameters=function(){return[{type:o.ElementRef}]},t}(),j=function(){function t(t){this.map=t,this.componentType="overlay"}return t.prototype.ngOnInit=function(){this.content&&(this.element=this.content.elementRef.nativeElement,this.instance=new r.Overlay(this),this.map.instance.addOverlay(this.instance))},t.prototype.ngOnDestroy=function(){this.instance&&this.map.instance.removeOverlay(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-overlay",template:"<ng-content></ng-content>"}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={content:[{type:o.ContentChild,args:[Z]}],id:[{type:o.Input}],offset:[{type:o.Input}],positioning:[{type:o.Input}],stopEvent:[{type:o.Input}],insertFirst:[{type:o.Input}],autoPan:[{type:o.Input}],autoPanAnimation:[{type:o.Input}],autoPanMargin:[{type:o.Input}]},t}(),F=function(){function t(t,n,e,o,r){this.map=t,this.srid="EPSG:3857",null!==e?this.host=e:null!==o?this.host=o:null!==n?this.host=n:null!==r&&(this.host=r)}return t.prototype.ngOnChanges=function(t){var n,e,o;switch(e=(n=this.map.instance.getView().getProjection())?n.getCode():"EPSG:3857",o=this.srid===e?[this.x,this.y]:r.proj.transform([this.x,this.y],this.srid,e),this.host.componentType){case"geometry-point":this.host.instance.setCoordinates(o);break;case"geometry-circle":case"view":this.host.instance.setCenter(o);break;case"overlay":this.host.instance.setPosition(o)}},t.decorators=[{type:o.Component,args:[{selector:"aol-coordinate",template:'\n    <div class="aol-coordinate"></div>\n  '}]}],t.ctorParameters=function(){return[{type:i},{type:e,decorators:[{type:o.Optional}]},{type:A,decorators:[{type:o.Optional}]},{type:z,decorators:[{type:o.Optional}]},{type:j,decorators:[{type:o.Optional}]}]},t.propDecorators={x:[{type:o.Input}],y:[{type:o.Input}],srid:[{type:o.Input}]},t}(),X=function(){function t(t,n,e){if(this.map=t,this.srid="EPSG:3857",n)this.host=n;else{if(!e)throw new Error("aol-collection-coordinates must be a child of a geometry component");this.host=e}}return t.prototype.ngOnChanges=function(t){var n,e,o;switch(n=this.map.instance.getView().getProjection(),e=n?n.getCode():"EPSG:3857",this.srid===e?o=this.coordinates:(o=[],this.coordinates.forEach(function(t){o.push(r.proj.transform(t,this.srid,e))}.bind(this))),this.host.componentType){case"geometry-linestring":this.host.instance.setCoordinates(o);break;case"geometry-polygon":this.host.instance.setCoordinates([o]);break;default:throw new Error("aol-collection-coordinates host is of unknown type: "+this.host.componentType)}},t.decorators=[{type:o.Component,args:[{selector:"aol-collection-coordinates",template:'\n    <div class="aol-collection-coordinates"></div>\n  '}]}],t.ctorParameters=function(){return[{type:i},{type:k,decorators:[{type:o.Optional}]},{type:G,decorators:[{type:o.Optional}]}]},t.propDecorators={coordinates:[{type:o.Input}],srid:[{type:o.Input}]},t}(),H=function(){function t(t,n){if(this.componentType="style",this.host=t||n,!this.host)throw new Error("aol-style must be applied to a feature or a layer")}return t.prototype.update=function(){this.host.instance.changed()},t.prototype.ngOnInit=function(){this.instance=new r.style.Style(this),this.host.instance.setStyle(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-style",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:M,decorators:[{type:o.Optional}]},{type:l,decorators:[{type:o.Optional}]}]},t.propDecorators={geometry:[{type:o.Input}],fill:[{type:o.Input}],image:[{type:o.Input}],stroke:[{type:o.Input}],text:[{type:o.Input}],zIndex:[{type:o.Input}]},t}(),W=function(){function t(t){this.host=t,this.componentType="style-circle"}return t.prototype.update=function(){this.instance&&this.instance.setRadius(this.radius),this.host.update()},t.prototype.ngAfterContentInit=function(){this.instance=new r.style.Circle(this),this.host.instance.setImage(this.instance),this.host.update()},t.prototype.ngOnChanges=function(t){this.instance&&t.radius&&this.instance.setRadius(t.radius.currentValue)},t.prototype.ngOnDestroy=function(){this.host.instance.setImage(null)},t.decorators=[{type:o.Component,args:[{selector:"aol-style-circle",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:H,decorators:[{type:o.Host}]}]},t.propDecorators={fill:[{type:o.Input}],radius:[{type:o.Input}],snapToPixel:[{type:o.Input}],stroke:[{type:o.Input}],atlasManager:[{type:o.Input}]},t}(),N=function(){function t(t){if(this.host=t,this.componentType="style-text",!t)throw new Error("aol-style-text must be a descendant of aol-style")}return t.prototype.ngOnInit=function(){this.instance=new r.style.Text(this),this.host.instance.setText(this.instance)},t.prototype.ngOnChanges=function(t){this.instance&&(t.font&&this.instance.setFont(t.font.currentValue),t.offsetX&&this.instance.setOffsetX(t.offsetX.currentValue),t.offsetY&&this.instance.setOffsetY(t.offsetY.currentValue),t.scale&&this.instance.setScale(t.scale.currentValue),t.rotation&&this.instance.setRotation(t.rotation.currentValue),t.text&&this.instance.setText(t.text.currentValue),t.textAlign&&this.instance.setTextAlign(t.textAlign.currentValue),t.textBaseLine&&this.instance.setTextBaseline(t.textBaseLine.currentValue),this.host.update())},t.decorators=[{type:o.Component,args:[{selector:"aol-style-text",template:'\n    <div class="aol-style-text"></div>\n  '}]}],t.ctorParameters=function(){return[{type:H,decorators:[{type:o.Optional}]}]},t.propDecorators={font:[{type:o.Input}],offsetX:[{type:o.Input}],offsetY:[{type:o.Input}],scale:[{type:o.Input}],rotateWithView:[{type:o.Input}],rotation:[{type:o.Input}],text:[{type:o.Input}],textAlign:[{type:o.Input}],textBaseLine:[{type:o.Input}]},t}(),Y=function(){function t(t,n,e){if(!t)throw new Error("aol-style-stroke must be a descendant of aol-style");this.host=e||(n||t)}return t.prototype.ngOnInit=function(){switch(this.instance=new r.style.Stroke(this),this.host.componentType){case"style":case"style-text":this.host.instance.setStroke(this.instance);break;case"style-circle":this.host.stroke=this.instance;break;default:throw new Error("unknown host type: "+this.host)}},t.prototype.ngOnChanges=function(t){this.instance&&(t.color&&this.instance.setColor(t.color.currentValue),t.lineCap&&this.instance.setLineCap(t.lineCap.currentValue),t.lineDash&&this.instance.setLineDash(t.lineDash.currentValue),t.lineJoin&&this.instance.setLineJoin(t.lineJoin.currentValue),t.miterLimit&&this.instance.setMiterLimit(t.miterLimit.currentValue),t.width&&this.instance.setWidth(t.width.currentValue),this.host.update())},t.decorators=[{type:o.Component,args:[{selector:"aol-style-stroke",template:'\n    <div class="aol-style-stroke"></div>\n  '}]}],t.ctorParameters=function(){return[{type:H,decorators:[{type:o.Optional}]},{type:W,decorators:[{type:o.Optional}]},{type:N,decorators:[{type:o.Optional}]}]},t.propDecorators={color:[{type:o.Input}],lineCap:[{type:o.Input}],lineDash:[{type:o.Input}],lineJoin:[{type:o.Input}],miterLimit:[{type:o.Input}],width:[{type:o.Input}]},t}(),_=function(){function t(t){this.host=t}return t.prototype.ngOnInit=function(){this.instance=new r.style.Icon(this),this.host.instance.setImage(this.instance)},t.prototype.ngOnChanges=function(t){this.instance&&(t.opacity&&this.instance.setOpacity(t.opacity.currentValue),t.rotation&&this.instance.setRotation(t.rotation.currentValue),t.scale&&this.instance.setScale(t.scale.currentValue),t.src&&(this.instance=new r.style.Icon(this),this.host.instance.setImage(this.instance)),this.host.update())},t.decorators=[{type:o.Component,args:[{selector:"aol-style-icon",template:'\n    <div class="aol-style-icon"></div>\n  '}]}],t.ctorParameters=function(){return[{type:H,decorators:[{type:o.Host}]}]},t.propDecorators={anchor:[{type:o.Input}],anchorXUnits:[{type:o.Input}],anchorYUnits:[{type:o.Input}],anchorOrigin:[{type:o.Input}],color:[{type:o.Input}],crossOrigin:[{type:o.Input}],img:[{type:o.Input}],offset:[{type:o.Input}],offsetOrigin:[{type:o.Input}],opacity:[{type:o.Input}],scale:[{type:o.Input}],snapToPixel:[{type:o.Input}],rotateWithView:[{type:o.Input}],rotation:[{type:o.Input}],size:[{type:o.Input}],imgSize:[{type:o.Input}],src:[{type:o.Input}]},t}(),B=function(){function t(t,n,e){if(!t)throw new Error("aol-style-stroke must be a descendant of aol-style");this.host=e||(n||t)}return t.prototype.ngOnInit=function(){switch(this.instance=new r.style.Fill(this),this.host.componentType){case"style":case"style-text":this.host.instance.setFill(this.instance);break;case"style-circle":this.host.fill=this.instance;break;default:throw new Error("unknown host type: "+this.host)}},t.prototype.ngOnChanges=function(t){this.instance&&(t.color&&this.instance.setColor(t.color.currentValue),this.host.update())},t.decorators=[{type:o.Component,args:[{selector:"aol-style-fill",template:'\n    <div class="aol-style-fill"></div>\n  '}]}],t.ctorParameters=function(){return[{type:H,decorators:[{type:o.Optional}]},{type:W,decorators:[{type:o.Optional}]},{type:N,decorators:[{type:o.Optional}]}]},t.propDecorators={color:[{type:o.Input}]},t}(),J=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){var n=this;this.instance=r.control.defaults(this),this.instance.forEach(function(t){return n.map.instance.addControl(t)})},t.prototype.ngOnDestroy=function(){var n=this;this.instance.forEach(function(t){return n.map.instance.removeControl(t)})},t.decorators=[{type:o.Component,args:[{selector:"aol-control-defaults",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={attribution:[{type:o.Input}],attributionOptions:[{type:o.Input}],rotate:[{type:o.Input}],rotateOptions:[{type:o.Input}],zoom:[{type:o.Input}],zoomOptions:[{type:o.Input}]},t}(),q=function(){function t(t){this.map=t,this.componentType="control"}return t.prototype.ngOnInit=function(){this.content&&(this.element=this.content.elementRef.nativeElement,this.instance=new r.control.Control(this),this.map.instance.addControl(this.instance))},t.prototype.ngOnDestroy=function(){this.instance&&this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={content:[{type:o.ContentChild,args:[Z]}]},t}(),U=function(){function t(t,n){this.map=t,this.element=n,this.componentType="control"}return t.prototype.ngOnInit=function(){this.target=this.element.nativeElement,this.instance=new r.control.Attribution(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-attribution",template:""}]}],t.ctorParameters=function(){return[{type:i},{type:o.ElementRef}]},t.propDecorators={collapsible:[{type:o.Input}]},t}(),K=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.FullScreen(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-fullscreen",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={className:[{type:o.Input}],label:[{type:o.Input}],labelActive:[{type:o.Input}],tipLabel:[{type:o.Input}],keys:[{type:o.Input}]},t}(),Q=function(){function t(t,n){this.map=t,this.element=n}return t.prototype.ngOnInit=function(){this.target=this.element.nativeElement,this.instance=new r.control.MousePosition(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-mouseposition",template:""}]}],t.ctorParameters=function(){return[{type:i},{type:o.ElementRef}]},t.propDecorators={coordinateFormat:[{type:o.Input}],projection:[{type:o.Input}]},t}(),$=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.OverviewMap(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-overviewmap",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={collapsed:[{type:o.Input}],collapseLabel:[{type:o.Input}],collapsible:[{type:o.Input}],label:[{type:o.Input}],layers:[{type:o.Input}],target:[{type:o.Input}],tipLabel:[{type:o.Input}],view:[{type:o.Input}]},t}(),tt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.Rotate(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-rotate",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={className:[{type:o.Input}],label:[{type:o.Input}],tipLabel:[{type:o.Input}],duration:[{type:o.Input}],autoHide:[{type:o.Input}]},t}(),nt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.ScaleLine(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-scaleline",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={units:[{type:o.Input}]},t}(),et=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.Zoom(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-zoom",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={duration:[{type:o.Input}],zoomInLabel:[{type:o.Input}],zoomOutLabel:[{type:o.Input}],zoomInTipLabel:[{type:o.Input}],zoomOutTipLabel:[{type:o.Input}],delta:[{type:o.Input}]},t}(),ot=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.ZoomSlider(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-zoomslider",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={className:[{type:o.Input}],duration:[{type:o.Input}],maxResolution:[{type:o.Input}],minResolution:[{type:o.Input}]},t}(),rt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.ZoomToExtent(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-zoomtoextent",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={className:[{type:o.Input}],label:[{type:o.Input}],tipLabel:[{type:o.Input}],extent:[{type:o.Input}]},t}(),it=function(n){function t(){var t=n.call(this)||this;return t.instance=new r.format.MVT(t),t}return a(t,n),t.decorators=[{type:o.Component,args:[{selector:"aol-format-mvt",template:"",providers:[{provide:E,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[]},t.propDecorators={featureClass:[{type:o.Input}],geometryName:[{type:o.Input}],layerName:[{type:o.Input}],layers:[{type:o.Input}]},t}(E),st=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){var n=this;this.instance=r.interaction.defaults(),this.instance.forEach(function(t){return n.map.instance.addInteraction(t)})},t.prototype.ngOnDestroy=function(){var n=this;this.instance.forEach(function(t){return n.map.instance.removeInteraction(t)})},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-default",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t}(),pt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DoubleClickZoom(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-doubleclickzoom",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={duration:[{type:o.Input}],delta:[{type:o.Input}]},t}(),at=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DragAndDrop(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-draganddrop",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={formatConstructors:[{type:o.Input}],projection:[{type:o.Input}],target:[{type:o.Input}]},t}(),ct=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DragBox(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-dragbox",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={className:[{type:o.Input}],condition:[{type:o.Input}],boxEndCondition:[{type:o.Input}]},t}(),ut=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DragPan(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-dragpan",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={condition:[{type:o.Input}],kinetic:[{type:o.Input}]},t}(),yt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DragRotate(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-dragrotate",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={condition:[{type:o.Input}],duration:[{type:o.Input}]},t}(),ht=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DragRotateAndZoom(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-dragrotateandzoom",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={condition:[{type:o.Input}],duration:[{type:o.Input}]},t}(),lt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DragZoom(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-dragzoom",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={className:[{type:o.Input}],condition:[{type:o.Input}],duration:[{type:o.Input}],out:[{type:o.Input}]},t}(),mt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.MouseWheelZoom(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-mousewheelzoom",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={duration:[{type:o.Input}],timeout:[{type:o.Input}],useAnchor:[{type:o.Input}]},t}(),ft=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.PinchZoom(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-pinchzoom",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={duration:[{type:o.Input}],constrainResolution:[{type:o.Input}]},t}(),gt=function(){function t(t){this.map=t,this.onChange=new o.EventEmitter,this.onChangeActive=new o.EventEmitter,this.onDrawEnd=new o.EventEmitter,this.onDrawStart=new o.EventEmitter,this.onPropertyChange=new o.EventEmitter}return t.prototype.ngOnInit=function(){var n=this;this.instance=new r.interaction.Draw(this),this.instance.on("change",function(t){return n.onChange.emit(t)}),this.instance.on("change:active",function(t){return n.onChangeActive.emit(t)}),this.instance.on("drawend",function(t){return n.onDrawEnd.emit(t)}),this.instance.on("drawstart",function(t){return n.onDrawStart.emit(t)}),this.instance.on("propertychange",function(t){return n.onPropertyChange.emit(t)}),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-draw",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={clickTolerance:[{type:o.Input}],features:[{type:o.Input}],source:[{type:o.Input}],snapTolerance:[{type:o.Input}],type:[{type:o.Input}],maxPoints:[{type:o.Input}],minPoints:[{type:o.Input}],finishCondition:[{type:o.Input}],style:[{type:o.Input}],geometryFunction:[{type:o.Input}],geometryName:[{type:o.Input}],condition:[{type:o.Input}],freehandCondition:[{type:o.Input}],freehand:[{type:o.Input}],wrapX:[{type:o.Input}],onChange:[{type:o.Output}],onChangeActive:[{type:o.Output}],onDrawEnd:[{type:o.Output}],onDrawStart:[{type:o.Output}],onPropertyChange:[{type:o.Output}]},t}(),It=function(){function t(t){this.map=t,this.onChange=new o.EventEmitter,this.onSelect=new o.EventEmitter,this.onPropertyChange=new o.EventEmitter}return t.prototype.ngOnInit=function(){var n=this;this.instance=new r.interaction.Select(this),this.instance.on("change",function(t){return n.onChange.emit(t)}),this.instance.on("select",function(t){return n.onSelect.emit(t)}),this.instance.on("propertychange",function(t){return n.onPropertyChange.emit(t)}),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-select",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={addCondition:[{type:o.Input}],condition:[{type:o.Input}],layers:[{type:o.Input}],style:[{type:o.Input}],removeCondition:[{type:o.Input}],toggleCondition:[{type:o.Input}],multi:[{type:o.Input}],features:[{type:o.Input}],filter:[{type:o.Input}],wrapX:[{type:o.Input}],onChange:[{type:o.Output}],onSelect:[{type:o.Output}],onPropertyChange:[{type:o.Output}]},t}(),dt=function(){function t(t){this.map=t,this.onModifyEnd=new o.EventEmitter,this.onModifyStart=new o.EventEmitter,this.onChange=new o.EventEmitter,this.onChangeActive=new o.EventEmitter,this.onPropertyChange=new o.EventEmitter}return t.prototype.ngOnInit=function(){var n=this;this.instance=new r.interaction.Modify(this),this.instance.on("change",function(t){return n.onChange.emit(t)}),this.instance.on("change:active",function(t){return n.onChangeActive.emit(t)}),this.instance.on("propertychange",function(t){return n.onPropertyChange.emit(t)}),this.instance.on("modifyend",function(t){return n.onModifyEnd.emit(t)}),this.instance.on("modifystart",function(t){return n.onModifyStart.emit(t)}),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-modify",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={condition:[{type:o.Input}],deleteCondition:[{type:o.Input}],pixelTolerance:[{type:o.Input}],style:[{type:o.Input}],features:[{type:o.Input}],wrapX:[{type:o.Input}],source:[{type:o.Input}],onModifyEnd:[{type:o.Output}],onModifyStart:[{type:o.Output}],onChange:[{type:o.Output}],onChangeActive:[{type:o.Output}],onPropertyChange:[{type:o.Output}]},t}(),Ct=function(){function t(t){this.map=t,this.onChange=new o.EventEmitter,this.onPropertyChange=new o.EventEmitter,this.onTranslateEnd=new o.EventEmitter,this.onTranslateStart=new o.EventEmitter,this.onTranslating=new o.EventEmitter}return t.prototype.ngOnInit=function(){var n=this;this.instance=new r.interaction.Translate(this),this.instance.on("change",function(t){return n.onChange.emit(t)}),this.instance.on("propertychange",function(t){return n.onPropertyChange.emit(t)}),this.instance.on("translateend",function(t){return n.onTranslateEnd.emit(t)}),this.instance.on("translatestart",function(t){return n.onTranslateStart.emit(t)}),this.instance.on("translating",function(t){return n.onTranslating.emit(t)}),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-translate",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={features:[{type:o.Input}],layers:[{type:o.Input}],hitTolerance:[{type:o.Input}],onChange:[{type:o.Output}],onPropertyChange:[{type:o.Output}],onTranslateEnd:[{type:o.Output}],onTranslateStart:[{type:o.Output}],onTranslating:[{type:o.Output}]},t}(),Ot=function(){function t(t){this.elementRef=t}return t.prototype.ngOnInit=function(){this.html=this.elementRef.nativeElement.innerHTML,this.instance=new r.Attribution(this)},t.decorators=[{type:o.Component,args:[{selector:"aol-attribution",template:"<ng-content></ng-content>"}]}],t.ctorParameters=function(){return[{type:o.ElementRef}]},t}(),wt=function(){function t(t){this.source=t}return t.prototype.ngAfterViewInit=function(){this.attributions.length&&(this.instance=this.attributions.map(function(t){return t.instance}),this.source.instance.setAttributions(this.instance))},t.decorators=[{type:o.Component,args:[{selector:"aol-attributions",template:"<ng-content></ng-content>"}]}],t.ctorParameters=function(){return[{type:f,decorators:[{type:o.Host}]}]},t.propDecorators={attributions:[{type:o.ContentChildren,args:[Ot]}]},t}(),vt=[i,e,s,u,y,h,l,m,C,O,v,w,d,S,b,D,T,x,R,V,L,I,M,k,A,G,z,F,X,H,W,B,_,Y,N,J,q,U,K,Q,$,tt,nt,et,ot,rt,it,g,P,st,pt,at,ct,ut,yt,ht,lt,mt,ft,gt,It,dt,Ct,j,Z,Ot,wt],Pt=function(){function t(){}return t.decorators=[{type:o.NgModule,args:[{declarations:vt,imports:[n.CommonModule],exports:vt}]}],t}();t.MapComponent=i,t.ViewComponent=e,t.GraticuleComponent=s,t.LayerGroupComponent=u,t.LayerImageComponent=y,t.LayerTileComponent=h,t.LayerVectorComponent=l,t.LayerVectorTileComponent=m,t.SourceOsmComponent=C,t.SourceBingmapsComponent=O,t.SourceClusterComponent=v,t.SourceVectorComponent=w,t.SourceXYZComponent=d,t.SourceVectorTileComponent=S,t.SourceTileWMSComponent=b,t.SourceTileWMTSComponent=D,t.SourceTileJSONComponent=T,t.SourceGeoJSONComponent=x,t.SourceImageStaticComponent=R,t.SourceImageWMSComponent=V,t.SourceRasterComponent=I,t.SourceImageArcGISRestComponent=L,t.FeatureComponent=M,t.GeometryLinestringComponent=k,t.GeometryPointComponent=A,t.GeometryPolygonComponent=G,t.GeometryCircleComponent=z,t.CoordinateComponent=F,t.CollectionCoordinatesComponent=X,t.StyleComponent=H,t.StyleCircleComponent=W,t.StyleFillComponent=B,t.StyleIconComponent=_,t.StyleStrokeComponent=Y,t.StyleTextComponent=N,t.DefaultControlComponent=J,t.ControlComponent=q,t.ControlAttributionComponent=U,t.ControlFullScreenComponent=K,t.ControlMousePositionComponent=Q,t.ControlOverviewMapComponent=$,t.ControlRotateComponent=tt,t.ControlScaleLineComponent=nt,t.ControlZoomComponent=et,t.ControlZoomSliderComponent=ot,t.ControlZoomToExtentComponent=rt,t.FormatMVTComponent=it,t.TileGridComponent=g,t.TileGridWMTSComponent=P,t.DefaultInteractionComponent=st,t.DoubleClickZoomInteractionComponent=pt,t.DragAndDropInteractionComponent=at,t.DragBoxInteractionComponent=ct,t.DragPanInteractionComponent=ut,t.DragRotateInteractionComponent=yt,t.DragRotateAndZoomInteractionComponent=ht,t.DragZoomInteractionComponent=lt,t.MouseWheelZoomInteractionComponent=mt,t.PinchZoomInteractionComponent=ft,t.DrawInteractionComponent=gt,t.SelectInteractionComponent=It,t.ModifyInteractionComponent=dt,t.TranslateInteractionComponent=Ct,t.OverlayComponent=j,t.ContentComponent=Z,t.AttributionComponent=Ot,t.AttributionsComponent=wt,t.AngularOpenlayersModule=Pt,t.ɵc=E,t.ɵa=c,t.ɵb=f,Object.defineProperty(t,"__esModule",{value:!0})});
+!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("openlayers"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-openlayers",["exports","@angular/core","openlayers","@angular/common"],n):n(t["ngx-openlayers"]={},t.ng.core,null,t.ng.common)}(this,function(t,o,r,n){"use strict";var i=function(){function t(t){this.host=t,this.componentType="map",this.width="100%",this.height="100%",this.controls=[],this.interactions=[],this.onClick=new o.EventEmitter,this.onDblClick=new o.EventEmitter,this.onMoveEnd=new o.EventEmitter,this.onPointerDrag=new o.EventEmitter,this.onPointerMove=new o.EventEmitter,this.onPostCompose=new o.EventEmitter,this.onPostRender=new o.EventEmitter,this.onPreCompose=new o.EventEmitter,this.onPropertyChange=new o.EventEmitter,this.onSingleClick=new o.EventEmitter}return t.prototype.ngOnInit=function(){var n=this;this.instance=new r.Map(this),this.instance.setTarget(this.host.nativeElement.firstElementChild),this.instance.on("click",function(t){return n.onClick.emit(t)}),this.instance.on("dblclick",function(t){return n.onDblClick.emit(t)}),this.instance.on("moveend",function(t){return n.onMoveEnd.emit(t)}),this.instance.on("pointerdrag",function(t){return n.onPointerDrag.emit(t)}),this.instance.on("pointermove",function(t){return n.onPointerMove.emit(t)}),this.instance.on("postcompose",function(t){return n.onPostCompose.emit(t)}),this.instance.on("postrender",function(t){return n.onPostRender.emit(t)}),this.instance.on("precompose",function(t){return n.onPreCompose.emit(t)}),this.instance.on("propertychange",function(t){return n.onPropertyChange.emit(t)}),this.instance.on("singleclick",function(t){return n.onSingleClick.emit(t)})},t.prototype.ngOnChanges=function(t){var n={};if(this.instance){for(var e in t)t.hasOwnProperty(e)&&(n[e]=t[e].currentValue);this.instance.setProperties(n,!1)}},t.prototype.ngAfterViewInit=function(){this.instance.updateSize()},t.decorators=[{type:o.Component,args:[{selector:"aol-map",template:'\n    <div [style.width]="width" [style.height]="height"></div>\n    <ng-content></ng-content>\n  '}]}],t.ctorParameters=function(){return[{type:o.ElementRef}]},t.propDecorators={width:[{type:o.Input}],height:[{type:o.Input}],pixelRatio:[{type:o.Input}],keyboardEventTarget:[{type:o.Input}],loadTilesWhileAnimating:[{type:o.Input}],loadTilesWhileInteracting:[{type:o.Input}],logo:[{type:o.Input}],renderer:[{type:o.Input}],onClick:[{type:o.Output}],onDblClick:[{type:o.Output}],onMoveEnd:[{type:o.Output}],onPointerDrag:[{type:o.Output}],onPointerMove:[{type:o.Output}],onPostCompose:[{type:o.Output}],onPostRender:[{type:o.Output}],onPreCompose:[{type:o.Output}],onPropertyChange:[{type:o.Output}],onSingleClick:[{type:o.Output}]},t}(),e=function(){function t(t){this.host=t,this.componentType="view",this.zoomAnimation=!1,this.onChangeZoom=new o.EventEmitter}return t.prototype.ngOnInit=function(){var n=this;this.instance=new r.View(this),this.host.instance.setView(this.instance),this.instance.on("change:zoom",function(t){return n.onChangeZoom.emit(t)})},t.prototype.ngOnChanges=function(t){var n={};if(this.instance){for(var e in t)if(t.hasOwnProperty(e)){switch(e){case"zoom":this.zoomAnimation?this.instance.animate({zoom:t[e].currentValue}):this.instance.setZoom(t[e].currentValue)}n[e]=t[e].currentValue}this.instance.setProperties(n,!1)}},t.prototype.ngOnDestroy=function(){},t.decorators=[{type:o.Component,args:[{selector:"aol-view",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={constrainRotation:[{type:o.Input}],enableRotation:[{type:o.Input}],extent:[{type:o.Input}],maxResolution:[{type:o.Input}],minResolution:[{type:o.Input}],maxZoom:[{type:o.Input}],minZoom:[{type:o.Input}],resolution:[{type:o.Input}],resolutions:[{type:o.Input}],rotation:[{type:o.Input}],zoom:[{type:o.Input}],zoomFactor:[{type:o.Input}],center:[{type:o.Input}],projection:[{type:o.Input}],zoomAnimation:[{type:o.Input}],onChangeZoom:[{type:o.Output}]},t}(),s=function(){function t(t){this.map=t,this.componentType="graticule"}return t.prototype.ngOnChanges=function(t){var n={};if(this.instance){for(var e in t)t.hasOwnProperty(e)&&(n[e]=t[e].currentValue);n&&(this.instance=new r.Graticule(n)),this.instance.setMap(this.map.instance)}},t.prototype.ngAfterContentInit=function(){this.instance=new r.Graticule({strokeStyle:this.strokeStyle,showLabels:this.showLabels,lonLabelPosition:this.lonLabelPosition,latLabelPosition:this.latLabelPosition}),this.instance.setMap(this.map.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-graticule",template:"<ng-content></ng-content>"}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={strokeStyle:[{type:o.Input}],showLabels:[{type:o.Input}],lonLabelPosition:[{type:o.Input}],latLabelPosition:[{type:o.Input}]},t}(),p=function(t,n){return(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(t,n)};function a(t,n){function e(){this.constructor=t}p(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}var c=function(){function t(t){this.host=t,this.componentType="layer"}return t.prototype.ngOnInit=function(){null!==this.precompose&&this.precompose!==undefined&&this.instance.on("precompose",this.precompose),null!==this.postcompose&&this.postcompose!==undefined&&this.instance.on("postcompose",this.postcompose),this.host.instance.getLayers().push(this.instance)},t.prototype.ngOnDestroy=function(){this.host.instance.getLayers().remove(this.instance)},t.prototype.ngOnChanges=function(t){var n={};if(this.instance){for(var e in t)t.hasOwnProperty(e)&&(n[e]=t[e].currentValue,"precompose"===e&&(this.instance.un("precompose",t[e].previousValue),this.instance.on("precompose",t[e].currentValue)),"postcompose"===e&&(this.instance.un("postcompose",t[e].previousValue),this.instance.on("postcompose",t[e].currentValue)));this.instance.setProperties(n,!1)}},t.propDecorators={opacity:[{type:o.Input}],visible:[{type:o.Input}],extent:[{type:o.Input}],zIndex:[{type:o.Input}],minResolution:[{type:o.Input}],maxResolution:[{type:o.Input}],precompose:[{type:o.Input}],postcompose:[{type:o.Input}]},t}(),u=function(e){function t(t,n){return e.call(this,n||t)||this}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.layer.Group(this),e.prototype.ngOnInit.call(this)},t.decorators=[{type:o.Component,args:[{selector:"aol-layer-group",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i},{type:t,decorators:[{type:o.SkipSelf},{type:o.Optional}]}]},t}(c),y=function(e){function t(t,n){return e.call(this,n||t)||this}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.layer.Image(this),e.prototype.ngOnInit.call(this)},t.prototype.ngOnChanges=function(t){e.prototype.ngOnChanges.call(this,t)},t.decorators=[{type:o.Component,args:[{selector:"aol-layer-image",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i},{type:u,decorators:[{type:o.Optional}]}]},t.propDecorators={opacity:[{type:o.Input}],visible:[{type:o.Input}],extent:[{type:o.Input}],minResolution:[{type:o.Input}],maxResolution:[{type:o.Input}],zIndex:[{type:o.Input}]},t}(c),h=function(e){function t(t,n){return e.call(this,n||t)||this}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.layer.Tile(this),e.prototype.ngOnInit.call(this)},t.prototype.ngOnChanges=function(t){e.prototype.ngOnChanges.call(this,t)},t.decorators=[{type:o.Component,args:[{selector:"aol-layer-tile",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i},{type:u,decorators:[{type:o.Optional}]}]},t.propDecorators={preload:[{type:o.Input}],useInterimTilesOnError:[{type:o.Input}]},t}(c),l=function(e){function t(t,n){return e.call(this,n||t)||this}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.layer.Vector(this),e.prototype.ngOnInit.call(this)},t.prototype.ngOnChanges=function(t){e.prototype.ngOnChanges.call(this,t)},t.decorators=[{type:o.Component,args:[{selector:"aol-layer-vector",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i},{type:u,decorators:[{type:o.Optional}]}]},t.propDecorators={renderBuffer:[{type:o.Input}],style:[{type:o.Input}],updateWhileAnimating:[{type:o.Input}],updateWhileInteracting:[{type:o.Input}]},t}(c),m=function(e){function t(t,n){return e.call(this,n||t)||this}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.layer.VectorTile(this),e.prototype.ngOnInit.call(this)},t.prototype.ngOnChanges=function(t){e.prototype.ngOnChanges.call(this,t)},t.decorators=[{type:o.Component,args:[{selector:"aol-layer-vectortile",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i},{type:u,decorators:[{type:o.Optional}]}]},t.propDecorators={renderBuffer:[{type:o.Input}],renderMode:[{type:o.Input}],renderOrder:[{type:o.Input}],style:[{type:o.Input}],updateWhileAnimating:[{type:o.Input}],updateWhileInteracting:[{type:o.Input}],visible:[{type:o.Input}]},t}(c),f=function(){function t(t,n){this.host=t,this.raster=n,this.componentType="source"}return t.prototype.ngOnDestroy=function(){this.host&&this.host.instance&&this.host.instance.setSource(null),this.raster&&(this.raster.sources=[])},t.prototype._register=function(t){this.host&&this.host.instance.setSource(t),this.raster&&(this.raster.sources=[t])},t.propDecorators={attributions:[{type:o.Input}]},t}(),g=function(){function t(){}return t.prototype.ngOnInit=function(){this.resolutions?this.instance=new r.tilegrid.TileGrid(this):this.instance=r.tilegrid.createXYZ(this)},t.prototype.ngOnChanges=function(t){this.resolutions?this.instance=new r.tilegrid.TileGrid(this):this.instance=r.tilegrid.createXYZ(this)},t.decorators=[{type:o.Component,args:[{selector:"aol-tilegrid",template:""}]}],t.propDecorators={extent:[{type:o.Input}],maxZoom:[{type:o.Input}],minZoom:[{type:o.Input}],tileSize:[{type:o.Input}],origin:[{type:o.Input}],resolutions:[{type:o.Input}]},t}(),I=function(e){function t(t){var n=e.call(this,t)||this;return n.beforeOperations=new o.EventEmitter,n.afterOperations=new o.EventEmitter,n.sources=[],n}return a(t,e),t.prototype.ngAfterContentInit=function(){var n=this;this.instance=new r.source.Raster(this),this.instance.on("beforeoperations",function(t){return n.beforeOperations.emit(t)}),this.instance.on("afteroperations",function(t){return n.afterOperations.emit(t)}),this._register(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-raster",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:y,decorators:[{type:o.Host}]}]},t.propDecorators={operation:[{type:o.Input}],threads:[{type:o.Input}],lib:[{type:o.Input}],operationType:[{type:o.Input}],beforeOperations:[{type:o.Output}],afterOperations:[{type:o.Output}]},t}(f),d=function(e){function t(t,n){return e.call(this,t,n)||this}return a(t,e),t.prototype.ngAfterContentInit=function(){this.tileGridXYZ&&(this.tileGrid=this.tileGridXYZ.instance),this.instance=new r.source.XYZ(this),this._register(this.instance)},t.prototype.ngOnChanges=function(t){var n={};if(this.instance){for(var e in t)t.hasOwnProperty(e)&&(n[e]=t[e].currentValue);this.instance.setProperties(n,!1),t.hasOwnProperty("url")&&(this.instance=new r.source.XYZ(this),this._register(this.instance))}},t.decorators=[{type:o.Component,args:[{selector:"aol-source-xyz",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:h,decorators:[{type:o.Optional},{type:o.Host}]},{type:I,decorators:[{type:o.Optional},{type:o.Host}]}]},t.propDecorators={cacheSize:[{type:o.Input}],crossOrigin:[{type:o.Input}],opaque:[{type:o.Input}],projection:[{type:o.Input}],reprojectionErrorThreshold:[{type:o.Input}],minZoom:[{type:o.Input}],maxZoom:[{type:o.Input}],tileGrid:[{type:o.Input}],tileLoadFunction:[{type:o.Input}],tilePixelRatio:[{type:o.Input}],tileSize:[{type:o.Input}],tileUrlFunction:[{type:o.Input}],url:[{type:o.Input}],urls:[{type:o.Input}],wrapX:[{type:o.Input}],tileGridXYZ:[{type:o.ContentChild,args:[g]}]},t}(f),C=function(e){function t(t,n){return e.call(this,t,n)||this}return a(t,e),t.prototype.ngAfterContentInit=function(){this.tileGridXYZ&&(this.tileGrid=this.tileGridXYZ.instance),this.instance=new r.source.OSM(this),this._register(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-osm",template:'\n    <div class="aol-source-osm"></div>\n  ',providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:h,decorators:[{type:o.Host},{type:o.Optional}]},{type:I,decorators:[{type:o.Host},{type:o.Optional}]}]},t.propDecorators={attributions:[{type:o.Input}],cacheSize:[{type:o.Input}],crossOrigin:[{type:o.Input}],maxZoom:[{type:o.Input}],opaque:[{type:o.Input}],reprojectionErrorThreshold:[{type:o.Input}],tileLoadFunction:[{type:o.Input}],url:[{type:o.Input}],wrapX:[{type:o.Input}]},t}(d),O=function(e){function t(t){var n=e.call(this,t)||this;return n.imagerySet="Aerial",n}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.source.BingMaps(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-bingmaps",template:'\n    <div class="aol-source-bingmaps"></div>\n  ',providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:h,decorators:[{type:o.Host}]}]},t.propDecorators={cacheSize:[{type:o.Input}],hidpi:[{type:o.Input}],culture:[{type:o.Input}],key:[{type:o.Input}],imagerySet:[{type:o.Input}],maxZoom:[{type:o.Input}],reprojectionErrorThreshold:[{type:o.Input}],tileLoadFunction:[{type:o.Input}],wrapX:[{type:o.Input}]},t}(f),w=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnInit=function(){this.instance=new r.source.Vector(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-vector",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:l,decorators:[{type:o.Host}]}]},t.propDecorators={overlaps:[{type:o.Input}],useSpatialIndex:[{type:o.Input}],wrapX:[{type:o.Input}],url:[{type:o.Input}],format:[{type:o.Input}],strategy:[{type:o.Input}]},t}(f),v=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngAfterContentInit=function(){this.source=this.sourceVectorComponent.instance,this.instance=new r.source.Cluster(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-cluster",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:l,decorators:[{type:o.Host}]}]},t.propDecorators={distance:[{type:o.Input}],geometryFunction:[{type:o.Input}],sourceVectorComponent:[{type:o.ContentChild,args:[w]}]},t}(f),P=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return a(n,t),n.prototype.ngOnInit=function(){this.instance=new r.tilegrid.WMTS(this)},n.decorators=[{type:o.Component,args:[{selector:"aol-tilegrid-wmts",template:""}]}],n.propDecorators={origin:[{type:o.Input}],origins:[{type:o.Input}],resolutions:[{type:o.Input}],matrixIds:[{type:o.Input}],sizes:[{type:o.Input}],tileSizes:[{type:o.Input}],widths:[{type:o.Input}]},n}(g),D=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnChanges=function(t){var n={};if(this.instance){for(var e in t)if(t.hasOwnProperty(e)){switch(e){case"url":this.url=t[e].currentValue,this.setLayerSource()}n[e]=t[e].currentValue}this.instance.setProperties(n,!1)}},t.prototype.setLayerSource=function(){this.instance=new r.source.WMTS(this),this.host.instance.setSource(this.instance)},t.prototype.ngAfterContentInit=function(){this.tileGridWMTS&&(this.tileGrid=this.tileGridWMTS.instance,this.setLayerSource())},t.decorators=[{type:o.Component,args:[{selector:"aol-source-tilewmts",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:h,decorators:[{type:o.Host}]}]},t.propDecorators={cacheSize:[{type:o.Input}],crossOrigin:[{type:o.Input}],logo:[{type:o.Input}],tileGrid:[{type:o.Input}],projection:[{type:o.Input}],reprojectionErrorThreshold:[{type:o.Input}],requestEncoding:[{type:o.Input}],layer:[{type:o.Input}],style:[{type:o.Input}],tileClass:[{type:o.Input}],tilePixelRatio:[{type:o.Input}],version:[{type:o.Input}],format:[{type:o.Input}],matrixSet:[{type:o.Input}],dimensions:[{type:o.Input}],url:[{type:o.Input}],tileLoadFunction:[{type:o.Input}],urls:[{type:o.Input}],wrapX:[{type:o.Input}],tileGridWMTS:[{type:o.ContentChild,args:[P]}]},t}(f),E=function Dt(){this.componentType="format"},S=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngAfterContentInit=function(){this.format=this.formatComponent.instance,this.tileGrid=this.tileGridComponent.instance,this.instance=new r.source.VectorTile(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-vectortile",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:m,decorators:[{type:o.Host}]}]},t.propDecorators={cacheSize:[{type:o.Input}],overlaps:[{type:o.Input}],projection:[{type:o.Input}],tilePixelRatio:[{type:o.Input}],tileUrlFunction:[{type:o.Input}],url:[{type:o.Input}],urls:[{type:o.Input}],wrapX:[{type:o.Input}],formatComponent:[{type:o.ContentChild,args:[E]}],tileGridComponent:[{type:o.ContentChild,args:[g]}]},t}(f),b=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnInit=function(){this.instance=new r.source.TileWMS(this),this.host.instance.setSource(this.instance)},t.prototype.ngOnChanges=function(t){this.instance&&t.hasOwnProperty("params")&&this.instance.updateParams(this.params)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-tilewms",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:h,decorators:[{type:o.Host}]}]},t.propDecorators={cacheSize:[{type:o.Input}],crossOrigin:[{type:o.Input}],gutter:[{type:o.Input}],hidpi:[{type:o.Input}],params:[{type:o.Input}],projection:[{type:o.Input}],reprojectionErrorThreshold:[{type:o.Input}],serverType:[{type:o.Input}],tileGrid:[{type:o.Input}],tileLoadFunction:[{type:o.Input}],url:[{type:o.Input}],urls:[{type:o.Input}],wrapX:[{type:o.Input}]},t}(f),T=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnInit=function(){this.instance=new r.source.TileJSON(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-tilejson",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:h,decorators:[{type:o.Host}]}]},t.propDecorators={url:[{type:o.Input}]},t}(f),x=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnInit=function(){this.format=new r.format.GeoJSON(this),this.instance=new r.source.Vector(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-geojson",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:l,decorators:[{type:o.Host}]}]},t.propDecorators={defaultDataProjection:[{type:o.Input}],featureProjection:[{type:o.Input}],geometryName:[{type:o.Input}],url:[{type:o.Input}]},t}(f),R=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnInit=function(){this.instance=new r.source.ImageStatic(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-imagestatic",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:y,decorators:[{type:o.Host}]}]},t.propDecorators={projection:[{type:o.Input}],imageExtent:[{type:o.Input}],url:[{type:o.Input}],attributions:[{type:o.Input}],crossOrigin:[{type:o.Input}],imageLoadFunction:[{type:o.Input}],logo:[{type:o.Input}],imageSize:[{type:o.Input}]},t}(f),V=function(n){function t(t){return n.call(this,t)||this}return a(t,n),t.prototype.ngOnInit=function(){this.instance=new r.source.ImageWMS(this),this.host.instance.setSource(this.instance)},t.prototype.ngOnChanges=function(t){this.instance&&t.hasOwnProperty("params")&&this.instance.updateParams(this.params)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-imagewms",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:y,decorators:[{type:o.Host}]}]},t.propDecorators={attributions:[{type:o.Input}],crossOrigin:[{type:o.Input}],hidpi:[{type:o.Input}],serverType:[{type:o.Input}],imageLoadFunction:[{type:o.Input}],logo:[{type:o.Input}],params:[{type:o.Input}],projection:[{type:o.Input}],ratio:[{type:o.Input}],resolutions:[{type:o.Input}],url:[{type:o.Input}]},t}(f),L=function(e){function t(t){var n=e.call(this,t)||this;return n.ratio=1,n}return a(t,e),t.prototype.ngOnInit=function(){this.instance=new r.source.ImageArcGISRest(this),this.host.instance.setSource(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-source-imagearcgisrest",template:"\n    <ng-content></ng-content>\n  ",providers:[{provide:f,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[{type:y,decorators:[{type:o.Host}]}]},t.propDecorators={projection:[{type:o.Input}],url:[{type:o.Input}],attributions:[{type:o.Input}],crossOrigin:[{type:o.Input}],imageLoadFunction:[{type:o.Input}],params:[{type:o.Input}],ratio:[{type:o.Input}],resolutions:[{type:o.Input}],logo:[{type:o.Input}]},t}(f),M=function(){function t(t){this.host=t,this.componentType="feature"}return t.prototype.ngOnInit=function(){this.instance=new r.Feature,this.id!==undefined&&this.instance.setId(this.id),this.host.instance.addFeature(this.instance)},t.prototype.ngOnDestroy=function(){this.host.instance.removeFeature(this.instance)},t.prototype.ngOnChanges=function(t){this.instance&&this.instance.setId(this.id)},t.decorators=[{type:o.Component,args:[{selector:"aol-feature",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:w}]},t.propDecorators={id:[{type:o.Input}]},t}(),k=function(){function t(t){this.host=t,this.componentType="geometry-linestring"}return t.prototype.ngOnInit=function(){this.instance=new r.geom.LineString([]),this.host.instance.setGeometry(this.instance)},t.prototype.ngOnDestroy=function(){},t.decorators=[{type:o.Component,args:[{selector:"aol-geometry-linestring",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:M}]},t}(),A=function(){function t(t){this.host=t,this.componentType="geometry-point"}return t.prototype.ngOnInit=function(){this.instance=new r.geom.Point([0,0]),this.host.instance.setGeometry(this.instance)},t.prototype.ngOnDestroy=function(){},t.decorators=[{type:o.Component,args:[{selector:"aol-geometry-point",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:M}]},t}(),G=function(){function t(t){this.host=t,this.componentType="geometry-polygon"}return t.prototype.ngOnInit=function(){this.instance=new r.geom.Polygon([[[0,0],[1,0],[1,1]]]),this.host.instance.setGeometry(this.instance)},t.prototype.ngOnDestroy=function(){},t.decorators=[{type:o.Component,args:[{selector:"aol-geometry-polygon",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:M}]},t}(),z=function(){function t(t){this.host=t,this.componentType="geometry-circle",this.instance=new r.geom.Circle([0,0])}return Object.defineProperty(t.prototype,"radius",{get:function(){return this.instance.getRadius()},set:function(t){this.instance.setRadius(t)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.host.instance.setGeometry(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-geometry-circle",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:M}]},t.propDecorators={radius:[{type:o.Input}]},t}(),Z=function(){function t(t){this.elementRef=t}return t.decorators=[{type:o.Component,args:[{selector:"aol-content",template:"<ng-content></ng-content>"}]}],t.ctorParameters=function(){return[{type:o.ElementRef}]},t}(),j=function(){function t(t){this.map=t,this.componentType="overlay"}return t.prototype.ngOnInit=function(){this.content&&(this.element=this.content.elementRef.nativeElement,this.instance=new r.Overlay(this),this.map.instance.addOverlay(this.instance))},t.prototype.ngOnDestroy=function(){this.instance&&this.map.instance.removeOverlay(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-overlay",template:"<ng-content></ng-content>"}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={content:[{type:o.ContentChild,args:[Z]}],id:[{type:o.Input}],offset:[{type:o.Input}],positioning:[{type:o.Input}],stopEvent:[{type:o.Input}],insertFirst:[{type:o.Input}],autoPan:[{type:o.Input}],autoPanAnimation:[{type:o.Input}],autoPanMargin:[{type:o.Input}]},t}(),F=function(){function t(t,n,e,o,r){this.map=t,this.srid="EPSG:3857",null!==e?this.host=e:null!==o?this.host=o:null!==n?this.host=n:null!==r&&(this.host=r)}return t.prototype.ngOnChanges=function(t){var n,e,o;switch(e=(n=this.map.instance.getView().getProjection())?n.getCode():"EPSG:3857",o=this.srid===e?[this.x,this.y]:r.proj.transform([this.x,this.y],this.srid,e),this.host.componentType){case"geometry-point":this.host.instance.setCoordinates(o);break;case"geometry-circle":case"view":this.host.instance.setCenter(o);break;case"overlay":this.host.instance.setPosition(o)}},t.decorators=[{type:o.Component,args:[{selector:"aol-coordinate",template:'\n    <div class="aol-coordinate"></div>\n  '}]}],t.ctorParameters=function(){return[{type:i},{type:e,decorators:[{type:o.Optional}]},{type:A,decorators:[{type:o.Optional}]},{type:z,decorators:[{type:o.Optional}]},{type:j,decorators:[{type:o.Optional}]}]},t.propDecorators={x:[{type:o.Input}],y:[{type:o.Input}],srid:[{type:o.Input}]},t}(),X=function(){function t(t,n,e){if(this.map=t,this.srid="EPSG:3857",n)this.host=n;else{if(!e)throw new Error("aol-collection-coordinates must be a child of a geometry component");this.host=e}}return t.prototype.ngOnChanges=function(t){var n,e,o;switch(n=this.map.instance.getView().getProjection(),e=n?n.getCode():"EPSG:3857",this.srid===e?o=this.coordinates:(o=[],this.coordinates.forEach(function(t){o.push(r.proj.transform(t,this.srid,e))}.bind(this))),this.host.componentType){case"geometry-linestring":this.host.instance.setCoordinates(o);break;case"geometry-polygon":this.host.instance.setCoordinates([o]);break;default:throw new Error("aol-collection-coordinates host is of unknown type: "+this.host.componentType)}},t.decorators=[{type:o.Component,args:[{selector:"aol-collection-coordinates",template:'\n    <div class="aol-collection-coordinates"></div>\n  '}]}],t.ctorParameters=function(){return[{type:i},{type:k,decorators:[{type:o.Optional}]},{type:G,decorators:[{type:o.Optional}]}]},t.propDecorators={coordinates:[{type:o.Input}],srid:[{type:o.Input}]},t}(),W=function(){function t(t,n){if(this.componentType="style",this.host=t||n,!this.host)throw new Error("aol-style must be applied to a feature or a layer")}return t.prototype.update=function(){this.host.instance.changed()},t.prototype.ngOnInit=function(){this.instance=new r.style.Style(this),this.host.instance.setStyle(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-style",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:M,decorators:[{type:o.Optional}]},{type:l,decorators:[{type:o.Optional}]}]},t.propDecorators={geometry:[{type:o.Input}],fill:[{type:o.Input}],image:[{type:o.Input}],stroke:[{type:o.Input}],text:[{type:o.Input}],zIndex:[{type:o.Input}]},t}(),H=function(){function t(t){this.host=t,this.componentType="style-circle"}return t.prototype.update=function(){this.instance&&this.instance.setRadius(this.radius),this.host.update()},t.prototype.ngAfterContentInit=function(){this.instance=new r.style.Circle(this),this.host.instance.setImage(this.instance),this.host.update()},t.prototype.ngOnChanges=function(t){this.instance&&t.radius&&this.instance.setRadius(t.radius.currentValue)},t.prototype.ngOnDestroy=function(){this.host.instance.setImage(null)},t.decorators=[{type:o.Component,args:[{selector:"aol-style-circle",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:W,decorators:[{type:o.Host}]}]},t.propDecorators={fill:[{type:o.Input}],radius:[{type:o.Input}],snapToPixel:[{type:o.Input}],stroke:[{type:o.Input}],atlasManager:[{type:o.Input}]},t}(),N=function(){function t(t){if(this.host=t,this.componentType="style-text",!t)throw new Error("aol-style-text must be a descendant of aol-style")}return t.prototype.ngOnInit=function(){this.instance=new r.style.Text(this),this.host.instance.setText(this.instance)},t.prototype.ngOnChanges=function(t){this.instance&&(t.font&&this.instance.setFont(t.font.currentValue),t.offsetX&&this.instance.setOffsetX(t.offsetX.currentValue),t.offsetY&&this.instance.setOffsetY(t.offsetY.currentValue),t.scale&&this.instance.setScale(t.scale.currentValue),t.rotation&&this.instance.setRotation(t.rotation.currentValue),t.text&&this.instance.setText(t.text.currentValue),t.textAlign&&this.instance.setTextAlign(t.textAlign.currentValue),t.textBaseLine&&this.instance.setTextBaseline(t.textBaseLine.currentValue),this.host.update())},t.decorators=[{type:o.Component,args:[{selector:"aol-style-text",template:'\n    <div class="aol-style-text"></div>\n  '}]}],t.ctorParameters=function(){return[{type:W,decorators:[{type:o.Optional}]}]},t.propDecorators={font:[{type:o.Input}],offsetX:[{type:o.Input}],offsetY:[{type:o.Input}],scale:[{type:o.Input}],rotateWithView:[{type:o.Input}],rotation:[{type:o.Input}],text:[{type:o.Input}],textAlign:[{type:o.Input}],textBaseLine:[{type:o.Input}]},t}(),Y=function(){function t(t,n,e){if(!t)throw new Error("aol-style-stroke must be a descendant of aol-style");this.host=e||(n||t)}return t.prototype.ngOnInit=function(){switch(this.instance=new r.style.Stroke(this),this.host.componentType){case"style":case"style-text":this.host.instance.setStroke(this.instance);break;case"style-circle":this.host.stroke=this.instance;break;default:throw new Error("unknown host type: "+this.host)}},t.prototype.ngOnChanges=function(t){this.instance&&(t.color&&this.instance.setColor(t.color.currentValue),t.lineCap&&this.instance.setLineCap(t.lineCap.currentValue),t.lineDash&&this.instance.setLineDash(t.lineDash.currentValue),t.lineJoin&&this.instance.setLineJoin(t.lineJoin.currentValue),t.miterLimit&&this.instance.setMiterLimit(t.miterLimit.currentValue),t.width&&this.instance.setWidth(t.width.currentValue),this.host.update())},t.decorators=[{type:o.Component,args:[{selector:"aol-style-stroke",template:'\n    <div class="aol-style-stroke"></div>\n  '}]}],t.ctorParameters=function(){return[{type:W,decorators:[{type:o.Optional}]},{type:H,decorators:[{type:o.Optional}]},{type:N,decorators:[{type:o.Optional}]}]},t.propDecorators={color:[{type:o.Input}],lineCap:[{type:o.Input}],lineDash:[{type:o.Input}],lineJoin:[{type:o.Input}],miterLimit:[{type:o.Input}],width:[{type:o.Input}]},t}(),_=function(){function t(t){this.host=t}return t.prototype.ngOnInit=function(){this.instance=new r.style.Icon(this),this.host.instance.setImage(this.instance)},t.prototype.ngOnChanges=function(t){this.instance&&(t.opacity&&this.instance.setOpacity(t.opacity.currentValue),t.rotation&&this.instance.setRotation(t.rotation.currentValue),t.scale&&this.instance.setScale(t.scale.currentValue),t.src&&(this.instance=new r.style.Icon(this),this.host.instance.setImage(this.instance)),this.host.update())},t.decorators=[{type:o.Component,args:[{selector:"aol-style-icon",template:'\n    <div class="aol-style-icon"></div>\n  '}]}],t.ctorParameters=function(){return[{type:W,decorators:[{type:o.Host}]}]},t.propDecorators={anchor:[{type:o.Input}],anchorXUnits:[{type:o.Input}],anchorYUnits:[{type:o.Input}],anchorOrigin:[{type:o.Input}],color:[{type:o.Input}],crossOrigin:[{type:o.Input}],img:[{type:o.Input}],offset:[{type:o.Input}],offsetOrigin:[{type:o.Input}],opacity:[{type:o.Input}],scale:[{type:o.Input}],snapToPixel:[{type:o.Input}],rotateWithView:[{type:o.Input}],rotation:[{type:o.Input}],size:[{type:o.Input}],imgSize:[{type:o.Input}],src:[{type:o.Input}]},t}(),B=function(){function t(t,n,e){if(!t)throw new Error("aol-style-stroke must be a descendant of aol-style");this.host=e||(n||t)}return t.prototype.ngOnInit=function(){switch(this.instance=new r.style.Fill(this),this.host.componentType){case"style":case"style-text":this.host.instance.setFill(this.instance);break;case"style-circle":this.host.fill=this.instance;break;default:throw new Error("unknown host type: "+this.host)}},t.prototype.ngOnChanges=function(t){this.instance&&(t.color&&this.instance.setColor(t.color.currentValue),this.host.update())},t.decorators=[{type:o.Component,args:[{selector:"aol-style-fill",template:'\n    <div class="aol-style-fill"></div>\n  '}]}],t.ctorParameters=function(){return[{type:W,decorators:[{type:o.Optional}]},{type:H,decorators:[{type:o.Optional}]},{type:N,decorators:[{type:o.Optional}]}]},t.propDecorators={color:[{type:o.Input}]},t}(),J=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){var n=this;this.instance=r.control.defaults(this),this.instance.forEach(function(t){return n.map.instance.addControl(t)})},t.prototype.ngOnDestroy=function(){var n=this;this.instance.forEach(function(t){return n.map.instance.removeControl(t)})},t.decorators=[{type:o.Component,args:[{selector:"aol-control-defaults",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={attribution:[{type:o.Input}],attributionOptions:[{type:o.Input}],rotate:[{type:o.Input}],rotateOptions:[{type:o.Input}],zoom:[{type:o.Input}],zoomOptions:[{type:o.Input}]},t}(),q=function(){function t(t){this.map=t,this.componentType="control"}return t.prototype.ngOnInit=function(){this.content&&(this.element=this.content.elementRef.nativeElement,this.instance=new r.control.Control(this),this.map.instance.addControl(this.instance))},t.prototype.ngOnDestroy=function(){this.instance&&this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={content:[{type:o.ContentChild,args:[Z]}]},t}(),U=function(){function t(t,n){this.map=t,this.element=n,this.componentType="control"}return t.prototype.ngOnInit=function(){this.target=this.element.nativeElement,this.instance=new r.control.Attribution(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-attribution",template:""}]}],t.ctorParameters=function(){return[{type:i},{type:o.ElementRef}]},t.propDecorators={collapsible:[{type:o.Input}]},t}(),K=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.FullScreen(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-fullscreen",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={className:[{type:o.Input}],label:[{type:o.Input}],labelActive:[{type:o.Input}],tipLabel:[{type:o.Input}],keys:[{type:o.Input}]},t}(),Q=function(){function t(t,n){this.map=t,this.element=n}return t.prototype.ngOnInit=function(){this.target=this.element.nativeElement,this.instance=new r.control.MousePosition(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-mouseposition",template:""}]}],t.ctorParameters=function(){return[{type:i},{type:o.ElementRef}]},t.propDecorators={coordinateFormat:[{type:o.Input}],projection:[{type:o.Input}]},t}(),$=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.OverviewMap(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-overviewmap",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={collapsed:[{type:o.Input}],collapseLabel:[{type:o.Input}],collapsible:[{type:o.Input}],label:[{type:o.Input}],layers:[{type:o.Input}],target:[{type:o.Input}],tipLabel:[{type:o.Input}],view:[{type:o.Input}]},t}(),tt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.Rotate(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-rotate",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={className:[{type:o.Input}],label:[{type:o.Input}],tipLabel:[{type:o.Input}],duration:[{type:o.Input}],autoHide:[{type:o.Input}]},t}(),nt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.ScaleLine(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-scaleline",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={units:[{type:o.Input}]},t}(),et=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.Zoom(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-zoom",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={duration:[{type:o.Input}],zoomInLabel:[{type:o.Input}],zoomOutLabel:[{type:o.Input}],zoomInTipLabel:[{type:o.Input}],zoomOutTipLabel:[{type:o.Input}],delta:[{type:o.Input}]},t}(),ot=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.ZoomSlider(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-zoomslider",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={className:[{type:o.Input}],duration:[{type:o.Input}],maxResolution:[{type:o.Input}],minResolution:[{type:o.Input}]},t}(),rt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.control.ZoomToExtent(this),this.map.instance.addControl(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeControl(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-control-zoomtoextent",template:"\n    <ng-content></ng-content>\n  "}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={className:[{type:o.Input}],label:[{type:o.Input}],tipLabel:[{type:o.Input}],extent:[{type:o.Input}]},t}(),it=function(n){function t(){var t=n.call(this)||this;return t.instance=new r.format.MVT(t),t}return a(t,n),t.decorators=[{type:o.Component,args:[{selector:"aol-format-mvt",template:"",providers:[{provide:E,useExisting:o.forwardRef(function(){return t})}]}]}],t.ctorParameters=function(){return[]},t.propDecorators={featureClass:[{type:o.Input}],geometryName:[{type:o.Input}],layerName:[{type:o.Input}],layers:[{type:o.Input}]},t}(E),st=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){var n=this;this.instance=r.interaction.defaults(),this.instance.forEach(function(t){return n.map.instance.addInteraction(t)})},t.prototype.ngOnDestroy=function(){var n=this;this.instance.forEach(function(t){return n.map.instance.removeInteraction(t)})},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-default",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t}(),pt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DoubleClickZoom(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-doubleclickzoom",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={duration:[{type:o.Input}],delta:[{type:o.Input}]},t}(),at=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DragAndDrop(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-draganddrop",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={formatConstructors:[{type:o.Input}],projection:[{type:o.Input}],target:[{type:o.Input}]},t}(),ct=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DragBox(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-dragbox",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={className:[{type:o.Input}],condition:[{type:o.Input}],boxEndCondition:[{type:o.Input}]},t}(),ut=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DragPan(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-dragpan",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={condition:[{type:o.Input}],kinetic:[{type:o.Input}]},t}(),yt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DragRotate(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-dragrotate",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={condition:[{type:o.Input}],duration:[{type:o.Input}]},t}(),ht=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DragRotateAndZoom(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-dragrotateandzoom",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={condition:[{type:o.Input}],duration:[{type:o.Input}]},t}(),lt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.DragZoom(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-dragzoom",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={className:[{type:o.Input}],condition:[{type:o.Input}],duration:[{type:o.Input}],out:[{type:o.Input}]},t}(),mt=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.MouseWheelZoom(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-mousewheelzoom",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={duration:[{type:o.Input}],timeout:[{type:o.Input}],useAnchor:[{type:o.Input}]},t}(),ft=function(){function t(t){this.map=t}return t.prototype.ngOnInit=function(){this.instance=new r.interaction.PinchZoom(this),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-pinchzoom",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={duration:[{type:o.Input}],constrainResolution:[{type:o.Input}]},t}(),gt=function(){function t(t){this.map=t,this.onChange=new o.EventEmitter,this.onChangeActive=new o.EventEmitter,this.onDrawEnd=new o.EventEmitter,this.onDrawStart=new o.EventEmitter,this.onPropertyChange=new o.EventEmitter}return t.prototype.ngOnInit=function(){var n=this;this.instance=new r.interaction.Draw(this),this.instance.on("change",function(t){return n.onChange.emit(t)}),this.instance.on("change:active",function(t){return n.onChangeActive.emit(t)}),this.instance.on("drawend",function(t){return n.onDrawEnd.emit(t)}),this.instance.on("drawstart",function(t){return n.onDrawStart.emit(t)}),this.instance.on("propertychange",function(t){return n.onPropertyChange.emit(t)}),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-draw",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={clickTolerance:[{type:o.Input}],features:[{type:o.Input}],source:[{type:o.Input}],snapTolerance:[{type:o.Input}],type:[{type:o.Input}],maxPoints:[{type:o.Input}],minPoints:[{type:o.Input}],finishCondition:[{type:o.Input}],style:[{type:o.Input}],geometryFunction:[{type:o.Input}],geometryName:[{type:o.Input}],condition:[{type:o.Input}],freehandCondition:[{type:o.Input}],freehand:[{type:o.Input}],wrapX:[{type:o.Input}],onChange:[{type:o.Output}],onChangeActive:[{type:o.Output}],onDrawEnd:[{type:o.Output}],onDrawStart:[{type:o.Output}],onPropertyChange:[{type:o.Output}]},t}(),It=function(){function t(t){this.map=t,this.onChange=new o.EventEmitter,this.onSelect=new o.EventEmitter,this.onPropertyChange=new o.EventEmitter}return t.prototype.ngOnInit=function(){var n=this;this.instance=new r.interaction.Select(this),this.instance.on("change",function(t){return n.onChange.emit(t)}),this.instance.on("select",function(t){return n.onSelect.emit(t)}),this.instance.on("propertychange",function(t){return n.onPropertyChange.emit(t)}),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-select",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={addCondition:[{type:o.Input}],condition:[{type:o.Input}],layers:[{type:o.Input}],style:[{type:o.Input}],removeCondition:[{type:o.Input}],toggleCondition:[{type:o.Input}],multi:[{type:o.Input}],features:[{type:o.Input}],filter:[{type:o.Input}],wrapX:[{type:o.Input}],onChange:[{type:o.Output}],onSelect:[{type:o.Output}],onPropertyChange:[{type:o.Output}]},t}(),dt=function(){function t(t){this.map=t,this.onModifyEnd=new o.EventEmitter,this.onModifyStart=new o.EventEmitter,this.onChange=new o.EventEmitter,this.onChangeActive=new o.EventEmitter,this.onPropertyChange=new o.EventEmitter}return t.prototype.ngOnInit=function(){var n=this;this.instance=new r.interaction.Modify(this),this.instance.on("change",function(t){return n.onChange.emit(t)}),this.instance.on("change:active",function(t){return n.onChangeActive.emit(t)}),this.instance.on("propertychange",function(t){return n.onPropertyChange.emit(t)}),this.instance.on("modifyend",function(t){return n.onModifyEnd.emit(t)}),this.instance.on("modifystart",function(t){return n.onModifyStart.emit(t)}),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-modify",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={condition:[{type:o.Input}],deleteCondition:[{type:o.Input}],pixelTolerance:[{type:o.Input}],style:[{type:o.Input}],features:[{type:o.Input}],wrapX:[{type:o.Input}],source:[{type:o.Input}],onModifyEnd:[{type:o.Output}],onModifyStart:[{type:o.Output}],onChange:[{type:o.Output}],onChangeActive:[{type:o.Output}],onPropertyChange:[{type:o.Output}]},t}(),Ct=function(){function t(t){this.map=t,this.onChange=new o.EventEmitter,this.onPropertyChange=new o.EventEmitter,this.onTranslateEnd=new o.EventEmitter,this.onTranslateStart=new o.EventEmitter,this.onTranslating=new o.EventEmitter}return t.prototype.ngOnInit=function(){var n=this;this.instance=new r.interaction.Translate(this),this.instance.on("change",function(t){return n.onChange.emit(t)}),this.instance.on("propertychange",function(t){return n.onPropertyChange.emit(t)}),this.instance.on("translateend",function(t){return n.onTranslateEnd.emit(t)}),this.instance.on("translatestart",function(t){return n.onTranslateStart.emit(t)}),this.instance.on("translating",function(t){return n.onTranslating.emit(t)}),this.map.instance.addInteraction(this.instance)},t.prototype.ngOnDestroy=function(){this.map.instance.removeInteraction(this.instance)},t.decorators=[{type:o.Component,args:[{selector:"aol-interaction-translate",template:""}]}],t.ctorParameters=function(){return[{type:i}]},t.propDecorators={features:[{type:o.Input}],layers:[{type:o.Input}],hitTolerance:[{type:o.Input}],onChange:[{type:o.Output}],onPropertyChange:[{type:o.Output}],onTranslateEnd:[{type:o.Output}],onTranslateStart:[{type:o.Output}],onTranslating:[{type:o.Output}]},t}(),Ot=function(){function t(t){this.elementRef=t}return t.prototype.ngOnInit=function(){this.html=this.elementRef.nativeElement.innerHTML,this.instance=new r.Attribution(this)},t.decorators=[{type:o.Component,args:[{selector:"aol-attribution",template:"<ng-content></ng-content>"}]}],t.ctorParameters=function(){return[{type:o.ElementRef}]},t}(),wt=function(){function t(t){this.source=t}return t.prototype.ngAfterViewInit=function(){this.attributions.length&&(this.instance=this.attributions.map(function(t){return t.instance}),this.source.instance.setAttributions(this.instance))},t.decorators=[{type:o.Component,args:[{selector:"aol-attributions",template:"<ng-content></ng-content>"}]}],t.ctorParameters=function(){return[{type:f,decorators:[{type:o.Host}]}]},t.propDecorators={attributions:[{type:o.ContentChildren,args:[Ot]}]},t}(),vt=[i,e,s,u,y,h,l,m,C,O,v,w,d,S,b,D,T,x,R,V,L,I,M,k,A,G,z,F,X,W,H,B,_,Y,N,J,q,U,K,Q,$,tt,nt,et,ot,rt,it,g,P,st,pt,at,ct,ut,yt,ht,lt,mt,ft,gt,It,dt,Ct,j,Z,Ot,wt],Pt=function(){function t(){}return t.decorators=[{type:o.NgModule,args:[{declarations:vt,imports:[n.CommonModule],exports:vt}]}],t}();t.MapComponent=i,t.ViewComponent=e,t.GraticuleComponent=s,t.LayerGroupComponent=u,t.LayerImageComponent=y,t.LayerTileComponent=h,t.LayerVectorComponent=l,t.LayerVectorTileComponent=m,t.SourceOsmComponent=C,t.SourceBingmapsComponent=O,t.SourceClusterComponent=v,t.SourceVectorComponent=w,t.SourceXYZComponent=d,t.SourceVectorTileComponent=S,t.SourceTileWMSComponent=b,t.SourceTileWMTSComponent=D,t.SourceTileJSONComponent=T,t.SourceGeoJSONComponent=x,t.SourceImageStaticComponent=R,t.SourceImageWMSComponent=V,t.SourceRasterComponent=I,t.SourceImageArcGISRestComponent=L,t.FeatureComponent=M,t.GeometryLinestringComponent=k,t.GeometryPointComponent=A,t.GeometryPolygonComponent=G,t.GeometryCircleComponent=z,t.CoordinateComponent=F,t.CollectionCoordinatesComponent=X,t.StyleComponent=W,t.StyleCircleComponent=H,t.StyleFillComponent=B,t.StyleIconComponent=_,t.StyleStrokeComponent=Y,t.StyleTextComponent=N,t.DefaultControlComponent=J,t.ControlComponent=q,t.ControlAttributionComponent=U,t.ControlFullScreenComponent=K,t.ControlMousePositionComponent=Q,t.ControlOverviewMapComponent=$,t.ControlRotateComponent=tt,t.ControlScaleLineComponent=nt,t.ControlZoomComponent=et,t.ControlZoomSliderComponent=ot,t.ControlZoomToExtentComponent=rt,t.FormatMVTComponent=it,t.TileGridComponent=g,t.TileGridWMTSComponent=P,t.DefaultInteractionComponent=st,t.DoubleClickZoomInteractionComponent=pt,t.DragAndDropInteractionComponent=at,t.DragBoxInteractionComponent=ct,t.DragPanInteractionComponent=ut,t.DragRotateInteractionComponent=yt,t.DragRotateAndZoomInteractionComponent=ht,t.DragZoomInteractionComponent=lt,t.MouseWheelZoomInteractionComponent=mt,t.PinchZoomInteractionComponent=ft,t.DrawInteractionComponent=gt,t.SelectInteractionComponent=It,t.ModifyInteractionComponent=dt,t.TranslateInteractionComponent=Ct,t.OverlayComponent=j,t.ContentComponent=Z,t.AttributionComponent=Ot,t.AttributionsComponent=wt,t.AngularOpenlayersModule=Pt,t.ɵc=E,t.ɵa=c,t.ɵb=f,Object.defineProperty(t,"__esModule",{value:!0})});
 //# sourceMappingURL=ngx-openlayers.umd.min.js.map
\ No newline at end of file
--- a/node_modules/ngx-openlayers/bundles/ngx-openlayers.umd.min.js.map
+++ b/node_modules/ngx-openlayers/bundles/ngx-openlayers.umd.min.js.map
@@ -1 +1 @@
-{"version":3,"sources":["ng://ngx-openlayers/lib/map.component.ts","ng://ngx-openlayers/lib/view.component.ts","ng://ngx-openlayers/lib/graticule.component.ts","null","ng://ngx-openlayers/lib/layers/layer.component.ts","ng://ngx-openlayers/lib/layers/layergroup.component.ts","ng://ngx-openlayers/lib/layers/layerimage.component.ts","ng://ngx-openlayers/lib/layers/layertile.component.ts","ng://ngx-openlayers/lib/layers/layervector.component.ts","ng://ngx-openlayers/lib/layers/layervectortile.component.ts","ng://ngx-openlayers/lib/sources/source.component.ts","ng://ngx-openlayers/lib/tilegrid.component.ts","ng://ngx-openlayers/lib/sources/raster.component.ts","ng://ngx-openlayers/lib/sources/xyz.component.ts","ng://ngx-openlayers/lib/sources/osm.component.ts","ng://ngx-openlayers/lib/sources/bingmaps.component.ts","ng://ngx-openlayers/lib/sources/vector.component.ts","ng://ngx-openlayers/lib/sources/cluster.component.ts","ng://ngx-openlayers/lib/tilegridwmts.component.ts","ng://ngx-openlayers/lib/sources/tilewmts.component.ts","ng://ngx-openlayers/lib/formats/format.component.ts","ng://ngx-openlayers/lib/sources/vectortile.component.ts","ng://ngx-openlayers/lib/sources/tilewms.component.ts","ng://ngx-openlayers/lib/sources/tilejson.component.ts","ng://ngx-openlayers/lib/sources/geojson.component.ts","ng://ngx-openlayers/lib/sources/imagestatic.component.ts","ng://ngx-openlayers/lib/sources/imagewms.component.ts","ng://ngx-openlayers/lib/sources/imagearcgisrest.component.ts","ng://ngx-openlayers/lib/feature.component.ts","ng://ngx-openlayers/lib/geometry.components.ts","ng://ngx-openlayers/lib/content.component.ts","ng://ngx-openlayers/lib/overlay.component.ts","ng://ngx-openlayers/lib/coordinate.component.ts","ng://ngx-openlayers/lib/styles/style.component.ts","ng://ngx-openlayers/lib/styles/circle.component.ts","ng://ngx-openlayers/lib/styles/text.component.ts","ng://ngx-openlayers/lib/styles/stroke.component.ts","ng://ngx-openlayers/lib/styles/icon.component.ts","ng://ngx-openlayers/lib/styles/fill.component.ts","ng://ngx-openlayers/lib/controls/default.component.ts","ng://ngx-openlayers/lib/controls/control.component.ts","ng://ngx-openlayers/lib/controls/attribution.component.ts","ng://ngx-openlayers/lib/controls/fullscreen.component.ts","ng://ngx-openlayers/lib/controls/mouseposition.component.ts","ng://ngx-openlayers/lib/controls/overviewmap.component.ts","ng://ngx-openlayers/lib/controls/rotate.component.ts","ng://ngx-openlayers/lib/controls/scaleline.component.ts","ng://ngx-openlayers/lib/controls/zoom.component.ts","ng://ngx-openlayers/lib/controls/zoomslider.component.ts","ng://ngx-openlayers/lib/controls/zoomtoextent.component.ts","ng://ngx-openlayers/lib/formats/mvt.component.ts","ng://ngx-openlayers/lib/interactions/default.component.ts","ng://ngx-openlayers/lib/interactions/doubleclickzoom.component.ts","ng://ngx-openlayers/lib/interactions/draganddrop.component.ts","ng://ngx-openlayers/lib/interactions/dragbox.component.ts","ng://ngx-openlayers/lib/interactions/dragpan.component.ts","ng://ngx-openlayers/lib/interactions/dragrotate.component.ts","ng://ngx-openlayers/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-openlayers/lib/interactions/dragzoom.component.ts","ng://ngx-openlayers/lib/interactions/mousewheelzoom.component.ts","ng://ngx-openlayers/lib/interactions/pinchzoom.component.ts","ng://ngx-openlayers/lib/interactions/draw.component.ts","ng://ngx-openlayers/lib/interactions/select.component.ts","ng://ngx-openlayers/lib/interactions/modify.component.ts","ng://ngx-openlayers/lib/interactions/translate.component.ts","ng://ngx-openlayers/lib/attribution.component.ts","ng://ngx-openlayers/lib/attributions.component.ts","ng://ngx-openlayers/public_api.ts"],"names":["MapComponent","host","this","componentType","width","height","controls","interactions","onClick","EventEmitter","onDblClick","onMoveEnd","onPointerDrag","onPointerMove","onPostCompose","onPostRender","onPreCompose","onPropertyChange","onSingleClick","prototype","ngOnInit","_this","instance","Map","setTarget","nativeElement","firstElementChild","on","event","emit","ngOnChanges","changes","properties","key","hasOwnProperty","currentValue","setProperties","ngAfterViewInit","updateSize","Component","args","selector","template","ElementRef","Input","Output","ViewComponent","zoomAnimation","onChangeZoom","View","setView","animate","zoom","setZoom","ngOnDestroy","GraticuleComponent","map","Graticule","setMap","ngAfterContentInit","strokeStyle","showLabels","lonLabelPosition","latLabelPosition","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","__extends","__","constructor","create","LayerComponent","precompose","undefined","postcompose","getLayers","push","remove","un","previousValue","LayerGroupComponent","group","_super","call","tslib_1.__extends","layer","Group","decorators","type","SkipSelf","Optional","LayerImageComponent","Image","LayerTileComponent","Tile","LayerVectorComponent","Vector","LayerVectorTileComponent","VectorTile","SourceComponent","raster","setSource","sources","_register","s","TileGridComponent","resolutions","tilegrid","TileGrid","createXYZ","SourceRasterComponent","beforeOperations","afterOperations","source","Raster","providers","provide","useExisting","forwardRef","Host","SourceXYZComponent","tileGridXYZ","tileGrid","XYZ","ContentChild","SourceOsmComponent","OSM","SourceBingmapsComponent","imagerySet","BingMaps","SourceVectorComponent","SourceClusterComponent","sourceVectorComponent","Cluster","TileGridWMTSComponent","WMTS","SourceTileWMTSComponent","url","setLayerSource","tileGridWMTS","FormatComponent","SourceVectorTileComponent","format","formatComponent","tileGridComponent","SourceTileWMSComponent","TileWMS","updateParams","params","SourceTileJSONComponent","TileJSON","SourceGeoJSONComponent","GeoJSON","SourceImageStaticComponent","ImageStatic","SourceImageWMSComponent","ImageWMS","SourceImageArcGISRestComponent","ratio","ImageArcGISRest","FeatureComponent","Feature","id","setId","addFeature","removeFeature","GeometryLinestringComponent","geom","LineString","setGeometry","GeometryPointComponent","Point","GeometryPolygonComponent","Polygon","GeometryCircleComponent","Circle","defineProperty","getRadius","radius","setRadius","ContentComponent","elementRef","OverlayComponent","content","element","Overlay","addOverlay","removeOverlay","CoordinateComponent","viewHost","geometryPointHost","geometryCircleHost","overlayHost","srid","referenceProjection","referenceProjectionCode","transformedCoordinates","getView","getProjection","getCode","x","y","proj","transform","setCoordinates","setCenter","setPosition","CollectionCoordinatesComponent","geometryLinestring","geometryPolygon","Error","coordinates","forEach","coordinate","bind","StyleComponent","featureHost","layerHost","update","changed","style","Style","setStyle","StyleCircleComponent","setImage","StyleTextComponent","Text","setText","setFont","setOffsetX","setOffsetY","setScale","setRotation","setTextAlign","setTextBaseline","StyleStrokeComponent","styleHost","styleCircleHost","styleTextHost","Stroke","setStroke","stroke","setColor","setLineCap","setLineDash","setLineJoin","setMiterLimit","setWidth","StyleIconComponent","Icon","setOpacity","StyleFillComponent","Fill","setFill","fill","DefaultControlComponent","control","defaults","c","addControl","removeControl","ControlComponent","Control","ControlAttributionComponent","target","Attribution","ControlFullScreenComponent","FullScreen","ControlMousePositionComponent","MousePosition","ControlOverviewMapComponent","OverviewMap","ControlRotateComponent","Rotate","ControlScaleLineComponent","ScaleLine","ControlZoomComponent","Zoom","ControlZoomSliderComponent","ZoomSlider","ControlZoomToExtentComponent","ZoomToExtent","FormatMVTComponent","MVT","DefaultInteractionComponent","interaction","i","addInteraction","removeInteraction","DoubleClickZoomInteractionComponent","DoubleClickZoom","DragAndDropInteractionComponent","DragAndDrop","DragBoxInteractionComponent","DragBox","DragPanInteractionComponent","DragPan","DragRotateInteractionComponent","DragRotate","DragRotateAndZoomInteractionComponent","DragRotateAndZoom","DragZoomInteractionComponent","DragZoom","MouseWheelZoomInteractionComponent","MouseWheelZoom","PinchZoomInteractionComponent","PinchZoom","DrawInteractionComponent","onChange","onChangeActive","onDrawEnd","onDrawStart","Draw","SelectInteractionComponent","onSelect","Select","ModifyInteractionComponent","onModifyEnd","onModifyStart","Modify","TranslateInteractionComponent","onTranslateEnd","onTranslateStart","onTranslating","Translate","AttributionComponent","html","innerHTML","AttributionsComponent","attributions","length","cmp","setAttributions","ContentChildren","COMPONENTS","AngularOpenlayersModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["import {\n  Component,\n  OnInit,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { Map, MapBrowserEvent, MapEvent, render, ObjectEvent, control, interaction } from 'openlayers';\n\n@Component({\n  selector: 'aol-map',\n  template: `\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\n    <ng-content></ng-content>\n  `,\n})\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\n  public instance: Map;\n  public componentType = 'map';\n\n  @Input()\n  width = '100%';\n  @Input()\n  height = '100%';\n  @Input()\n  pixelRatio: number;\n  @Input()\n  keyboardEventTarget: Element | string;\n  @Input()\n  loadTilesWhileAnimating: boolean;\n  @Input()\n  loadTilesWhileInteracting: boolean;\n  @Input()\n  logo: string | boolean;\n  @Input()\n  renderer: 'canvas' | 'webgl';\n\n  @Output()\n  onClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onDblClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onMoveEnd: EventEmitter<MapEvent>;\n  @Output()\n  onPointerDrag: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onPointerMove: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onPostCompose: EventEmitter<render.Event>;\n  @Output()\n  onPostRender: EventEmitter<MapEvent>;\n  @Output()\n  onPreCompose: EventEmitter<render.Event>;\n  @Output()\n  onPropertyChange: EventEmitter<ObjectEvent>;\n  @Output()\n  onSingleClick: EventEmitter<MapBrowserEvent>;\n\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\n  controls: control.Control[] = [];\n  interactions: interaction.Interaction[] = [];\n\n  constructor(private host: ElementRef) {\n    this.onClick = new EventEmitter<MapBrowserEvent>();\n    this.onDblClick = new EventEmitter<MapBrowserEvent>();\n    this.onMoveEnd = new EventEmitter<MapEvent>();\n    this.onPointerDrag = new EventEmitter<MapBrowserEvent>();\n    this.onPointerMove = new EventEmitter<MapBrowserEvent>();\n    this.onPostCompose = new EventEmitter<render.Event>();\n    this.onPostRender = new EventEmitter<MapEvent>();\n    this.onPreCompose = new EventEmitter<render.Event>();\n    this.onPropertyChange = new EventEmitter<ObjectEvent>();\n    this.onSingleClick = new EventEmitter<MapBrowserEvent>();\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.Map instance with:', this);\n    this.instance = new Map(this);\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\n    this.instance.on('click', (event: MapBrowserEvent) => this.onClick.emit(event));\n    this.instance.on('dblclick', (event: MapBrowserEvent) => this.onDblClick.emit(event));\n    this.instance.on('moveend', (event: MapEvent) => this.onMoveEnd.emit(event));\n    this.instance.on('pointerdrag', (event: MapBrowserEvent) => this.onPointerDrag.emit(event));\n    this.instance.on('pointermove', (event: MapBrowserEvent) => this.onPointerMove.emit(event));\n    this.instance.on('postcompose', (event: render.Event) => this.onPostCompose.emit(event));\n    this.instance.on('postrender', (event: MapEvent) => this.onPostRender.emit(event));\n    this.instance.on('precompose', (event: render.Event) => this.onPreCompose.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.onPropertyChange.emit(event));\n    this.instance.on('singleclick', (event: MapBrowserEvent) => this.onSingleClick.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngAfterViewInit() {\n    this.instance.updateSize();\n  }\n}\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { View, Extent, ObjectEvent, Coordinate } from 'openlayers';\nimport { MapComponent } from './map.component';\n\n@Component({\n  selector: 'aol-view',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: View;\n  public componentType = 'view';\n\n  @Input()\n  constrainRotation: boolean | number;\n  @Input()\n  enableRotation: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  resolution: number;\n  @Input()\n  resolutions: number[];\n  @Input()\n  rotation: number;\n  @Input()\n  zoom: number;\n  @Input()\n  zoomFactor: number;\n  @Input()\n  center: Coordinate;\n  @Input()\n  projection: string;\n\n  @Input()\n  zoomAnimation = false;\n\n  @Output()\n  onChangeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n\n  constructor(private host: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.View instance with: ', this);\n    this.instance = new View(this);\n    this.host.instance.setView(this.instance);\n\n    this.instance.on('change:zoom', (event: ObjectEvent) => this.onChangeZoom.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'zoom':\n            /** Work-around: setting the zoom via setProperties does not work. */\n            if (this.zoomAnimation) {\n              this.instance.animate({ zoom: changes[key].currentValue });\n            } else {\n              this.instance.setZoom(changes[key].currentValue);\n            }\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-view');\n  }\n}\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Graticule, style } from 'openlayers';\nimport { MapComponent } from './map.component';\n\n@Component({\n  selector: 'aol-graticule',\n  template: '<ng-content></ng-content>',\n})\nexport class GraticuleComponent implements AfterContentInit, OnChanges {\n  instance: any;\n  public componentType = 'graticule';\n\n  @Input()\n  strokeStyle: style.Stroke;\n  @Input()\n  showLabels: boolean;\n  @Input()\n  lonLabelPosition: number;\n  @Input()\n  latLabelPosition: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    if (properties) {\n      this.instance = new Graticule(properties);\n    }\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngAfterContentInit(): void {\n    this.instance = new Graticule({\n      strokeStyle: this.strokeStyle,\n      showLabels: this.showLabels,\n      lonLabelPosition: this.lonLabelPosition,\n      latLabelPosition: this.latLabelPosition,\n    });\n    this.instance.setMap(this.map.instance);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Extent } from 'openlayers';\nimport { LayerGroupComponent } from './layergroup.component';\n\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: any;\n  public componentType = 'layer';\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  zIndex: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n\n  @Input()\n  precompose: (evt: ol.events.Event) => void;\n  @Input()\n  postcompose: (evt: ol.events.Event) => void;\n\n  constructor(protected host: LayerGroupComponent | MapComponent) {}\n\n  ngOnInit() {\n    if (this.precompose !== null && this.precompose !== undefined) {\n      this.instance.on('precompose', this.precompose);\n    }\n    if (this.postcompose !== null && this.postcompose !== undefined) {\n      this.instance.on('postcompose', this.postcompose);\n    }\n    this.host.instance.getLayers().push(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.getLayers().remove(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n        if (key === 'precompose') {\n          this.instance.un('precompose', changes[key].previousValue);\n          this.instance.on('precompose', changes[key].currentValue);\n        }\n        if (key === 'postcompose') {\n          this.instance.un('postcompose', changes[key].previousValue);\n          this.instance.on('postcompose', changes[key].currentValue);\n        }\n      }\n    }\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n}\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\nimport { layer } from 'openlayers';\nimport { LayerComponent } from './layer.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-layer-group',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\n  public instance: ol.layer.Group;\n\n  constructor(\n    map: MapComponent,\n    @SkipSelf()\n    @Optional()\n    group?: LayerGroupComponent\n  ) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log(`creating ol.layer.Group instance with:`, this);\n    this.instance = new layer.Group(this);\n    super.ngOnInit();\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { Extent, layer, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-image',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\n  public source: source.Image;\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  zIndex: number;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    this.instance = new layer.Image(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { layer, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-tile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: source.Tile;\n\n  @Input()\n  preload: number;\n  @Input()\n  useInterimTilesOnError: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Tile instance with:', this);\n    this.instance = new layer.Tile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { layer, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: source.Vector;\n\n  @Input()\n  renderBuffer: number;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Vector instance with:', this);\n    this.instance = new layer.Vector(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnInit, Input, Optional, SimpleChanges, OnChanges } from '@angular/core';\nimport { layer, style, StyleFunction } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\n  @Input()\n  renderBuffer: number;\n  @Input()\n  renderMode: layer.VectorTileRenderType | string;\n  /* not marked as optional in the typings */\n  @Input()\n  renderOrder: (feature1: ol.Feature, feature2: ol.Feature) => number;\n  @Input()\n  style: style.Style | style.Style[] | StyleFunction;\n  @Input()\n  updateWhileAnimating: boolean;\n  @Input()\n  updateWhileInteracting: boolean;\n  @Input()\n  visible: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.VectorTile instance with:', this);\n    this.instance = new layer.VectorTile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Input, OnDestroy } from '@angular/core';\nimport { source } from 'openlayers';\nimport { LayerComponent } from '../layers/layer.component';\nimport AttributionLike = ol.AttributionLike;\nimport { SourceRasterComponent } from './raster.component';\n\nexport class SourceComponent implements OnDestroy {\n  public instance: source.Source;\n  public componentType = 'source';\n\n  @Input()\n  attributions: AttributionLike;\n\n  constructor(protected host: LayerComponent, protected raster?: SourceRasterComponent) {}\n\n  ngOnDestroy() {\n    if (this.host && this.host.instance) {\n      this.host.instance.setSource(null);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [];\n    }\n  }\n\n  protected _register(s: source.Source) {\n    if (this.host) {\n      this.host.instance.setSource(s);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [s];\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { tilegrid, Extent, Size, Coordinate } from 'openlayers';\n\n@Component({\n  selector: 'aol-tilegrid',\n  template: '',\n})\nexport class TileGridComponent implements OnInit, OnChanges {\n  instance: tilegrid.TileGrid;\n\n  @Input()\n  extent: Extent;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  resolutions: number[];\n\n  ngOnInit() {\n    if (!this.resolutions) {\n      this.instance = tilegrid.createXYZ(this);\n    } else {\n      this.instance = new tilegrid.TileGrid(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.resolutions) {\n      this.instance = tilegrid.createXYZ(this);\n    } else {\n      this.instance = new tilegrid.TileGrid(this);\n    }\n  }\n}\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Output } from '@angular/core';\nimport { RasterOperation, RasterOperationType, source } from 'openlayers';\n\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-raster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [\n    {\n      provide: SourceComponent,\n      useExisting: forwardRef(() => SourceRasterComponent),\n    },\n  ],\n})\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\n  instance: source.Raster;\n\n  @Input()\n  operation?: RasterOperation;\n  @Input()\n  threads?: number;\n  @Input()\n  lib?: Object;\n  @Input()\n  operationType?: RasterOperationType;\n\n  @Output()\n  beforeOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\n  @Output()\n  afterOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\n\n  sources: source.Source[] = [];\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.instance = new source.Raster(this);\n\n    this.instance.on('beforeoperations', (event: source.RasterEvent) => this.beforeOperations.emit(event));\n    this.instance.on('afteroperations', (event: source.RasterEvent) => this.afterOperations.emit(event));\n\n    this._register(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  AfterContentInit,\n  forwardRef,\n  OnChanges,\n  ContentChild,\n  SimpleChanges,\n  Optional,\n} from '@angular/core';\nimport { source, Size, TileUrlFunctionType, TileLoadFunctionType, tilegrid } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceRasterComponent } from './raster.component';\n\n@Component({\n  selector: 'aol-source-xyz',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\n})\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: source.XYZ;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  opaque: boolean;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  tileGrid: tilegrid.TileGrid;\n  @Input()\n  tileLoadFunction?: TileLoadFunctionType;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  tileUrlFunction: TileUrlFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(TileGridComponent)\n  tileGridXYZ: TileGridComponent;\n\n  constructor(\n    @Optional()\n    @Host()\n    layer: LayerTileComponent,\n    @Optional()\n    @Host()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n    this.instance = new source.XYZ(this);\n    this._register(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    this.instance.setProperties(properties, false);\n    if (changes.hasOwnProperty('url')) {\n      this.instance = new source.XYZ(this);\n      this._register(this.instance);\n    }\n  }\n}\n","import { Component, Host, forwardRef, Input, AfterContentInit, Optional } from '@angular/core';\nimport { source, AttributionLike, TileLoadFunctionType } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { SourceXYZComponent } from './xyz.component';\nimport { SourceRasterComponent } from './raster.component';\n\n@Component({\n  selector: 'aol-source-osm',\n  template: `\n    <div class=\"aol-source-osm\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\n})\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\n  instance: source.OSM;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  maxZoom: number;\n  @Input()\n  opaque: boolean;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: TileLoadFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  wrapX: boolean;\n\n  constructor(\n    @Host()\n    @Optional()\n    layer: LayerTileComponent,\n    @Host()\n    @Optional()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n    this.instance = new source.OSM(this);\n    this._register(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source, TileLoadFunctionType } from 'openlayers';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\n\n@Component({\n  selector: 'aol-source-bingmaps',\n  template: `\n    <div class=\"aol-source-bingmaps\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\n})\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\n  instance: source.BingMaps;\n\n  @Input()\n  cacheSize: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  culture: string;\n  @Input()\n  key: string;\n  @Input()\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\n  @Input()\n  maxZoom: number;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: TileLoadFunctionType;\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.BingMaps(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source } from 'openlayers';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\n})\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\n  instance: source.Vector;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  useSpatialIndex: boolean;\n  @Input()\n  wrapX: boolean;\n  @Input()\n  url: string;\n  @Input()\n  format: ol.format.Feature;\n  @Input()\n  strategy: ol.LoadingStrategy;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { source, Feature, geom } from 'openlayers';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { SourceVectorComponent } from './vector.component';\n\n@Component({\n  selector: 'aol-source-cluster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\n})\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit {\n  instance: source.Cluster;\n\n  @Input()\n  distance: number;\n  @Input()\n  geometryFunction?: ((feature: Feature) => geom.Point);\n\n  @ContentChild(SourceVectorComponent)\n  sourceVectorComponent: SourceVectorComponent;\n  source: source.Vector;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.source = this.sourceVectorComponent.instance;\n\n    this.instance = new source.Cluster(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { tilegrid, Size, Coordinate } from 'openlayers';\nimport { TileGridComponent } from './tilegrid.component';\n\n@Component({\n  selector: 'aol-tilegrid-wmts',\n  template: '',\n})\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\n  instance: tilegrid.WMTS;\n\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  origins?: Coordinate[];\n  @Input()\n  resolutions: number[];\n  @Input()\n  matrixIds: string[];\n  @Input()\n  sizes?: Size[];\n  @Input()\n  tileSizes?: (number | Size)[];\n  @Input()\n  widths?: number[];\n\n  ngOnInit() {\n    this.instance = new tilegrid.WMTS(this);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  AfterContentInit,\n  ContentChild,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { TileLoadFunctionType, tilegrid, ProjectionLike, source, ImageTile, TileCoord, Tile } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\n\n@Component({\n  selector: 'aol-source-tilewmts',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\n})\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: source.WMTS;\n  @Input()\n  cacheSize?: number;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  logo?: string | olx.LogoOptions;\n  @Input()\n  tileGrid: tilegrid.WMTS;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  reprojectionErrorThreshold?: number;\n  @Input()\n  requestEncoding?: source.WMTSRequestEncoding | string;\n  @Input()\n  layer: string;\n  @Input()\n  style: string;\n  @Input()\n  tileClass?: ((\n    n: ImageTile,\n    coords: TileCoord,\n    state: Tile.State,\n    s1: string,\n    s2: string,\n    type: TileLoadFunctionType\n  ) => any);\n  @Input()\n  tilePixelRatio?: number;\n  @Input()\n  version?: string;\n  @Input()\n  format?: string;\n  @Input()\n  matrixSet: string;\n  @Input()\n  dimensions?: GlobalObject;\n  @Input()\n  url?: string;\n  @Input()\n  tileLoadFunction?: TileLoadFunctionType;\n  @Input()\n  urls?: string[];\n  @Input()\n  wrapX?: boolean;\n\n  @ContentChild(TileGridWMTSComponent)\n  tileGridWMTS: TileGridWMTSComponent;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n\n  setLayerSource(): void {\n    this.instance = new source.WMTS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngAfterContentInit(): void {\n    if (this.tileGridWMTS) {\n      this.tileGrid = this.tileGridWMTS.instance;\n      this.setLayerSource();\n    }\n  }\n}\n","import { format } from 'openlayers';\n\nexport class FormatComponent {\n  public instance: format.Feature;\n  public componentType = 'format';\n}\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { source, ProjectionLike, TileUrlFunctionType, format, tilegrid } from 'openlayers';\nimport { LayerVectorTileComponent } from '../layers/layervectortile.component';\nimport { FormatComponent } from '../formats/format.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent) }],\n})\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\n  public instance: source.VectorTile;\n  @Input()\n  cacheSize: number;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileUrlFunction: TileUrlFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(FormatComponent)\n  formatComponent: FormatComponent;\n  format: format.Feature;\n  @ContentChild(TileGridComponent)\n  tileGridComponent: TileGridComponent;\n  tileGrid: tilegrid.TileGrid;\n\n  constructor(@Host() layer: LayerVectorTileComponent) {\n    super(layer);\n  }\n\n  /* need the children to construct the OL3 object */\n  ngAfterContentInit() {\n    this.format = this.formatComponent.instance;\n    this.tileGrid = this.tileGridComponent.instance;\n    // console.log('creating ol.source.VectorTile instance with:', this);\n    this.instance = new source.VectorTile(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\nimport { source, TileLoadFunctionType, tilegrid } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-tilewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\n})\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: source.TileWMS;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  gutter: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  params: Object;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  serverType: string;\n  @Input()\n  tileGrid: tilegrid.TileGrid;\n  @Input()\n  tileLoadFunction: TileLoadFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.TileWMS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-tilejson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\n})\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\n  instance: source.TileJSON;\n\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.TileJSON(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source, ProjectionLike, format } from 'openlayers';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-geojson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\n})\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\n  instance: source.Vector;\n  format: format.Feature;\n  @Input()\n  defaultDataProjection: ProjectionLike;\n  @Input()\n  featureProjection: ProjectionLike;\n  @Input()\n  geometryName: string;\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.format = new format.GeoJSON(this);\n    this.instance = new source.Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { ProjectionLike, source, Extent, AttributionLike, ImageLoadFunctionType, Size } from 'openlayers';\nimport { SourceComponent } from './source.component';\nimport { LayerImageComponent } from '../layers/layerimage.component';\n\n@Component({\n  selector: 'aol-source-imagestatic',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\n})\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit {\n  instance: source.ImageStatic;\n\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  imageExtent: Extent;\n  @Input()\n  url: string;\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  imageLoadFunction?: ImageLoadFunctionType;\n  @Input()\n  logo?: string | olx.LogoOptions;\n  @Input()\n  imageSize?: Size;\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.ImageStatic(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\nimport { AttributionLike, ImageLoadFunctionType, ProjectionLike, source } from 'openlayers';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-imagewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\n})\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: source.ImageWMS;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  serverType: string;\n  @Input()\n  imageLoadFunction?: ImageLoadFunctionType;\n  @Input()\n  logo: string | olx.LogoOptions;\n  @Input()\n  params: Object;\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  ratio: number;\n  @Input()\n  resolutions: Array<number>;\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.ImageWMS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, forwardRef, Host, Input, OnInit } from '@angular/core';\nimport { source, ProjectionLike, Attribution, ImageLoadFunctionType } from 'openlayers';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-imagearcgisrest',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\n})\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit {\n  instance: source.ImageArcGISRest;\n\n  @Input() projection: ProjectionLike | string;\n  @Input() url: string;\n  @Input() attributions: Attribution[];\n  @Input() crossOrigin?: string;\n  @Input() imageLoadFunction?: ImageLoadFunctionType;\n  @Input() params?: { [k: string]: any };\n  @Input() ratio = 1;\n  @Input() resolutions?: number[];\n  @Input() logo?: string | olx.LogoOptions;\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.ImageArcGISRest(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Feature } from 'openlayers';\nimport { SourceVectorComponent } from './sources/vector.component';\n\n@Component({\n  selector: 'aol-feature',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\n  public componentType = 'feature';\n  public instance: Feature;\n\n  @Input()\n  id: string | number | undefined;\n\n  constructor(private host: SourceVectorComponent) {}\n\n  ngOnInit() {\n    this.instance = new Feature();\n    if (this.id !== undefined) {\n      this.instance.setId(this.id);\n    }\n    this.host.instance.addFeature(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.removeFeature(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance) {\n      this.instance.setId(this.id);\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { geom } from 'openlayers';\nimport { FeatureComponent } from './feature.component';\n\n@Component({\n  selector: 'aol-geometry-linestring',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryLinestringComponent implements OnInit, OnDestroy {\n  public componentType = 'geometry-linestring';\n  public instance: geom.LineString;\n\n  constructor(private host: FeatureComponent) {\n    // console.log('instancing aol-geometry-linestring');\n  }\n\n  ngOnInit() {\n    this.instance = new geom.LineString([]);\n    this.host.instance.setGeometry(this.instance);\n  }\n  ngOnDestroy() {\n    // this.host.setGeometry(null);\n  }\n}\n\n@Component({\n  selector: 'aol-geometry-point',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPointComponent implements OnInit, OnDestroy {\n  public componentType = 'geometry-point';\n  public instance: geom.Point;\n\n  constructor(private host: FeatureComponent) {\n    // console.log('creating aol-geometry-point');\n  }\n\n  ngOnInit() {\n    this.instance = new geom.Point([0, 0]); // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.host.instance.setGeometry(this.instance);\n  }\n\n  ngOnDestroy() {\n    // this.host.setGeometry(null);\n  }\n}\n\n@Component({\n  selector: 'aol-geometry-polygon',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPolygonComponent implements OnInit, OnDestroy {\n  public componentType = 'geometry-polygon';\n  public instance: geom.Polygon;\n\n  constructor(private host: FeatureComponent) {\n    // console.log('creating aol-geometry-polygon');\n  }\n\n  ngOnInit() {\n    // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.instance = new geom.Polygon([[[0, 0], [1, 0], [1, 1]]]);\n    this.host.instance.setGeometry(this.instance);\n  }\n\n  ngOnDestroy() {\n    // this.host.setGeometry(null);\n  }\n}\n\n@Component({\n  selector: 'aol-geometry-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryCircleComponent implements OnInit {\n  public componentType = 'geometry-circle';\n  public instance: geom.Circle;\n\n  @Input()\n  get radius(): number {\n    return this.instance.getRadius();\n  }\n  set radius(radius: number) {\n    this.instance.setRadius(radius);\n  }\n\n  constructor(private host: FeatureComponent) {\n    // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.instance = new geom.Circle([0, 0]);\n  }\n\n  ngOnInit() {\n    this.host.instance.setGeometry(this.instance);\n  }\n}\n","import { Component, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'aol-content',\n  template: '<ng-content></ng-content>',\n})\nexport class ContentComponent {\n  constructor(public elementRef: ElementRef) {}\n}\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport { Overlay, OverlayPositioning } from 'openlayers';\nimport { ContentComponent } from './content.component';\n\n@Component({\n  selector: 'aol-overlay',\n  template: '<ng-content></ng-content>',\n})\nexport class OverlayComponent implements OnInit, OnDestroy {\n  componentType = 'overlay';\n  instance: Overlay;\n  element: Element;\n  @ContentChild(ContentComponent)\n  content: ContentComponent;\n\n  @Input()\n  id: number | string;\n  @Input()\n  offset: number[];\n  @Input()\n  positioning: OverlayPositioning | string;\n  @Input()\n  stopEvent: boolean;\n  @Input()\n  insertFirst: boolean;\n  @Input()\n  autoPan: boolean;\n  @Input()\n  autoPanAnimation: olx.animation.PanOptions;\n  @Input()\n  autoPanMargin: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Overlay(this);\n      this.map.instance.addOverlay(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeOverlay(this.instance);\n    }\n  }\n}\n","import { Component, Optional, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { proj, Coordinate } from 'openlayers';\nimport { MapComponent } from './map.component';\nimport {\n  GeometryPointComponent,\n  GeometryLinestringComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n} from './geometry.components';\nimport { ViewComponent } from './view.component';\nimport { OverlayComponent } from './overlay.component';\n\n@Component({\n  selector: 'aol-coordinate',\n  template: `\n    <div class=\"aol-coordinate\"></div>\n  `,\n})\nexport class CoordinateComponent implements OnChanges {\n  private host: any;\n\n  @Input()\n  x: number;\n  @Input()\n  y: number;\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() viewHost: ViewComponent,\n    @Optional() geometryPointHost: GeometryPointComponent,\n    @Optional() geometryCircleHost: GeometryCircleComponent,\n    @Optional() overlayHost: OverlayComponent\n  ) {\n    // console.log('instancing aol-coordinate');\n    if (geometryPointHost !== null) {\n      this.host = geometryPointHost;\n    } else if (geometryCircleHost !== null) {\n      this.host = geometryCircleHost;\n    } else if (viewHost !== null) {\n      this.host = viewHost;\n    } else if (overlayHost !== null) {\n      this.host = overlayHost;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let referenceProjection: proj.Projection;\n    let referenceProjectionCode: string;\n    let transformedCoordinates: number[];\n\n    referenceProjection = this.map.instance.getView().getProjection();\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\n\n    if (this.srid === referenceProjectionCode) {\n      transformedCoordinates = [this.x, this.y];\n    } else {\n      transformedCoordinates = proj.transform([this.x, this.y], this.srid, referenceProjectionCode);\n    }\n\n    switch (this.host.componentType) {\n      case 'geometry-point':\n        this.host.instance.setCoordinates(transformedCoordinates);\n        break;\n      case 'geometry-circle':\n      case 'view':\n        this.host.instance.setCenter(transformedCoordinates);\n        break;\n      case 'overlay':\n        this.host.instance.setPosition(transformedCoordinates);\n        break;\n    }\n  }\n}\n\n@Component({\n  selector: 'aol-collection-coordinates',\n  template: `\n    <div class=\"aol-collection-coordinates\"></div>\n  `,\n})\nexport class CollectionCoordinatesComponent implements OnChanges {\n  private host: any;\n\n  @Input()\n  coordinates: [number, number][];\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() geometryLinestring: GeometryLinestringComponent,\n    @Optional() geometryPolygon: GeometryPolygonComponent\n  ) {\n    // console.log('creating aol-collection-coordinates');\n    if (!!geometryLinestring) {\n      this.host = geometryLinestring;\n    } else if (!!geometryPolygon) {\n      this.host = geometryPolygon;\n    } else {\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let referenceProjection: proj.Projection;\n    let referenceProjectionCode: string;\n    let transformedCoordinates: Array<Coordinate>;\n\n    // console.log('coordinates change: ', this.coordinates);\n\n    referenceProjection = this.map.instance.getView().getProjection();\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\n\n    if (this.srid === referenceProjectionCode) {\n      transformedCoordinates = this.coordinates;\n    } else {\n      transformedCoordinates = [];\n      this.coordinates.forEach(\n        function(coordinate: Coordinate) {\n          transformedCoordinates.push(proj.transform(coordinate, this.srid, referenceProjectionCode));\n        }.bind(this)\n      );\n    }\n    switch (this.host.componentType) {\n      case 'geometry-linestring':\n        this.host.instance.setCoordinates(transformedCoordinates);\n        break;\n      case 'geometry-polygon':\n        this.host.instance.setCoordinates([transformedCoordinates]);\n        break;\n      default:\n        throw new Error('aol-collection-coordinates host is of unknown type: ' + this.host.componentType);\n      // break;\n    }\n  }\n}\n","import { Component, Input, Optional, OnInit } from '@angular/core';\nimport { style, StyleGeometryFunction, geom } from 'openlayers';\nimport { FeatureComponent } from '../feature.component';\nimport { LayerVectorComponent } from '../layers/layervector.component';\n\n@Component({\n  selector: 'aol-style',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleComponent implements OnInit {\n  private host: FeatureComponent | LayerVectorComponent;\n  public instance: style.Style;\n  public componentType = 'style';\n\n  @Input()\n  geometry: string | geom.Geometry | StyleGeometryFunction;\n  @Input()\n  fill: style.Fill;\n  @Input()\n  image: style.Image;\n  @Input()\n  stroke: style.Stroke;\n  @Input()\n  text: style.Text;\n  @Input()\n  zIndex: number;\n\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\n    // console.log('creating aol-style');\n    this.host = !!featureHost ? featureHost : layerHost;\n    if (!this.host) {\n      throw new Error('aol-style must be applied to a feature or a layer');\n    }\n  }\n\n  update() {\n    // console.log('updating style\\'s host: ', this.host);\n    this.host.instance.changed();\n  }\n\n  ngOnInit() {\n    // console.log('creating aol-style instance with: ', this);\n    this.instance = new style.Style(this);\n    this.host.instance.setStyle(this.instance);\n  }\n}\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { style } from 'openlayers';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  public componentType = 'style-circle';\n  public instance: style.Circle;\n\n  @Input()\n  fill: style.Fill;\n  @Input()\n  radius: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  stroke: style.Stroke;\n  @Input()\n  atlasManager: style.AtlasManager;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  /**\n   * WORK-AROUND: since the re-rendering is not triggered on style change\n   * we trigger a radius change.\n   * see openlayers #6233 and #5775\n   */\n  update() {\n    if (!!this.instance) {\n      // console.log('setting ol.style.Circle instance\\'s radius');\n      this.instance.setRadius(this.radius);\n    }\n    this.host.update();\n  }\n\n  ngAfterContentInit() {\n    // console.log('creating ol.style.Circle instance with: ', this);\n    this.instance = new style.Circle(this);\n    this.host.instance.setImage(this.instance);\n    this.host.update();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['radius']) {\n      this.instance.setRadius(changes['radius'].currentValue);\n    }\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-style-circle');\n    this.host.instance.setImage(null);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style } from 'openlayers';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-text',\n  template: `\n    <div class=\"aol-style-text\"></div>\n  `,\n})\nexport class StyleTextComponent implements OnInit, OnChanges {\n  public instance: style.Text;\n  public componentType = 'style-text';\n\n  @Input()\n  font: string | undefined;\n  @Input()\n  offsetX: number | undefined;\n  @Input()\n  offsetY: number | undefined;\n  @Input()\n  scale: number | undefined;\n  @Input()\n  rotateWithView: boolean | undefined;\n  @Input()\n  rotation: number | undefined;\n  @Input()\n  text: string | undefined;\n  @Input()\n  textAlign: string | undefined;\n  @Input()\n  textBaseLine: string | undefined;\n\n  constructor(@Optional() private host: StyleComponent) {\n    if (!host) {\n      throw new Error('aol-style-text must be a descendant of aol-style');\n    }\n    // console.log('creating aol-style-text with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Text instance with: ', this);\n    this.instance = new style.Text(this);\n    this.host.instance.setText(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['font']) {\n      this.instance.setFont(changes['font'].currentValue);\n    }\n    if (changes['offsetX']) {\n      this.instance.setOffsetX(changes['offsetX'].currentValue);\n    }\n    if (changes['offsetY']) {\n      this.instance.setOffsetY(changes['offsetY'].currentValue);\n    }\n    if (changes['scale']) {\n      this.instance.setScale(changes['scale'].currentValue);\n    }\n    if (changes['rotation']) {\n      this.instance.setRotation(changes['rotation'].currentValue);\n    }\n    if (changes['text']) {\n      this.instance.setText(changes['text'].currentValue);\n    }\n    if (changes['textAlign']) {\n      this.instance.setTextAlign(changes['textAlign'].currentValue);\n    }\n    if (changes['textBaseLine']) {\n      this.instance.setTextBaseline(changes['textBaseLine'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style, Color } from 'openlayers';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\n\n@Component({\n  selector: 'aol-style-stroke',\n  template: `\n    <div class=\"aol-style-stroke\"></div>\n  `,\n})\nexport class StyleStrokeComponent implements OnInit, OnChanges {\n  public instance: style.Stroke;\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n\n  @Input()\n  color: Color | undefined;\n  @Input()\n  lineCap: string | undefined;\n  @Input()\n  lineDash: number[] | undefined;\n  @Input()\n  lineJoin: string | undefined;\n  @Input()\n  miterLimit: number | undefined;\n  @Input()\n  width: number | undefined;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-stroke with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Stroke instance with: ', this);\n    this.instance = new style.Stroke(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setStroke(this.instance);\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setStroke(this.instance);\n        break;\n      case 'style-circle':\n        this.host.stroke = this.instance;\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['color']) {\n      this.instance.setColor(changes['color'].currentValue);\n    }\n    if (changes['lineCap']) {\n      this.instance.setLineCap(changes['lineCap'].currentValue);\n    }\n    if (changes['lineDash']) {\n      this.instance.setLineDash(changes['lineDash'].currentValue);\n    }\n    if (changes['lineJoin']) {\n      this.instance.setLineJoin(changes['lineJoin'].currentValue);\n    }\n    if (changes['miterLimit']) {\n      this.instance.setMiterLimit(changes['miterLimit'].currentValue);\n    }\n    if (changes['width']) {\n      this.instance.setWidth(changes['width'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style } from 'openlayers';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-icon',\n  template: `\n    <div class=\"aol-style-icon\"></div>\n  `,\n})\nexport class StyleIconComponent implements OnInit, OnChanges {\n  public instance: style.Icon;\n\n  @Input()\n  anchor: [number, number];\n  @Input()\n  anchorXUnits: style.IconAnchorUnits;\n  @Input()\n  anchorYUnits: style.IconAnchorUnits;\n  @Input()\n  anchorOrigin: style.IconOrigin;\n  @Input()\n  color: [number, number, number, number];\n  @Input()\n  crossOrigin: style.IconOrigin;\n  @Input()\n  img: string;\n  @Input()\n  offset: [number, number];\n  @Input()\n  offsetOrigin: style.IconOrigin;\n  @Input()\n  opacity: number;\n  @Input()\n  scale: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  rotateWithView: boolean;\n  @Input()\n  rotation: number;\n  @Input()\n  size: [number, number];\n  @Input()\n  imgSize: [number, number];\n  @Input()\n  src: string;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.style.Icon instance with: ', this);\n    this.instance = new style.Icon(this);\n    this.host.instance.setImage(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['opacity']) {\n      this.instance.setOpacity(changes['opacity'].currentValue);\n    }\n    if (changes['rotation']) {\n      this.instance.setRotation(changes['rotation'].currentValue);\n    }\n    if (changes['scale']) {\n      this.instance.setScale(changes['scale'].currentValue);\n    }\n    if (changes['src']) {\n      this.instance = new style.Icon(this);\n      this.host.instance.setImage(this.instance);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-icon: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style, Color, ColorLike } from 'openlayers';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\n\n@Component({\n  selector: 'aol-style-fill',\n  template: `\n    <div class=\"aol-style-fill\"></div>\n  `,\n})\nexport class StyleFillComponent implements OnInit, OnChanges {\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n  public instance: style.Fill;\n\n  @Input()\n  color: Color | ColorLike;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-fill with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Fill instance with: ', this);\n    this.instance = new style.Fill(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setFill(this.instance);\n        // console.log('setting ol.style instance\\'s fill:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setFill(this.instance);\n        break;\n      case 'style-circle':\n        this.host.fill = this.instance;\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['color']) {\n      this.instance.setColor(changes['color'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { control, Collection } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-defaults',\n  template: '',\n})\nexport class DefaultControlComponent implements OnInit, OnDestroy {\n  instance: Collection<control.Control>;\n  @Input()\n  attribution: boolean;\n  @Input()\n  attributionOptions: olx.control.AttributionOptions;\n  @Input()\n  rotate: boolean;\n  @Input()\n  rotateOptions: olx.control.RotateOptions;\n  @Input()\n  zoom: boolean;\n  @Input()\n  zoomOptions: olx.control.ZoomOptions;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('ol.control.defaults init: ', this);\n    this.instance = control.defaults(this);\n    this.instance.forEach(c => this.map.instance.addControl(c));\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-defaults');\n    this.instance.forEach(c => this.map.instance.removeControl(c));\n  }\n}\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { ContentComponent } from '../content.component';\n\n@Component({\n  selector: 'aol-control',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: control.Control;\n  element: Element;\n  @ContentChild(ContentComponent)\n  content: ContentComponent;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new control.Control(this);\n      this.map.instance.addControl(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeControl(this.instance);\n    }\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-attribution',\n  template: ``,\n})\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: control.Attribution;\n  target: Element;\n  @Input()\n  collapsible: boolean;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.Attribution init: ', this);\n    this.instance = new control.Attribution(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-attribution');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-fullscreen',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\n  instance: control.FullScreen;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  labelActive: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  keys: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-fullscreen');\n  }\n\n  ngOnInit() {\n    this.instance = new control.FullScreen(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-fullscreen');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control, CoordinateFormatType, ProjectionLike } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-mouseposition',\n  template: ``,\n})\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\n  instance: control.MousePosition;\n  @Input()\n  coordinateFormat: CoordinateFormatType;\n  @Input()\n  projection: ProjectionLike;\n  target: Element;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.MousePosition init: ', this);\n    this.instance = new control.MousePosition(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-mouseposition');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control, View, layer } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-overviewmap',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlOverviewMapComponent implements OnInit, OnDestroy {\n  instance: control.OverviewMap;\n  @Input()\n  collapsed: boolean;\n  @Input()\n  collapseLabel: string;\n  @Input()\n  collapsible: boolean;\n  @Input()\n  label: string;\n  @Input()\n  layers: layer.Layer[];\n  @Input()\n  target: Element;\n  @Input()\n  tipLabel: string;\n  @Input()\n  view: View;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-overviewmap');\n  }\n\n  ngOnInit() {\n    this.instance = new control.OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-overviewmap');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-rotate',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlRotateComponent implements OnInit, OnDestroy {\n  instance: control.Rotate;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  duration: number;\n  @Input()\n  autoHide: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-rotate');\n  }\n\n  ngOnInit() {\n    this.instance = new control.Rotate(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-rotate');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-scaleline',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\n  instance: control.ScaleLine;\n  @Input()\n  units: string;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-scaleline');\n  }\n\n  ngOnInit() {\n    this.instance = new control.ScaleLine(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-scaleline');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoom',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomComponent implements OnInit, OnDestroy {\n  instance: control.Zoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  zoomInLabel: string | Node;\n  @Input()\n  zoomOutLabel: string | Node;\n  @Input()\n  zoomInTipLabel: string;\n  @Input()\n  zoomOutTipLabel: string;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoom');\n  }\n\n  ngOnInit() {\n    this.instance = new control.Zoom(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoom');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoomslider',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\n  instance: control.ZoomSlider;\n\n  @Input()\n  className: string;\n  @Input()\n  duration: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomslider');\n  }\n\n  ngOnInit() {\n    this.instance = new control.ZoomSlider(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomslider');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control, Extent } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoomtoextent',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\n  instance: control.ZoomToExtent;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string | Node;\n  @Input()\n  tipLabel: string;\n  @Input()\n  extent: Extent;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomtoextent');\n  }\n\n  ngOnInit() {\n    this.instance = new control.ZoomToExtent(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomtoextent');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { format, geom } from 'openlayers';\nimport { FormatComponent } from './format.component';\n\n@Component({\n  selector: 'aol-format-mvt',\n  template: '',\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\n})\nexport class FormatMVTComponent extends FormatComponent {\n  instance: format.MVT;\n\n  @Input()\n  featureClass:\n    | ((geom: geom.Geometry | { [k: string]: any }) => any)\n    | ((geom: geom.GeometryType, arg2: number[], arg3: number[] | number[][], arg4: { [k: string]: any }) => any);\n  @Input()\n  geometryName: string;\n  @Input()\n  layerName: string;\n  @Input()\n  layers: string[];\n\n  constructor() {\n    super();\n    this.instance = new format.MVT(this);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { interaction, Collection } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-default',\n  template: '',\n})\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\n  instance: Collection<interaction.Interaction>;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = interaction.defaults();\n    this.instance.forEach(i => this.map.instance.addInteraction(i));\n  }\n\n  ngOnDestroy() {\n    this.instance.forEach(i => this.map.instance.removeInteraction(i));\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-doubleclickzoom',\n  template: '',\n})\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DoubleClickZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DoubleClickZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { interaction, format, ProjectionLike } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-draganddrop',\n  template: '',\n})\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragAndDrop;\n\n  @Input()\n  formatConstructors: ((n: format.Feature) => any)[];\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  target: Element;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragAndDrop(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType, DragBoxEndConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragbox',\n  template: '',\n})\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragBox;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  boxEndCondition: DragBoxEndConditionType;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragBox(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType, Kinetic } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragpan',\n  template: '',\n})\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragPan;\n\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  kinetic: Kinetic;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragPan(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragrotate',\n  template: '',\n})\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragRotate;\n\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragRotate(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragrotateandzoom',\n  template: '',\n})\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragRotate;\n\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragRotateAndZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragzoom',\n  template: '',\n})\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragZoom;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  duration: number;\n  @Input()\n  out: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-mousewheelzoom',\n  template: '',\n})\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.MouseWheelZoom;\n  @Input()\n  duration: number;\n  @Input()\n  timeout: number;\n  @Input()\n  useAnchor: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.MouseWheelZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-pinchzoom',\n  template: '',\n})\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.PinchZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  constrainResolution: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.PinchZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-draw',\n  template: '',\n})\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Draw;\n\n  @Input()\n  clickTolerance?: number;\n  @Input()\n  features?: ol.Collection<ol.Feature>;\n  @Input()\n  source?: ol.source.Vector;\n  @Input()\n  snapTolerance?: number;\n  @Input()\n  type: ol.geom.GeometryType;\n  @Input()\n  maxPoints?: number;\n  @Input()\n  minPoints?: number;\n  @Input()\n  finishCondition?: ol.EventsConditionType;\n  @Input()\n  style?: ol.style.Style | ol.style.Style[] | ol.StyleFunction;\n  @Input()\n  geometryFunction?: ol.DrawGeometryFunctionType;\n  @Input()\n  geometryName?: string;\n  @Input()\n  condition?: ol.EventsConditionType;\n  @Input()\n  freehandCondition?: ol.EventsConditionType;\n  @Input()\n  freehand?: boolean;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  onChange = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onChangeActive = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onDrawEnd = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onDrawStart = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onPropertyChange = new EventEmitter<ol.interaction.Draw.Event>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.Draw(this);\n    this.instance.on('change', (event: ol.interaction.Draw.Event) => this.onChange.emit(event));\n    this.instance.on('change:active', (event: ol.interaction.Draw.Event) => this.onChangeActive.emit(event));\n    this.instance.on('drawend', (event: ol.interaction.Draw.Event) => this.onDrawEnd.emit(event));\n    this.instance.on('drawstart', (event: ol.interaction.Draw.Event) => this.onDrawStart.emit(event));\n    this.instance.on('propertychange', (event: ol.interaction.Draw.Event) => this.onPropertyChange.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {\n  interaction,\n  EventsConditionType,\n  layer,\n  style,\n  Collection,\n  SelectFilterFunction,\n  StyleFunction,\n  Feature,\n} from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-select',\n  template: '',\n})\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Select;\n\n  @Input()\n  addCondition?: EventsConditionType;\n  @Input()\n  condition?: EventsConditionType;\n  @Input()\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\n  @Input()\n  style?: style.Style | style.Style[] | StyleFunction;\n  @Input()\n  removeCondition?: EventsConditionType;\n  @Input()\n  toggleCondition?: EventsConditionType;\n  @Input()\n  multi?: boolean;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  filter?: SelectFilterFunction;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  onChange = new EventEmitter<interaction.Select.Event>();\n  @Output()\n  onSelect = new EventEmitter<interaction.Select.Event>();\n  @Output()\n  onPropertyChange = new EventEmitter<interaction.Select.Event>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.Select(this);\n\n    this.instance.on('change', (event: interaction.Select.Event) => this.onChange.emit(event));\n    this.instance.on('select', (event: interaction.Select.Event) => this.onSelect.emit(event));\n    this.instance.on('propertychange', (event: interaction.Select.Event) => this.onPropertyChange.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { interaction, EventsConditionType, style, StyleFunction, Collection, Feature, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-modify',\n  template: '',\n})\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Modify;\n\n  @Input()\n  condition?: EventsConditionType;\n  @Input()\n  deleteCondition?: EventsConditionType;\n  @Input()\n  pixelTolerance?: number;\n  @Input()\n  style?: style.Style | style.Style[] | StyleFunction;\n  @Input()\n  features: Collection<Feature>;\n  @Input()\n  wrapX?: boolean;\n  @Input()\n  source?: source.Vector;\n\n  @Output()\n  onModifyEnd = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onModifyStart = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onChange = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onChangeActive = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onPropertyChange = new EventEmitter<interaction.Modify.Event>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.Modify(this);\n    this.instance.on('change', (event: interaction.Modify.Event) => this.onChange.emit(event));\n    this.instance.on('change:active', (event: interaction.Modify.Event) => this.onChangeActive.emit(event));\n    this.instance.on('propertychange', (event: interaction.Modify.Event) => this.onPropertyChange.emit(event));\n    this.instance.on('modifyend', (event: interaction.Modify.Event) => this.onModifyEnd.emit(event));\n    this.instance.on('modifystart', (event: interaction.Modify.Event) => this.onModifyStart.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { interaction, layer, Collection, Feature } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-translate',\n  template: '',\n})\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Translate;\n\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\n  @Input()\n  hitTolerance?: number;\n\n  @Output()\n  onChange: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onPropertyChange: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onTranslateEnd: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onTranslateStart: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onTranslating: EventEmitter<interaction.Translate.Event>;\n\n  constructor(private map: MapComponent) {\n    this.onChange = new EventEmitter<interaction.Translate.Event>();\n    this.onPropertyChange = new EventEmitter<interaction.Translate.Event>();\n    this.onTranslateEnd = new EventEmitter<interaction.Translate.Event>();\n    this.onTranslateStart = new EventEmitter<interaction.Translate.Event>();\n    this.onTranslating = new EventEmitter<interaction.Translate.Event>();\n  }\n\n  ngOnInit() {\n    this.instance = new interaction.Translate(this);\n\n    this.instance.on('change', (event: interaction.Translate.Event) => this.onChange.emit(event));\n    this.instance.on('propertychange', (event: interaction.Translate.Event) => this.onPropertyChange.emit(event));\n    this.instance.on('translateend', (event: interaction.Translate.Event) => this.onTranslateEnd.emit(event));\n    this.instance.on('translatestart', (event: interaction.Translate.Event) => this.onTranslateStart.emit(event));\n    this.instance.on('translating', (event: interaction.Translate.Event) => this.onTranslating.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Attribution } from 'openlayers';\n\n@Component({\n  selector: 'aol-attribution',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionComponent implements OnInit {\n  instance: Attribution;\n  html: string;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    this.html = this.elementRef.nativeElement.innerHTML;\n    this.instance = new Attribution(this);\n  }\n}\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\nimport { Attribution } from 'openlayers';\nimport { SourceComponent } from './sources/source.component';\nimport { AttributionComponent } from './attribution.component';\n\n@Component({\n  selector: 'aol-attributions',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionsComponent implements AfterViewInit {\n  instance: Array<Attribution>;\n\n  @ContentChildren(AttributionComponent)\n  attributions: QueryList<AttributionComponent>;\n\n  constructor(@Host() private source: SourceComponent) {}\n\n  /* we can do this at the very end */\n  ngAfterViewInit() {\n    if (this.attributions.length) {\n      this.instance = this.attributions.map(cmp => cmp.instance);\n      // console.log('setting attributions:', this.instance);\n      this.source.instance.setAttributions(this.instance);\n    }\n  }\n}\n","/*\n * Public API Surface of ngx-openlayers\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewComponent } from './lib/view.component';\nimport { GraticuleComponent } from './lib/graticule.component';\nimport { LayerGroupComponent } from './lib/layers/layergroup.component';\nimport { LayerImageComponent } from './lib/layers/layerimage.component';\nimport { LayerTileComponent } from './lib/layers/layertile.component';\nimport { MapComponent } from './lib/map.component';\nimport { LayerVectorComponent } from './lib/layers/layervector.component';\nimport { LayerVectorTileComponent } from './lib/layers/layervectortile.component';\nimport { SourceOsmComponent } from './lib/sources/osm.component';\nimport { SourceBingmapsComponent } from './lib/sources/bingmaps.component';\nimport { SourceClusterComponent } from './lib/sources/cluster.component';\nimport { SourceVectorComponent } from './lib/sources/vector.component';\nimport { SourceXYZComponent } from './lib/sources/xyz.component';\nimport { SourceTileWMTSComponent } from './lib/sources/tilewmts.component';\nimport { SourceVectorTileComponent } from './lib/sources/vectortile.component';\nimport { SourceTileWMSComponent } from './lib/sources/tilewms.component';\nimport { SourceTileJSONComponent } from './lib/sources/tilejson.component';\nimport { SourceGeoJSONComponent } from './lib/sources/geojson.component';\nimport { SourceImageStaticComponent } from './lib/sources/imagestatic.component';\nimport { SourceImageWMSComponent } from './lib/sources/imagewms.component';\nimport { SourceImageArcGISRestComponent } from './lib/sources/imagearcgisrest.component';\nimport { SourceRasterComponent } from './lib/sources/raster.component';\nimport { FeatureComponent } from './lib/feature.component';\nimport {\n  GeometryLinestringComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n} from './lib/geometry.components';\nimport { CollectionCoordinatesComponent, CoordinateComponent } from './lib/coordinate.component';\nimport { StyleComponent } from './lib/styles/style.component';\nimport { StyleCircleComponent } from './lib/styles/circle.component';\nimport { StyleStrokeComponent } from './lib/styles/stroke.component';\nimport { StyleIconComponent } from './lib/styles/icon.component';\nimport { StyleFillComponent } from './lib/styles/fill.component';\nimport { StyleTextComponent } from './lib/styles/text.component';\nimport { DefaultControlComponent } from './lib/controls/default.component';\nimport { ControlComponent } from './lib/controls/control.component';\nimport { ControlAttributionComponent } from './lib/controls/attribution.component';\nimport { ControlFullScreenComponent } from './lib/controls/fullscreen.component';\nimport { ControlMousePositionComponent } from './lib/controls/mouseposition.component';\nimport { ControlOverviewMapComponent } from './lib/controls/overviewmap.component';\nimport { ControlRotateComponent } from './lib/controls/rotate.component';\nimport { ControlScaleLineComponent } from './lib/controls/scaleline.component';\nimport { ControlZoomComponent } from './lib/controls/zoom.component';\nimport { ControlZoomSliderComponent } from './lib/controls/zoomslider.component';\nimport { ControlZoomToExtentComponent } from './lib/controls/zoomtoextent.component';\nimport { FormatMVTComponent } from './lib/formats/mvt.component';\nimport { TileGridComponent } from './lib/tilegrid.component';\nimport { TileGridWMTSComponent } from './lib/tilegridwmts.component';\nimport { DefaultInteractionComponent } from './lib/interactions/default.component';\nimport { DoubleClickZoomInteractionComponent } from './lib/interactions/doubleclickzoom.component';\nimport { DragAndDropInteractionComponent } from './lib/interactions/draganddrop.component';\nimport { DragBoxInteractionComponent } from './lib/interactions/dragbox.component';\nimport { DragPanInteractionComponent } from './lib/interactions/dragpan.component';\nimport { DragRotateInteractionComponent } from './lib/interactions/dragrotate.component';\nimport { DragRotateAndZoomInteractionComponent } from './lib/interactions/dragrotateandzoom.component';\nimport { DragZoomInteractionComponent } from './lib/interactions/dragzoom.component';\nimport { MouseWheelZoomInteractionComponent } from './lib/interactions/mousewheelzoom.component';\nimport { PinchZoomInteractionComponent } from './lib/interactions/pinchzoom.component';\nimport { DrawInteractionComponent } from './lib/interactions/draw.component';\nimport { SelectInteractionComponent } from './lib/interactions/select.component';\nimport { ModifyInteractionComponent } from './lib/interactions/modify.component';\nimport { TranslateInteractionComponent } from './lib/interactions/translate.component';\nimport { OverlayComponent } from './lib/overlay.component';\nimport { ContentComponent } from './lib/content.component';\nimport { AttributionComponent } from './lib/attribution.component';\nimport { AttributionsComponent } from './lib/attributions.component';\n\nexport {\n  MapComponent,\n  ViewComponent,\n  GraticuleComponent,\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceRasterComponent,\n  SourceImageArcGISRestComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n  OverlayComponent,\n  ContentComponent,\n  AttributionComponent,\n  AttributionsComponent,\n};\n\nconst COMPONENTS = [\n  MapComponent,\n\n  ViewComponent,\n  GraticuleComponent,\n\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceImageArcGISRestComponent,\n  SourceRasterComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n\n  OverlayComponent,\n  ContentComponent,\n  AttributionComponent,\n  AttributionsComponent,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  imports: [CommonModule],\n  exports: COMPONENTS,\n})\nexport class AngularOpenlayersModule {}\n"]}
\ No newline at end of file
+{"version":3,"sources":["ng://ngx-openlayers/lib/map.component.ts","ng://ngx-openlayers/lib/view.component.ts","ng://ngx-openlayers/lib/graticule.component.ts","null","ng://ngx-openlayers/lib/layers/layer.component.ts","ng://ngx-openlayers/lib/layers/layergroup.component.ts","ng://ngx-openlayers/lib/layers/layerimage.component.ts","ng://ngx-openlayers/lib/layers/layertile.component.ts","ng://ngx-openlayers/lib/layers/layervector.component.ts","ng://ngx-openlayers/lib/layers/layervectortile.component.ts","ng://ngx-openlayers/lib/sources/source.component.ts","ng://ngx-openlayers/lib/tilegrid.component.ts","ng://ngx-openlayers/lib/sources/raster.component.ts","ng://ngx-openlayers/lib/sources/xyz.component.ts","ng://ngx-openlayers/lib/sources/osm.component.ts","ng://ngx-openlayers/lib/sources/bingmaps.component.ts","ng://ngx-openlayers/lib/sources/vector.component.ts","ng://ngx-openlayers/lib/sources/cluster.component.ts","ng://ngx-openlayers/lib/tilegridwmts.component.ts","ng://ngx-openlayers/lib/sources/tilewmts.component.ts","ng://ngx-openlayers/lib/formats/format.component.ts","ng://ngx-openlayers/lib/sources/vectortile.component.ts","ng://ngx-openlayers/lib/sources/tilewms.component.ts","ng://ngx-openlayers/lib/sources/tilejson.component.ts","ng://ngx-openlayers/lib/sources/geojson.component.ts","ng://ngx-openlayers/lib/sources/imagestatic.component.ts","ng://ngx-openlayers/lib/sources/imagewms.component.ts","ng://ngx-openlayers/lib/sources/imagearcgisrest.component.ts","ng://ngx-openlayers/lib/feature.component.ts","ng://ngx-openlayers/lib/geometry.components.ts","ng://ngx-openlayers/lib/content.component.ts","ng://ngx-openlayers/lib/overlay.component.ts","ng://ngx-openlayers/lib/coordinate.component.ts","ng://ngx-openlayers/lib/styles/style.component.ts","ng://ngx-openlayers/lib/styles/circle.component.ts","ng://ngx-openlayers/lib/styles/text.component.ts","ng://ngx-openlayers/lib/styles/stroke.component.ts","ng://ngx-openlayers/lib/styles/icon.component.ts","ng://ngx-openlayers/lib/styles/fill.component.ts","ng://ngx-openlayers/lib/controls/default.component.ts","ng://ngx-openlayers/lib/controls/control.component.ts","ng://ngx-openlayers/lib/controls/attribution.component.ts","ng://ngx-openlayers/lib/controls/fullscreen.component.ts","ng://ngx-openlayers/lib/controls/mouseposition.component.ts","ng://ngx-openlayers/lib/controls/overviewmap.component.ts","ng://ngx-openlayers/lib/controls/rotate.component.ts","ng://ngx-openlayers/lib/controls/scaleline.component.ts","ng://ngx-openlayers/lib/controls/zoom.component.ts","ng://ngx-openlayers/lib/controls/zoomslider.component.ts","ng://ngx-openlayers/lib/controls/zoomtoextent.component.ts","ng://ngx-openlayers/lib/formats/mvt.component.ts","ng://ngx-openlayers/lib/interactions/default.component.ts","ng://ngx-openlayers/lib/interactions/doubleclickzoom.component.ts","ng://ngx-openlayers/lib/interactions/draganddrop.component.ts","ng://ngx-openlayers/lib/interactions/dragbox.component.ts","ng://ngx-openlayers/lib/interactions/dragpan.component.ts","ng://ngx-openlayers/lib/interactions/dragrotate.component.ts","ng://ngx-openlayers/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-openlayers/lib/interactions/dragzoom.component.ts","ng://ngx-openlayers/lib/interactions/mousewheelzoom.component.ts","ng://ngx-openlayers/lib/interactions/pinchzoom.component.ts","ng://ngx-openlayers/lib/interactions/draw.component.ts","ng://ngx-openlayers/lib/interactions/select.component.ts","ng://ngx-openlayers/lib/interactions/modify.component.ts","ng://ngx-openlayers/lib/interactions/translate.component.ts","ng://ngx-openlayers/lib/attribution.component.ts","ng://ngx-openlayers/lib/attributions.component.ts","ng://ngx-openlayers/public_api.ts"],"names":["MapComponent","host","this","componentType","width","height","controls","interactions","onClick","EventEmitter","onDblClick","onMoveEnd","onPointerDrag","onPointerMove","onPostCompose","onPostRender","onPreCompose","onPropertyChange","onSingleClick","prototype","ngOnInit","_this","instance","Map","setTarget","nativeElement","firstElementChild","on","event","emit","ngOnChanges","changes","properties","key","hasOwnProperty","currentValue","setProperties","ngAfterViewInit","updateSize","Component","args","selector","template","ElementRef","Input","Output","ViewComponent","zoomAnimation","onChangeZoom","View","setView","animate","zoom","setZoom","ngOnDestroy","GraticuleComponent","map","Graticule","setMap","ngAfterContentInit","strokeStyle","showLabels","lonLabelPosition","latLabelPosition","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","__extends","__","constructor","create","LayerComponent","precompose","undefined","postcompose","getLayers","push","remove","un","previousValue","LayerGroupComponent","group","_super","call","tslib_1.__extends","layer","Group","decorators","type","SkipSelf","Optional","LayerImageComponent","Image","LayerTileComponent","Tile","LayerVectorComponent","Vector","LayerVectorTileComponent","VectorTile","SourceComponent","raster","setSource","sources","_register","s","TileGridComponent","resolutions","tilegrid","TileGrid","createXYZ","SourceRasterComponent","beforeOperations","afterOperations","source","Raster","providers","provide","useExisting","forwardRef","Host","SourceXYZComponent","tileGridXYZ","tileGrid","XYZ","ContentChild","SourceOsmComponent","OSM","SourceBingmapsComponent","imagerySet","BingMaps","SourceVectorComponent","SourceClusterComponent","sourceVectorComponent","Cluster","TileGridWMTSComponent","WMTS","SourceTileWMTSComponent","url","setLayerSource","tileGridWMTS","FormatComponent","SourceVectorTileComponent","format","formatComponent","tileGridComponent","SourceTileWMSComponent","TileWMS","updateParams","params","SourceTileJSONComponent","TileJSON","SourceGeoJSONComponent","GeoJSON","SourceImageStaticComponent","ImageStatic","SourceImageWMSComponent","ImageWMS","SourceImageArcGISRestComponent","ratio","ImageArcGISRest","FeatureComponent","Feature","id","setId","addFeature","removeFeature","GeometryLinestringComponent","geom","LineString","setGeometry","GeometryPointComponent","Point","GeometryPolygonComponent","Polygon","GeometryCircleComponent","Circle","defineProperty","getRadius","radius","setRadius","ContentComponent","elementRef","OverlayComponent","content","element","Overlay","addOverlay","removeOverlay","CoordinateComponent","viewHost","geometryPointHost","geometryCircleHost","overlayHost","srid","referenceProjection","referenceProjectionCode","transformedCoordinates","getView","getProjection","getCode","x","y","proj","transform","setCoordinates","setCenter","setPosition","CollectionCoordinatesComponent","geometryLinestring","geometryPolygon","Error","coordinates","forEach","coordinate","bind","StyleComponent","featureHost","layerHost","update","changed","style","Style","setStyle","StyleCircleComponent","setImage","StyleTextComponent","Text","setText","setFont","setOffsetX","setOffsetY","setScale","setRotation","setTextAlign","setTextBaseline","StyleStrokeComponent","styleHost","styleCircleHost","styleTextHost","Stroke","setStroke","stroke","setColor","setLineCap","setLineDash","setLineJoin","setMiterLimit","setWidth","StyleIconComponent","Icon","setOpacity","StyleFillComponent","Fill","setFill","fill","DefaultControlComponent","control","defaults","c","addControl","removeControl","ControlComponent","Control","ControlAttributionComponent","target","Attribution","ControlFullScreenComponent","FullScreen","ControlMousePositionComponent","MousePosition","ControlOverviewMapComponent","OverviewMap","ControlRotateComponent","Rotate","ControlScaleLineComponent","ScaleLine","ControlZoomComponent","Zoom","ControlZoomSliderComponent","ZoomSlider","ControlZoomToExtentComponent","ZoomToExtent","FormatMVTComponent","MVT","DefaultInteractionComponent","interaction","i","addInteraction","removeInteraction","DoubleClickZoomInteractionComponent","DoubleClickZoom","DragAndDropInteractionComponent","DragAndDrop","DragBoxInteractionComponent","DragBox","DragPanInteractionComponent","DragPan","DragRotateInteractionComponent","DragRotate","DragRotateAndZoomInteractionComponent","DragRotateAndZoom","DragZoomInteractionComponent","DragZoom","MouseWheelZoomInteractionComponent","MouseWheelZoom","PinchZoomInteractionComponent","PinchZoom","DrawInteractionComponent","onChange","onChangeActive","onDrawEnd","onDrawStart","Draw","SelectInteractionComponent","onSelect","Select","ModifyInteractionComponent","onModifyEnd","onModifyStart","Modify","TranslateInteractionComponent","onTranslateEnd","onTranslateStart","onTranslating","Translate","AttributionComponent","html","innerHTML","AttributionsComponent","attributions","length","cmp","setAttributions","ContentChildren","COMPONENTS","AngularOpenlayersModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { Map, MapBrowserEvent, MapEvent, render, ObjectEvent, control, interaction } from 'openlayers';\r\n\r\n@Component({\r\n  selector: 'aol-map',\r\n  template: `\r\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\r\n  public instance: Map;\r\n  public componentType = 'map';\r\n\r\n  @Input()\r\n  width = '100%';\r\n  @Input()\r\n  height = '100%';\r\n  @Input()\r\n  pixelRatio: number;\r\n  @Input()\r\n  keyboardEventTarget: Element | string;\r\n  @Input()\r\n  loadTilesWhileAnimating: boolean;\r\n  @Input()\r\n  loadTilesWhileInteracting: boolean;\r\n  @Input()\r\n  logo: string | boolean;\r\n  @Input()\r\n  renderer: 'canvas' | 'webgl';\r\n\r\n  @Output()\r\n  onClick: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onDblClick: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onMoveEnd: EventEmitter<MapEvent>;\r\n  @Output()\r\n  onPointerDrag: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onPointerMove: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onPostCompose: EventEmitter<render.Event>;\r\n  @Output()\r\n  onPostRender: EventEmitter<MapEvent>;\r\n  @Output()\r\n  onPreCompose: EventEmitter<render.Event>;\r\n  @Output()\r\n  onPropertyChange: EventEmitter<ObjectEvent>;\r\n  @Output()\r\n  onSingleClick: EventEmitter<MapBrowserEvent>;\r\n\r\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\r\n  controls: control.Control[] = [];\r\n  interactions: interaction.Interaction[] = [];\r\n\r\n  constructor(private host: ElementRef) {\r\n    this.onClick = new EventEmitter<MapBrowserEvent>();\r\n    this.onDblClick = new EventEmitter<MapBrowserEvent>();\r\n    this.onMoveEnd = new EventEmitter<MapEvent>();\r\n    this.onPointerDrag = new EventEmitter<MapBrowserEvent>();\r\n    this.onPointerMove = new EventEmitter<MapBrowserEvent>();\r\n    this.onPostCompose = new EventEmitter<render.Event>();\r\n    this.onPostRender = new EventEmitter<MapEvent>();\r\n    this.onPreCompose = new EventEmitter<render.Event>();\r\n    this.onPropertyChange = new EventEmitter<ObjectEvent>();\r\n    this.onSingleClick = new EventEmitter<MapBrowserEvent>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.Map instance with:', this);\r\n    this.instance = new Map(this);\r\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\r\n    this.instance.on('click', (event: MapBrowserEvent) => this.onClick.emit(event));\r\n    this.instance.on('dblclick', (event: MapBrowserEvent) => this.onDblClick.emit(event));\r\n    this.instance.on('moveend', (event: MapEvent) => this.onMoveEnd.emit(event));\r\n    this.instance.on('pointerdrag', (event: MapBrowserEvent) => this.onPointerDrag.emit(event));\r\n    this.instance.on('pointermove', (event: MapBrowserEvent) => this.onPointerMove.emit(event));\r\n    this.instance.on('postcompose', (event: render.Event) => this.onPostCompose.emit(event));\r\n    this.instance.on('postrender', (event: MapEvent) => this.onPostRender.emit(event));\r\n    this.instance.on('precompose', (event: render.Event) => this.onPreCompose.emit(event));\r\n    this.instance.on('propertychange', (event: ObjectEvent) => this.onPropertyChange.emit(event));\r\n    this.instance.on('singleclick', (event: MapBrowserEvent) => this.onSingleClick.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.instance.updateSize();\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\r\nimport { View, Extent, ObjectEvent, Coordinate } from 'openlayers';\r\nimport { MapComponent } from './map.component';\r\n\r\n@Component({\r\n  selector: 'aol-view',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\r\n  public instance: View;\r\n  public componentType = 'view';\r\n\r\n  @Input()\r\n  constrainRotation: boolean | number;\r\n  @Input()\r\n  enableRotation: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  resolution: number;\r\n  @Input()\r\n  resolutions: number[];\r\n  @Input()\r\n  rotation: number;\r\n  @Input()\r\n  zoom: number;\r\n  @Input()\r\n  zoomFactor: number;\r\n  @Input()\r\n  center: Coordinate;\r\n  @Input()\r\n  projection: string;\r\n\r\n  @Input()\r\n  zoomAnimation = false;\r\n\r\n  @Output()\r\n  onChangeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\r\n\r\n  constructor(private host: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.View instance with: ', this);\r\n    this.instance = new View(this);\r\n    this.host.instance.setView(this.instance);\r\n\r\n    this.instance.on('change:zoom', (event: ObjectEvent) => this.onChangeZoom.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        switch (key) {\r\n          case 'zoom':\r\n            /** Work-around: setting the zoom via setProperties does not work. */\r\n            if (this.zoomAnimation) {\r\n              this.instance.animate({ zoom: changes[key].currentValue });\r\n            } else {\r\n              this.instance.setZoom(changes[key].currentValue);\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-view');\r\n  }\r\n}\r\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Graticule, style } from 'openlayers';\r\nimport { MapComponent } from './map.component';\r\n\r\n@Component({\r\n  selector: 'aol-graticule',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class GraticuleComponent implements AfterContentInit, OnChanges {\r\n  instance: any;\r\n  public componentType = 'graticule';\r\n\r\n  @Input()\r\n  strokeStyle: style.Stroke;\r\n  @Input()\r\n  showLabels: boolean;\r\n  @Input()\r\n  lonLabelPosition: number;\r\n  @Input()\r\n  latLabelPosition: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n\r\n    if (properties) {\r\n      this.instance = new Graticule(properties);\r\n    }\r\n    this.instance.setMap(this.map.instance);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.instance = new Graticule({\r\n      strokeStyle: this.strokeStyle,\r\n      showLabels: this.showLabels,\r\n      lonLabelPosition: this.lonLabelPosition,\r\n      latLabelPosition: this.latLabelPosition,\r\n    });\r\n    this.instance.setMap(this.map.instance);\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { MapComponent } from '../map.component';\r\nimport { Extent } from 'openlayers';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\r\n  public instance: any;\r\n  public componentType = 'layer';\r\n\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  zIndex: number;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxResolution: number;\r\n\r\n  @Input()\r\n  precompose: (evt: ol.events.Event) => void;\r\n  @Input()\r\n  postcompose: (evt: ol.events.Event) => void;\r\n\r\n  constructor(protected host: LayerGroupComponent | MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.precompose !== null && this.precompose !== undefined) {\r\n      this.instance.on('precompose', this.precompose);\r\n    }\r\n    if (this.postcompose !== null && this.postcompose !== undefined) {\r\n      this.instance.on('postcompose', this.postcompose);\r\n    }\r\n    this.host.instance.getLayers().push(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.host.instance.getLayers().remove(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n        if (key === 'precompose') {\r\n          this.instance.un('precompose', changes[key].previousValue);\r\n          this.instance.on('precompose', changes[key].currentValue);\r\n        }\r\n        if (key === 'postcompose') {\r\n          this.instance.un('postcompose', changes[key].previousValue);\r\n          this.instance.on('postcompose', changes[key].currentValue);\r\n        }\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\r\nimport { layer } from 'openlayers';\r\nimport { LayerComponent } from './layer.component';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-group',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\r\n  public instance: ol.layer.Group;\r\n\r\n  constructor(\r\n    map: MapComponent,\r\n    @SkipSelf()\r\n    @Optional()\r\n    group?: LayerGroupComponent\r\n  ) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log(`creating ol.layer.Group instance with:`, this);\r\n    this.instance = new layer.Group(this);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\r\nimport { Extent, layer, source } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-image',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\r\n  public source: source.Image;\r\n\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  zIndex: number;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new layer.Image(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { layer, source } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-tile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\r\n  public source: source.Tile;\r\n\r\n  @Input()\r\n  preload: number;\r\n  @Input()\r\n  useInterimTilesOnError: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.Tile instance with:', this);\r\n    this.instance = new layer.Tile(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { layer, source, style, StyleFunction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-vector',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\r\n  public source: source.Vector;\r\n\r\n  @Input()\r\n  renderBuffer: number;\r\n\r\n  @Input()\r\n  style: style.Style | style.Style[] | StyleFunction;\r\n\r\n  @Input()\r\n  updateWhileAnimating: boolean;\r\n\r\n  @Input()\r\n  updateWhileInteracting: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.Vector instance with:', this);\r\n    this.instance = new layer.Vector(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Optional, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { layer, style, StyleFunction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-vectortile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  renderBuffer: number;\r\n  @Input()\r\n  renderMode: layer.VectorTileRenderType | string;\r\n  /* not marked as optional in the typings */\r\n  @Input()\r\n  renderOrder: (feature1: ol.Feature, feature2: ol.Feature) => number;\r\n  @Input()\r\n  style: style.Style | style.Style[] | StyleFunction;\r\n  @Input()\r\n  updateWhileAnimating: boolean;\r\n  @Input()\r\n  updateWhileInteracting: boolean;\r\n  @Input()\r\n  visible: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.VectorTile instance with:', this);\r\n    this.instance = new layer.VectorTile(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Input, OnDestroy } from '@angular/core';\r\nimport { source } from 'openlayers';\r\nimport { LayerComponent } from '../layers/layer.component';\r\nimport AttributionLike = ol.AttributionLike;\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\nexport class SourceComponent implements OnDestroy {\r\n  public instance: source.Source;\r\n  public componentType = 'source';\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n\r\n  constructor(protected host: LayerComponent, protected raster?: SourceRasterComponent) {}\r\n\r\n  ngOnDestroy() {\r\n    if (this.host && this.host.instance) {\r\n      this.host.instance.setSource(null);\r\n    }\r\n\r\n    if (this.raster) {\r\n      this.raster.sources = [];\r\n    }\r\n  }\r\n\r\n  protected _register(s: source.Source) {\r\n    if (this.host) {\r\n      this.host.instance.setSource(s);\r\n    }\r\n\r\n    if (this.raster) {\r\n      this.raster.sources = [s];\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { tilegrid, Extent, Size, Coordinate } from 'openlayers';\r\n\r\n@Component({\r\n  selector: 'aol-tilegrid',\r\n  template: '',\r\n})\r\nexport class TileGridComponent implements OnInit, OnChanges {\r\n  instance: tilegrid.TileGrid;\r\n\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  tileSize: number | Size;\r\n  @Input()\r\n  origin?: Coordinate;\r\n  @Input()\r\n  resolutions: number[];\r\n\r\n  ngOnInit() {\r\n    if (!this.resolutions) {\r\n      this.instance = tilegrid.createXYZ(this);\r\n    } else {\r\n      this.instance = new tilegrid.TileGrid(this);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.resolutions) {\r\n      this.instance = tilegrid.createXYZ(this);\r\n    } else {\r\n      this.instance = new tilegrid.TileGrid(this);\r\n    }\r\n  }\r\n}\r\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Output } from '@angular/core';\r\nimport { RasterOperation, RasterOperationType, source } from 'openlayers';\r\n\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-raster',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [\r\n    {\r\n      provide: SourceComponent,\r\n      useExisting: forwardRef(() => SourceRasterComponent),\r\n    },\r\n  ],\r\n})\r\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\r\n  instance: source.Raster;\r\n\r\n  @Input()\r\n  operation?: RasterOperation;\r\n  @Input()\r\n  threads?: number;\r\n  @Input()\r\n  lib?: Object;\r\n  @Input()\r\n  operationType?: RasterOperationType;\r\n\r\n  @Output()\r\n  beforeOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\r\n  @Output()\r\n  afterOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\r\n\r\n  sources: source.Source[] = [];\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.instance = new source.Raster(this);\r\n\r\n    this.instance.on('beforeoperations', (event: source.RasterEvent) => this.beforeOperations.emit(event));\r\n    this.instance.on('afteroperations', (event: source.RasterEvent) => this.afterOperations.emit(event));\r\n\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  AfterContentInit,\r\n  forwardRef,\r\n  OnChanges,\r\n  ContentChild,\r\n  SimpleChanges,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { source, Size, TileUrlFunctionType, TileLoadFunctionType, tilegrid } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileGridComponent } from '../tilegrid.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-xyz',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\r\n})\r\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\r\n  instance: source.XYZ;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  opaque: boolean;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  tileGrid: tilegrid.TileGrid;\r\n  @Input()\r\n  tileLoadFunction?: TileLoadFunctionType;\r\n  @Input()\r\n  tilePixelRatio: number;\r\n  @Input()\r\n  tileSize: number | Size;\r\n  @Input()\r\n  tileUrlFunction: TileUrlFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @ContentChild(TileGridComponent)\r\n  tileGridXYZ: TileGridComponent;\r\n\r\n  constructor(\r\n    @Optional()\r\n    @Host()\r\n    layer: LayerTileComponent,\r\n    @Optional()\r\n    @Host()\r\n    raster?: SourceRasterComponent\r\n  ) {\r\n    super(layer, raster);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.tileGridXYZ) {\r\n      this.tileGrid = this.tileGridXYZ.instance;\r\n    }\r\n    this.instance = new source.XYZ(this);\r\n    this._register(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n\r\n    this.instance.setProperties(properties, false);\r\n    if (changes.hasOwnProperty('url')) {\r\n      this.instance = new source.XYZ(this);\r\n      this._register(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, forwardRef, Input, AfterContentInit, Optional } from '@angular/core';\r\nimport { source, AttributionLike, TileLoadFunctionType } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { SourceXYZComponent } from './xyz.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-osm',\r\n  template: `\r\n    <div class=\"aol-source-osm\"></div>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\r\n})\r\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\r\n  instance: source.OSM;\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  opaque: boolean;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  tileLoadFunction: TileLoadFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(\r\n    @Host()\r\n    @Optional()\r\n    layer: LayerTileComponent,\r\n    @Host()\r\n    @Optional()\r\n    raster?: SourceRasterComponent\r\n  ) {\r\n    super(layer, raster);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.tileGridXYZ) {\r\n      this.tileGrid = this.tileGridXYZ.instance;\r\n    }\r\n    this.instance = new source.OSM(this);\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source, TileLoadFunctionType } from 'openlayers';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-bingmaps',\r\n  template: `\r\n    <div class=\"aol-source-bingmaps\"></div>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\r\n})\r\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\r\n  instance: source.BingMaps;\r\n\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  culture: string;\r\n  @Input()\r\n  key: string;\r\n  @Input()\r\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  tileLoadFunction: TileLoadFunctionType;\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.BingMaps(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source } from 'openlayers';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-vector',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\r\n})\r\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\r\n  instance: source.Vector;\r\n  @Input()\r\n  overlaps: boolean;\r\n  @Input()\r\n  useSpatialIndex: boolean;\r\n  @Input()\r\n  wrapX: boolean;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  format: ol.format.Feature;\r\n  @Input()\r\n  strategy: ol.LoadingStrategy;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.Vector(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { source, Feature, geom } from 'openlayers';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { SourceVectorComponent } from './vector.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-cluster',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\r\n})\r\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit {\r\n  instance: source.Cluster;\r\n\r\n  @Input()\r\n  distance: number;\r\n  @Input()\r\n  geometryFunction?: ((feature: Feature) => geom.Point);\r\n\r\n  @ContentChild(SourceVectorComponent)\r\n  sourceVectorComponent: SourceVectorComponent;\r\n  source: source.Vector;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.source = this.sourceVectorComponent.instance;\r\n\r\n    this.instance = new source.Cluster(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { tilegrid, Size, Coordinate } from 'openlayers';\r\nimport { TileGridComponent } from './tilegrid.component';\r\n\r\n@Component({\r\n  selector: 'aol-tilegrid-wmts',\r\n  template: '',\r\n})\r\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\r\n  instance: tilegrid.WMTS;\r\n\r\n  @Input()\r\n  origin?: Coordinate;\r\n  @Input()\r\n  origins?: Coordinate[];\r\n  @Input()\r\n  resolutions: number[];\r\n  @Input()\r\n  matrixIds: string[];\r\n  @Input()\r\n  sizes?: Size[];\r\n  @Input()\r\n  tileSizes?: (number | Size)[];\r\n  @Input()\r\n  widths?: number[];\r\n\r\n  ngOnInit() {\r\n    this.instance = new tilegrid.WMTS(this);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  forwardRef,\r\n  AfterContentInit,\r\n  ContentChild,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { TileLoadFunctionType, tilegrid, ProjectionLike, source, ImageTile, TileCoord, Tile } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilewmts',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\r\n})\r\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\r\n  instance: source.WMTS;\r\n  @Input()\r\n  cacheSize?: number;\r\n  @Input()\r\n  crossOrigin?: string;\r\n  @Input()\r\n  logo?: string | olx.LogoOptions;\r\n  @Input()\r\n  tileGrid: tilegrid.WMTS;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  reprojectionErrorThreshold?: number;\r\n  @Input()\r\n  requestEncoding?: source.WMTSRequestEncoding | string;\r\n  @Input()\r\n  layer: string;\r\n  @Input()\r\n  style: string;\r\n  @Input()\r\n  tileClass?: ((\r\n    n: ImageTile,\r\n    coords: TileCoord,\r\n    state: Tile.State,\r\n    s1: string,\r\n    s2: string,\r\n    type: TileLoadFunctionType\r\n  ) => any);\r\n  @Input()\r\n  tilePixelRatio?: number;\r\n  @Input()\r\n  version?: string;\r\n  @Input()\r\n  format?: string;\r\n  @Input()\r\n  matrixSet: string;\r\n  @Input()\r\n  dimensions?: GlobalObject;\r\n  @Input()\r\n  url?: string;\r\n  @Input()\r\n  tileLoadFunction?: TileLoadFunctionType;\r\n  @Input()\r\n  urls?: string[];\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @ContentChild(TileGridWMTSComponent)\r\n  tileGridWMTS: TileGridWMTSComponent;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        switch (key) {\r\n          case 'url':\r\n            this.url = changes[key].currentValue;\r\n            this.setLayerSource();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  setLayerSource(): void {\r\n    this.instance = new source.WMTS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this.tileGridWMTS) {\r\n      this.tileGrid = this.tileGridWMTS.instance;\r\n      this.setLayerSource();\r\n    }\r\n  }\r\n}\r\n","import { format } from 'openlayers';\r\n\r\nexport class FormatComponent {\r\n  public instance: format.Feature;\r\n  public componentType = 'format';\r\n}\r\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { source, ProjectionLike, TileUrlFunctionType, format, tilegrid } from 'openlayers';\r\nimport { LayerVectorTileComponent } from '../layers/layervectortile.component';\r\nimport { FormatComponent } from '../formats/format.component';\r\nimport { TileGridComponent } from '../tilegrid.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-vectortile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent) }],\r\n})\r\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\r\n  public instance: source.VectorTile;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  overlaps: boolean;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  tilePixelRatio: number;\r\n  @Input()\r\n  tileUrlFunction: TileUrlFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @ContentChild(FormatComponent)\r\n  formatComponent: FormatComponent;\r\n  format: format.Feature;\r\n  @ContentChild(TileGridComponent)\r\n  tileGridComponent: TileGridComponent;\r\n  tileGrid: tilegrid.TileGrid;\r\n\r\n  constructor(@Host() layer: LayerVectorTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  /* need the children to construct the OL3 object */\r\n  ngAfterContentInit() {\r\n    this.format = this.formatComponent.instance;\r\n    this.tileGrid = this.tileGridComponent.instance;\r\n    // console.log('creating ol.source.VectorTile instance with:', this);\r\n    this.instance = new source.VectorTile(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\r\nimport { source, TileLoadFunctionType, tilegrid } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilewms',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\r\n})\r\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\r\n  instance: source.TileWMS;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  gutter: number;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  params: Object;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  serverType: string;\r\n  @Input()\r\n  tileGrid: tilegrid.TileGrid;\r\n  @Input()\r\n  tileLoadFunction: TileLoadFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.TileWMS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilejson',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\r\n})\r\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\r\n  instance: source.TileJSON;\r\n\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.TileJSON(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source, ProjectionLike, format } from 'openlayers';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-geojson',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\r\n})\r\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\r\n  instance: source.Vector;\r\n  format: format.Feature;\r\n  @Input()\r\n  defaultDataProjection: ProjectionLike;\r\n  @Input()\r\n  featureProjection: ProjectionLike;\r\n  @Input()\r\n  geometryName: string;\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.format = new format.GeoJSON(this);\r\n    this.instance = new source.Vector(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { ProjectionLike, source, Extent, AttributionLike, ImageLoadFunctionType, Size } from 'openlayers';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagestatic',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\r\n})\r\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit {\r\n  instance: source.ImageStatic;\r\n\r\n  @Input()\r\n  projection: ProjectionLike | string;\r\n  @Input()\r\n  imageExtent: Extent;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  crossOrigin?: string;\r\n  @Input()\r\n  imageLoadFunction?: ImageLoadFunctionType;\r\n  @Input()\r\n  logo?: string | olx.LogoOptions;\r\n  @Input()\r\n  imageSize?: Size;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.ImageStatic(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\r\nimport { AttributionLike, ImageLoadFunctionType, ProjectionLike, source } from 'openlayers';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagewms',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\r\n})\r\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\r\n  instance: source.ImageWMS;\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  serverType: string;\r\n  @Input()\r\n  imageLoadFunction?: ImageLoadFunctionType;\r\n  @Input()\r\n  logo: string | olx.LogoOptions;\r\n  @Input()\r\n  params: Object;\r\n  @Input()\r\n  projection: ProjectionLike | string;\r\n  @Input()\r\n  ratio: number;\r\n  @Input()\r\n  resolutions: Array<number>;\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.ImageWMS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, forwardRef, Host, Input, OnInit } from '@angular/core';\r\nimport { source, ProjectionLike, Attribution, ImageLoadFunctionType } from 'openlayers';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagearcgisrest',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\r\n})\r\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit {\r\n  instance: source.ImageArcGISRest;\r\n\r\n  @Input() projection: ProjectionLike | string;\r\n  @Input() url: string;\r\n  @Input() attributions: Attribution[];\r\n  @Input() crossOrigin?: string;\r\n  @Input() imageLoadFunction?: ImageLoadFunctionType;\r\n  @Input() params?: { [k: string]: any };\r\n  @Input() ratio = 1;\r\n  @Input() resolutions?: number[];\r\n  @Input() logo?: string | olx.LogoOptions;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.ImageArcGISRest(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { Feature } from 'openlayers';\r\nimport { SourceVectorComponent } from './sources/vector.component';\r\n\r\n@Component({\r\n  selector: 'aol-feature',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\r\n  public componentType = 'feature';\r\n  public instance: Feature;\r\n\r\n  @Input()\r\n  id: string | number | undefined;\r\n\r\n  constructor(private host: SourceVectorComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new Feature();\r\n    if (this.id !== undefined) {\r\n      this.instance.setId(this.id);\r\n    }\r\n    this.host.instance.addFeature(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.host.instance.removeFeature(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance) {\r\n      this.instance.setId(this.id);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { geom } from 'openlayers';\r\nimport { FeatureComponent } from './feature.component';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-linestring',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryLinestringComponent implements OnInit, OnDestroy {\r\n  public componentType = 'geometry-linestring';\r\n  public instance: geom.LineString;\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // console.log('instancing aol-geometry-linestring');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new geom.LineString([]);\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n  ngOnDestroy() {\r\n    // this.host.setGeometry(null);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-geometry-point',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryPointComponent implements OnInit, OnDestroy {\r\n  public componentType = 'geometry-point';\r\n  public instance: geom.Point;\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // console.log('creating aol-geometry-point');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new geom.Point([0, 0]); // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.host.setGeometry(null);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-geometry-polygon',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryPolygonComponent implements OnInit, OnDestroy {\r\n  public componentType = 'geometry-polygon';\r\n  public instance: geom.Polygon;\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // console.log('creating aol-geometry-polygon');\r\n  }\r\n\r\n  ngOnInit() {\r\n    // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.instance = new geom.Polygon([[[0, 0], [1, 0], [1, 1]]]);\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.host.setGeometry(null);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-geometry-circle',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryCircleComponent implements OnInit {\r\n  public componentType = 'geometry-circle';\r\n  public instance: geom.Circle;\r\n\r\n  @Input()\r\n  get radius(): number {\r\n    return this.instance.getRadius();\r\n  }\r\n  set radius(radius: number) {\r\n    this.instance.setRadius(radius);\r\n  }\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.instance = new geom.Circle([0, 0]);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aol-content',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class ContentComponent {\r\n  constructor(public elementRef: ElementRef) {}\r\n}\r\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { MapComponent } from './map.component';\r\nimport { Overlay, OverlayPositioning } from 'openlayers';\r\nimport { ContentComponent } from './content.component';\r\n\r\n@Component({\r\n  selector: 'aol-overlay',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class OverlayComponent implements OnInit, OnDestroy {\r\n  componentType = 'overlay';\r\n  instance: Overlay;\r\n  element: Element;\r\n  @ContentChild(ContentComponent)\r\n  content: ContentComponent;\r\n\r\n  @Input()\r\n  id: number | string;\r\n  @Input()\r\n  offset: number[];\r\n  @Input()\r\n  positioning: OverlayPositioning | string;\r\n  @Input()\r\n  stopEvent: boolean;\r\n  @Input()\r\n  insertFirst: boolean;\r\n  @Input()\r\n  autoPan: boolean;\r\n  @Input()\r\n  autoPanAnimation: olx.animation.PanOptions;\r\n  @Input()\r\n  autoPanMargin: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.content) {\r\n      this.element = this.content.elementRef.nativeElement;\r\n      this.instance = new Overlay(this);\r\n      this.map.instance.addOverlay(this.instance);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.instance) {\r\n      this.map.instance.removeOverlay(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, Optional, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { proj, Coordinate } from 'openlayers';\r\nimport { MapComponent } from './map.component';\r\nimport {\r\n  GeometryPointComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n} from './geometry.components';\r\nimport { ViewComponent } from './view.component';\r\nimport { OverlayComponent } from './overlay.component';\r\n\r\n@Component({\r\n  selector: 'aol-coordinate',\r\n  template: `\r\n    <div class=\"aol-coordinate\"></div>\r\n  `,\r\n})\r\nexport class CoordinateComponent implements OnChanges {\r\n  private host: any;\r\n\r\n  @Input()\r\n  x: number;\r\n  @Input()\r\n  y: number;\r\n  @Input()\r\n  srid = 'EPSG:3857';\r\n\r\n  constructor(\r\n    private map: MapComponent,\r\n    @Optional() viewHost: ViewComponent,\r\n    @Optional() geometryPointHost: GeometryPointComponent,\r\n    @Optional() geometryCircleHost: GeometryCircleComponent,\r\n    @Optional() overlayHost: OverlayComponent\r\n  ) {\r\n    // console.log('instancing aol-coordinate');\r\n    if (geometryPointHost !== null) {\r\n      this.host = geometryPointHost;\r\n    } else if (geometryCircleHost !== null) {\r\n      this.host = geometryCircleHost;\r\n    } else if (viewHost !== null) {\r\n      this.host = viewHost;\r\n    } else if (overlayHost !== null) {\r\n      this.host = overlayHost;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    let referenceProjection: proj.Projection;\r\n    let referenceProjectionCode: string;\r\n    let transformedCoordinates: number[];\r\n\r\n    referenceProjection = this.map.instance.getView().getProjection();\r\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\r\n\r\n    if (this.srid === referenceProjectionCode) {\r\n      transformedCoordinates = [this.x, this.y];\r\n    } else {\r\n      transformedCoordinates = proj.transform([this.x, this.y], this.srid, referenceProjectionCode);\r\n    }\r\n\r\n    switch (this.host.componentType) {\r\n      case 'geometry-point':\r\n        this.host.instance.setCoordinates(transformedCoordinates);\r\n        break;\r\n      case 'geometry-circle':\r\n      case 'view':\r\n        this.host.instance.setCenter(transformedCoordinates);\r\n        break;\r\n      case 'overlay':\r\n        this.host.instance.setPosition(transformedCoordinates);\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-collection-coordinates',\r\n  template: `\r\n    <div class=\"aol-collection-coordinates\"></div>\r\n  `,\r\n})\r\nexport class CollectionCoordinatesComponent implements OnChanges {\r\n  private host: any;\r\n\r\n  @Input()\r\n  coordinates: [number, number][];\r\n  @Input()\r\n  srid = 'EPSG:3857';\r\n\r\n  constructor(\r\n    private map: MapComponent,\r\n    @Optional() geometryLinestring: GeometryLinestringComponent,\r\n    @Optional() geometryPolygon: GeometryPolygonComponent\r\n  ) {\r\n    // console.log('creating aol-collection-coordinates');\r\n    if (!!geometryLinestring) {\r\n      this.host = geometryLinestring;\r\n    } else if (!!geometryPolygon) {\r\n      this.host = geometryPolygon;\r\n    } else {\r\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    let referenceProjection: proj.Projection;\r\n    let referenceProjectionCode: string;\r\n    let transformedCoordinates: Array<Coordinate>;\r\n\r\n    // console.log('coordinates change: ', this.coordinates);\r\n\r\n    referenceProjection = this.map.instance.getView().getProjection();\r\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\r\n\r\n    if (this.srid === referenceProjectionCode) {\r\n      transformedCoordinates = this.coordinates;\r\n    } else {\r\n      transformedCoordinates = [];\r\n      this.coordinates.forEach(\r\n        function(coordinate: Coordinate) {\r\n          transformedCoordinates.push(proj.transform(coordinate, this.srid, referenceProjectionCode));\r\n        }.bind(this)\r\n      );\r\n    }\r\n    switch (this.host.componentType) {\r\n      case 'geometry-linestring':\r\n        this.host.instance.setCoordinates(transformedCoordinates);\r\n        break;\r\n      case 'geometry-polygon':\r\n        this.host.instance.setCoordinates([transformedCoordinates]);\r\n        break;\r\n      default:\r\n        throw new Error('aol-collection-coordinates host is of unknown type: ' + this.host.componentType);\r\n      // break;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit } from '@angular/core';\r\nimport { style, StyleGeometryFunction, geom } from 'openlayers';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\n\r\n@Component({\r\n  selector: 'aol-style',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class StyleComponent implements OnInit {\r\n  private host: FeatureComponent | LayerVectorComponent;\r\n  public instance: style.Style;\r\n  public componentType = 'style';\r\n\r\n  @Input()\r\n  geometry: string | geom.Geometry | StyleGeometryFunction;\r\n  @Input()\r\n  fill: style.Fill;\r\n  @Input()\r\n  image: style.Image;\r\n  @Input()\r\n  stroke: style.Stroke;\r\n  @Input()\r\n  text: style.Text;\r\n  @Input()\r\n  zIndex: number;\r\n\r\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\r\n    // console.log('creating aol-style');\r\n    this.host = !!featureHost ? featureHost : layerHost;\r\n    if (!this.host) {\r\n      throw new Error('aol-style must be applied to a feature or a layer');\r\n    }\r\n  }\r\n\r\n  update() {\r\n    // console.log('updating style\\'s host: ', this.host);\r\n    this.host.instance.changed();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating aol-style instance with: ', this);\r\n    this.instance = new style.Style(this);\r\n    this.host.instance.setStyle(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { style } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-circle',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\r\n  public componentType = 'style-circle';\r\n  public instance: style.Circle;\r\n\r\n  @Input()\r\n  fill: style.Fill;\r\n  @Input()\r\n  radius: number;\r\n  @Input()\r\n  snapToPixel: boolean;\r\n  @Input()\r\n  stroke: style.Stroke;\r\n  @Input()\r\n  atlasManager: style.AtlasManager;\r\n\r\n  constructor(@Host() private host: StyleComponent) {}\r\n\r\n  /**\r\n   * WORK-AROUND: since the re-rendering is not triggered on style change\r\n   * we trigger a radius change.\r\n   * see openlayers #6233 and #5775\r\n   */\r\n  update() {\r\n    if (!!this.instance) {\r\n      // console.log('setting ol.style.Circle instance\\'s radius');\r\n      this.instance.setRadius(this.radius);\r\n    }\r\n    this.host.update();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // console.log('creating ol.style.Circle instance with: ', this);\r\n    this.instance = new style.Circle(this);\r\n    this.host.instance.setImage(this.instance);\r\n    this.host.update();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['radius']) {\r\n      this.instance.setRadius(changes['radius'].currentValue);\r\n    }\r\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-style-circle');\r\n    this.host.instance.setImage(null);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-text',\r\n  template: `\r\n    <div class=\"aol-style-text\"></div>\r\n  `,\r\n})\r\nexport class StyleTextComponent implements OnInit, OnChanges {\r\n  public instance: style.Text;\r\n  public componentType = 'style-text';\r\n\r\n  @Input()\r\n  font: string | undefined;\r\n  @Input()\r\n  offsetX: number | undefined;\r\n  @Input()\r\n  offsetY: number | undefined;\r\n  @Input()\r\n  scale: number | undefined;\r\n  @Input()\r\n  rotateWithView: boolean | undefined;\r\n  @Input()\r\n  rotation: number | undefined;\r\n  @Input()\r\n  text: string | undefined;\r\n  @Input()\r\n  textAlign: string | undefined;\r\n  @Input()\r\n  textBaseLine: string | undefined;\r\n\r\n  constructor(@Optional() private host: StyleComponent) {\r\n    if (!host) {\r\n      throw new Error('aol-style-text must be a descendant of aol-style');\r\n    }\r\n    // console.log('creating aol-style-text with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Text instance with: ', this);\r\n    this.instance = new style.Text(this);\r\n    this.host.instance.setText(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['font']) {\r\n      this.instance.setFont(changes['font'].currentValue);\r\n    }\r\n    if (changes['offsetX']) {\r\n      this.instance.setOffsetX(changes['offsetX'].currentValue);\r\n    }\r\n    if (changes['offsetY']) {\r\n      this.instance.setOffsetY(changes['offsetY'].currentValue);\r\n    }\r\n    if (changes['scale']) {\r\n      this.instance.setScale(changes['scale'].currentValue);\r\n    }\r\n    if (changes['rotation']) {\r\n      this.instance.setRotation(changes['rotation'].currentValue);\r\n    }\r\n    if (changes['text']) {\r\n      this.instance.setText(changes['text'].currentValue);\r\n    }\r\n    if (changes['textAlign']) {\r\n      this.instance.setTextAlign(changes['textAlign'].currentValue);\r\n    }\r\n    if (changes['textBaseLine']) {\r\n      this.instance.setTextBaseline(changes['textBaseLine'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style, Color } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\nimport { StyleCircleComponent } from './circle.component';\r\nimport { StyleTextComponent } from './text.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-stroke',\r\n  template: `\r\n    <div class=\"aol-style-stroke\"></div>\r\n  `,\r\n})\r\nexport class StyleStrokeComponent implements OnInit, OnChanges {\r\n  public instance: style.Stroke;\r\n  /* the typings do not have the setters */\r\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\r\n\r\n  @Input()\r\n  color: Color | undefined;\r\n  @Input()\r\n  lineCap: string | undefined;\r\n  @Input()\r\n  lineDash: number[] | undefined;\r\n  @Input()\r\n  lineJoin: string | undefined;\r\n  @Input()\r\n  miterLimit: number | undefined;\r\n  @Input()\r\n  width: number | undefined;\r\n\r\n  constructor(\r\n    @Optional() styleHost: StyleComponent,\r\n    @Optional() styleCircleHost: StyleCircleComponent,\r\n    @Optional() styleTextHost: StyleTextComponent\r\n  ) {\r\n    if (!styleHost) {\r\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\r\n    }\r\n    if (!!styleTextHost) {\r\n      this.host = styleTextHost;\r\n    } else if (!!styleCircleHost) {\r\n      this.host = styleCircleHost;\r\n    } else {\r\n      this.host = styleHost;\r\n    }\r\n    // console.log('creating aol-style-stroke with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Stroke instance with: ', this);\r\n    this.instance = new style.Stroke(this);\r\n    switch (this.host.componentType) {\r\n      case 'style':\r\n        this.host.instance.setStroke(this.instance);\r\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\r\n        break;\r\n      case 'style-text':\r\n        this.host.instance.setStroke(this.instance);\r\n        break;\r\n      case 'style-circle':\r\n        this.host.stroke = this.instance;\r\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\r\n        break;\r\n      default:\r\n        throw new Error('unknown host type: ' + this.host);\r\n      // break;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['color']) {\r\n      this.instance.setColor(changes['color'].currentValue);\r\n    }\r\n    if (changes['lineCap']) {\r\n      this.instance.setLineCap(changes['lineCap'].currentValue);\r\n    }\r\n    if (changes['lineDash']) {\r\n      this.instance.setLineDash(changes['lineDash'].currentValue);\r\n    }\r\n    if (changes['lineJoin']) {\r\n      this.instance.setLineJoin(changes['lineJoin'].currentValue);\r\n    }\r\n    if (changes['miterLimit']) {\r\n      this.instance.setMiterLimit(changes['miterLimit'].currentValue);\r\n    }\r\n    if (changes['width']) {\r\n      this.instance.setWidth(changes['width'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-icon',\r\n  template: `\r\n    <div class=\"aol-style-icon\"></div>\r\n  `,\r\n})\r\nexport class StyleIconComponent implements OnInit, OnChanges {\r\n  public instance: style.Icon;\r\n\r\n  @Input()\r\n  anchor: [number, number];\r\n  @Input()\r\n  anchorXUnits: style.IconAnchorUnits;\r\n  @Input()\r\n  anchorYUnits: style.IconAnchorUnits;\r\n  @Input()\r\n  anchorOrigin: style.IconOrigin;\r\n  @Input()\r\n  color: [number, number, number, number];\r\n  @Input()\r\n  crossOrigin: style.IconOrigin;\r\n  @Input()\r\n  img: string;\r\n  @Input()\r\n  offset: [number, number];\r\n  @Input()\r\n  offsetOrigin: style.IconOrigin;\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  scale: number;\r\n  @Input()\r\n  snapToPixel: boolean;\r\n  @Input()\r\n  rotateWithView: boolean;\r\n  @Input()\r\n  rotation: number;\r\n  @Input()\r\n  size: [number, number];\r\n  @Input()\r\n  imgSize: [number, number];\r\n  @Input()\r\n  src: string;\r\n\r\n  constructor(@Host() private host: StyleComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Icon instance with: ', this);\r\n    this.instance = new style.Icon(this);\r\n    this.host.instance.setImage(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['opacity']) {\r\n      this.instance.setOpacity(changes['opacity'].currentValue);\r\n    }\r\n    if (changes['rotation']) {\r\n      this.instance.setRotation(changes['rotation'].currentValue);\r\n    }\r\n    if (changes['scale']) {\r\n      this.instance.setScale(changes['scale'].currentValue);\r\n    }\r\n    if (changes['src']) {\r\n      this.instance = new style.Icon(this);\r\n      this.host.instance.setImage(this.instance);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-icon: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style, Color, ColorLike } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\nimport { StyleCircleComponent } from './circle.component';\r\nimport { StyleTextComponent } from './text.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-fill',\r\n  template: `\r\n    <div class=\"aol-style-fill\"></div>\r\n  `,\r\n})\r\nexport class StyleFillComponent implements OnInit, OnChanges {\r\n  /* the typings do not have the setters */\r\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\r\n  public instance: style.Fill;\r\n\r\n  @Input()\r\n  color: Color | ColorLike;\r\n\r\n  constructor(\r\n    @Optional() styleHost: StyleComponent,\r\n    @Optional() styleCircleHost: StyleCircleComponent,\r\n    @Optional() styleTextHost: StyleTextComponent\r\n  ) {\r\n    if (!styleHost) {\r\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\r\n    }\r\n    if (!!styleTextHost) {\r\n      this.host = styleTextHost;\r\n    } else if (!!styleCircleHost) {\r\n      this.host = styleCircleHost;\r\n    } else {\r\n      this.host = styleHost;\r\n    }\r\n    // console.log('creating aol-style-fill with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Fill instance with: ', this);\r\n    this.instance = new style.Fill(this);\r\n    switch (this.host.componentType) {\r\n      case 'style':\r\n        this.host.instance.setFill(this.instance);\r\n        // console.log('setting ol.style instance\\'s fill:', this.host);\r\n        break;\r\n      case 'style-text':\r\n        this.host.instance.setFill(this.instance);\r\n        break;\r\n      case 'style-circle':\r\n        this.host.fill = this.instance;\r\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\r\n        break;\r\n      default:\r\n        throw new Error('unknown host type: ' + this.host);\r\n      // break;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['color']) {\r\n      this.instance.setColor(changes['color'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { control, Collection } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-defaults',\r\n  template: '',\r\n})\r\nexport class DefaultControlComponent implements OnInit, OnDestroy {\r\n  instance: Collection<control.Control>;\r\n  @Input()\r\n  attribution: boolean;\r\n  @Input()\r\n  attributionOptions: olx.control.AttributionOptions;\r\n  @Input()\r\n  rotate: boolean;\r\n  @Input()\r\n  rotateOptions: olx.control.RotateOptions;\r\n  @Input()\r\n  zoom: boolean;\r\n  @Input()\r\n  zoomOptions: olx.control.ZoomOptions;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('ol.control.defaults init: ', this);\r\n    this.instance = control.defaults(this);\r\n    this.instance.forEach(c => this.map.instance.addControl(c));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-defaults');\r\n    this.instance.forEach(c => this.map.instance.removeControl(c));\r\n  }\r\n}\r\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { ContentComponent } from '../content.component';\r\n\r\n@Component({\r\n  selector: 'aol-control',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlComponent implements OnInit, OnDestroy {\r\n  public componentType = 'control';\r\n  instance: control.Control;\r\n  element: Element;\r\n  @ContentChild(ContentComponent)\r\n  content: ContentComponent;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.content) {\r\n      this.element = this.content.elementRef.nativeElement;\r\n      this.instance = new control.Control(this);\r\n      this.map.instance.addControl(this.instance);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.instance) {\r\n      this.map.instance.removeControl(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-attribution',\r\n  template: ``,\r\n})\r\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\r\n  public componentType = 'control';\r\n  instance: control.Attribution;\r\n  target: Element;\r\n  @Input()\r\n  collapsible: boolean;\r\n\r\n  constructor(private map: MapComponent, private element: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.target = this.element.nativeElement;\r\n    // console.log('ol.control.Attribution init: ', this);\r\n    this.instance = new control.Attribution(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-attribution');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-fullscreen',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\r\n  instance: control.FullScreen;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  labelActive: string;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  keys: boolean;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-fullscreen');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.FullScreen(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-fullscreen');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control, CoordinateFormatType, ProjectionLike } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-mouseposition',\r\n  template: ``,\r\n})\r\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\r\n  instance: control.MousePosition;\r\n  @Input()\r\n  coordinateFormat: CoordinateFormatType;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  target: Element;\r\n\r\n  constructor(private map: MapComponent, private element: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.target = this.element.nativeElement;\r\n    // console.log('ol.control.MousePosition init: ', this);\r\n    this.instance = new control.MousePosition(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-mouseposition');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control, View, layer } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-overviewmap',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlOverviewMapComponent implements OnInit, OnDestroy {\r\n  instance: control.OverviewMap;\r\n  @Input()\r\n  collapsed: boolean;\r\n  @Input()\r\n  collapseLabel: string;\r\n  @Input()\r\n  collapsible: boolean;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  layers: layer.Layer[];\r\n  @Input()\r\n  target: Element;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  view: View;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-overviewmap');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.OverviewMap(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-overviewmap');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-rotate',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlRotateComponent implements OnInit, OnDestroy {\r\n  instance: control.Rotate;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  autoHide: boolean;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-rotate');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.Rotate(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-rotate');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-scaleline',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\r\n  instance: control.ScaleLine;\r\n  @Input()\r\n  units: string;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-scaleline');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.ScaleLine(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-scaleline');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoom',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomComponent implements OnInit, OnDestroy {\r\n  instance: control.Zoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  zoomInLabel: string | Node;\r\n  @Input()\r\n  zoomOutLabel: string | Node;\r\n  @Input()\r\n  zoomInTipLabel: string;\r\n  @Input()\r\n  zoomOutTipLabel: string;\r\n  @Input()\r\n  delta: number;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoom');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.Zoom(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoom');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoomslider',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\r\n  instance: control.ZoomSlider;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  minResolution: number;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoomslider');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.ZoomSlider(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoomslider');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control, Extent } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoomtoextent',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\r\n  instance: control.ZoomToExtent;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string | Node;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  extent: Extent;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoomtoextent');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.ZoomToExtent(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoomtoextent');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, forwardRef, Input } from '@angular/core';\r\nimport { format, geom } from 'openlayers';\r\nimport { FormatComponent } from './format.component';\r\n\r\n@Component({\r\n  selector: 'aol-format-mvt',\r\n  template: '',\r\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\r\n})\r\nexport class FormatMVTComponent extends FormatComponent {\r\n  instance: format.MVT;\r\n\r\n  @Input()\r\n  featureClass:\r\n    | ((geom: geom.Geometry | { [k: string]: any }) => any)\r\n    | ((geom: geom.GeometryType, arg2: number[], arg3: number[] | number[][], arg4: { [k: string]: any }) => any);\r\n  @Input()\r\n  geometryName: string;\r\n  @Input()\r\n  layerName: string;\r\n  @Input()\r\n  layers: string[];\r\n\r\n  constructor() {\r\n    super();\r\n    this.instance = new format.MVT(this);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction, Collection } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-default',\r\n  template: '',\r\n})\r\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Collection<interaction.Interaction>;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = interaction.defaults();\r\n    this.instance.forEach(i => this.map.instance.addInteraction(i));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.instance.forEach(i => this.map.instance.removeInteraction(i));\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-doubleclickzoom',\r\n  template: '',\r\n})\r\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DoubleClickZoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  delta: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DoubleClickZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction, format, ProjectionLike } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-draganddrop',\r\n  template: '',\r\n})\r\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragAndDrop;\r\n\r\n  @Input()\r\n  formatConstructors: ((n: format.Feature) => any)[];\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  target: Element;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragAndDrop(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType, DragBoxEndConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragbox',\r\n  template: '',\r\n})\r\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragBox;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  boxEndCondition: DragBoxEndConditionType;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragBox(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType, Kinetic } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragpan',\r\n  template: '',\r\n})\r\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragPan;\r\n\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  kinetic: Kinetic;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragPan(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragrotate',\r\n  template: '',\r\n})\r\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragRotate;\r\n\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  duration: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragRotate(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragrotateandzoom',\r\n  template: '',\r\n})\r\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragRotate;\r\n\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  duration: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragRotateAndZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragzoom',\r\n  template: '',\r\n})\r\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragZoom;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  out: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-mousewheelzoom',\r\n  template: '',\r\n})\r\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.MouseWheelZoom;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  timeout: number;\r\n  @Input()\r\n  useAnchor: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.MouseWheelZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-pinchzoom',\r\n  template: '',\r\n})\r\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.PinchZoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  constrainResolution: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.PinchZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-draw',\r\n  template: '',\r\n})\r\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Draw;\r\n\r\n  @Input()\r\n  clickTolerance?: number;\r\n  @Input()\r\n  features?: ol.Collection<ol.Feature>;\r\n  @Input()\r\n  source?: ol.source.Vector;\r\n  @Input()\r\n  snapTolerance?: number;\r\n  @Input()\r\n  type: ol.geom.GeometryType;\r\n  @Input()\r\n  maxPoints?: number;\r\n  @Input()\r\n  minPoints?: number;\r\n  @Input()\r\n  finishCondition?: ol.EventsConditionType;\r\n  @Input()\r\n  style?: ol.style.Style | ol.style.Style[] | ol.StyleFunction;\r\n  @Input()\r\n  geometryFunction?: ol.DrawGeometryFunctionType;\r\n  @Input()\r\n  geometryName?: string;\r\n  @Input()\r\n  condition?: ol.EventsConditionType;\r\n  @Input()\r\n  freehandCondition?: ol.EventsConditionType;\r\n  @Input()\r\n  freehand?: boolean;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @Output()\r\n  onChange = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onChangeActive = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onDrawEnd = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onDrawStart = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<ol.interaction.Draw.Event>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Draw(this);\r\n    this.instance.on('change', (event: ol.interaction.Draw.Event) => this.onChange.emit(event));\r\n    this.instance.on('change:active', (event: ol.interaction.Draw.Event) => this.onChangeActive.emit(event));\r\n    this.instance.on('drawend', (event: ol.interaction.Draw.Event) => this.onDrawEnd.emit(event));\r\n    this.instance.on('drawstart', (event: ol.interaction.Draw.Event) => this.onDrawStart.emit(event));\r\n    this.instance.on('propertychange', (event: ol.interaction.Draw.Event) => this.onPropertyChange.emit(event));\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport {\r\n  interaction,\r\n  EventsConditionType,\r\n  layer,\r\n  style,\r\n  Collection,\r\n  SelectFilterFunction,\r\n  StyleFunction,\r\n  Feature,\r\n} from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-select',\r\n  template: '',\r\n})\r\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Select;\r\n\r\n  @Input()\r\n  addCondition?: EventsConditionType;\r\n  @Input()\r\n  condition?: EventsConditionType;\r\n  @Input()\r\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\r\n  @Input()\r\n  style?: style.Style | style.Style[] | StyleFunction;\r\n  @Input()\r\n  removeCondition?: EventsConditionType;\r\n  @Input()\r\n  toggleCondition?: EventsConditionType;\r\n  @Input()\r\n  multi?: boolean;\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  filter?: SelectFilterFunction;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @Output()\r\n  onChange = new EventEmitter<interaction.Select.Event>();\r\n  @Output()\r\n  onSelect = new EventEmitter<interaction.Select.Event>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<interaction.Select.Event>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Select(this);\r\n\r\n    this.instance.on('change', (event: interaction.Select.Event) => this.onChange.emit(event));\r\n    this.instance.on('select', (event: interaction.Select.Event) => this.onSelect.emit(event));\r\n    this.instance.on('propertychange', (event: interaction.Select.Event) => this.onPropertyChange.emit(event));\r\n\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { interaction, EventsConditionType, style, StyleFunction, Collection, Feature, source } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-modify',\r\n  template: '',\r\n})\r\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Modify;\r\n\r\n  @Input()\r\n  condition?: EventsConditionType;\r\n  @Input()\r\n  deleteCondition?: EventsConditionType;\r\n  @Input()\r\n  pixelTolerance?: number;\r\n  @Input()\r\n  style?: style.Style | style.Style[] | StyleFunction;\r\n  @Input()\r\n  features: Collection<Feature>;\r\n  @Input()\r\n  wrapX?: boolean;\r\n  @Input()\r\n  source?: source.Vector;\r\n\r\n  @Output()\r\n  onModifyEnd = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onModifyStart = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onChange = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onChangeActive = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<interaction.Modify.Event>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Modify(this);\r\n    this.instance.on('change', (event: interaction.Modify.Event) => this.onChange.emit(event));\r\n    this.instance.on('change:active', (event: interaction.Modify.Event) => this.onChangeActive.emit(event));\r\n    this.instance.on('propertychange', (event: interaction.Modify.Event) => this.onPropertyChange.emit(event));\r\n    this.instance.on('modifyend', (event: interaction.Modify.Event) => this.onModifyEnd.emit(event));\r\n    this.instance.on('modifystart', (event: interaction.Modify.Event) => this.onModifyStart.emit(event));\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { interaction, layer, Collection, Feature } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-translate',\r\n  template: '',\r\n})\r\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Translate;\r\n\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\r\n  @Input()\r\n  hitTolerance?: number;\r\n\r\n  @Output()\r\n  onChange: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onPropertyChange: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onTranslateEnd: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onTranslateStart: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onTranslating: EventEmitter<interaction.Translate.Event>;\r\n\r\n  constructor(private map: MapComponent) {\r\n    this.onChange = new EventEmitter<interaction.Translate.Event>();\r\n    this.onPropertyChange = new EventEmitter<interaction.Translate.Event>();\r\n    this.onTranslateEnd = new EventEmitter<interaction.Translate.Event>();\r\n    this.onTranslateStart = new EventEmitter<interaction.Translate.Event>();\r\n    this.onTranslating = new EventEmitter<interaction.Translate.Event>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Translate(this);\r\n\r\n    this.instance.on('change', (event: interaction.Translate.Event) => this.onChange.emit(event));\r\n    this.instance.on('propertychange', (event: interaction.Translate.Event) => this.onPropertyChange.emit(event));\r\n    this.instance.on('translateend', (event: interaction.Translate.Event) => this.onTranslateEnd.emit(event));\r\n    this.instance.on('translatestart', (event: interaction.Translate.Event) => this.onTranslateStart.emit(event));\r\n    this.instance.on('translating', (event: interaction.Translate.Event) => this.onTranslating.emit(event));\r\n\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { Attribution } from 'openlayers';\r\n\r\n@Component({\r\n  selector: 'aol-attribution',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class AttributionComponent implements OnInit {\r\n  instance: Attribution;\r\n  html: string;\r\n\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.html = this.elementRef.nativeElement.innerHTML;\r\n    this.instance = new Attribution(this);\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\r\nimport { Attribution } from 'openlayers';\r\nimport { SourceComponent } from './sources/source.component';\r\nimport { AttributionComponent } from './attribution.component';\r\n\r\n@Component({\r\n  selector: 'aol-attributions',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class AttributionsComponent implements AfterViewInit {\r\n  instance: Array<Attribution>;\r\n\r\n  @ContentChildren(AttributionComponent)\r\n  attributions: QueryList<AttributionComponent>;\r\n\r\n  constructor(@Host() private source: SourceComponent) {}\r\n\r\n  /* we can do this at the very end */\r\n  ngAfterViewInit() {\r\n    if (this.attributions.length) {\r\n      this.instance = this.attributions.map(cmp => cmp.instance);\r\n      // console.log('setting attributions:', this.instance);\r\n      this.source.instance.setAttributions(this.instance);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ngx-openlayers\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ViewComponent } from './lib/view.component';\r\nimport { GraticuleComponent } from './lib/graticule.component';\r\nimport { LayerGroupComponent } from './lib/layers/layergroup.component';\r\nimport { LayerImageComponent } from './lib/layers/layerimage.component';\r\nimport { LayerTileComponent } from './lib/layers/layertile.component';\r\nimport { MapComponent } from './lib/map.component';\r\nimport { LayerVectorComponent } from './lib/layers/layervector.component';\r\nimport { LayerVectorTileComponent } from './lib/layers/layervectortile.component';\r\nimport { SourceOsmComponent } from './lib/sources/osm.component';\r\nimport { SourceBingmapsComponent } from './lib/sources/bingmaps.component';\r\nimport { SourceClusterComponent } from './lib/sources/cluster.component';\r\nimport { SourceVectorComponent } from './lib/sources/vector.component';\r\nimport { SourceXYZComponent } from './lib/sources/xyz.component';\r\nimport { SourceTileWMTSComponent } from './lib/sources/tilewmts.component';\r\nimport { SourceVectorTileComponent } from './lib/sources/vectortile.component';\r\nimport { SourceTileWMSComponent } from './lib/sources/tilewms.component';\r\nimport { SourceTileJSONComponent } from './lib/sources/tilejson.component';\r\nimport { SourceGeoJSONComponent } from './lib/sources/geojson.component';\r\nimport { SourceImageStaticComponent } from './lib/sources/imagestatic.component';\r\nimport { SourceImageWMSComponent } from './lib/sources/imagewms.component';\r\nimport { SourceImageArcGISRestComponent } from './lib/sources/imagearcgisrest.component';\r\nimport { SourceRasterComponent } from './lib/sources/raster.component';\r\nimport { FeatureComponent } from './lib/feature.component';\r\nimport {\r\n  GeometryLinestringComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n} from './lib/geometry.components';\r\nimport { CollectionCoordinatesComponent, CoordinateComponent } from './lib/coordinate.component';\r\nimport { StyleComponent } from './lib/styles/style.component';\r\nimport { StyleCircleComponent } from './lib/styles/circle.component';\r\nimport { StyleStrokeComponent } from './lib/styles/stroke.component';\r\nimport { StyleIconComponent } from './lib/styles/icon.component';\r\nimport { StyleFillComponent } from './lib/styles/fill.component';\r\nimport { StyleTextComponent } from './lib/styles/text.component';\r\nimport { DefaultControlComponent } from './lib/controls/default.component';\r\nimport { ControlComponent } from './lib/controls/control.component';\r\nimport { ControlAttributionComponent } from './lib/controls/attribution.component';\r\nimport { ControlFullScreenComponent } from './lib/controls/fullscreen.component';\r\nimport { ControlMousePositionComponent } from './lib/controls/mouseposition.component';\r\nimport { ControlOverviewMapComponent } from './lib/controls/overviewmap.component';\r\nimport { ControlRotateComponent } from './lib/controls/rotate.component';\r\nimport { ControlScaleLineComponent } from './lib/controls/scaleline.component';\r\nimport { ControlZoomComponent } from './lib/controls/zoom.component';\r\nimport { ControlZoomSliderComponent } from './lib/controls/zoomslider.component';\r\nimport { ControlZoomToExtentComponent } from './lib/controls/zoomtoextent.component';\r\nimport { FormatMVTComponent } from './lib/formats/mvt.component';\r\nimport { TileGridComponent } from './lib/tilegrid.component';\r\nimport { TileGridWMTSComponent } from './lib/tilegridwmts.component';\r\nimport { DefaultInteractionComponent } from './lib/interactions/default.component';\r\nimport { DoubleClickZoomInteractionComponent } from './lib/interactions/doubleclickzoom.component';\r\nimport { DragAndDropInteractionComponent } from './lib/interactions/draganddrop.component';\r\nimport { DragBoxInteractionComponent } from './lib/interactions/dragbox.component';\r\nimport { DragPanInteractionComponent } from './lib/interactions/dragpan.component';\r\nimport { DragRotateInteractionComponent } from './lib/interactions/dragrotate.component';\r\nimport { DragRotateAndZoomInteractionComponent } from './lib/interactions/dragrotateandzoom.component';\r\nimport { DragZoomInteractionComponent } from './lib/interactions/dragzoom.component';\r\nimport { MouseWheelZoomInteractionComponent } from './lib/interactions/mousewheelzoom.component';\r\nimport { PinchZoomInteractionComponent } from './lib/interactions/pinchzoom.component';\r\nimport { DrawInteractionComponent } from './lib/interactions/draw.component';\r\nimport { SelectInteractionComponent } from './lib/interactions/select.component';\r\nimport { ModifyInteractionComponent } from './lib/interactions/modify.component';\r\nimport { TranslateInteractionComponent } from './lib/interactions/translate.component';\r\nimport { OverlayComponent } from './lib/overlay.component';\r\nimport { ContentComponent } from './lib/content.component';\r\nimport { AttributionComponent } from './lib/attribution.component';\r\nimport { AttributionsComponent } from './lib/attributions.component';\r\n\r\nexport {\r\n  MapComponent,\r\n  ViewComponent,\r\n  GraticuleComponent,\r\n  LayerGroupComponent,\r\n  LayerImageComponent,\r\n  LayerTileComponent,\r\n  LayerVectorComponent,\r\n  LayerVectorTileComponent,\r\n  SourceOsmComponent,\r\n  SourceBingmapsComponent,\r\n  SourceClusterComponent,\r\n  SourceVectorComponent,\r\n  SourceXYZComponent,\r\n  SourceVectorTileComponent,\r\n  SourceTileWMSComponent,\r\n  SourceTileWMTSComponent,\r\n  SourceTileJSONComponent,\r\n  SourceGeoJSONComponent,\r\n  SourceImageStaticComponent,\r\n  SourceImageWMSComponent,\r\n  SourceRasterComponent,\r\n  SourceImageArcGISRestComponent,\r\n  FeatureComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n  CoordinateComponent,\r\n  CollectionCoordinatesComponent,\r\n  StyleComponent,\r\n  StyleCircleComponent,\r\n  StyleFillComponent,\r\n  StyleIconComponent,\r\n  StyleStrokeComponent,\r\n  StyleTextComponent,\r\n  DefaultControlComponent,\r\n  ControlComponent,\r\n  ControlAttributionComponent,\r\n  ControlFullScreenComponent,\r\n  ControlMousePositionComponent,\r\n  ControlOverviewMapComponent,\r\n  ControlRotateComponent,\r\n  ControlScaleLineComponent,\r\n  ControlZoomComponent,\r\n  ControlZoomSliderComponent,\r\n  ControlZoomToExtentComponent,\r\n  FormatMVTComponent,\r\n  TileGridComponent,\r\n  TileGridWMTSComponent,\r\n  DefaultInteractionComponent,\r\n  DoubleClickZoomInteractionComponent,\r\n  DragAndDropInteractionComponent,\r\n  DragBoxInteractionComponent,\r\n  DragPanInteractionComponent,\r\n  DragRotateInteractionComponent,\r\n  DragRotateAndZoomInteractionComponent,\r\n  DragZoomInteractionComponent,\r\n  MouseWheelZoomInteractionComponent,\r\n  PinchZoomInteractionComponent,\r\n  DrawInteractionComponent,\r\n  SelectInteractionComponent,\r\n  ModifyInteractionComponent,\r\n  TranslateInteractionComponent,\r\n  OverlayComponent,\r\n  ContentComponent,\r\n  AttributionComponent,\r\n  AttributionsComponent,\r\n};\r\n\r\nconst COMPONENTS = [\r\n  MapComponent,\r\n\r\n  ViewComponent,\r\n  GraticuleComponent,\r\n\r\n  LayerGroupComponent,\r\n  LayerImageComponent,\r\n  LayerTileComponent,\r\n  LayerVectorComponent,\r\n  LayerVectorTileComponent,\r\n\r\n  SourceOsmComponent,\r\n  SourceBingmapsComponent,\r\n  SourceClusterComponent,\r\n  SourceVectorComponent,\r\n  SourceXYZComponent,\r\n  SourceVectorTileComponent,\r\n  SourceTileWMSComponent,\r\n  SourceTileWMTSComponent,\r\n  SourceTileJSONComponent,\r\n  SourceGeoJSONComponent,\r\n  SourceImageStaticComponent,\r\n  SourceImageWMSComponent,\r\n  SourceImageArcGISRestComponent,\r\n  SourceRasterComponent,\r\n  FeatureComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n  CoordinateComponent,\r\n  CollectionCoordinatesComponent,\r\n\r\n  StyleComponent,\r\n  StyleCircleComponent,\r\n  StyleFillComponent,\r\n  StyleIconComponent,\r\n  StyleStrokeComponent,\r\n  StyleTextComponent,\r\n\r\n  DefaultControlComponent,\r\n  ControlComponent,\r\n  ControlAttributionComponent,\r\n  ControlFullScreenComponent,\r\n  ControlMousePositionComponent,\r\n  ControlOverviewMapComponent,\r\n  ControlRotateComponent,\r\n  ControlScaleLineComponent,\r\n  ControlZoomComponent,\r\n  ControlZoomSliderComponent,\r\n  ControlZoomToExtentComponent,\r\n\r\n  FormatMVTComponent,\r\n  TileGridComponent,\r\n  TileGridWMTSComponent,\r\n\r\n  DefaultInteractionComponent,\r\n  DoubleClickZoomInteractionComponent,\r\n  DragAndDropInteractionComponent,\r\n  DragBoxInteractionComponent,\r\n  DragPanInteractionComponent,\r\n  DragRotateInteractionComponent,\r\n  DragRotateAndZoomInteractionComponent,\r\n  DragZoomInteractionComponent,\r\n  MouseWheelZoomInteractionComponent,\r\n  PinchZoomInteractionComponent,\r\n  DrawInteractionComponent,\r\n  SelectInteractionComponent,\r\n  ModifyInteractionComponent,\r\n  TranslateInteractionComponent,\r\n\r\n  OverlayComponent,\r\n  ContentComponent,\r\n  AttributionComponent,\r\n  AttributionsComponent,\r\n];\r\n\r\n@NgModule({\r\n  declarations: COMPONENTS,\r\n  imports: [CommonModule],\r\n  exports: COMPONENTS,\r\n})\r\nexport class AngularOpenlayersModule {}\r\n"]}
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/attribution.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/attribution.component.js
@@ -39,4 +39,4 @@ if (false) {
      */
     AttributionComponent.prototype.elementRef;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvYXR0cmlidXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBTXpDLE1BQU07Ozs7SUFJSixZQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO0lBQUcsQ0FBQzs7OztJQUU5QyxRQUFRO1FBQ04sSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUM7UUFDcEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4QyxDQUFDOzs7WUFiRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsUUFBUSxFQUFFLDJCQUEyQjthQUN0Qzs7O1lBTm1CLFVBQVU7Ozs7SUFRNUIsd0NBQXNCOztJQUN0QixvQ0FBYTs7Ozs7SUFFRCwwQ0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXR0cmlidXRpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWF0dHJpYnV0aW9uJyxcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+Jyxcbn0pXG5leHBvcnQgY2xhc3MgQXR0cmlidXRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBpbnN0YW5jZTogQXR0cmlidXRpb247XG4gIGh0bWw6IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5odG1sID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuaW5uZXJIVE1MO1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgQXR0cmlidXRpb24odGhpcyk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvYXR0cmlidXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBTXpDLE1BQU07Ozs7SUFJSixZQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO0lBQUcsQ0FBQzs7OztJQUU5QyxRQUFRO1FBQ04sSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUM7UUFDcEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4QyxDQUFDOzs7WUFiRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsUUFBUSxFQUFFLDJCQUEyQjthQUN0Qzs7O1lBTm1CLFVBQVU7Ozs7SUFRNUIsd0NBQXNCOztJQUN0QixvQ0FBYTs7Ozs7SUFFRCwwQ0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBBdHRyaWJ1dGlvbiB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtYXR0cmlidXRpb24nLFxyXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBdHRyaWJ1dGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgaW5zdGFuY2U6IEF0dHJpYnV0aW9uO1xyXG4gIGh0bWw6IHN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaHRtbCA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmlubmVySFRNTDtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgQXR0cmlidXRpb24odGhpcyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/attributions.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/attributions.component.js
@@ -47,4 +47,4 @@ if (false) {
      */
     AttributionsComponent.prototype.source;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRpb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2F0dHJpYnV0aW9ucy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQU0vRCxNQUFNOzs7O0lBTUosWUFBNEIsTUFBdUI7UUFBdkIsV0FBTSxHQUFOLE1BQU0sQ0FBaUI7SUFBRyxDQUFDOzs7OztJQUd2RCxlQUFlO1FBQ2IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDM0QsdURBQXVEO1lBQ3ZELElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdEQsQ0FBQztJQUNILENBQUM7OztZQW5CRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsUUFBUSxFQUFFLDJCQUEyQjthQUN0Qzs7O1lBTlEsZUFBZSx1QkFhVCxJQUFJOzs7MkJBSGhCLGVBQWUsU0FBQyxvQkFBb0I7Ozs7SUFGckMseUNBQTZCOztJQUU3Qiw2Q0FDOEM7Ozs7O0lBRWxDLHVDQUF1QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgQ29udGVudENoaWxkcmVuLCBIb3N0LCBRdWVyeUxpc3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEF0dHJpYnV0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZXMvc291cmNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBdHRyaWJ1dGlvbkNvbXBvbmVudCB9IGZyb20gJy4vYXR0cmlidXRpb24uY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWF0dHJpYnV0aW9ucycsXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG59KVxuZXhwb3J0IGNsYXNzIEF0dHJpYnV0aW9uc0NvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBpbnN0YW5jZTogQXJyYXk8QXR0cmlidXRpb24+O1xuXG4gIEBDb250ZW50Q2hpbGRyZW4oQXR0cmlidXRpb25Db21wb25lbnQpXG4gIGF0dHJpYnV0aW9uczogUXVlcnlMaXN0PEF0dHJpYnV0aW9uQ29tcG9uZW50PjtcblxuICBjb25zdHJ1Y3RvcihASG9zdCgpIHByaXZhdGUgc291cmNlOiBTb3VyY2VDb21wb25lbnQpIHt9XG5cbiAgLyogd2UgY2FuIGRvIHRoaXMgYXQgdGhlIHZlcnkgZW5kICovXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBpZiAodGhpcy5hdHRyaWJ1dGlvbnMubGVuZ3RoKSB7XG4gICAgICB0aGlzLmluc3RhbmNlID0gdGhpcy5hdHRyaWJ1dGlvbnMubWFwKGNtcCA9PiBjbXAuaW5zdGFuY2UpO1xuICAgICAgLy8gY29uc29sZS5sb2coJ3NldHRpbmcgYXR0cmlidXRpb25zOicsIHRoaXMuaW5zdGFuY2UpO1xuICAgICAgdGhpcy5zb3VyY2UuaW5zdGFuY2Uuc2V0QXR0cmlidXRpb25zKHRoaXMuaW5zdGFuY2UpO1xuICAgIH1cbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRpb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2F0dHJpYnV0aW9ucy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQU0vRCxNQUFNOzs7O0lBTUosWUFBNEIsTUFBdUI7UUFBdkIsV0FBTSxHQUFOLE1BQU0sQ0FBaUI7SUFBRyxDQUFDOzs7OztJQUd2RCxlQUFlO1FBQ2IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDM0QsdURBQXVEO1lBQ3ZELElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdEQsQ0FBQztJQUNILENBQUM7OztZQW5CRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsUUFBUSxFQUFFLDJCQUEyQjthQUN0Qzs7O1lBTlEsZUFBZSx1QkFhVCxJQUFJOzs7MkJBSGhCLGVBQWUsU0FBQyxvQkFBb0I7Ozs7SUFGckMseUNBQTZCOztJQUU3Qiw2Q0FDOEM7Ozs7O0lBRWxDLHVDQUF1QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgQ29udGVudENoaWxkcmVuLCBIb3N0LCBRdWVyeUxpc3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQXR0cmlidXRpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2VzL3NvdXJjZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBBdHRyaWJ1dGlvbkNvbXBvbmVudCB9IGZyb20gJy4vYXR0cmlidXRpb24uY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWF0dHJpYnV0aW9ucycsXHJcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+JyxcclxufSlcclxuZXhwb3J0IGNsYXNzIEF0dHJpYnV0aW9uc0NvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xyXG4gIGluc3RhbmNlOiBBcnJheTxBdHRyaWJ1dGlvbj47XHJcblxyXG4gIEBDb250ZW50Q2hpbGRyZW4oQXR0cmlidXRpb25Db21wb25lbnQpXHJcbiAgYXR0cmlidXRpb25zOiBRdWVyeUxpc3Q8QXR0cmlidXRpb25Db21wb25lbnQ+O1xyXG5cclxuICBjb25zdHJ1Y3RvcihASG9zdCgpIHByaXZhdGUgc291cmNlOiBTb3VyY2VDb21wb25lbnQpIHt9XHJcblxyXG4gIC8qIHdlIGNhbiBkbyB0aGlzIGF0IHRoZSB2ZXJ5IGVuZCAqL1xyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgIGlmICh0aGlzLmF0dHJpYnV0aW9ucy5sZW5ndGgpIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZSA9IHRoaXMuYXR0cmlidXRpb25zLm1hcChjbXAgPT4gY21wLmluc3RhbmNlKTtcclxuICAgICAgLy8gY29uc29sZS5sb2coJ3NldHRpbmcgYXR0cmlidXRpb25zOicsIHRoaXMuaW5zdGFuY2UpO1xyXG4gICAgICB0aGlzLnNvdXJjZS5pbnN0YW5jZS5zZXRBdHRyaWJ1dGlvbnModGhpcy5pbnN0YW5jZSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/content.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/content.component.js
@@ -24,4 +24,4 @@ if (false) {
     /** @type {?} */
     ContentComponent.prototype.elementRef;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250ZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFNdEQsTUFBTTs7OztJQUNKLFlBQW1CLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7SUFBRyxDQUFDOzs7WUFMOUMsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxhQUFhO2dCQUN2QixRQUFRLEVBQUUsMkJBQTJCO2FBQ3RDOzs7WUFMbUIsVUFBVTs7OztJQU9oQixzQ0FBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRlbnQnLFxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nLFxufSlcbmV4cG9ydCBjbGFzcyBDb250ZW50Q29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHt9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250ZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFNdEQsTUFBTTs7OztJQUNKLFlBQW1CLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7SUFBRyxDQUFDOzs7WUFMOUMsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxhQUFhO2dCQUN2QixRQUFRLEVBQUUsMkJBQTJCO2FBQ3RDOzs7WUFMbUIsVUFBVTs7OztJQU9oQixzQ0FBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRlbnQnLFxyXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb250ZW50Q29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZWxlbWVudFJlZjogRWxlbWVudFJlZikge31cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/controls/attribution.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/controls/attribution.component.js
@@ -65,4 +65,4 @@ if (false) {
      */
     ControlAttributionComponent.prototype.element;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvY29udHJvbHMvYXR0cmlidXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTWhELE1BQU07Ozs7O0lBT0osWUFBb0IsR0FBaUIsRUFBVSxPQUFtQjtRQUE5QyxRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQVUsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQU4zRCxrQkFBYSxHQUFHLFNBQVMsQ0FBQztJQU1vQyxDQUFDOzs7O0lBRXRFLFFBQVE7UUFDTixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDO1FBQ3pDLHNEQUFzRDtRQUN0RCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsbURBQW1EO1FBQ25ELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBdkJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxRQUFRLEVBQUUsRUFBRTthQUNiOzs7WUFMUSxZQUFZO1lBRkQsVUFBVTs7OzBCQVkzQixLQUFLOzs7O0lBSE4sb0RBQWlDOztJQUNqQywrQ0FBOEI7O0lBQzlCLDZDQUFnQjs7SUFDaEIsa0RBQ3FCOzs7OztJQUVULDBDQUF5Qjs7Ozs7SUFBRSw4Q0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29udHJvbCB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLWF0dHJpYnV0aW9uJyxcbiAgdGVtcGxhdGU6IGBgLFxufSlcbmV4cG9ydCBjbGFzcyBDb250cm9sQXR0cmlidXRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2NvbnRyb2wnO1xuICBpbnN0YW5jZTogY29udHJvbC5BdHRyaWJ1dGlvbjtcbiAgdGFyZ2V0OiBFbGVtZW50O1xuICBASW5wdXQoKVxuICBjb2xsYXBzaWJsZTogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50LCBwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy50YXJnZXQgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudDtcbiAgICAvLyBjb25zb2xlLmxvZygnb2wuY29udHJvbC5BdHRyaWJ1dGlvbiBpbml0OiAnLCB0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuQXR0cmlidXRpb24odGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC1hdHRyaWJ1dGlvbicpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2wodGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvY29udHJvbHMvYXR0cmlidXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTWhELE1BQU07Ozs7O0lBT0osWUFBb0IsR0FBaUIsRUFBVSxPQUFtQjtRQUE5QyxRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQVUsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQU4zRCxrQkFBYSxHQUFHLFNBQVMsQ0FBQztJQU1vQyxDQUFDOzs7O0lBRXRFLFFBQVE7UUFDTixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDO1FBQ3pDLHNEQUFzRDtRQUN0RCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsbURBQW1EO1FBQ25ELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBdkJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxRQUFRLEVBQUUsRUFBRTthQUNiOzs7WUFMUSxZQUFZO1lBRkQsVUFBVTs7OzBCQVkzQixLQUFLOzs7O0lBSE4sb0RBQWlDOztJQUNqQywrQ0FBOEI7O0lBQzlCLDZDQUFnQjs7SUFDaEIsa0RBQ3FCOzs7OztJQUVULDBDQUF5Qjs7Ozs7SUFBRSw4Q0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBjb250cm9sIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtY29udHJvbC1hdHRyaWJ1dGlvbicsXHJcbiAgdGVtcGxhdGU6IGBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29udHJvbEF0dHJpYnV0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2NvbnRyb2wnO1xyXG4gIGluc3RhbmNlOiBjb250cm9sLkF0dHJpYnV0aW9uO1xyXG4gIHRhcmdldDogRWxlbWVudDtcclxuICBASW5wdXQoKVxyXG4gIGNvbGxhcHNpYmxlOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50LCBwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYpIHt9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy50YXJnZXQgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudDtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdvbC5jb250cm9sLkF0dHJpYnV0aW9uIGluaXQ6ICcsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLkF0dHJpYnV0aW9uKHRoaXMpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC1jb250cm9sLWF0dHJpYnV0aW9uJyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/controls/control.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/controls/control.component.js
@@ -62,4 +62,4 @@ if (false) {
      */
     ControlComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9jb250cm9sLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBUXhELE1BQU07Ozs7SUFPSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBTjlCLGtCQUFhLEdBQUcsU0FBUyxDQUFDO0lBTU8sQ0FBQzs7OztJQUV6QyxRQUFRO1FBQ04sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDakIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUM7WUFDckQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDMUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM5QyxDQUFDO0lBQ0gsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNsQixJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2pELENBQUM7SUFDSCxDQUFDOzs7WUEzQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxhQUFhO2dCQUN2QixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUlEsWUFBWTs7O3NCQWFsQixZQUFZLFNBQUMsZ0JBQWdCOzs7O0lBSDlCLHlDQUFpQzs7SUFDakMsb0NBQTBCOztJQUMxQixtQ0FBaUI7O0lBQ2pCLG1DQUMwQjs7Ozs7SUFFZCwrQkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvbnRyb2wgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29udGVudENvbXBvbmVudCB9IGZyb20gJy4uL2NvbnRlbnQuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgQ29udHJvbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnY29udHJvbCc7XG4gIGluc3RhbmNlOiBjb250cm9sLkNvbnRyb2w7XG4gIGVsZW1lbnQ6IEVsZW1lbnQ7XG4gIEBDb250ZW50Q2hpbGQoQ29udGVudENvbXBvbmVudClcbiAgY29udGVudDogQ29udGVudENvbXBvbmVudDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLmNvbnRlbnQpIHtcbiAgICAgIHRoaXMuZWxlbWVudCA9IHRoaXMuY29udGVudC5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuQ29udHJvbCh0aGlzKTtcbiAgICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZENvbnRyb2wodGhpcy5pbnN0YW5jZSk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2wodGhpcy5pbnN0YW5jZSk7XG4gICAgfVxuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9jb250cm9sLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBUXhELE1BQU07Ozs7SUFPSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBTjlCLGtCQUFhLEdBQUcsU0FBUyxDQUFDO0lBTU8sQ0FBQzs7OztJQUV6QyxRQUFRO1FBQ04sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDakIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUM7WUFDckQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDMUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM5QyxDQUFDO0lBQ0gsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNsQixJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2pELENBQUM7SUFDSCxDQUFDOzs7WUEzQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxhQUFhO2dCQUN2QixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUlEsWUFBWTs7O3NCQWFsQixZQUFZLFNBQUMsZ0JBQWdCOzs7O0lBSDlCLHlDQUFpQzs7SUFDakMsb0NBQTBCOztJQUMxQixtQ0FBaUI7O0lBQ2pCLG1DQUMwQjs7Ozs7SUFFZCwrQkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgY29udHJvbCB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQ29udGVudENvbXBvbmVudCB9IGZyb20gJy4uL2NvbnRlbnQuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbnRyb2xDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnY29udHJvbCc7XHJcbiAgaW5zdGFuY2U6IGNvbnRyb2wuQ29udHJvbDtcclxuICBlbGVtZW50OiBFbGVtZW50O1xyXG4gIEBDb250ZW50Q2hpbGQoQ29udGVudENvbXBvbmVudClcclxuICBjb250ZW50OiBDb250ZW50Q29tcG9uZW50O1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIGlmICh0aGlzLmNvbnRlbnQpIHtcclxuICAgICAgdGhpcy5lbGVtZW50ID0gdGhpcy5jb250ZW50LmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcclxuICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLkNvbnRyb2wodGhpcyk7XHJcbiAgICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZENvbnRyb2wodGhpcy5pbnN0YW5jZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIGlmICh0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2wodGhpcy5pbnN0YW5jZSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/controls/default.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/controls/default.component.js
@@ -66,4 +66,4 @@ if (false) {
      */
     DefaultControlComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9kZWZhdWx0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQWMsTUFBTSxZQUFZLENBQUM7QUFDakQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTWhELE1BQU07Ozs7SUFlSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6QyxRQUFRO1FBQ04sbURBQW1EO1FBQ25ELElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzlELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsZ0RBQWdEO1FBQ2hELElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDakUsQ0FBQzs7O1lBOUJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyxRQUFRLEVBQUUsRUFBRTthQUNiOzs7WUFMUSxZQUFZOzs7MEJBUWxCLEtBQUs7aUNBRUwsS0FBSztxQkFFTCxLQUFLOzRCQUVMLEtBQUs7bUJBRUwsS0FBSzswQkFFTCxLQUFLOzs7O0lBWE4sMkNBQXNDOztJQUN0Qyw4Q0FDcUI7O0lBQ3JCLHFEQUNtRDs7SUFDbkQseUNBQ2dCOztJQUNoQixnREFDeUM7O0lBQ3pDLHVDQUNjOztJQUNkLDhDQUNxQzs7Ozs7SUFFekIsc0NBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvbnRyb2wsIENvbGxlY3Rpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtY29udHJvbC1kZWZhdWx0cycsXG4gIHRlbXBsYXRlOiAnJyxcbn0pXG5leHBvcnQgY2xhc3MgRGVmYXVsdENvbnRyb2xDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBDb2xsZWN0aW9uPGNvbnRyb2wuQ29udHJvbD47XG4gIEBJbnB1dCgpXG4gIGF0dHJpYnV0aW9uOiBib29sZWFuO1xuICBASW5wdXQoKVxuICBhdHRyaWJ1dGlvbk9wdGlvbnM6IG9seC5jb250cm9sLkF0dHJpYnV0aW9uT3B0aW9ucztcbiAgQElucHV0KClcbiAgcm90YXRlOiBib29sZWFuO1xuICBASW5wdXQoKVxuICByb3RhdGVPcHRpb25zOiBvbHguY29udHJvbC5Sb3RhdGVPcHRpb25zO1xuICBASW5wdXQoKVxuICB6b29tOiBib29sZWFuO1xuICBASW5wdXQoKVxuICB6b29tT3B0aW9uczogb2x4LmNvbnRyb2wuWm9vbU9wdGlvbnM7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnb2wuY29udHJvbC5kZWZhdWx0cyBpbml0OiAnLCB0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlID0gY29udHJvbC5kZWZhdWx0cyh0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlLmZvckVhY2goYyA9PiB0aGlzLm1hcC5pbnN0YW5jZS5hZGRDb250cm9sKGMpKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC1kZWZhdWx0cycpO1xuICAgIHRoaXMuaW5zdGFuY2UuZm9yRWFjaChjID0+IHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2woYykpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9kZWZhdWx0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQWMsTUFBTSxZQUFZLENBQUM7QUFDakQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTWhELE1BQU07Ozs7SUFlSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6QyxRQUFRO1FBQ04sbURBQW1EO1FBQ25ELElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzlELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsZ0RBQWdEO1FBQ2hELElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDakUsQ0FBQzs7O1lBOUJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyxRQUFRLEVBQUUsRUFBRTthQUNiOzs7WUFMUSxZQUFZOzs7MEJBUWxCLEtBQUs7aUNBRUwsS0FBSztxQkFFTCxLQUFLOzRCQUVMLEtBQUs7bUJBRUwsS0FBSzswQkFFTCxLQUFLOzs7O0lBWE4sMkNBQXNDOztJQUN0Qyw4Q0FDcUI7O0lBQ3JCLHFEQUNtRDs7SUFDbkQseUNBQ2dCOztJQUNoQixnREFDeUM7O0lBQ3pDLHVDQUNjOztJQUNkLDhDQUNxQzs7Ozs7SUFFekIsc0NBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgY29udHJvbCwgQ29sbGVjdGlvbiB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wtZGVmYXVsdHMnLFxyXG4gIHRlbXBsYXRlOiAnJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIERlZmF1bHRDb250cm9sQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBDb2xsZWN0aW9uPGNvbnRyb2wuQ29udHJvbD47XHJcbiAgQElucHV0KClcclxuICBhdHRyaWJ1dGlvbjogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIGF0dHJpYnV0aW9uT3B0aW9uczogb2x4LmNvbnRyb2wuQXR0cmlidXRpb25PcHRpb25zO1xyXG4gIEBJbnB1dCgpXHJcbiAgcm90YXRlOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgcm90YXRlT3B0aW9uczogb2x4LmNvbnRyb2wuUm90YXRlT3B0aW9ucztcclxuICBASW5wdXQoKVxyXG4gIHpvb206IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICB6b29tT3B0aW9uczogb2x4LmNvbnRyb2wuWm9vbU9wdGlvbnM7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ29sLmNvbnRyb2wuZGVmYXVsdHMgaW5pdDogJywgdGhpcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gY29udHJvbC5kZWZhdWx0cyh0aGlzKTtcclxuICAgIHRoaXMuaW5zdGFuY2UuZm9yRWFjaChjID0+IHRoaXMubWFwLmluc3RhbmNlLmFkZENvbnRyb2woYykpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLWNvbnRyb2wtZGVmYXVsdHMnKTtcclxuICAgIHRoaXMuaW5zdGFuY2UuZm9yRWFjaChjID0+IHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2woYykpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/controls/fullscreen.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/controls/fullscreen.component.js
@@ -65,4 +65,4 @@ if (false) {
      */
     ControlFullScreenComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVsbHNjcmVlbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9mdWxsc2NyZWVuLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUWhELE1BQU07Ozs7SUFjSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLG9EQUFvRDtJQUN0RCxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxrREFBa0Q7UUFDbEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7WUFoQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFQUSxZQUFZOzs7d0JBV2xCLEtBQUs7b0JBRUwsS0FBSzswQkFFTCxLQUFLO3VCQUVMLEtBQUs7bUJBRUwsS0FBSzs7OztJQVZOLDhDQUE2Qjs7SUFFN0IsK0NBQ2tCOztJQUNsQiwyQ0FDYzs7SUFDZCxpREFDb0I7O0lBQ3BCLDhDQUNpQjs7SUFDakIsMENBQ2M7Ozs7O0lBRUYseUNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvbnRyb2wgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtY29udHJvbC1mdWxsc2NyZWVuJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIENvbnRyb2xGdWxsU2NyZWVuQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBpbnN0YW5jZTogY29udHJvbC5GdWxsU2NyZWVuO1xuXG4gIEBJbnB1dCgpXG4gIGNsYXNzTmFtZTogc3RyaW5nO1xuICBASW5wdXQoKVxuICBsYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBsYWJlbEFjdGl2ZTogc3RyaW5nO1xuICBASW5wdXQoKVxuICB0aXBMYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBrZXlzOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnaW5zdGFuY2luZyBhb2wtY29udHJvbC1mdWxsc2NyZWVuJyk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuRnVsbFNjcmVlbih0aGlzKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC1jb250cm9sLWZ1bGxzY3JlZW4nKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVsbHNjcmVlbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9mdWxsc2NyZWVuLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUWhELE1BQU07Ozs7SUFjSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLG9EQUFvRDtJQUN0RCxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxrREFBa0Q7UUFDbEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7WUFoQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFQUSxZQUFZOzs7d0JBV2xCLEtBQUs7b0JBRUwsS0FBSzswQkFFTCxLQUFLO3VCQUVMLEtBQUs7bUJBRUwsS0FBSzs7OztJQVZOLDhDQUE2Qjs7SUFFN0IsK0NBQ2tCOztJQUNsQiwyQ0FDYzs7SUFDZCxpREFDb0I7O0lBQ3BCLDhDQUNpQjs7SUFDakIsMENBQ2M7Ozs7O0lBRUYseUNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgY29udHJvbCB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wtZnVsbHNjcmVlbicsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29udHJvbEZ1bGxTY3JlZW5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGNvbnRyb2wuRnVsbFNjcmVlbjtcclxuXHJcbiAgQElucHV0KClcclxuICBjbGFzc05hbWU6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGxhYmVsOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBsYWJlbEFjdGl2ZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlwTGFiZWw6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGtleXM6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdpbnN0YW5jaW5nIGFvbC1jb250cm9sLWZ1bGxzY3JlZW4nKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLkZ1bGxTY3JlZW4odGhpcyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLWNvbnRyb2wtZnVsbHNjcmVlbicpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/controls/mouseposition.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/controls/mouseposition.component.js
@@ -65,4 +65,4 @@ if (false) {
      */
     ControlMousePositionComponent.prototype.element;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW91c2Vwb3NpdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9tb3VzZXBvc2l0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNoRixPQUFPLEVBQUUsT0FBTyxFQUF3QyxNQUFNLFlBQVksQ0FBQztBQUMzRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7Ozs7SUFRSixZQUFvQixHQUFpQixFQUFVLE9BQW1CO1FBQTlDLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFBVSxZQUFPLEdBQVAsT0FBTyxDQUFZO0lBQUcsQ0FBQzs7OztJQUV0RSxRQUFRO1FBQ04sSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQztRQUN6Qyx3REFBd0Q7UUFDeEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsV0FBVztRQUNULHFEQUFxRDtRQUNyRCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2pELENBQUM7OztZQXhCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsUUFBUSxFQUFFLEVBQUU7YUFDYjs7O1lBTFEsWUFBWTtZQUZELFVBQVU7OzsrQkFVM0IsS0FBSzt5QkFFTCxLQUFLOzs7O0lBSE4saURBQWdDOztJQUNoQyx5REFDdUM7O0lBQ3ZDLG1EQUMyQjs7SUFDM0IsK0NBQWdCOzs7OztJQUVKLDRDQUF5Qjs7Ozs7SUFBRSxnREFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29udHJvbCwgQ29vcmRpbmF0ZUZvcm1hdFR5cGUsIFByb2plY3Rpb25MaWtlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wtbW91c2Vwb3NpdGlvbicsXG4gIHRlbXBsYXRlOiBgYCxcbn0pXG5leHBvcnQgY2xhc3MgQ29udHJvbE1vdXNlUG9zaXRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBjb250cm9sLk1vdXNlUG9zaXRpb247XG4gIEBJbnB1dCgpXG4gIGNvb3JkaW5hdGVGb3JtYXQ6IENvb3JkaW5hdGVGb3JtYXRUeXBlO1xuICBASW5wdXQoKVxuICBwcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZTtcbiAgdGFyZ2V0OiBFbGVtZW50O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQsIHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZikge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnRhcmdldCA9IHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50O1xuICAgIC8vIGNvbnNvbGUubG9nKCdvbC5jb250cm9sLk1vdXNlUG9zaXRpb24gaW5pdDogJywgdGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLk1vdXNlUG9zaXRpb24odGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC1tb3VzZXBvc2l0aW9uJyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW91c2Vwb3NpdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9tb3VzZXBvc2l0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNoRixPQUFPLEVBQUUsT0FBTyxFQUF3QyxNQUFNLFlBQVksQ0FBQztBQUMzRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7Ozs7SUFRSixZQUFvQixHQUFpQixFQUFVLE9BQW1CO1FBQTlDLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFBVSxZQUFPLEdBQVAsT0FBTyxDQUFZO0lBQUcsQ0FBQzs7OztJQUV0RSxRQUFRO1FBQ04sSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQztRQUN6Qyx3REFBd0Q7UUFDeEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsV0FBVztRQUNULHFEQUFxRDtRQUNyRCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2pELENBQUM7OztZQXhCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsUUFBUSxFQUFFLEVBQUU7YUFDYjs7O1lBTFEsWUFBWTtZQUZELFVBQVU7OzsrQkFVM0IsS0FBSzt5QkFFTCxLQUFLOzs7O0lBSE4saURBQWdDOztJQUNoQyx5REFDdUM7O0lBQ3ZDLG1EQUMyQjs7SUFDM0IsK0NBQWdCOzs7OztJQUVKLDRDQUF5Qjs7Ozs7SUFBRSxnREFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBjb250cm9sLCBDb29yZGluYXRlRm9ybWF0VHlwZSwgUHJvamVjdGlvbkxpa2UgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLW1vdXNlcG9zaXRpb24nLFxyXG4gIHRlbXBsYXRlOiBgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbnRyb2xNb3VzZVBvc2l0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBjb250cm9sLk1vdXNlUG9zaXRpb247XHJcbiAgQElucHV0KClcclxuICBjb29yZGluYXRlRm9ybWF0OiBDb29yZGluYXRlRm9ybWF0VHlwZTtcclxuICBASW5wdXQoKVxyXG4gIHByb2plY3Rpb246IFByb2plY3Rpb25MaWtlO1xyXG4gIHRhcmdldDogRWxlbWVudDtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCwgcHJpdmF0ZSBlbGVtZW50OiBFbGVtZW50UmVmKSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMudGFyZ2V0ID0gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQ7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnb2wuY29udHJvbC5Nb3VzZVBvc2l0aW9uIGluaXQ6ICcsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLk1vdXNlUG9zaXRpb24odGhpcyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLWNvbnRyb2wtbW91c2Vwb3NpdGlvbicpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/controls/overviewmap.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/controls/overviewmap.component.js
@@ -74,4 +74,4 @@ if (false) {
      */
     ControlOverviewMapComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcnZpZXdtYXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvY29udHJvbHMvb3ZlcnZpZXdtYXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQVMsTUFBTSxZQUFZLENBQUM7QUFDbEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUWhELE1BQU07Ozs7SUFtQkosWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyxxREFBcUQ7SUFDdkQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsbURBQW1EO1FBQ25ELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBckNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsWUFBWTs7O3dCQVVsQixLQUFLOzRCQUVMLEtBQUs7MEJBRUwsS0FBSztvQkFFTCxLQUFLO3FCQUVMLEtBQUs7cUJBRUwsS0FBSzt1QkFFTCxLQUFLO21CQUVMLEtBQUs7Ozs7SUFmTiwrQ0FBOEI7O0lBQzlCLGdEQUNtQjs7SUFDbkIsb0RBQ3NCOztJQUN0QixrREFDcUI7O0lBQ3JCLDRDQUNjOztJQUNkLDZDQUNzQjs7SUFDdEIsNkNBQ2dCOztJQUNoQiwrQ0FDaUI7O0lBQ2pCLDJDQUNXOzs7OztJQUVDLDBDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb250cm9sLCBWaWV3LCBsYXllciB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLW92ZXJ2aWV3bWFwJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIENvbnRyb2xPdmVydmlld01hcENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGNvbnRyb2wuT3ZlcnZpZXdNYXA7XG4gIEBJbnB1dCgpXG4gIGNvbGxhcHNlZDogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgY29sbGFwc2VMYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBjb2xsYXBzaWJsZTogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KClcbiAgbGF5ZXJzOiBsYXllci5MYXllcltdO1xuICBASW5wdXQoKVxuICB0YXJnZXQ6IEVsZW1lbnQ7XG4gIEBJbnB1dCgpXG4gIHRpcExhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHZpZXc6IFZpZXc7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdpbnN0YW5jaW5nIGFvbC1jb250cm9sLW92ZXJ2aWV3bWFwJyk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuT3ZlcnZpZXdNYXAodGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC1vdmVydmlld21hcCcpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2wodGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcnZpZXdtYXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvY29udHJvbHMvb3ZlcnZpZXdtYXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQVMsTUFBTSxZQUFZLENBQUM7QUFDbEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUWhELE1BQU07Ozs7SUFtQkosWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyxxREFBcUQ7SUFDdkQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsbURBQW1EO1FBQ25ELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBckNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsWUFBWTs7O3dCQVVsQixLQUFLOzRCQUVMLEtBQUs7MEJBRUwsS0FBSztvQkFFTCxLQUFLO3FCQUVMLEtBQUs7cUJBRUwsS0FBSzt1QkFFTCxLQUFLO21CQUVMLEtBQUs7Ozs7SUFmTiwrQ0FBOEI7O0lBQzlCLGdEQUNtQjs7SUFDbkIsb0RBQ3NCOztJQUN0QixrREFDcUI7O0lBQ3JCLDRDQUNjOztJQUNkLDZDQUNzQjs7SUFDdEIsNkNBQ2dCOztJQUNoQiwrQ0FDaUI7O0lBQ2pCLDJDQUNXOzs7OztJQUVDLDBDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGNvbnRyb2wsIFZpZXcsIGxheWVyIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtY29udHJvbC1vdmVydmlld21hcCcsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29udHJvbE92ZXJ2aWV3TWFwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBjb250cm9sLk92ZXJ2aWV3TWFwO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29sbGFwc2VkOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29sbGFwc2VMYWJlbDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29sbGFwc2libGU6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICBsYWJlbDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGF5ZXJzOiBsYXllci5MYXllcltdO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGFyZ2V0OiBFbGVtZW50O1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlwTGFiZWw6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHZpZXc6IFZpZXc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdpbnN0YW5jaW5nIGFvbC1jb250cm9sLW92ZXJ2aWV3bWFwJyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgY29udHJvbC5PdmVydmlld01hcCh0aGlzKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZENvbnRyb2wodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC1vdmVydmlld21hcCcpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/controls/rotate.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/controls/rotate.component.js
@@ -65,4 +65,4 @@ if (false) {
      */
     ControlRotateComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm90YXRlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3JvdGF0ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQVFoRCxNQUFNOzs7O0lBY0osWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyxnREFBZ0Q7SUFDbEQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsOENBQThDO1FBQzlDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBaENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsb0JBQW9CO2dCQUM5QixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsWUFBWTs7O3dCQVdsQixLQUFLO29CQUVMLEtBQUs7dUJBRUwsS0FBSzt1QkFFTCxLQUFLO3VCQUVMLEtBQUs7Ozs7SUFWTiwwQ0FBeUI7O0lBRXpCLDJDQUNrQjs7SUFDbEIsdUNBQ2M7O0lBQ2QsMENBQ2lCOztJQUNqQiwwQ0FDaUI7O0lBQ2pCLDBDQUNrQjs7Ozs7SUFFTixxQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29udHJvbCB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLXJvdGF0ZScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBDb250cm9sUm90YXRlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBpbnN0YW5jZTogY29udHJvbC5Sb3RhdGU7XG5cbiAgQElucHV0KClcbiAgY2xhc3NOYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHRpcExhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGR1cmF0aW9uOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIGF1dG9IaWRlOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnaW5zdGFuY2luZyBhb2wtY29udHJvbC1yb3RhdGUnKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgY29udHJvbC5Sb3RhdGUodGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC1yb3RhdGUnKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm90YXRlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3JvdGF0ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQVFoRCxNQUFNOzs7O0lBY0osWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyxnREFBZ0Q7SUFDbEQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsOENBQThDO1FBQzlDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBaENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsb0JBQW9CO2dCQUM5QixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsWUFBWTs7O3dCQVdsQixLQUFLO29CQUVMLEtBQUs7dUJBRUwsS0FBSzt1QkFFTCxLQUFLO3VCQUVMLEtBQUs7Ozs7SUFWTiwwQ0FBeUI7O0lBRXpCLDJDQUNrQjs7SUFDbEIsdUNBQ2M7O0lBQ2QsMENBQ2lCOztJQUNqQiwwQ0FDaUI7O0lBQ2pCLDBDQUNrQjs7Ozs7SUFFTixxQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBjb250cm9sIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtY29udHJvbC1yb3RhdGUnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbnRyb2xSb3RhdGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGNvbnRyb2wuUm90YXRlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGNsYXNzTmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGFiZWw6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHRpcExhYmVsOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBkdXJhdGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgYXV0b0hpZGU6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdpbnN0YW5jaW5nIGFvbC1jb250cm9sLXJvdGF0ZScpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuUm90YXRlKHRoaXMpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC1jb250cm9sLXJvdGF0ZScpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/controls/scaleline.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/controls/scaleline.component.js
@@ -53,4 +53,4 @@ if (false) {
      */
     ControlScaleLineComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NhbGVsaW5lLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3NjYWxlbGluZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQVFoRCxNQUFNOzs7O0lBS0osWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyxtREFBbUQ7SUFDckQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsaURBQWlEO1FBQ2pELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBdkJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsdUJBQXVCO2dCQUNqQyxRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsWUFBWTs7O29CQVVsQixLQUFLOzs7O0lBRE4sNkNBQTRCOztJQUM1QiwwQ0FDYzs7Ozs7SUFFRix3Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29udHJvbCB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLXNjYWxlbGluZScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBDb250cm9sU2NhbGVMaW5lQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBpbnN0YW5jZTogY29udHJvbC5TY2FsZUxpbmU7XG4gIEBJbnB1dCgpXG4gIHVuaXRzOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdpbnN0YW5jaW5nIGFvbC1jb250cm9sLXNjYWxlbGluZScpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLlNjYWxlTGluZSh0aGlzKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC1jb250cm9sLXNjYWxlbGluZScpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2wodGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NhbGVsaW5lLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3NjYWxlbGluZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQVFoRCxNQUFNOzs7O0lBS0osWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyxtREFBbUQ7SUFDckQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsaURBQWlEO1FBQ2pELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBdkJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsdUJBQXVCO2dCQUNqQyxRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsWUFBWTs7O29CQVVsQixLQUFLOzs7O0lBRE4sNkNBQTRCOztJQUM1QiwwQ0FDYzs7Ozs7SUFFRix3Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBjb250cm9sIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtY29udHJvbC1zY2FsZWxpbmUnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbnRyb2xTY2FsZUxpbmVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGNvbnRyb2wuU2NhbGVMaW5lO1xyXG4gIEBJbnB1dCgpXHJcbiAgdW5pdHM6IHN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2luc3RhbmNpbmcgYW9sLWNvbnRyb2wtc2NhbGVsaW5lJyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgY29udHJvbC5TY2FsZUxpbmUodGhpcyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLWNvbnRyb2wtc2NhbGVsaW5lJyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/controls/zoom.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/controls/zoom.component.js
@@ -68,4 +68,4 @@ if (false) {
      */
     ControlZoomComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy96b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUWhELE1BQU07Ozs7SUFnQkosWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyw4Q0FBOEM7SUFDaEQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsNENBQTRDO1FBQzVDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBbENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0JBQWtCO2dCQUM1QixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsWUFBWTs7O3VCQVdsQixLQUFLOzBCQUVMLEtBQUs7MkJBRUwsS0FBSzs2QkFFTCxLQUFLOzhCQUVMLEtBQUs7b0JBRUwsS0FBSzs7OztJQVpOLHdDQUF1Qjs7SUFFdkIsd0NBQ2lCOztJQUNqQiwyQ0FDMkI7O0lBQzNCLDRDQUM0Qjs7SUFDNUIsOENBQ3VCOztJQUN2QiwrQ0FDd0I7O0lBQ3hCLHFDQUNjOzs7OztJQUVGLG1DQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb250cm9sIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wtem9vbScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBDb250cm9sWm9vbUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGNvbnRyb2wuWm9vbTtcblxuICBASW5wdXQoKVxuICBkdXJhdGlvbjogbnVtYmVyO1xuICBASW5wdXQoKVxuICB6b29tSW5MYWJlbDogc3RyaW5nIHwgTm9kZTtcbiAgQElucHV0KClcbiAgem9vbU91dExhYmVsOiBzdHJpbmcgfCBOb2RlO1xuICBASW5wdXQoKVxuICB6b29tSW5UaXBMYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKVxuICB6b29tT3V0VGlwTGFiZWw6IHN0cmluZztcbiAgQElucHV0KClcbiAgZGVsdGE6IG51bWJlcjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2luc3RhbmNpbmcgYW9sLWNvbnRyb2wtem9vbScpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLlpvb20odGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC16b29tJyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy96b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUWhELE1BQU07Ozs7SUFnQkosWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyw4Q0FBOEM7SUFDaEQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsNENBQTRDO1FBQzVDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBbENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0JBQWtCO2dCQUM1QixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsWUFBWTs7O3VCQVdsQixLQUFLOzBCQUVMLEtBQUs7MkJBRUwsS0FBSzs2QkFFTCxLQUFLOzhCQUVMLEtBQUs7b0JBRUwsS0FBSzs7OztJQVpOLHdDQUF1Qjs7SUFFdkIsd0NBQ2lCOztJQUNqQiwyQ0FDMkI7O0lBQzNCLDRDQUM0Qjs7SUFDNUIsOENBQ3VCOztJQUN2QiwrQ0FDd0I7O0lBQ3hCLHFDQUNjOzs7OztJQUVGLG1DQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGNvbnRyb2wgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLXpvb20nLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbnRyb2xab29tQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBjb250cm9sLlpvb207XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgZHVyYXRpb246IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHpvb21JbkxhYmVsOiBzdHJpbmcgfCBOb2RlO1xyXG4gIEBJbnB1dCgpXHJcbiAgem9vbU91dExhYmVsOiBzdHJpbmcgfCBOb2RlO1xyXG4gIEBJbnB1dCgpXHJcbiAgem9vbUluVGlwTGFiZWw6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHpvb21PdXRUaXBMYWJlbDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgZGVsdGE6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2luc3RhbmNpbmcgYW9sLWNvbnRyb2wtem9vbScpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuWm9vbSh0aGlzKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZENvbnRyb2wodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC16b29tJyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/controls/zoomslider.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/controls/zoomslider.component.js
@@ -62,4 +62,4 @@ if (false) {
      */
     ControlZoomSliderComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbXNsaWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy96b29tc2xpZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUWhELE1BQU07Ozs7SUFZSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLG9EQUFvRDtJQUN0RCxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxrREFBa0Q7UUFDbEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7WUE5QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFQUSxZQUFZOzs7d0JBV2xCLEtBQUs7dUJBRUwsS0FBSzs0QkFFTCxLQUFLOzRCQUVMLEtBQUs7Ozs7SUFSTiw4Q0FBNkI7O0lBRTdCLCtDQUNrQjs7SUFDbEIsOENBQ2lCOztJQUNqQixtREFDc0I7O0lBQ3RCLG1EQUNzQjs7Ozs7SUFFVix5Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29udHJvbCB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLXpvb21zbGlkZXInLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgQ29udHJvbFpvb21TbGlkZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBjb250cm9sLlpvb21TbGlkZXI7XG5cbiAgQElucHV0KClcbiAgY2xhc3NOYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGR1cmF0aW9uOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIG1heFJlc29sdXRpb246IG51bWJlcjtcbiAgQElucHV0KClcbiAgbWluUmVzb2x1dGlvbjogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnaW5zdGFuY2luZyBhb2wtY29udHJvbC16b29tc2xpZGVyJyk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuWm9vbVNsaWRlcih0aGlzKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC1jb250cm9sLXpvb21zbGlkZXInKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbXNsaWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy96b29tc2xpZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUWhELE1BQU07Ozs7SUFZSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLG9EQUFvRDtJQUN0RCxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxrREFBa0Q7UUFDbEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7WUE5QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFQUSxZQUFZOzs7d0JBV2xCLEtBQUs7dUJBRUwsS0FBSzs0QkFFTCxLQUFLOzRCQUVMLEtBQUs7Ozs7SUFSTiw4Q0FBNkI7O0lBRTdCLCtDQUNrQjs7SUFDbEIsOENBQ2lCOztJQUNqQixtREFDc0I7O0lBQ3RCLG1EQUNzQjs7Ozs7SUFFVix5Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBjb250cm9sIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtY29udHJvbC16b29tc2xpZGVyJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb250cm9sWm9vbVNsaWRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBpbnN0YW5jZTogY29udHJvbC5ab29tU2xpZGVyO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGNsYXNzTmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgZHVyYXRpb246IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIG1heFJlc29sdXRpb246IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIG1pblJlc29sdXRpb246IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2luc3RhbmNpbmcgYW9sLWNvbnRyb2wtem9vbXNsaWRlcicpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuWm9vbVNsaWRlcih0aGlzKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZENvbnRyb2wodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC16b29tc2xpZGVyJyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/controls/zoomtoextent.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/controls/zoomtoextent.component.js
@@ -62,4 +62,4 @@ if (false) {
      */
     ControlZoomToExtentComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbXRvZXh0ZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3pvb210b2V4dGVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsT0FBTyxFQUFVLE1BQU0sWUFBWSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQVFoRCxNQUFNOzs7O0lBWUosWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyxzREFBc0Q7SUFDeEQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1Qsb0RBQW9EO1FBQ3BELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBOUJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsMEJBQTBCO2dCQUNwQyxRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsWUFBWTs7O3dCQVdsQixLQUFLO29CQUVMLEtBQUs7dUJBRUwsS0FBSztxQkFFTCxLQUFLOzs7O0lBUk4sZ0RBQStCOztJQUUvQixpREFDa0I7O0lBQ2xCLDZDQUNxQjs7SUFDckIsZ0RBQ2lCOztJQUNqQiw4Q0FDZTs7Ozs7SUFFSCwyQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29udHJvbCwgRXh0ZW50IH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wtem9vbXRvZXh0ZW50JyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIENvbnRyb2xab29tVG9FeHRlbnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBjb250cm9sLlpvb21Ub0V4dGVudDtcblxuICBASW5wdXQoKVxuICBjbGFzc05hbWU6IHN0cmluZztcbiAgQElucHV0KClcbiAgbGFiZWw6IHN0cmluZyB8IE5vZGU7XG4gIEBJbnB1dCgpXG4gIHRpcExhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGV4dGVudDogRXh0ZW50O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnaW5zdGFuY2luZyBhb2wtY29udHJvbC16b29tdG9leHRlbnQnKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgY29udHJvbC5ab29tVG9FeHRlbnQodGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC16b29tdG9leHRlbnQnKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbXRvZXh0ZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3pvb210b2V4dGVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsT0FBTyxFQUFVLE1BQU0sWUFBWSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQVFoRCxNQUFNOzs7O0lBWUosWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyxzREFBc0Q7SUFDeEQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1Qsb0RBQW9EO1FBQ3BELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBOUJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsMEJBQTBCO2dCQUNwQyxRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsWUFBWTs7O3dCQVdsQixLQUFLO29CQUVMLEtBQUs7dUJBRUwsS0FBSztxQkFFTCxLQUFLOzs7O0lBUk4sZ0RBQStCOztJQUUvQixpREFDa0I7O0lBQ2xCLDZDQUNxQjs7SUFDckIsZ0RBQ2lCOztJQUNqQiw4Q0FDZTs7Ozs7SUFFSCwyQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBjb250cm9sLCBFeHRlbnQgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLXpvb210b2V4dGVudCcsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29udHJvbFpvb21Ub0V4dGVudENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBpbnN0YW5jZTogY29udHJvbC5ab29tVG9FeHRlbnQ7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY2xhc3NOYW1lOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBsYWJlbDogc3RyaW5nIHwgTm9kZTtcclxuICBASW5wdXQoKVxyXG4gIHRpcExhYmVsOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBleHRlbnQ6IEV4dGVudDtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2luc3RhbmNpbmcgYW9sLWNvbnRyb2wtem9vbXRvZXh0ZW50Jyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgY29udHJvbC5ab29tVG9FeHRlbnQodGhpcyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLWNvbnRyb2wtem9vbXRvZXh0ZW50Jyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/coordinate.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/coordinate.component.js
@@ -192,4 +192,4 @@ if (false) {
      */
     CollectionCoordinatesComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/feature.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/feature.component.js
@@ -66,4 +66,4 @@ if (false) {
      */
     FeatureComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9mZWF0dXJlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBZ0MsS0FBSyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUM5RixPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBUW5FLE1BQU07Ozs7SUFPSixZQUFvQixJQUEyQjtRQUEzQixTQUFJLEdBQUosSUFBSSxDQUF1QjtRQU54QyxrQkFBYSxHQUFHLFNBQVMsQ0FBQztJQU1pQixDQUFDOzs7O0lBRW5ELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7UUFDOUIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQzFCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMvQixDQUFDO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMvQyxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQy9CLENBQUM7SUFDSCxDQUFDOzs7WUEvQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxhQUFhO2dCQUN2QixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEscUJBQXFCOzs7aUJBWTNCLEtBQUs7Ozs7SUFITix5Q0FBaUM7O0lBQ2pDLG9DQUF5Qjs7SUFFekIsOEJBQ2dDOzs7OztJQUVwQixnQ0FBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMsIElucHV0LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGZWF0dXJlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBTb3VyY2VWZWN0b3JDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZXMvdmVjdG9yLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1mZWF0dXJlJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIEZlYXR1cmVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzIHtcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnZmVhdHVyZSc7XG4gIHB1YmxpYyBpbnN0YW5jZTogRmVhdHVyZTtcblxuICBASW5wdXQoKVxuICBpZDogc3RyaW5nIHwgbnVtYmVyIHwgdW5kZWZpbmVkO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaG9zdDogU291cmNlVmVjdG9yQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgRmVhdHVyZSgpO1xuICAgIGlmICh0aGlzLmlkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0SWQodGhpcy5pZCk7XG4gICAgfVxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5hZGRGZWF0dXJlKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnJlbW92ZUZlYXR1cmUodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKHRoaXMuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0SWQodGhpcy5pZCk7XG4gICAgfVxuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9mZWF0dXJlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBZ0MsS0FBSyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUM5RixPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBUW5FLE1BQU07Ozs7SUFPSixZQUFvQixJQUEyQjtRQUEzQixTQUFJLEdBQUosSUFBSSxDQUF1QjtRQU54QyxrQkFBYSxHQUFHLFNBQVMsQ0FBQztJQU1pQixDQUFDOzs7O0lBRW5ELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7UUFDOUIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQzFCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMvQixDQUFDO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMvQyxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQy9CLENBQUM7SUFDSCxDQUFDOzs7WUEvQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxhQUFhO2dCQUN2QixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEscUJBQXFCOzs7aUJBWTNCLEtBQUs7Ozs7SUFITix5Q0FBaUM7O0lBQ2pDLG9DQUF5Qjs7SUFFekIsOEJBQ2dDOzs7OztJQUVwQixnQ0FBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMsIElucHV0LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZlYXR1cmUgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgU291cmNlVmVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2VzL3ZlY3Rvci5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtZmVhdHVyZScsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRmVhdHVyZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMge1xyXG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2ZlYXR1cmUnO1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogRmVhdHVyZTtcclxuXHJcbiAgQElucHV0KClcclxuICBpZDogc3RyaW5nIHwgbnVtYmVyIHwgdW5kZWZpbmVkO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGhvc3Q6IFNvdXJjZVZlY3RvckNvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IEZlYXR1cmUoKTtcclxuICAgIGlmICh0aGlzLmlkICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRJZCh0aGlzLmlkKTtcclxuICAgIH1cclxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5hZGRGZWF0dXJlKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2UucmVtb3ZlRmVhdHVyZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGlmICh0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0SWQodGhpcy5pZCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/formats/format.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/formats/format.component.js
@@ -13,4 +13,4 @@ if (false) {
     /** @type {?} */
     FormatComponent.prototype.componentType;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2Zvcm1hdHMvZm9ybWF0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsTUFBTTtJQUFOO1FBRVMsa0JBQWEsR0FBRyxRQUFRLENBQUM7SUFDbEMsQ0FBQztDQUFBOzs7SUFGQyxtQ0FBZ0M7O0lBQ2hDLHdDQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcm1hdCB9IGZyb20gJ29wZW5sYXllcnMnO1xuXG5leHBvcnQgY2xhc3MgRm9ybWF0Q29tcG9uZW50IHtcbiAgcHVibGljIGluc3RhbmNlOiBmb3JtYXQuRmVhdHVyZTtcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnZm9ybWF0Jztcbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2Zvcm1hdHMvZm9ybWF0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsTUFBTTtJQUFOO1FBRVMsa0JBQWEsR0FBRyxRQUFRLENBQUM7SUFDbEMsQ0FBQztDQUFBOzs7SUFGQyxtQ0FBZ0M7O0lBQ2hDLHdDQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcm1hdCB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEZvcm1hdENvbXBvbmVudCB7XHJcbiAgcHVibGljIGluc3RhbmNlOiBmb3JtYXQuRmVhdHVyZTtcclxuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdmb3JtYXQnO1xyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/formats/mvt.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/formats/mvt.component.js
@@ -37,4 +37,4 @@ if (false) {
     /** @type {?} */
     FormatMVTComponent.prototype.layers;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXZ0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2Zvcm1hdHMvbXZ0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxNQUFNLEVBQVEsTUFBTSxZQUFZLENBQUM7QUFDMUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBT3JELE1BQU0seUJBQTBCLFNBQVEsZUFBZTtJQWNyRDtRQUNFLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkMsQ0FBQzs7O1lBdEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixRQUFRLEVBQUUsRUFBRTtnQkFDWixTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLENBQUM7YUFDN0Y7Ozs7MkJBSUUsS0FBSzsyQkFJTCxLQUFLO3dCQUVMLEtBQUs7cUJBRUwsS0FBSzs7OztJQVZOLHNDQUFxQjs7SUFFckIsMENBR2dIOztJQUNoSCwwQ0FDcUI7O0lBQ3JCLHVDQUNrQjs7SUFDbEIsb0NBQ2lCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZm9ybWF0LCBnZW9tIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBGb3JtYXRDb21wb25lbnQgfSBmcm9tICcuL2Zvcm1hdC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtZm9ybWF0LW12dCcsXG4gIHRlbXBsYXRlOiAnJyxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBGb3JtYXRDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IEZvcm1hdE1WVENvbXBvbmVudCkgfV0sXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1hdE1WVENvbXBvbmVudCBleHRlbmRzIEZvcm1hdENvbXBvbmVudCB7XG4gIGluc3RhbmNlOiBmb3JtYXQuTVZUO1xuXG4gIEBJbnB1dCgpXG4gIGZlYXR1cmVDbGFzczpcbiAgICB8ICgoZ2VvbTogZ2VvbS5HZW9tZXRyeSB8IHsgW2s6IHN0cmluZ106IGFueSB9KSA9PiBhbnkpXG4gICAgfCAoKGdlb206IGdlb20uR2VvbWV0cnlUeXBlLCBhcmcyOiBudW1iZXJbXSwgYXJnMzogbnVtYmVyW10gfCBudW1iZXJbXVtdLCBhcmc0OiB7IFtrOiBzdHJpbmddOiBhbnkgfSkgPT4gYW55KTtcbiAgQElucHV0KClcbiAgZ2VvbWV0cnlOYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGxheWVyTmFtZTogc3RyaW5nO1xuICBASW5wdXQoKVxuICBsYXllcnM6IHN0cmluZ1tdO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBmb3JtYXQuTVZUKHRoaXMpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXZ0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2Zvcm1hdHMvbXZ0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxNQUFNLEVBQVEsTUFBTSxZQUFZLENBQUM7QUFDMUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBT3JELE1BQU0seUJBQTBCLFNBQVEsZUFBZTtJQWNyRDtRQUNFLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkMsQ0FBQzs7O1lBdEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixRQUFRLEVBQUUsRUFBRTtnQkFDWixTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLENBQUM7YUFDN0Y7Ozs7MkJBSUUsS0FBSzsyQkFJTCxLQUFLO3dCQUVMLEtBQUs7cUJBRUwsS0FBSzs7OztJQVZOLHNDQUFxQjs7SUFFckIsMENBR2dIOztJQUNoSCwwQ0FDcUI7O0lBQ3JCLHVDQUNrQjs7SUFDbEIsb0NBQ2lCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBmb3JtYXQsIGdlb20gfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgRm9ybWF0Q29tcG9uZW50IH0gZnJvbSAnLi9mb3JtYXQuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWZvcm1hdC1tdnQnLFxyXG4gIHRlbXBsYXRlOiAnJyxcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IEZvcm1hdENvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gRm9ybWF0TVZUQ29tcG9uZW50KSB9XSxcclxufSlcclxuZXhwb3J0IGNsYXNzIEZvcm1hdE1WVENvbXBvbmVudCBleHRlbmRzIEZvcm1hdENvbXBvbmVudCB7XHJcbiAgaW5zdGFuY2U6IGZvcm1hdC5NVlQ7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgZmVhdHVyZUNsYXNzOlxyXG4gICAgfCAoKGdlb206IGdlb20uR2VvbWV0cnkgfCB7IFtrOiBzdHJpbmddOiBhbnkgfSkgPT4gYW55KVxyXG4gICAgfCAoKGdlb206IGdlb20uR2VvbWV0cnlUeXBlLCBhcmcyOiBudW1iZXJbXSwgYXJnMzogbnVtYmVyW10gfCBudW1iZXJbXVtdLCBhcmc0OiB7IFtrOiBzdHJpbmddOiBhbnkgfSkgPT4gYW55KTtcclxuICBASW5wdXQoKVxyXG4gIGdlb21ldHJ5TmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGF5ZXJOYW1lOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBsYXllcnM6IHN0cmluZ1tdO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGZvcm1hdC5NVlQodGhpcyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/geometry.components.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/geometry.components.js
@@ -196,4 +196,4 @@ if (false) {
      */
     GeometryCircleComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VvbWV0cnkuY29tcG9uZW50cy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2dlb21ldHJ5LmNvbXBvbmVudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBUXZELE1BQU07Ozs7SUFJSixZQUFvQixJQUFzQjtRQUF0QixTQUFJLEdBQUosSUFBSSxDQUFrQjtRQUhuQyxrQkFBYSxHQUFHLHFCQUFxQixDQUFDO1FBSTNDLHFEQUFxRDtJQUN2RCxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEQsQ0FBQzs7OztJQUNELFdBQVc7UUFDVCwrQkFBK0I7SUFDakMsQ0FBQzs7O1lBcEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsZ0JBQWdCOzs7O0lBU3ZCLG9EQUE2Qzs7SUFDN0MsK0NBQWlDOzs7OztJQUVyQiwyQ0FBOEI7O0FBbUI1QyxNQUFNOzs7O0lBSUosWUFBb0IsSUFBc0I7UUFBdEIsU0FBSSxHQUFKLElBQUksQ0FBa0I7UUFIbkMsa0JBQWEsR0FBRyxnQkFBZ0IsQ0FBQztRQUl0Qyw4Q0FBOEM7SUFDaEQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsd0VBQXdFO1FBQ2hILElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCwrQkFBK0I7SUFDakMsQ0FBQzs7O1lBckJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsb0JBQW9CO2dCQUM5QixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBOUJRLGdCQUFnQjs7OztJQWdDdkIsK0NBQXdDOztJQUN4QywwQ0FBNEI7Ozs7O0lBRWhCLHNDQUE4Qjs7QUFvQjVDLE1BQU07Ozs7SUFJSixZQUFvQixJQUFzQjtRQUF0QixTQUFJLEdBQUosSUFBSSxDQUFrQjtRQUhuQyxrQkFBYSxHQUFHLGtCQUFrQixDQUFDO1FBSXhDLGdEQUFnRDtJQUNsRCxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLHdFQUF3RTtRQUN4RSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoRCxDQUFDOzs7O0lBRUQsV0FBVztRQUNULCtCQUErQjtJQUNqQyxDQUFDOzs7WUF0QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxzQkFBc0I7Z0JBQ2hDLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUF0RFEsZ0JBQWdCOzs7O0lBd0R2QixpREFBMEM7O0lBQzFDLDRDQUE4Qjs7Ozs7SUFFbEIsd0NBQThCOztBQXFCNUMsTUFBTTs7OztJQVlKLFlBQW9CLElBQXNCO1FBQXRCLFNBQUksR0FBSixJQUFJLENBQWtCO1FBWG5DLGtCQUFhLEdBQUcsaUJBQWlCLENBQUM7UUFZdkMsd0VBQXdFO1FBQ3hFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUMsQ0FBQzs7OztJQVhELElBQ0ksTUFBTTtRQUNSLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ25DLENBQUM7Ozs7O0lBQ0QsSUFBSSxNQUFNLENBQUMsTUFBYztRQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7O0lBT0QsUUFBUTtRQUNOLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEQsQ0FBQzs7O1lBekJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBL0VRLGdCQUFnQjs7O3FCQW9GdEIsS0FBSzs7OztJQUhOLGdEQUF5Qzs7SUFDekMsMkNBQTZCOzs7OztJQVVqQix1Q0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25EZXN0cm95LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2VvbSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgRmVhdHVyZUNvbXBvbmVudCB9IGZyb20gJy4vZmVhdHVyZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtZ2VvbWV0cnktbGluZXN0cmluZycsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBHZW9tZXRyeUxpbmVzdHJpbmdDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2dlb21ldHJ5LWxpbmVzdHJpbmcnO1xuICBwdWJsaWMgaW5zdGFuY2U6IGdlb20uTGluZVN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGhvc3Q6IEZlYXR1cmVDb21wb25lbnQpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnaW5zdGFuY2luZyBhb2wtZ2VvbWV0cnktbGluZXN0cmluZycpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBnZW9tLkxpbmVTdHJpbmcoW10pO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRHZW9tZXRyeSh0aGlzLmluc3RhbmNlKTtcbiAgfVxuICBuZ09uRGVzdHJveSgpIHtcbiAgICAvLyB0aGlzLmhvc3Quc2V0R2VvbWV0cnkobnVsbCk7XG4gIH1cbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWdlb21ldHJ5LXBvaW50JyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIEdlb21ldHJ5UG9pbnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2dlb21ldHJ5LXBvaW50JztcbiAgcHVibGljIGluc3RhbmNlOiBnZW9tLlBvaW50O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaG9zdDogRmVhdHVyZUNvbXBvbmVudCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBhb2wtZ2VvbWV0cnktcG9pbnQnKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgZ2VvbS5Qb2ludChbMCwgMF0pOyAvLyBkZWZhdWx0aW5nIGNvb3JkaW5hdGVzIHRvIFswLDBdLiBUbyBiZSBvdmVycmlkZGVuIGluIGNoaWxkIGNvbXBvbmVudC5cbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0R2VvbWV0cnkodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICAvLyB0aGlzLmhvc3Quc2V0R2VvbWV0cnkobnVsbCk7XG4gIH1cbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWdlb21ldHJ5LXBvbHlnb24nLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgR2VvbWV0cnlQb2x5Z29uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdnZW9tZXRyeS1wb2x5Z29uJztcbiAgcHVibGljIGluc3RhbmNlOiBnZW9tLlBvbHlnb247XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBob3N0OiBGZWF0dXJlQ29tcG9uZW50KSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIGFvbC1nZW9tZXRyeS1wb2x5Z29uJyk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICAvLyBkZWZhdWx0aW5nIGNvb3JkaW5hdGVzIHRvIFswLDBdLiBUbyBiZSBvdmVycmlkZGVuIGluIGNoaWxkIGNvbXBvbmVudC5cbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGdlb20uUG9seWdvbihbW1swLCAwXSwgWzEsIDBdLCBbMSwgMV1dXSk7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEdlb21ldHJ5KHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgLy8gdGhpcy5ob3N0LnNldEdlb21ldHJ5KG51bGwpO1xuICB9XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1nZW9tZXRyeS1jaXJjbGUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgR2VvbWV0cnlDaXJjbGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdnZW9tZXRyeS1jaXJjbGUnO1xuICBwdWJsaWMgaW5zdGFuY2U6IGdlb20uQ2lyY2xlO1xuXG4gIEBJbnB1dCgpXG4gIGdldCByYWRpdXMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5pbnN0YW5jZS5nZXRSYWRpdXMoKTtcbiAgfVxuICBzZXQgcmFkaXVzKHJhZGl1czogbnVtYmVyKSB7XG4gICAgdGhpcy5pbnN0YW5jZS5zZXRSYWRpdXMocmFkaXVzKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaG9zdDogRmVhdHVyZUNvbXBvbmVudCkge1xuICAgIC8vIGRlZmF1bHRpbmcgY29vcmRpbmF0ZXMgdG8gWzAsMF0uIFRvIGJlIG92ZXJyaWRkZW4gaW4gY2hpbGQgY29tcG9uZW50LlxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgZ2VvbS5DaXJjbGUoWzAsIDBdKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRHZW9tZXRyeSh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VvbWV0cnkuY29tcG9uZW50cy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2dlb21ldHJ5LmNvbXBvbmVudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBUXZELE1BQU07Ozs7SUFJSixZQUFvQixJQUFzQjtRQUF0QixTQUFJLEdBQUosSUFBSSxDQUFrQjtRQUhuQyxrQkFBYSxHQUFHLHFCQUFxQixDQUFDO1FBSTNDLHFEQUFxRDtJQUN2RCxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEQsQ0FBQzs7OztJQUNELFdBQVc7UUFDVCwrQkFBK0I7SUFDakMsQ0FBQzs7O1lBcEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsZ0JBQWdCOzs7O0lBU3ZCLG9EQUE2Qzs7SUFDN0MsK0NBQWlDOzs7OztJQUVyQiwyQ0FBOEI7O0FBbUI1QyxNQUFNOzs7O0lBSUosWUFBb0IsSUFBc0I7UUFBdEIsU0FBSSxHQUFKLElBQUksQ0FBa0I7UUFIbkMsa0JBQWEsR0FBRyxnQkFBZ0IsQ0FBQztRQUl0Qyw4Q0FBOEM7SUFDaEQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsd0VBQXdFO1FBQ2hILElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCwrQkFBK0I7SUFDakMsQ0FBQzs7O1lBckJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsb0JBQW9CO2dCQUM5QixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBOUJRLGdCQUFnQjs7OztJQWdDdkIsK0NBQXdDOztJQUN4QywwQ0FBNEI7Ozs7O0lBRWhCLHNDQUE4Qjs7QUFvQjVDLE1BQU07Ozs7SUFJSixZQUFvQixJQUFzQjtRQUF0QixTQUFJLEdBQUosSUFBSSxDQUFrQjtRQUhuQyxrQkFBYSxHQUFHLGtCQUFrQixDQUFDO1FBSXhDLGdEQUFnRDtJQUNsRCxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLHdFQUF3RTtRQUN4RSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoRCxDQUFDOzs7O0lBRUQsV0FBVztRQUNULCtCQUErQjtJQUNqQyxDQUFDOzs7WUF0QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxzQkFBc0I7Z0JBQ2hDLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUF0RFEsZ0JBQWdCOzs7O0lBd0R2QixpREFBMEM7O0lBQzFDLDRDQUE4Qjs7Ozs7SUFFbEIsd0NBQThCOztBQXFCNUMsTUFBTTs7OztJQVlKLFlBQW9CLElBQXNCO1FBQXRCLFNBQUksR0FBSixJQUFJLENBQWtCO1FBWG5DLGtCQUFhLEdBQUcsaUJBQWlCLENBQUM7UUFZdkMsd0VBQXdFO1FBQ3hFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUMsQ0FBQzs7OztJQVhELElBQ0ksTUFBTTtRQUNSLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ25DLENBQUM7Ozs7O0lBQ0QsSUFBSSxNQUFNLENBQUMsTUFBYztRQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7O0lBT0QsUUFBUTtRQUNOLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEQsQ0FBQzs7O1lBekJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBL0VRLGdCQUFnQjs7O3FCQW9GdEIsS0FBSzs7OztJQUhOLGdEQUF5Qzs7SUFDekMsMkNBQTZCOzs7OztJQVVqQix1Q0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25EZXN0cm95LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBnZW9tIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IEZlYXR1cmVDb21wb25lbnQgfSBmcm9tICcuL2ZlYXR1cmUuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWdlb21ldHJ5LWxpbmVzdHJpbmcnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIEdlb21ldHJ5TGluZXN0cmluZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdnZW9tZXRyeS1saW5lc3RyaW5nJztcclxuICBwdWJsaWMgaW5zdGFuY2U6IGdlb20uTGluZVN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBob3N0OiBGZWF0dXJlQ29tcG9uZW50KSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnaW5zdGFuY2luZyBhb2wtZ2VvbWV0cnktbGluZXN0cmluZycpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGdlb20uTGluZVN0cmluZyhbXSk7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0R2VvbWV0cnkodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gdGhpcy5ob3N0LnNldEdlb21ldHJ5KG51bGwpO1xyXG4gIH1cclxufVxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtZ2VvbWV0cnktcG9pbnQnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIEdlb21ldHJ5UG9pbnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnZ2VvbWV0cnktcG9pbnQnO1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogZ2VvbS5Qb2ludDtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBob3N0OiBGZWF0dXJlQ29tcG9uZW50KSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgYW9sLWdlb21ldHJ5LXBvaW50Jyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgZ2VvbS5Qb2ludChbMCwgMF0pOyAvLyBkZWZhdWx0aW5nIGNvb3JkaW5hdGVzIHRvIFswLDBdLiBUbyBiZSBvdmVycmlkZGVuIGluIGNoaWxkIGNvbXBvbmVudC5cclxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRHZW9tZXRyeSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gdGhpcy5ob3N0LnNldEdlb21ldHJ5KG51bGwpO1xyXG4gIH1cclxufVxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtZ2VvbWV0cnktcG9seWdvbicsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgR2VvbWV0cnlQb2x5Z29uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2dlb21ldHJ5LXBvbHlnb24nO1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogZ2VvbS5Qb2x5Z29uO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGhvc3Q6IEZlYXR1cmVDb21wb25lbnQpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBhb2wtZ2VvbWV0cnktcG9seWdvbicpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICAvLyBkZWZhdWx0aW5nIGNvb3JkaW5hdGVzIHRvIFswLDBdLiBUbyBiZSBvdmVycmlkZGVuIGluIGNoaWxkIGNvbXBvbmVudC5cclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgZ2VvbS5Qb2x5Z29uKFtbWzAsIDBdLCBbMSwgMF0sIFsxLCAxXV1dKTtcclxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRHZW9tZXRyeSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gdGhpcy5ob3N0LnNldEdlb21ldHJ5KG51bGwpO1xyXG4gIH1cclxufVxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtZ2VvbWV0cnktY2lyY2xlJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBHZW9tZXRyeUNpcmNsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnZ2VvbWV0cnktY2lyY2xlJztcclxuICBwdWJsaWMgaW5zdGFuY2U6IGdlb20uQ2lyY2xlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGdldCByYWRpdXMoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLmluc3RhbmNlLmdldFJhZGl1cygpO1xyXG4gIH1cclxuICBzZXQgcmFkaXVzKHJhZGl1czogbnVtYmVyKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlLnNldFJhZGl1cyhyYWRpdXMpO1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBob3N0OiBGZWF0dXJlQ29tcG9uZW50KSB7XHJcbiAgICAvLyBkZWZhdWx0aW5nIGNvb3JkaW5hdGVzIHRvIFswLDBdLiBUbyBiZSBvdmVycmlkZGVuIGluIGNoaWxkIGNvbXBvbmVudC5cclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgZ2VvbS5DaXJjbGUoWzAsIDBdKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEdlb21ldHJ5KHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/graticule.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/graticule.component.js
@@ -80,4 +80,4 @@ if (false) {
      */
     GraticuleComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhdGljdWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2dyYXRpY3VsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUE4QyxNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM5QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFNL0MsTUFBTTs7OztJQWFKLFlBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFYOUIsa0JBQWEsR0FBRyxXQUFXLENBQUM7SUFXSyxDQUFDOzs7OztJQUV6QyxXQUFXLENBQUMsT0FBc0I7O2NBQzFCLFVBQVUsR0FBNkIsRUFBRTtRQUUvQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25CLE1BQU0sQ0FBQztRQUNULENBQUM7UUFFRCxHQUFHLENBQUMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzFCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNoQyxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztZQUM5QyxDQUFDO1FBQ0gsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDZixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzVDLENBQUM7UUFDRCxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLENBQUM7Ozs7SUFFRCxrQkFBa0I7UUFDaEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFNBQVMsQ0FBQztZQUM1QixXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVc7WUFDN0IsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVO1lBQzNCLGdCQUFnQixFQUFFLElBQUksQ0FBQyxnQkFBZ0I7WUFDdkMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGdCQUFnQjtTQUN4QyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLENBQUM7OztZQTlDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLFFBQVEsRUFBRSwyQkFBMkI7YUFDdEM7OztZQUxRLFlBQVk7OzswQkFVbEIsS0FBSzt5QkFFTCxLQUFLOytCQUVMLEtBQUs7K0JBRUwsS0FBSzs7OztJQVROLHNDQUFjOztJQUNkLDJDQUFtQzs7SUFFbkMseUNBQzBCOztJQUMxQix3Q0FDb0I7O0lBQ3BCLDhDQUN5Qjs7SUFDekIsOENBQ3lCOzs7OztJQUViLGlDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgR3JhdGljdWxlLCBzdHlsZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWdyYXRpY3VsZScsXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG59KVxuZXhwb3J0IGNsYXNzIEdyYXRpY3VsZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcyB7XG4gIGluc3RhbmNlOiBhbnk7XG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2dyYXRpY3VsZSc7XG5cbiAgQElucHV0KClcbiAgc3Ryb2tlU3R5bGU6IHN0eWxlLlN0cm9rZTtcbiAgQElucHV0KClcbiAgc2hvd0xhYmVsczogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgbG9uTGFiZWxQb3NpdGlvbjogbnVtYmVyO1xuICBASW5wdXQoKVxuICBsYXRMYWJlbFBvc2l0aW9uOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgY29uc3QgcHJvcGVydGllczogeyBbaW5kZXg6IHN0cmluZ106IGFueSB9ID0ge307XG5cbiAgICBpZiAoIXRoaXMuaW5zdGFuY2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmb3IgKGNvbnN0IGtleSBpbiBjaGFuZ2VzKSB7XG4gICAgICBpZiAoY2hhbmdlcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIHByb3BlcnRpZXNba2V5XSA9IGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHByb3BlcnRpZXMpIHtcbiAgICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgR3JhdGljdWxlKHByb3BlcnRpZXMpO1xuICAgIH1cbiAgICB0aGlzLmluc3RhbmNlLnNldE1hcCh0aGlzLm1hcC5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBHcmF0aWN1bGUoe1xuICAgICAgc3Ryb2tlU3R5bGU6IHRoaXMuc3Ryb2tlU3R5bGUsXG4gICAgICBzaG93TGFiZWxzOiB0aGlzLnNob3dMYWJlbHMsXG4gICAgICBsb25MYWJlbFBvc2l0aW9uOiB0aGlzLmxvbkxhYmVsUG9zaXRpb24sXG4gICAgICBsYXRMYWJlbFBvc2l0aW9uOiB0aGlzLmxhdExhYmVsUG9zaXRpb24sXG4gICAgfSk7XG4gICAgdGhpcy5pbnN0YW5jZS5zZXRNYXAodGhpcy5tYXAuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhdGljdWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2dyYXRpY3VsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUE4QyxNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM5QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFNL0MsTUFBTTs7OztJQWFKLFlBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFYOUIsa0JBQWEsR0FBRyxXQUFXLENBQUM7SUFXSyxDQUFDOzs7OztJQUV6QyxXQUFXLENBQUMsT0FBc0I7O2NBQzFCLFVBQVUsR0FBNkIsRUFBRTtRQUUvQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25CLE1BQU0sQ0FBQztRQUNULENBQUM7UUFFRCxHQUFHLENBQUMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzFCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNoQyxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztZQUM5QyxDQUFDO1FBQ0gsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDZixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzVDLENBQUM7UUFDRCxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLENBQUM7Ozs7SUFFRCxrQkFBa0I7UUFDaEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFNBQVMsQ0FBQztZQUM1QixXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVc7WUFDN0IsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVO1lBQzNCLGdCQUFnQixFQUFFLElBQUksQ0FBQyxnQkFBZ0I7WUFDdkMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGdCQUFnQjtTQUN4QyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLENBQUM7OztZQTlDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLFFBQVEsRUFBRSwyQkFBMkI7YUFDdEM7OztZQUxRLFlBQVk7OzswQkFVbEIsS0FBSzt5QkFFTCxLQUFLOytCQUVMLEtBQUs7K0JBRUwsS0FBSzs7OztJQVROLHNDQUFjOztJQUNkLDJDQUFtQzs7SUFFbkMseUNBQzBCOztJQUMxQix3Q0FDb0I7O0lBQ3BCLDhDQUN5Qjs7SUFDekIsOENBQ3lCOzs7OztJQUViLGlDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBHcmF0aWN1bGUsIHN0eWxlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1ncmF0aWN1bGUnLFxyXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBHcmF0aWN1bGVDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMge1xyXG4gIGluc3RhbmNlOiBhbnk7XHJcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnZ3JhdGljdWxlJztcclxuXHJcbiAgQElucHV0KClcclxuICBzdHJva2VTdHlsZTogc3R5bGUuU3Ryb2tlO1xyXG4gIEBJbnB1dCgpXHJcbiAgc2hvd0xhYmVsczogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIGxvbkxhYmVsUG9zaXRpb246IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIGxhdExhYmVsUG9zaXRpb246IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgY29uc3QgcHJvcGVydGllczogeyBbaW5kZXg6IHN0cmluZ106IGFueSB9ID0ge307XHJcblxyXG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBjaGFuZ2VzKSB7XHJcbiAgICAgIGlmIChjaGFuZ2VzLmhhc093blByb3BlcnR5KGtleSkpIHtcclxuICAgICAgICBwcm9wZXJ0aWVzW2tleV0gPSBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHByb3BlcnRpZXMpIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBHcmF0aWN1bGUocHJvcGVydGllcyk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmluc3RhbmNlLnNldE1hcCh0aGlzLm1hcC5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IEdyYXRpY3VsZSh7XHJcbiAgICAgIHN0cm9rZVN0eWxlOiB0aGlzLnN0cm9rZVN0eWxlLFxyXG4gICAgICBzaG93TGFiZWxzOiB0aGlzLnNob3dMYWJlbHMsXHJcbiAgICAgIGxvbkxhYmVsUG9zaXRpb246IHRoaXMubG9uTGFiZWxQb3NpdGlvbixcclxuICAgICAgbGF0TGFiZWxQb3NpdGlvbjogdGhpcy5sYXRMYWJlbFBvc2l0aW9uLFxyXG4gICAgfSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLnNldE1hcCh0aGlzLm1hcC5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/default.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/default.component.js
@@ -44,4 +44,4 @@ if (false) {
      */
     DefaultInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZGVmYXVsdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxXQUFXLEVBQWMsTUFBTSxZQUFZLENBQUM7QUFDckQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTWhELE1BQU07Ozs7SUFHSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6QyxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxXQUFXLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDdkMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNsRSxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyRSxDQUFDOzs7WUFoQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx5QkFBeUI7Z0JBQ25DLFFBQVEsRUFBRSxFQUFFO2FBQ2I7OztZQUxRLFlBQVk7Ozs7SUFPbkIsK0NBQThDOzs7OztJQUVsQywwQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpbnRlcmFjdGlvbiwgQ29sbGVjdGlvbiB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kZWZhdWx0JyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBEZWZhdWx0SW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBDb2xsZWN0aW9uPGludGVyYWN0aW9uLkludGVyYWN0aW9uPjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBpbnRlcmFjdGlvbi5kZWZhdWx0cygpO1xuICAgIHRoaXMuaW5zdGFuY2UuZm9yRWFjaChpID0+IHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKGkpKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuaW5zdGFuY2UuZm9yRWFjaChpID0+IHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKGkpKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZGVmYXVsdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxXQUFXLEVBQWMsTUFBTSxZQUFZLENBQUM7QUFDckQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTWhELE1BQU07Ozs7SUFHSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6QyxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxXQUFXLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDdkMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNsRSxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyRSxDQUFDOzs7WUFoQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx5QkFBeUI7Z0JBQ25DLFFBQVEsRUFBRSxFQUFFO2FBQ2I7OztZQUxRLFlBQVk7Ozs7SUFPbkIsK0NBQThDOzs7OztJQUVsQywwQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGludGVyYWN0aW9uLCBDb2xsZWN0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tZGVmYXVsdCcsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRGVmYXVsdEludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBDb2xsZWN0aW9uPGludGVyYWN0aW9uLkludGVyYWN0aW9uPjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gaW50ZXJhY3Rpb24uZGVmYXVsdHMoKTtcclxuICAgIHRoaXMuaW5zdGFuY2UuZm9yRWFjaChpID0+IHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKGkpKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZS5mb3JFYWNoKGkgPT4gdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24oaSkpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/doubleclickzoom.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/doubleclickzoom.component.js
@@ -52,4 +52,4 @@ if (false) {
      */
     DoubleClickZoomInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG91YmxlY2xpY2t6b29tLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9kb3VibGVjbGlja3pvb20uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7OztJQVFKLFlBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7OztZQXJCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlDQUFpQztnQkFDM0MsUUFBUSxFQUFFLEVBQUU7YUFDYjs7O1lBTFEsWUFBWTs7O3VCQVNsQixLQUFLO29CQUVMLEtBQUs7Ozs7SUFKTix1REFBc0M7O0lBRXRDLHVEQUNpQjs7SUFDakIsb0RBQ2M7Ozs7O0lBRUYsa0RBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGludGVyYWN0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLWRvdWJsZWNsaWNrem9vbScsXG4gIHRlbXBsYXRlOiAnJyxcbn0pXG5leHBvcnQgY2xhc3MgRG91YmxlQ2xpY2tab29tSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5Eb3VibGVDbGlja1pvb207XG5cbiAgQElucHV0KClcbiAgZHVyYXRpb246IG51bWJlcjtcbiAgQElucHV0KClcbiAgZGVsdGE6IG51bWJlcjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uRG91YmxlQ2xpY2tab29tKHRoaXMpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG91YmxlY2xpY2t6b29tLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9kb3VibGVjbGlja3pvb20uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7OztJQVFKLFlBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7OztZQXJCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlDQUFpQztnQkFDM0MsUUFBUSxFQUFFLEVBQUU7YUFDYjs7O1lBTFEsWUFBWTs7O3VCQVNsQixLQUFLO29CQUVMLEtBQUs7Ozs7SUFKTix1REFBc0M7O0lBRXRDLHVEQUNpQjs7SUFDakIsb0RBQ2M7Ozs7O0lBRUYsa0RBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaW50ZXJhY3Rpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kb3VibGVjbGlja3pvb20nLFxyXG4gIHRlbXBsYXRlOiAnJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIERvdWJsZUNsaWNrWm9vbUludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5Eb3VibGVDbGlja1pvb207XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgZHVyYXRpb246IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIGRlbHRhOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5Eb3VibGVDbGlja1pvb20odGhpcyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/draganddrop.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/draganddrop.component.js
@@ -55,4 +55,4 @@ if (false) {
      */
     DragAndDropInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ2FuZGRyb3AuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL2RyYWdhbmRkcm9wLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQTBCLE1BQU0sWUFBWSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQU1oRCxNQUFNOzs7O0lBVUosWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7O1lBdkJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsNkJBQTZCO2dCQUN2QyxRQUFRLEVBQUUsRUFBRTthQUNiOzs7WUFMUSxZQUFZOzs7aUNBU2xCLEtBQUs7eUJBRUwsS0FBSztxQkFFTCxLQUFLOzs7O0lBTk4sbURBQWtDOztJQUVsQyw2REFDbUQ7O0lBQ25ELHFEQUMyQjs7SUFDM0IsaURBQ2dCOzs7OztJQUVKLDhDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpbnRlcmFjdGlvbiwgZm9ybWF0LCBQcm9qZWN0aW9uTGlrZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kcmFnYW5kZHJvcCcsXG4gIHRlbXBsYXRlOiAnJyxcbn0pXG5leHBvcnQgY2xhc3MgRHJhZ0FuZERyb3BJbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYWdBbmREcm9wO1xuXG4gIEBJbnB1dCgpXG4gIGZvcm1hdENvbnN0cnVjdG9yczogKChuOiBmb3JtYXQuRmVhdHVyZSkgPT4gYW55KVtdO1xuICBASW5wdXQoKVxuICBwcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZTtcbiAgQElucHV0KClcbiAgdGFyZ2V0OiBFbGVtZW50O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5EcmFnQW5kRHJvcCh0aGlzKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ2FuZGRyb3AuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL2RyYWdhbmRkcm9wLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQTBCLE1BQU0sWUFBWSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQU1oRCxNQUFNOzs7O0lBVUosWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7O1lBdkJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsNkJBQTZCO2dCQUN2QyxRQUFRLEVBQUUsRUFBRTthQUNiOzs7WUFMUSxZQUFZOzs7aUNBU2xCLEtBQUs7eUJBRUwsS0FBSztxQkFFTCxLQUFLOzs7O0lBTk4sbURBQWtDOztJQUVsQyw2REFDbUQ7O0lBQ25ELHFEQUMyQjs7SUFDM0IsaURBQ2dCOzs7OztJQUVKLDhDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGludGVyYWN0aW9uLCBmb3JtYXQsIFByb2plY3Rpb25MaWtlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tZHJhZ2FuZGRyb3AnLFxyXG4gIHRlbXBsYXRlOiAnJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIERyYWdBbmREcm9wSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYWdBbmREcm9wO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGZvcm1hdENvbnN0cnVjdG9yczogKChuOiBmb3JtYXQuRmVhdHVyZSkgPT4gYW55KVtdO1xyXG4gIEBJbnB1dCgpXHJcbiAgcHJvamVjdGlvbjogUHJvamVjdGlvbkxpa2U7XHJcbiAgQElucHV0KClcclxuICB0YXJnZXQ6IEVsZW1lbnQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5EcmFnQW5kRHJvcCh0aGlzKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/dragbox.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/dragbox.component.js
@@ -55,4 +55,4 @@ if (false) {
      */
     DragBoxInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ2JveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhZ2JveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUFnRCxNQUFNLFlBQVksQ0FBQztBQUN2RixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7OztJQVVKLFlBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7OztZQXZCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHlCQUF5QjtnQkFDbkMsUUFBUSxFQUFFLEVBQUU7YUFDYjs7O1lBTFEsWUFBWTs7O3dCQVNsQixLQUFLO3dCQUVMLEtBQUs7OEJBRUwsS0FBSzs7OztJQU5OLCtDQUE4Qjs7SUFFOUIsZ0RBQ2tCOztJQUNsQixnREFDK0I7O0lBQy9CLHNEQUN5Qzs7Ozs7SUFFN0IsMENBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGludGVyYWN0aW9uLCBFdmVudHNDb25kaXRpb25UeXBlLCBEcmFnQm94RW5kQ29uZGl0aW9uVHlwZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kcmFnYm94JyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBEcmFnQm94SW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5EcmFnQm94O1xuXG4gIEBJbnB1dCgpXG4gIGNsYXNzTmFtZTogc3RyaW5nO1xuICBASW5wdXQoKVxuICBjb25kaXRpb246IEV2ZW50c0NvbmRpdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIGJveEVuZENvbmRpdGlvbjogRHJhZ0JveEVuZENvbmRpdGlvblR5cGU7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLkRyYWdCb3godGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ2JveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhZ2JveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUFnRCxNQUFNLFlBQVksQ0FBQztBQUN2RixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7OztJQVVKLFlBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7OztZQXZCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHlCQUF5QjtnQkFDbkMsUUFBUSxFQUFFLEVBQUU7YUFDYjs7O1lBTFEsWUFBWTs7O3dCQVNsQixLQUFLO3dCQUVMLEtBQUs7OEJBRUwsS0FBSzs7OztJQU5OLCtDQUE4Qjs7SUFFOUIsZ0RBQ2tCOztJQUNsQixnREFDK0I7O0lBQy9CLHNEQUN5Qzs7Ozs7SUFFN0IsMENBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaW50ZXJhY3Rpb24sIEV2ZW50c0NvbmRpdGlvblR5cGUsIERyYWdCb3hFbmRDb25kaXRpb25UeXBlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tZHJhZ2JveCcsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRHJhZ0JveEludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5EcmFnQm94O1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGNsYXNzTmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29uZGl0aW9uOiBFdmVudHNDb25kaXRpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgYm94RW5kQ29uZGl0aW9uOiBEcmFnQm94RW5kQ29uZGl0aW9uVHlwZTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLkRyYWdCb3godGhpcyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/dragpan.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/dragpan.component.js
@@ -52,4 +52,4 @@ if (false) {
      */
     DragPanInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3Bhbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhZ3Bhbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUF1QixPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTWhELE1BQU07Ozs7SUFRSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6QyxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOzs7WUFyQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx5QkFBeUI7Z0JBQ25DLFFBQVEsRUFBRSxFQUFFO2FBQ2I7OztZQUxRLFlBQVk7Ozt3QkFTbEIsS0FBSztzQkFFTCxLQUFLOzs7O0lBSk4sK0NBQThCOztJQUU5QixnREFDK0I7O0lBQy9CLDhDQUNpQjs7Ozs7SUFFTCwwQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaW50ZXJhY3Rpb24sIEV2ZW50c0NvbmRpdGlvblR5cGUsIEtpbmV0aWMgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tZHJhZ3BhbicsXG4gIHRlbXBsYXRlOiAnJyxcbn0pXG5leHBvcnQgY2xhc3MgRHJhZ1BhbkludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBpbnN0YW5jZTogaW50ZXJhY3Rpb24uRHJhZ1BhbjtcblxuICBASW5wdXQoKVxuICBjb25kaXRpb246IEV2ZW50c0NvbmRpdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIGtpbmV0aWM6IEtpbmV0aWM7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLkRyYWdQYW4odGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3Bhbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhZ3Bhbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUF1QixPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTWhELE1BQU07Ozs7SUFRSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6QyxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOzs7WUFyQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx5QkFBeUI7Z0JBQ25DLFFBQVEsRUFBRSxFQUFFO2FBQ2I7OztZQUxRLFlBQVk7Ozt3QkFTbEIsS0FBSztzQkFFTCxLQUFLOzs7O0lBSk4sK0NBQThCOztJQUU5QixnREFDK0I7O0lBQy9CLDhDQUNpQjs7Ozs7SUFFTCwwQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpbnRlcmFjdGlvbiwgRXZlbnRzQ29uZGl0aW9uVHlwZSwgS2luZXRpYyB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLWRyYWdwYW4nLFxyXG4gIHRlbXBsYXRlOiAnJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIERyYWdQYW5JbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBpbnN0YW5jZTogaW50ZXJhY3Rpb24uRHJhZ1BhbjtcclxuXHJcbiAgQElucHV0KClcclxuICBjb25kaXRpb246IEV2ZW50c0NvbmRpdGlvblR5cGU7XHJcbiAgQElucHV0KClcclxuICBraW5ldGljOiBLaW5ldGljO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uRHJhZ1Bhbih0aGlzKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/dragrotate.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/dragrotate.component.js
@@ -52,4 +52,4 @@ if (false) {
      */
     DragRotateInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3JvdGF0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhZ3JvdGF0ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUF1QixNQUFNLFlBQVksQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7OztJQVFKLFlBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqRCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7OztZQXJCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtnQkFDdEMsUUFBUSxFQUFFLEVBQUU7YUFDYjs7O1lBTFEsWUFBWTs7O3dCQVNsQixLQUFLO3VCQUVMLEtBQUs7Ozs7SUFKTixrREFBaUM7O0lBRWpDLG1EQUMrQjs7SUFDL0Isa0RBQ2lCOzs7OztJQUVMLDZDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpbnRlcmFjdGlvbiwgRXZlbnRzQ29uZGl0aW9uVHlwZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kcmFncm90YXRlJyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBEcmFnUm90YXRlSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5EcmFnUm90YXRlO1xuXG4gIEBJbnB1dCgpXG4gIGNvbmRpdGlvbjogRXZlbnRzQ29uZGl0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgZHVyYXRpb246IG51bWJlcjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uRHJhZ1JvdGF0ZSh0aGlzKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3JvdGF0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhZ3JvdGF0ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUF1QixNQUFNLFlBQVksQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7OztJQVFKLFlBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqRCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7OztZQXJCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtnQkFDdEMsUUFBUSxFQUFFLEVBQUU7YUFDYjs7O1lBTFEsWUFBWTs7O3dCQVNsQixLQUFLO3VCQUVMLEtBQUs7Ozs7SUFKTixrREFBaUM7O0lBRWpDLG1EQUMrQjs7SUFDL0Isa0RBQ2lCOzs7OztJQUVMLDZDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGludGVyYWN0aW9uLCBFdmVudHNDb25kaXRpb25UeXBlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tZHJhZ3JvdGF0ZScsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRHJhZ1JvdGF0ZUludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5EcmFnUm90YXRlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGNvbmRpdGlvbjogRXZlbnRzQ29uZGl0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIGR1cmF0aW9uOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5EcmFnUm90YXRlKHRoaXMpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/dragrotateandzoom.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/dragrotateandzoom.component.js
@@ -52,4 +52,4 @@ if (false) {
      */
     DragRotateAndZoomInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3JvdGF0ZWFuZHpvb20uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL2RyYWdyb3RhdGVhbmR6b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQXVCLE1BQU0sWUFBWSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQU1oRCxNQUFNOzs7O0lBUUosWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOzs7WUFyQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQ0FBbUM7Z0JBQzdDLFFBQVEsRUFBRSxFQUFFO2FBQ2I7OztZQUxRLFlBQVk7Ozt3QkFTbEIsS0FBSzt1QkFFTCxLQUFLOzs7O0lBSk4seURBQWlDOztJQUVqQywwREFDK0I7O0lBQy9CLHlEQUNpQjs7Ozs7SUFFTCxvREFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaW50ZXJhY3Rpb24sIEV2ZW50c0NvbmRpdGlvblR5cGUgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tZHJhZ3JvdGF0ZWFuZHpvb20nLFxuICB0ZW1wbGF0ZTogJycsXG59KVxuZXhwb3J0IGNsYXNzIERyYWdSb3RhdGVBbmRab29tSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5EcmFnUm90YXRlO1xuXG4gIEBJbnB1dCgpXG4gIGNvbmRpdGlvbjogRXZlbnRzQ29uZGl0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgZHVyYXRpb246IG51bWJlcjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uRHJhZ1JvdGF0ZUFuZFpvb20odGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3JvdGF0ZWFuZHpvb20uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL2RyYWdyb3RhdGVhbmR6b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQXVCLE1BQU0sWUFBWSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQU1oRCxNQUFNOzs7O0lBUUosWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOzs7WUFyQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQ0FBbUM7Z0JBQzdDLFFBQVEsRUFBRSxFQUFFO2FBQ2I7OztZQUxRLFlBQVk7Ozt3QkFTbEIsS0FBSzt1QkFFTCxLQUFLOzs7O0lBSk4seURBQWlDOztJQUVqQywwREFDK0I7O0lBQy9CLHlEQUNpQjs7Ozs7SUFFTCxvREFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpbnRlcmFjdGlvbiwgRXZlbnRzQ29uZGl0aW9uVHlwZSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLWRyYWdyb3RhdGVhbmR6b29tJyxcclxuICB0ZW1wbGF0ZTogJycsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEcmFnUm90YXRlQW5kWm9vbUludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5EcmFnUm90YXRlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGNvbmRpdGlvbjogRXZlbnRzQ29uZGl0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIGR1cmF0aW9uOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5EcmFnUm90YXRlQW5kWm9vbSh0aGlzKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/dragzoom.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/dragzoom.component.js
@@ -58,4 +58,4 @@ if (false) {
      */
     DragZoomInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3pvb20uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL2RyYWd6b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQXVCLE1BQU0sWUFBWSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQU1oRCxNQUFNOzs7O0lBWUosWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7O1lBekJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsMEJBQTBCO2dCQUNwQyxRQUFRLEVBQUUsRUFBRTthQUNiOzs7WUFMUSxZQUFZOzs7d0JBU2xCLEtBQUs7d0JBRUwsS0FBSzt1QkFFTCxLQUFLO2tCQUVMLEtBQUs7Ozs7SUFSTixnREFBK0I7O0lBRS9CLGlEQUNrQjs7SUFDbEIsaURBQytCOztJQUMvQixnREFDaUI7O0lBQ2pCLDJDQUNhOzs7OztJQUVELDJDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpbnRlcmFjdGlvbiwgRXZlbnRzQ29uZGl0aW9uVHlwZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kcmFnem9vbScsXG4gIHRlbXBsYXRlOiAnJyxcbn0pXG5leHBvcnQgY2xhc3MgRHJhZ1pvb21JbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYWdab29tO1xuXG4gIEBJbnB1dCgpXG4gIGNsYXNzTmFtZTogc3RyaW5nO1xuICBASW5wdXQoKVxuICBjb25kaXRpb246IEV2ZW50c0NvbmRpdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIGR1cmF0aW9uOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIG91dDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uRHJhZ1pvb20odGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3pvb20uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL2RyYWd6b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQXVCLE1BQU0sWUFBWSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQU1oRCxNQUFNOzs7O0lBWUosWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7O1lBekJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsMEJBQTBCO2dCQUNwQyxRQUFRLEVBQUUsRUFBRTthQUNiOzs7WUFMUSxZQUFZOzs7d0JBU2xCLEtBQUs7d0JBRUwsS0FBSzt1QkFFTCxLQUFLO2tCQUVMLEtBQUs7Ozs7SUFSTixnREFBK0I7O0lBRS9CLGlEQUNrQjs7SUFDbEIsaURBQytCOztJQUMvQixnREFDaUI7O0lBQ2pCLDJDQUNhOzs7OztJQUVELDJDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGludGVyYWN0aW9uLCBFdmVudHNDb25kaXRpb25UeXBlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tZHJhZ3pvb20nLFxyXG4gIHRlbXBsYXRlOiAnJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIERyYWdab29tSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYWdab29tO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGNsYXNzTmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29uZGl0aW9uOiBFdmVudHNDb25kaXRpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgZHVyYXRpb246IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIG91dDogYm9vbGVhbjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLkRyYWdab29tKHRoaXMpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/draw.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/draw.component.js
@@ -116,4 +116,4 @@ if (false) {
      */
     DrawInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhdy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhdy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTWhELE1BQU07Ozs7SUE2Q0osWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQVZyQyxhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQTZCLENBQUM7UUFFekQsbUJBQWMsR0FBRyxJQUFJLFlBQVksRUFBNkIsQ0FBQztRQUUvRCxjQUFTLEdBQUcsSUFBSSxZQUFZLEVBQTZCLENBQUM7UUFFMUQsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBNkIsQ0FBQztRQUU1RCxxQkFBZ0IsR0FBRyxJQUFJLFlBQVksRUFBNkIsQ0FBQztJQUV6QixDQUFDOzs7O0lBRXpDLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxLQUFnQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzVGLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGVBQWUsRUFBRSxDQUFDLEtBQWdDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDekcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsS0FBZ0MsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUM5RixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxLQUFnQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2xHLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLENBQUMsS0FBZ0MsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzVHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7O1lBL0RGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyxRQUFRLEVBQUUsRUFBRTthQUNiOzs7WUFMUSxZQUFZOzs7NkJBU2xCLEtBQUs7dUJBRUwsS0FBSztxQkFFTCxLQUFLOzRCQUVMLEtBQUs7bUJBRUwsS0FBSzt3QkFFTCxLQUFLO3dCQUVMLEtBQUs7OEJBRUwsS0FBSztvQkFFTCxLQUFLOytCQUVMLEtBQUs7MkJBRUwsS0FBSzt3QkFFTCxLQUFLO2dDQUVMLEtBQUs7dUJBRUwsS0FBSztvQkFFTCxLQUFLO3VCQUdMLE1BQU07NkJBRU4sTUFBTTt3QkFFTixNQUFNOzBCQUVOLE1BQU07K0JBRU4sTUFBTTs7OztJQXpDUCw0Q0FBMkI7O0lBRTNCLGtEQUN3Qjs7SUFDeEIsNENBQ3FDOztJQUNyQywwQ0FDMEI7O0lBQzFCLGlEQUN1Qjs7SUFDdkIsd0NBQzJCOztJQUMzQiw2Q0FDbUI7O0lBQ25CLDZDQUNtQjs7SUFDbkIsbURBQ3lDOztJQUN6Qyx5Q0FDNkQ7O0lBQzdELG9EQUMrQzs7SUFDL0MsZ0RBQ3NCOztJQUN0Qiw2Q0FDbUM7O0lBQ25DLHFEQUMyQzs7SUFDM0MsNENBQ21COztJQUNuQix5Q0FDZ0I7O0lBRWhCLDRDQUN5RDs7SUFDekQsa0RBQytEOztJQUMvRCw2Q0FDMEQ7O0lBQzFELCtDQUM0RDs7SUFDNUQsb0RBQ2lFOzs7OztJQUVyRCx1Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCwgRXZlbnRFbWl0dGVyLCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGludGVyYWN0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLWRyYXcnLFxuICB0ZW1wbGF0ZTogJycsXG59KVxuZXhwb3J0IGNsYXNzIERyYXdJbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYXc7XG5cbiAgQElucHV0KClcbiAgY2xpY2tUb2xlcmFuY2U/OiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIGZlYXR1cmVzPzogb2wuQ29sbGVjdGlvbjxvbC5GZWF0dXJlPjtcbiAgQElucHV0KClcbiAgc291cmNlPzogb2wuc291cmNlLlZlY3RvcjtcbiAgQElucHV0KClcbiAgc25hcFRvbGVyYW5jZT86IG51bWJlcjtcbiAgQElucHV0KClcbiAgdHlwZTogb2wuZ2VvbS5HZW9tZXRyeVR5cGU7XG4gIEBJbnB1dCgpXG4gIG1heFBvaW50cz86IG51bWJlcjtcbiAgQElucHV0KClcbiAgbWluUG9pbnRzPzogbnVtYmVyO1xuICBASW5wdXQoKVxuICBmaW5pc2hDb25kaXRpb24/OiBvbC5FdmVudHNDb25kaXRpb25UeXBlO1xuICBASW5wdXQoKVxuICBzdHlsZT86IG9sLnN0eWxlLlN0eWxlIHwgb2wuc3R5bGUuU3R5bGVbXSB8IG9sLlN0eWxlRnVuY3Rpb247XG4gIEBJbnB1dCgpXG4gIGdlb21ldHJ5RnVuY3Rpb24/OiBvbC5EcmF3R2VvbWV0cnlGdW5jdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIGdlb21ldHJ5TmFtZT86IHN0cmluZztcbiAgQElucHV0KClcbiAgY29uZGl0aW9uPzogb2wuRXZlbnRzQ29uZGl0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgZnJlZWhhbmRDb25kaXRpb24/OiBvbC5FdmVudHNDb25kaXRpb25UeXBlO1xuICBASW5wdXQoKVxuICBmcmVlaGFuZD86IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIHdyYXBYPzogYm9vbGVhbjtcblxuICBAT3V0cHV0KClcbiAgb25DaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQ+KCk7XG4gIEBPdXRwdXQoKVxuICBvbkNoYW5nZUFjdGl2ZSA9IG5ldyBFdmVudEVtaXR0ZXI8b2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudD4oKTtcbiAgQE91dHB1dCgpXG4gIG9uRHJhd0VuZCA9IG5ldyBFdmVudEVtaXR0ZXI8b2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudD4oKTtcbiAgQE91dHB1dCgpXG4gIG9uRHJhd1N0YXJ0ID0gbmV3IEV2ZW50RW1pdHRlcjxvbC5pbnRlcmFjdGlvbi5EcmF3LkV2ZW50PigpO1xuICBAT3V0cHV0KClcbiAgb25Qcm9wZXJ0eUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8b2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudD4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uRHJhdyh0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdjaGFuZ2UnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25DaGFuZ2UuZW1pdChldmVudCkpO1xuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2NoYW5nZTphY3RpdmUnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25DaGFuZ2VBY3RpdmUuZW1pdChldmVudCkpO1xuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2RyYXdlbmQnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25EcmF3RW5kLmVtaXQoZXZlbnQpKTtcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdkcmF3c3RhcnQnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25EcmF3U3RhcnQuZW1pdChldmVudCkpO1xuICAgIHRoaXMuaW5zdGFuY2Uub24oJ3Byb3BlcnR5Y2hhbmdlJywgKGV2ZW50OiBvbC5pbnRlcmFjdGlvbi5EcmF3LkV2ZW50KSA9PiB0aGlzLm9uUHJvcGVydHlDaGFuZ2UuZW1pdChldmVudCkpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhdy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhdy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTWhELE1BQU07Ozs7SUE2Q0osWUFBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQVZyQyxhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQTZCLENBQUM7UUFFekQsbUJBQWMsR0FBRyxJQUFJLFlBQVksRUFBNkIsQ0FBQztRQUUvRCxjQUFTLEdBQUcsSUFBSSxZQUFZLEVBQTZCLENBQUM7UUFFMUQsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBNkIsQ0FBQztRQUU1RCxxQkFBZ0IsR0FBRyxJQUFJLFlBQVksRUFBNkIsQ0FBQztJQUV6QixDQUFDOzs7O0lBRXpDLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxLQUFnQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzVGLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGVBQWUsRUFBRSxDQUFDLEtBQWdDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDekcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsS0FBZ0MsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUM5RixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxLQUFnQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2xHLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLENBQUMsS0FBZ0MsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzVHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7O1lBL0RGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyxRQUFRLEVBQUUsRUFBRTthQUNiOzs7WUFMUSxZQUFZOzs7NkJBU2xCLEtBQUs7dUJBRUwsS0FBSztxQkFFTCxLQUFLOzRCQUVMLEtBQUs7bUJBRUwsS0FBSzt3QkFFTCxLQUFLO3dCQUVMLEtBQUs7OEJBRUwsS0FBSztvQkFFTCxLQUFLOytCQUVMLEtBQUs7MkJBRUwsS0FBSzt3QkFFTCxLQUFLO2dDQUVMLEtBQUs7dUJBRUwsS0FBSztvQkFFTCxLQUFLO3VCQUdMLE1BQU07NkJBRU4sTUFBTTt3QkFFTixNQUFNOzBCQUVOLE1BQU07K0JBRU4sTUFBTTs7OztJQXpDUCw0Q0FBMkI7O0lBRTNCLGtEQUN3Qjs7SUFDeEIsNENBQ3FDOztJQUNyQywwQ0FDMEI7O0lBQzFCLGlEQUN1Qjs7SUFDdkIsd0NBQzJCOztJQUMzQiw2Q0FDbUI7O0lBQ25CLDZDQUNtQjs7SUFDbkIsbURBQ3lDOztJQUN6Qyx5Q0FDNkQ7O0lBQzdELG9EQUMrQzs7SUFDL0MsZ0RBQ3NCOztJQUN0Qiw2Q0FDbUM7O0lBQ25DLHFEQUMyQzs7SUFDM0MsNENBQ21COztJQUNuQix5Q0FDZ0I7O0lBRWhCLDRDQUN5RDs7SUFDekQsa0RBQytEOztJQUMvRCw2Q0FDMEQ7O0lBQzFELCtDQUM0RDs7SUFDNUQsb0RBQ2lFOzs7OztJQUVyRCx1Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCwgRXZlbnRFbWl0dGVyLCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaW50ZXJhY3Rpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kcmF3JyxcclxuICB0ZW1wbGF0ZTogJycsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEcmF3SW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYXc7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY2xpY2tUb2xlcmFuY2U/OiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBmZWF0dXJlcz86IG9sLkNvbGxlY3Rpb248b2wuRmVhdHVyZT47XHJcbiAgQElucHV0KClcclxuICBzb3VyY2U/OiBvbC5zb3VyY2UuVmVjdG9yO1xyXG4gIEBJbnB1dCgpXHJcbiAgc25hcFRvbGVyYW5jZT86IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHR5cGU6IG9sLmdlb20uR2VvbWV0cnlUeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWF4UG9pbnRzPzogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWluUG9pbnRzPzogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgZmluaXNoQ29uZGl0aW9uPzogb2wuRXZlbnRzQ29uZGl0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIHN0eWxlPzogb2wuc3R5bGUuU3R5bGUgfCBvbC5zdHlsZS5TdHlsZVtdIHwgb2wuU3R5bGVGdW5jdGlvbjtcclxuICBASW5wdXQoKVxyXG4gIGdlb21ldHJ5RnVuY3Rpb24/OiBvbC5EcmF3R2VvbWV0cnlGdW5jdGlvblR5cGU7XHJcbiAgQElucHV0KClcclxuICBnZW9tZXRyeU5hbWU/OiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBjb25kaXRpb24/OiBvbC5FdmVudHNDb25kaXRpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgZnJlZWhhbmRDb25kaXRpb24/OiBvbC5FdmVudHNDb25kaXRpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgZnJlZWhhbmQ/OiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgd3JhcFg/OiBib29sZWFuO1xyXG5cclxuICBAT3V0cHV0KClcclxuICBvbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8b2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudD4oKTtcclxuICBAT3V0cHV0KClcclxuICBvbkNoYW5nZUFjdGl2ZSA9IG5ldyBFdmVudEVtaXR0ZXI8b2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudD4oKTtcclxuICBAT3V0cHV0KClcclxuICBvbkRyYXdFbmQgPSBuZXcgRXZlbnRFbWl0dGVyPG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQ+KCk7XHJcbiAgQE91dHB1dCgpXHJcbiAgb25EcmF3U3RhcnQgPSBuZXcgRXZlbnRFbWl0dGVyPG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQ+KCk7XHJcbiAgQE91dHB1dCgpXHJcbiAgb25Qcm9wZXJ0eUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8b2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudD4oKTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLkRyYXcodGhpcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdjaGFuZ2UnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25DaGFuZ2UuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbignY2hhbmdlOmFjdGl2ZScsIChldmVudDogb2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudCkgPT4gdGhpcy5vbkNoYW5nZUFjdGl2ZS5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdkcmF3ZW5kJywgKGV2ZW50OiBvbC5pbnRlcmFjdGlvbi5EcmF3LkV2ZW50KSA9PiB0aGlzLm9uRHJhd0VuZC5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdkcmF3c3RhcnQnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25EcmF3U3RhcnQuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbigncHJvcGVydHljaGFuZ2UnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25Qcm9wZXJ0eUNoYW5nZS5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/modify.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/modify.component.js
@@ -92,4 +92,4 @@ if (false) {
      */
     ModifyInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kaWZ5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9tb2RpZnkuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUUsV0FBVyxFQUE2QyxVQUFVLEVBQVcsTUFBTSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ2pILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQU1oRCxNQUFNOzs7O0lBNkJKLFlBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFWckMsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBNEIsQ0FBQztRQUUzRCxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUE0QixDQUFDO1FBRTdELGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBNEIsQ0FBQztRQUV4RCxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUE0QixDQUFDO1FBRTlELHFCQUFnQixHQUFHLElBQUksWUFBWSxFQUE0QixDQUFDO0lBRXhCLENBQUM7Ozs7SUFFekMsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLEtBQStCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDM0YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsZUFBZSxFQUFFLENBQUMsS0FBK0IsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUN4RyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLEtBQStCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUMzRyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxLQUErQixFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2pHLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDLEtBQStCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDckcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOzs7WUEvQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLFFBQVEsRUFBRSxFQUFFO2FBQ2I7OztZQUxRLFlBQVk7Ozt3QkFTbEIsS0FBSzs4QkFFTCxLQUFLOzZCQUVMLEtBQUs7b0JBRUwsS0FBSzt1QkFFTCxLQUFLO29CQUVMLEtBQUs7cUJBRUwsS0FBSzswQkFHTCxNQUFNOzRCQUVOLE1BQU07dUJBRU4sTUFBTTs2QkFFTixNQUFNOytCQUVOLE1BQU07Ozs7SUF6QlAsOENBQTZCOztJQUU3QiwrQ0FDZ0M7O0lBQ2hDLHFEQUNzQzs7SUFDdEMsb0RBQ3dCOztJQUN4QiwyQ0FDb0Q7O0lBQ3BELDhDQUM4Qjs7SUFDOUIsMkNBQ2dCOztJQUNoQiw0Q0FDdUI7O0lBRXZCLGlEQUMyRDs7SUFDM0QsbURBQzZEOztJQUM3RCw4Q0FDd0Q7O0lBQ3hELG9EQUM4RDs7SUFDOUQsc0RBQ2dFOzs7OztJQUVwRCx5Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGludGVyYWN0aW9uLCBFdmVudHNDb25kaXRpb25UeXBlLCBzdHlsZSwgU3R5bGVGdW5jdGlvbiwgQ29sbGVjdGlvbiwgRmVhdHVyZSwgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLW1vZGlmeScsXG4gIHRlbXBsYXRlOiAnJyxcbn0pXG5leHBvcnQgY2xhc3MgTW9kaWZ5SW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5Nb2RpZnk7XG5cbiAgQElucHV0KClcbiAgY29uZGl0aW9uPzogRXZlbnRzQ29uZGl0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgZGVsZXRlQ29uZGl0aW9uPzogRXZlbnRzQ29uZGl0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgcGl4ZWxUb2xlcmFuY2U/OiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHN0eWxlPzogc3R5bGUuU3R5bGUgfCBzdHlsZS5TdHlsZVtdIHwgU3R5bGVGdW5jdGlvbjtcbiAgQElucHV0KClcbiAgZmVhdHVyZXM6IENvbGxlY3Rpb248RmVhdHVyZT47XG4gIEBJbnB1dCgpXG4gIHdyYXBYPzogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgc291cmNlPzogc291cmNlLlZlY3RvcjtcblxuICBAT3V0cHV0KClcbiAgb25Nb2RpZnlFbmQgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLk1vZGlmeS5FdmVudD4oKTtcbiAgQE91dHB1dCgpXG4gIG9uTW9kaWZ5U3RhcnQgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLk1vZGlmeS5FdmVudD4oKTtcbiAgQE91dHB1dCgpXG4gIG9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5Nb2RpZnkuRXZlbnQ+KCk7XG4gIEBPdXRwdXQoKVxuICBvbkNoYW5nZUFjdGl2ZSA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uTW9kaWZ5LkV2ZW50PigpO1xuICBAT3V0cHV0KClcbiAgb25Qcm9wZXJ0eUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uTW9kaWZ5LkV2ZW50PigpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5Nb2RpZnkodGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZS5vbignY2hhbmdlJywgKGV2ZW50OiBpbnRlcmFjdGlvbi5Nb2RpZnkuRXZlbnQpID0+IHRoaXMub25DaGFuZ2UuZW1pdChldmVudCkpO1xuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2NoYW5nZTphY3RpdmUnLCAoZXZlbnQ6IGludGVyYWN0aW9uLk1vZGlmeS5FdmVudCkgPT4gdGhpcy5vbkNoYW5nZUFjdGl2ZS5lbWl0KGV2ZW50KSk7XG4gICAgdGhpcy5pbnN0YW5jZS5vbigncHJvcGVydHljaGFuZ2UnLCAoZXZlbnQ6IGludGVyYWN0aW9uLk1vZGlmeS5FdmVudCkgPT4gdGhpcy5vblByb3BlcnR5Q2hhbmdlLmVtaXQoZXZlbnQpKTtcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdtb2RpZnllbmQnLCAoZXZlbnQ6IGludGVyYWN0aW9uLk1vZGlmeS5FdmVudCkgPT4gdGhpcy5vbk1vZGlmeUVuZC5lbWl0KGV2ZW50KSk7XG4gICAgdGhpcy5pbnN0YW5jZS5vbignbW9kaWZ5c3RhcnQnLCAoZXZlbnQ6IGludGVyYWN0aW9uLk1vZGlmeS5FdmVudCkgPT4gdGhpcy5vbk1vZGlmeVN0YXJ0LmVtaXQoZXZlbnQpKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kaWZ5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9tb2RpZnkuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUUsV0FBVyxFQUE2QyxVQUFVLEVBQVcsTUFBTSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ2pILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQU1oRCxNQUFNOzs7O0lBNkJKLFlBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFWckMsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBNEIsQ0FBQztRQUUzRCxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUE0QixDQUFDO1FBRTdELGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBNEIsQ0FBQztRQUV4RCxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUE0QixDQUFDO1FBRTlELHFCQUFnQixHQUFHLElBQUksWUFBWSxFQUE0QixDQUFDO0lBRXhCLENBQUM7Ozs7SUFFekMsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLEtBQStCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDM0YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsZUFBZSxFQUFFLENBQUMsS0FBK0IsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUN4RyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLEtBQStCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUMzRyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxLQUErQixFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2pHLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDLEtBQStCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDckcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOzs7WUEvQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLFFBQVEsRUFBRSxFQUFFO2FBQ2I7OztZQUxRLFlBQVk7Ozt3QkFTbEIsS0FBSzs4QkFFTCxLQUFLOzZCQUVMLEtBQUs7b0JBRUwsS0FBSzt1QkFFTCxLQUFLO29CQUVMLEtBQUs7cUJBRUwsS0FBSzswQkFHTCxNQUFNOzRCQUVOLE1BQU07dUJBRU4sTUFBTTs2QkFFTixNQUFNOytCQUVOLE1BQU07Ozs7SUF6QlAsOENBQTZCOztJQUU3QiwrQ0FDZ0M7O0lBQ2hDLHFEQUNzQzs7SUFDdEMsb0RBQ3dCOztJQUN4QiwyQ0FDb0Q7O0lBQ3BELDhDQUM4Qjs7SUFDOUIsMkNBQ2dCOztJQUNoQiw0Q0FDdUI7O0lBRXZCLGlEQUMyRDs7SUFDM0QsbURBQzZEOztJQUM3RCw4Q0FDd0Q7O0lBQ3hELG9EQUM4RDs7SUFDOUQsc0RBQ2dFOzs7OztJQUVwRCx5Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaW50ZXJhY3Rpb24sIEV2ZW50c0NvbmRpdGlvblR5cGUsIHN0eWxlLCBTdHlsZUZ1bmN0aW9uLCBDb2xsZWN0aW9uLCBGZWF0dXJlLCBzb3VyY2UgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1tb2RpZnknLFxyXG4gIHRlbXBsYXRlOiAnJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIE1vZGlmeUludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5Nb2RpZnk7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY29uZGl0aW9uPzogRXZlbnRzQ29uZGl0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIGRlbGV0ZUNvbmRpdGlvbj86IEV2ZW50c0NvbmRpdGlvblR5cGU7XHJcbiAgQElucHV0KClcclxuICBwaXhlbFRvbGVyYW5jZT86IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHN0eWxlPzogc3R5bGUuU3R5bGUgfCBzdHlsZS5TdHlsZVtdIHwgU3R5bGVGdW5jdGlvbjtcclxuICBASW5wdXQoKVxyXG4gIGZlYXR1cmVzOiBDb2xsZWN0aW9uPEZlYXR1cmU+O1xyXG4gIEBJbnB1dCgpXHJcbiAgd3JhcFg/OiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgc291cmNlPzogc291cmNlLlZlY3RvcjtcclxuXHJcbiAgQE91dHB1dCgpXHJcbiAgb25Nb2RpZnlFbmQgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLk1vZGlmeS5FdmVudD4oKTtcclxuICBAT3V0cHV0KClcclxuICBvbk1vZGlmeVN0YXJ0ID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5Nb2RpZnkuRXZlbnQ+KCk7XHJcbiAgQE91dHB1dCgpXHJcbiAgb25DaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLk1vZGlmeS5FdmVudD4oKTtcclxuICBAT3V0cHV0KClcclxuICBvbkNoYW5nZUFjdGl2ZSA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uTW9kaWZ5LkV2ZW50PigpO1xyXG4gIEBPdXRwdXQoKVxyXG4gIG9uUHJvcGVydHlDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLk1vZGlmeS5FdmVudD4oKTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLk1vZGlmeSh0aGlzKTtcclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2NoYW5nZScsIChldmVudDogaW50ZXJhY3Rpb24uTW9kaWZ5LkV2ZW50KSA9PiB0aGlzLm9uQ2hhbmdlLmVtaXQoZXZlbnQpKTtcclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2NoYW5nZTphY3RpdmUnLCAoZXZlbnQ6IGludGVyYWN0aW9uLk1vZGlmeS5FdmVudCkgPT4gdGhpcy5vbkNoYW5nZUFjdGl2ZS5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdwcm9wZXJ0eWNoYW5nZScsIChldmVudDogaW50ZXJhY3Rpb24uTW9kaWZ5LkV2ZW50KSA9PiB0aGlzLm9uUHJvcGVydHlDaGFuZ2UuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbignbW9kaWZ5ZW5kJywgKGV2ZW50OiBpbnRlcmFjdGlvbi5Nb2RpZnkuRXZlbnQpID0+IHRoaXMub25Nb2RpZnlFbmQuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbignbW9kaWZ5c3RhcnQnLCAoZXZlbnQ6IGludGVyYWN0aW9uLk1vZGlmeS5FdmVudCkgPT4gdGhpcy5vbk1vZGlmeVN0YXJ0LmVtaXQoZXZlbnQpKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/mousewheelzoom.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/mousewheelzoom.component.js
@@ -55,4 +55,4 @@ if (false) {
      */
     MouseWheelZoomInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW91c2V3aGVlbHpvb20uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL21vdXNld2hlZWx6b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTWhELE1BQU07Ozs7SUFTSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6QyxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOzs7WUF0QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQ0FBZ0M7Z0JBQzFDLFFBQVEsRUFBRSxFQUFFO2FBQ2I7OztZQUxRLFlBQVk7Ozt1QkFRbEIsS0FBSztzQkFFTCxLQUFLO3dCQUVMLEtBQUs7Ozs7SUFMTixzREFBcUM7O0lBQ3JDLHNEQUNpQjs7SUFDakIscURBQ2dCOztJQUNoQix1REFDbUI7Ozs7O0lBRVAsaURBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGludGVyYWN0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLW1vdXNld2hlZWx6b29tJyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBNb3VzZVdoZWVsWm9vbUludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBpbnN0YW5jZTogaW50ZXJhY3Rpb24uTW91c2VXaGVlbFpvb207XG4gIEBJbnB1dCgpXG4gIGR1cmF0aW9uOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHRpbWVvdXQ6IG51bWJlcjtcbiAgQElucHV0KClcbiAgdXNlQW5jaG9yOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5Nb3VzZVdoZWVsWm9vbSh0aGlzKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW91c2V3aGVlbHpvb20uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL21vdXNld2hlZWx6b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTWhELE1BQU07Ozs7SUFTSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6QyxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOzs7WUF0QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQ0FBZ0M7Z0JBQzFDLFFBQVEsRUFBRSxFQUFFO2FBQ2I7OztZQUxRLFlBQVk7Ozt1QkFRbEIsS0FBSztzQkFFTCxLQUFLO3dCQUVMLEtBQUs7Ozs7SUFMTixzREFBcUM7O0lBQ3JDLHNEQUNpQjs7SUFDakIscURBQ2dCOztJQUNoQix1REFDbUI7Ozs7O0lBRVAsaURBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaW50ZXJhY3Rpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1tb3VzZXdoZWVsem9vbScsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTW91c2VXaGVlbFpvb21JbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBpbnN0YW5jZTogaW50ZXJhY3Rpb24uTW91c2VXaGVlbFpvb207XHJcbiAgQElucHV0KClcclxuICBkdXJhdGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGltZW91dDogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgdXNlQW5jaG9yOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uTW91c2VXaGVlbFpvb20odGhpcyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/pinchzoom.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/pinchzoom.component.js
@@ -52,4 +52,4 @@ if (false) {
      */
     PinchZoomInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGluY2h6b29tLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9waW5jaHpvb20uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7OztJQVFKLFlBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7OztZQXJCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsUUFBUSxFQUFFLEVBQUU7YUFDYjs7O1lBTFEsWUFBWTs7O3VCQVNsQixLQUFLO2tDQUVMLEtBQUs7Ozs7SUFKTixpREFBZ0M7O0lBRWhDLGlEQUNpQjs7SUFDakIsNERBQzZCOzs7OztJQUVqQiw0Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaW50ZXJhY3Rpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tcGluY2h6b29tJyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBQaW5jaFpvb21JbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLlBpbmNoWm9vbTtcblxuICBASW5wdXQoKVxuICBkdXJhdGlvbjogbnVtYmVyO1xuICBASW5wdXQoKVxuICBjb25zdHJhaW5SZXNvbHV0aW9uOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5QaW5jaFpvb20odGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGluY2h6b29tLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9waW5jaHpvb20uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7OztJQVFKLFlBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7OztZQXJCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsUUFBUSxFQUFFLEVBQUU7YUFDYjs7O1lBTFEsWUFBWTs7O3VCQVNsQixLQUFLO2tDQUVMLEtBQUs7Ozs7SUFKTixpREFBZ0M7O0lBRWhDLGlEQUNpQjs7SUFDakIsNERBQzZCOzs7OztJQUVqQiw0Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpbnRlcmFjdGlvbiB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLXBpbmNoem9vbScsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgUGluY2hab29tSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLlBpbmNoWm9vbTtcclxuXHJcbiAgQElucHV0KClcclxuICBkdXJhdGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29uc3RyYWluUmVzb2x1dGlvbjogYm9vbGVhbjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLlBpbmNoWm9vbSh0aGlzKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/select.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/select.component.js
@@ -91,4 +91,4 @@ if (false) {
      */
     SelectInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9zZWxlY3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQ0wsV0FBVyxFQUlYLFVBQVUsR0FJWCxNQUFNLFlBQVksQ0FBQztBQUNwQixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7OztJQStCSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBTnJDLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBNEIsQ0FBQztRQUV4RCxhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQTRCLENBQUM7UUFFeEQscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQTRCLENBQUM7SUFFeEIsQ0FBQzs7OztJQUV6QyxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFN0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUMsS0FBK0IsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUMzRixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxLQUErQixFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzNGLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLENBQUMsS0FBK0IsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBRTNHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7O1lBakRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsd0JBQXdCO2dCQUNsQyxRQUFRLEVBQUUsRUFBRTthQUNiOzs7WUFMUSxZQUFZOzs7MkJBU2xCLEtBQUs7d0JBRUwsS0FBSztxQkFFTCxLQUFLO29CQUVMLEtBQUs7OEJBRUwsS0FBSzs4QkFFTCxLQUFLO29CQUVMLEtBQUs7dUJBRUwsS0FBSztxQkFFTCxLQUFLO29CQUVMLEtBQUs7dUJBR0wsTUFBTTt1QkFFTixNQUFNOytCQUVOLE1BQU07Ozs7SUEzQlAsOENBQTZCOztJQUU3QixrREFDbUM7O0lBQ25DLCtDQUNnQzs7SUFDaEMsNENBQzJEOztJQUMzRCwyQ0FDb0Q7O0lBQ3BELHFEQUNzQzs7SUFDdEMscURBQ3NDOztJQUN0QywyQ0FDZ0I7O0lBQ2hCLDhDQUMrQjs7SUFDL0IsNENBQzhCOztJQUM5QiwyQ0FDZ0I7O0lBRWhCLDhDQUN3RDs7SUFDeEQsOENBQ3dEOztJQUN4RCxzREFDZ0U7Ozs7O0lBRXBELHlDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgaW50ZXJhY3Rpb24sXG4gIEV2ZW50c0NvbmRpdGlvblR5cGUsXG4gIGxheWVyLFxuICBzdHlsZSxcbiAgQ29sbGVjdGlvbixcbiAgU2VsZWN0RmlsdGVyRnVuY3Rpb24sXG4gIFN0eWxlRnVuY3Rpb24sXG4gIEZlYXR1cmUsXG59IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1zZWxlY3QnLFxuICB0ZW1wbGF0ZTogJycsXG59KVxuZXhwb3J0IGNsYXNzIFNlbGVjdEludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBpbnN0YW5jZTogaW50ZXJhY3Rpb24uU2VsZWN0O1xuXG4gIEBJbnB1dCgpXG4gIGFkZENvbmRpdGlvbj86IEV2ZW50c0NvbmRpdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIGNvbmRpdGlvbj86IEV2ZW50c0NvbmRpdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIGxheWVycz86IGxheWVyLkxheWVyW10gfCAoKGxheWVyOiBsYXllci5MYXllcikgPT4gYm9vbGVhbik7XG4gIEBJbnB1dCgpXG4gIHN0eWxlPzogc3R5bGUuU3R5bGUgfCBzdHlsZS5TdHlsZVtdIHwgU3R5bGVGdW5jdGlvbjtcbiAgQElucHV0KClcbiAgcmVtb3ZlQ29uZGl0aW9uPzogRXZlbnRzQ29uZGl0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgdG9nZ2xlQ29uZGl0aW9uPzogRXZlbnRzQ29uZGl0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgbXVsdGk/OiBib29sZWFuO1xuICBASW5wdXQoKVxuICBmZWF0dXJlcz86IENvbGxlY3Rpb248RmVhdHVyZT47XG4gIEBJbnB1dCgpXG4gIGZpbHRlcj86IFNlbGVjdEZpbHRlckZ1bmN0aW9uO1xuICBASW5wdXQoKVxuICB3cmFwWD86IGJvb2xlYW47XG5cbiAgQE91dHB1dCgpXG4gIG9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5TZWxlY3QuRXZlbnQ+KCk7XG4gIEBPdXRwdXQoKVxuICBvblNlbGVjdCA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uU2VsZWN0LkV2ZW50PigpO1xuICBAT3V0cHV0KClcbiAgb25Qcm9wZXJ0eUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uU2VsZWN0LkV2ZW50PigpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5TZWxlY3QodGhpcyk7XG5cbiAgICB0aGlzLmluc3RhbmNlLm9uKCdjaGFuZ2UnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlNlbGVjdC5FdmVudCkgPT4gdGhpcy5vbkNoYW5nZS5lbWl0KGV2ZW50KSk7XG4gICAgdGhpcy5pbnN0YW5jZS5vbignc2VsZWN0JywgKGV2ZW50OiBpbnRlcmFjdGlvbi5TZWxlY3QuRXZlbnQpID0+IHRoaXMub25TZWxlY3QuZW1pdChldmVudCkpO1xuICAgIHRoaXMuaW5zdGFuY2Uub24oJ3Byb3BlcnR5Y2hhbmdlJywgKGV2ZW50OiBpbnRlcmFjdGlvbi5TZWxlY3QuRXZlbnQpID0+IHRoaXMub25Qcm9wZXJ0eUNoYW5nZS5lbWl0KGV2ZW50KSk7XG5cbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9zZWxlY3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQ0wsV0FBVyxFQUlYLFVBQVUsR0FJWCxNQUFNLFlBQVksQ0FBQztBQUNwQixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7OztJQStCSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBTnJDLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBNEIsQ0FBQztRQUV4RCxhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQTRCLENBQUM7UUFFeEQscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQTRCLENBQUM7SUFFeEIsQ0FBQzs7OztJQUV6QyxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFN0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUMsS0FBK0IsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUMzRixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxLQUErQixFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzNGLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLENBQUMsS0FBK0IsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBRTNHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7O1lBakRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsd0JBQXdCO2dCQUNsQyxRQUFRLEVBQUUsRUFBRTthQUNiOzs7WUFMUSxZQUFZOzs7MkJBU2xCLEtBQUs7d0JBRUwsS0FBSztxQkFFTCxLQUFLO29CQUVMLEtBQUs7OEJBRUwsS0FBSzs4QkFFTCxLQUFLO29CQUVMLEtBQUs7dUJBRUwsS0FBSztxQkFFTCxLQUFLO29CQUVMLEtBQUs7dUJBR0wsTUFBTTt1QkFFTixNQUFNOytCQUVOLE1BQU07Ozs7SUEzQlAsOENBQTZCOztJQUU3QixrREFDbUM7O0lBQ25DLCtDQUNnQzs7SUFDaEMsNENBQzJEOztJQUMzRCwyQ0FDb0Q7O0lBQ3BELHFEQUNzQzs7SUFDdEMscURBQ3NDOztJQUN0QywyQ0FDZ0I7O0lBQ2hCLDhDQUMrQjs7SUFDL0IsNENBQzhCOztJQUM5QiwyQ0FDZ0I7O0lBRWhCLDhDQUN3RDs7SUFDeEQsOENBQ3dEOztJQUN4RCxzREFDZ0U7Ozs7O0lBRXBELHlDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1xyXG4gIGludGVyYWN0aW9uLFxyXG4gIEV2ZW50c0NvbmRpdGlvblR5cGUsXHJcbiAgbGF5ZXIsXHJcbiAgc3R5bGUsXHJcbiAgQ29sbGVjdGlvbixcclxuICBTZWxlY3RGaWx0ZXJGdW5jdGlvbixcclxuICBTdHlsZUZ1bmN0aW9uLFxyXG4gIEZlYXR1cmUsXHJcbn0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tc2VsZWN0JyxcclxuICB0ZW1wbGF0ZTogJycsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTZWxlY3RJbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBpbnN0YW5jZTogaW50ZXJhY3Rpb24uU2VsZWN0O1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGFkZENvbmRpdGlvbj86IEV2ZW50c0NvbmRpdGlvblR5cGU7XHJcbiAgQElucHV0KClcclxuICBjb25kaXRpb24/OiBFdmVudHNDb25kaXRpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGF5ZXJzPzogbGF5ZXIuTGF5ZXJbXSB8ICgobGF5ZXI6IGxheWVyLkxheWVyKSA9PiBib29sZWFuKTtcclxuICBASW5wdXQoKVxyXG4gIHN0eWxlPzogc3R5bGUuU3R5bGUgfCBzdHlsZS5TdHlsZVtdIHwgU3R5bGVGdW5jdGlvbjtcclxuICBASW5wdXQoKVxyXG4gIHJlbW92ZUNvbmRpdGlvbj86IEV2ZW50c0NvbmRpdGlvblR5cGU7XHJcbiAgQElucHV0KClcclxuICB0b2dnbGVDb25kaXRpb24/OiBFdmVudHNDb25kaXRpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgbXVsdGk/OiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgZmVhdHVyZXM/OiBDb2xsZWN0aW9uPEZlYXR1cmU+O1xyXG4gIEBJbnB1dCgpXHJcbiAgZmlsdGVyPzogU2VsZWN0RmlsdGVyRnVuY3Rpb247XHJcbiAgQElucHV0KClcclxuICB3cmFwWD86IGJvb2xlYW47XHJcblxyXG4gIEBPdXRwdXQoKVxyXG4gIG9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5TZWxlY3QuRXZlbnQ+KCk7XHJcbiAgQE91dHB1dCgpXHJcbiAgb25TZWxlY3QgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlNlbGVjdC5FdmVudD4oKTtcclxuICBAT3V0cHV0KClcclxuICBvblByb3BlcnR5Q2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5TZWxlY3QuRXZlbnQ+KCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5TZWxlY3QodGhpcyk7XHJcblxyXG4gICAgdGhpcy5pbnN0YW5jZS5vbignY2hhbmdlJywgKGV2ZW50OiBpbnRlcmFjdGlvbi5TZWxlY3QuRXZlbnQpID0+IHRoaXMub25DaGFuZ2UuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbignc2VsZWN0JywgKGV2ZW50OiBpbnRlcmFjdGlvbi5TZWxlY3QuRXZlbnQpID0+IHRoaXMub25TZWxlY3QuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbigncHJvcGVydHljaGFuZ2UnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlNlbGVjdC5FdmVudCkgPT4gdGhpcy5vblByb3BlcnR5Q2hhbmdlLmVtaXQoZXZlbnQpKTtcclxuXHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/interactions/translate.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/interactions/translate.component.js
@@ -80,4 +80,4 @@ if (false) {
      */
     TranslateInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy90cmFuc2xhdGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUUsV0FBVyxFQUFTLFVBQVUsRUFBVyxNQUFNLFlBQVksQ0FBQztBQUNyRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7OztJQXFCSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxZQUFZLEVBQStCLENBQUM7UUFDaEUsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksWUFBWSxFQUErQixDQUFDO1FBQ3hFLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxZQUFZLEVBQStCLENBQUM7UUFDdEUsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksWUFBWSxFQUErQixDQUFDO1FBQ3hFLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxZQUFZLEVBQStCLENBQUM7SUFDdkUsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVoRCxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxLQUFrQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzlGLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLENBQUMsS0FBa0MsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzlHLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGNBQWMsRUFBRSxDQUFDLEtBQWtDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDMUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxLQUFrQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDOUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUMsS0FBa0MsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUV4RyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7OztZQS9DRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsUUFBUSxFQUFFLEVBQUU7YUFDYjs7O1lBTFEsWUFBWTs7O3VCQVNsQixLQUFLO3FCQUVMLEtBQUs7MkJBRUwsS0FBSzt1QkFHTCxNQUFNOytCQUVOLE1BQU07NkJBRU4sTUFBTTsrQkFFTixNQUFNOzRCQUVOLE1BQU07Ozs7SUFqQlAsaURBQWdDOztJQUVoQyxpREFDK0I7O0lBQy9CLCtDQUMyRDs7SUFDM0QscURBQ3NCOztJQUV0QixpREFDb0Q7O0lBQ3BELHlEQUM0RDs7SUFDNUQsdURBQzBEOztJQUMxRCx5REFDNEQ7O0lBQzVELHNEQUN5RDs7Ozs7SUFFN0MsNENBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpbnRlcmFjdGlvbiwgbGF5ZXIsIENvbGxlY3Rpb24sIEZlYXR1cmUgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tdHJhbnNsYXRlJyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBUcmFuc2xhdGVJbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLlRyYW5zbGF0ZTtcblxuICBASW5wdXQoKVxuICBmZWF0dXJlcz86IENvbGxlY3Rpb248RmVhdHVyZT47XG4gIEBJbnB1dCgpXG4gIGxheWVycz86IGxheWVyLkxheWVyW10gfCAoKGxheWVyOiBsYXllci5MYXllcikgPT4gYm9vbGVhbik7XG4gIEBJbnB1dCgpXG4gIGhpdFRvbGVyYW5jZT86IG51bWJlcjtcblxuICBAT3V0cHV0KClcbiAgb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+O1xuICBAT3V0cHV0KClcbiAgb25Qcm9wZXJ0eUNoYW5nZTogRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudD47XG4gIEBPdXRwdXQoKVxuICBvblRyYW5zbGF0ZUVuZDogRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudD47XG4gIEBPdXRwdXQoKVxuICBvblRyYW5zbGF0ZVN0YXJ0OiBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50PjtcbiAgQE91dHB1dCgpXG4gIG9uVHJhbnNsYXRpbmc6IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHtcbiAgICB0aGlzLm9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+KCk7XG4gICAgdGhpcy5vblByb3BlcnR5Q2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+KCk7XG4gICAgdGhpcy5vblRyYW5zbGF0ZUVuZCA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50PigpO1xuICAgIHRoaXMub25UcmFuc2xhdGVTdGFydCA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50PigpO1xuICAgIHRoaXMub25UcmFuc2xhdGluZyA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50PigpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5UcmFuc2xhdGUodGhpcyk7XG5cbiAgICB0aGlzLmluc3RhbmNlLm9uKCdjaGFuZ2UnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudCkgPT4gdGhpcy5vbkNoYW5nZS5lbWl0KGV2ZW50KSk7XG4gICAgdGhpcy5pbnN0YW5jZS5vbigncHJvcGVydHljaGFuZ2UnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudCkgPT4gdGhpcy5vblByb3BlcnR5Q2hhbmdlLmVtaXQoZXZlbnQpKTtcbiAgICB0aGlzLmluc3RhbmNlLm9uKCd0cmFuc2xhdGVlbmQnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudCkgPT4gdGhpcy5vblRyYW5zbGF0ZUVuZC5lbWl0KGV2ZW50KSk7XG4gICAgdGhpcy5pbnN0YW5jZS5vbigndHJhbnNsYXRlc3RhcnQnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudCkgPT4gdGhpcy5vblRyYW5zbGF0ZVN0YXJ0LmVtaXQoZXZlbnQpKTtcbiAgICB0aGlzLmluc3RhbmNlLm9uKCd0cmFuc2xhdGluZycsIChldmVudDogaW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50KSA9PiB0aGlzLm9uVHJhbnNsYXRpbmcuZW1pdChldmVudCkpO1xuXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy90cmFuc2xhdGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUUsV0FBVyxFQUFTLFVBQVUsRUFBVyxNQUFNLFlBQVksQ0FBQztBQUNyRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFNaEQsTUFBTTs7OztJQXFCSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxZQUFZLEVBQStCLENBQUM7UUFDaEUsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksWUFBWSxFQUErQixDQUFDO1FBQ3hFLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxZQUFZLEVBQStCLENBQUM7UUFDdEUsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksWUFBWSxFQUErQixDQUFDO1FBQ3hFLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxZQUFZLEVBQStCLENBQUM7SUFDdkUsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVoRCxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxLQUFrQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzlGLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLENBQUMsS0FBa0MsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzlHLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGNBQWMsRUFBRSxDQUFDLEtBQWtDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDMUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxLQUFrQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDOUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUMsS0FBa0MsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUV4RyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7OztZQS9DRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsUUFBUSxFQUFFLEVBQUU7YUFDYjs7O1lBTFEsWUFBWTs7O3VCQVNsQixLQUFLO3FCQUVMLEtBQUs7MkJBRUwsS0FBSzt1QkFHTCxNQUFNOytCQUVOLE1BQU07NkJBRU4sTUFBTTsrQkFFTixNQUFNOzRCQUVOLE1BQU07Ozs7SUFqQlAsaURBQWdDOztJQUVoQyxpREFDK0I7O0lBQy9CLCtDQUMyRDs7SUFDM0QscURBQ3NCOztJQUV0QixpREFDb0Q7O0lBQ3BELHlEQUM0RDs7SUFDNUQsdURBQzBEOztJQUMxRCx5REFDNEQ7O0lBQzVELHNEQUN5RDs7Ozs7SUFFN0MsNENBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGludGVyYWN0aW9uLCBsYXllciwgQ29sbGVjdGlvbiwgRmVhdHVyZSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLXRyYW5zbGF0ZScsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVHJhbnNsYXRlSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLlRyYW5zbGF0ZTtcclxuXHJcbiAgQElucHV0KClcclxuICBmZWF0dXJlcz86IENvbGxlY3Rpb248RmVhdHVyZT47XHJcbiAgQElucHV0KClcclxuICBsYXllcnM/OiBsYXllci5MYXllcltdIHwgKChsYXllcjogbGF5ZXIuTGF5ZXIpID0+IGJvb2xlYW4pO1xyXG4gIEBJbnB1dCgpXHJcbiAgaGl0VG9sZXJhbmNlPzogbnVtYmVyO1xyXG5cclxuICBAT3V0cHV0KClcclxuICBvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudD47XHJcbiAgQE91dHB1dCgpXHJcbiAgb25Qcm9wZXJ0eUNoYW5nZTogRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudD47XHJcbiAgQE91dHB1dCgpXHJcbiAgb25UcmFuc2xhdGVFbmQ6IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+O1xyXG4gIEBPdXRwdXQoKVxyXG4gIG9uVHJhbnNsYXRlU3RhcnQ6IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+O1xyXG4gIEBPdXRwdXQoKVxyXG4gIG9uVHJhbnNsYXRpbmc6IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+O1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7XHJcbiAgICB0aGlzLm9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+KCk7XHJcbiAgICB0aGlzLm9uUHJvcGVydHlDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudD4oKTtcclxuICAgIHRoaXMub25UcmFuc2xhdGVFbmQgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudD4oKTtcclxuICAgIHRoaXMub25UcmFuc2xhdGVTdGFydCA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50PigpO1xyXG4gICAgdGhpcy5vblRyYW5zbGF0aW5nID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+KCk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uVHJhbnNsYXRlKHRoaXMpO1xyXG5cclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2NoYW5nZScsIChldmVudDogaW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50KSA9PiB0aGlzLm9uQ2hhbmdlLmVtaXQoZXZlbnQpKTtcclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ3Byb3BlcnR5Y2hhbmdlJywgKGV2ZW50OiBpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQpID0+IHRoaXMub25Qcm9wZXJ0eUNoYW5nZS5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCd0cmFuc2xhdGVlbmQnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudCkgPT4gdGhpcy5vblRyYW5zbGF0ZUVuZC5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCd0cmFuc2xhdGVzdGFydCcsIChldmVudDogaW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50KSA9PiB0aGlzLm9uVHJhbnNsYXRlU3RhcnQuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbigndHJhbnNsYXRpbmcnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudCkgPT4gdGhpcy5vblRyYW5zbGF0aW5nLmVtaXQoZXZlbnQpKTtcclxuXHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/layers/layer.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/layers/layer.component.js
@@ -96,4 +96,4 @@ if (false) {
      */
     LayerComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvbGF5ZXJzL2xheWVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFnQyxLQUFLLEVBQWlCLE1BQU0sZUFBZSxDQUFDOzs7O0FBS25GLE1BQU07Ozs7SUFzQkosWUFBc0IsSUFBd0M7UUFBeEMsU0FBSSxHQUFKLElBQUksQ0FBb0M7UUFwQnZELGtCQUFhLEdBQUcsT0FBTyxDQUFDO0lBb0JrQyxDQUFDOzs7O0lBRWxFLFFBQVE7UUFDTixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsVUFBVSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDOUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNsRCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLFdBQVcsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ2hFLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDcEQsQ0FBQztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCOztjQUMxQixVQUFVLEdBQTZCLEVBQUU7UUFDL0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUMsTUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztZQUMxQixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7Z0JBQzVDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxZQUFZLENBQUMsQ0FBQyxDQUFDO29CQUN6QixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO29CQUMzRCxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUM1RCxDQUFDO2dCQUNELEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxhQUFhLENBQUMsQ0FBQyxDQUFDO29CQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO29CQUM1RCxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUM3RCxDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUM7UUFDRCxzRkFBc0Y7UUFDdEYsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2pELENBQUM7OztzQkF0REEsS0FBSztzQkFFTCxLQUFLO3FCQUVMLEtBQUs7cUJBRUwsS0FBSzs0QkFFTCxLQUFLOzRCQUVMLEtBQUs7eUJBR0wsS0FBSzswQkFFTCxLQUFLOzs7O0lBbEJOLGtDQUFxQjs7SUFDckIsdUNBQStCOztJQUUvQixpQ0FDZ0I7O0lBQ2hCLGlDQUNpQjs7SUFDakIsZ0NBQ2U7O0lBQ2YsZ0NBQ2U7O0lBQ2YsdUNBQ3NCOztJQUN0Qix1Q0FDc0I7O0lBRXRCLG9DQUMyQzs7SUFDM0MscUNBQzRDOzs7OztJQUVoQyw4QkFBa0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkRlc3Ryb3ksIE9uSW5pdCwgT25DaGFuZ2VzLCBJbnB1dCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBFeHRlbnQgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IExheWVyR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2xheWVyZ3JvdXAuY29tcG9uZW50JztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIExheWVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gIHB1YmxpYyBpbnN0YW5jZTogYW55O1xuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdsYXllcic7XG5cbiAgQElucHV0KClcbiAgb3BhY2l0eTogbnVtYmVyO1xuICBASW5wdXQoKVxuICB2aXNpYmxlOiBib29sZWFuO1xuICBASW5wdXQoKVxuICBleHRlbnQ6IEV4dGVudDtcbiAgQElucHV0KClcbiAgekluZGV4OiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIG1pblJlc29sdXRpb246IG51bWJlcjtcbiAgQElucHV0KClcbiAgbWF4UmVzb2x1dGlvbjogbnVtYmVyO1xuXG4gIEBJbnB1dCgpXG4gIHByZWNvbXBvc2U6IChldnQ6IG9sLmV2ZW50cy5FdmVudCkgPT4gdm9pZDtcbiAgQElucHV0KClcbiAgcG9zdGNvbXBvc2U6IChldnQ6IG9sLmV2ZW50cy5FdmVudCkgPT4gdm9pZDtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaG9zdDogTGF5ZXJHcm91cENvbXBvbmVudCB8IE1hcENvbXBvbmVudCkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy5wcmVjb21wb3NlICE9PSBudWxsICYmIHRoaXMucHJlY29tcG9zZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLm9uKCdwcmVjb21wb3NlJywgdGhpcy5wcmVjb21wb3NlKTtcbiAgICB9XG4gICAgaWYgKHRoaXMucG9zdGNvbXBvc2UgIT09IG51bGwgJiYgdGhpcy5wb3N0Y29tcG9zZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLm9uKCdwb3N0Y29tcG9zZScsIHRoaXMucG9zdGNvbXBvc2UpO1xuICAgIH1cbiAgICB0aGlzLmhvc3QuaW5zdGFuY2UuZ2V0TGF5ZXJzKCkucHVzaCh0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5nZXRMYXllcnMoKS5yZW1vdmUodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgY29uc3QgcHJvcGVydGllczogeyBbaW5kZXg6IHN0cmluZ106IGFueSB9ID0ge307XG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGZvciAoY29uc3Qga2V5IGluIGNoYW5nZXMpIHtcbiAgICAgIGlmIChjaGFuZ2VzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgcHJvcGVydGllc1trZXldID0gY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZTtcbiAgICAgICAgaWYgKGtleSA9PT0gJ3ByZWNvbXBvc2UnKSB7XG4gICAgICAgICAgdGhpcy5pbnN0YW5jZS51bigncHJlY29tcG9zZScsIGNoYW5nZXNba2V5XS5wcmV2aW91c1ZhbHVlKTtcbiAgICAgICAgICB0aGlzLmluc3RhbmNlLm9uKCdwcmVjb21wb3NlJywgY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGtleSA9PT0gJ3Bvc3Rjb21wb3NlJykge1xuICAgICAgICAgIHRoaXMuaW5zdGFuY2UudW4oJ3Bvc3Rjb21wb3NlJywgY2hhbmdlc1trZXldLnByZXZpb3VzVmFsdWUpO1xuICAgICAgICAgIHRoaXMuaW5zdGFuY2Uub24oJ3Bvc3Rjb21wb3NlJywgY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLWxheWVyLCBzZXR0aW5nIG5ldyBwcm9wZXJ0aWVzOiAnLCBwcm9wZXJ0aWVzKTtcbiAgICB0aGlzLmluc3RhbmNlLnNldFByb3BlcnRpZXMocHJvcGVydGllcywgZmFsc2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvbGF5ZXJzL2xheWVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFnQyxLQUFLLEVBQWlCLE1BQU0sZUFBZSxDQUFDOzs7O0FBS25GLE1BQU07Ozs7SUFzQkosWUFBc0IsSUFBd0M7UUFBeEMsU0FBSSxHQUFKLElBQUksQ0FBb0M7UUFwQnZELGtCQUFhLEdBQUcsT0FBTyxDQUFDO0lBb0JrQyxDQUFDOzs7O0lBRWxFLFFBQVE7UUFDTixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsVUFBVSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDOUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNsRCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLFdBQVcsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ2hFLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDcEQsQ0FBQztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCOztjQUMxQixVQUFVLEdBQTZCLEVBQUU7UUFDL0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUMsTUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztZQUMxQixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7Z0JBQzVDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxZQUFZLENBQUMsQ0FBQyxDQUFDO29CQUN6QixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO29CQUMzRCxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUM1RCxDQUFDO2dCQUNELEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxhQUFhLENBQUMsQ0FBQyxDQUFDO29CQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO29CQUM1RCxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUM3RCxDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUM7UUFDRCxzRkFBc0Y7UUFDdEYsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2pELENBQUM7OztzQkF0REEsS0FBSztzQkFFTCxLQUFLO3FCQUVMLEtBQUs7cUJBRUwsS0FBSzs0QkFFTCxLQUFLOzRCQUVMLEtBQUs7eUJBR0wsS0FBSzswQkFFTCxLQUFLOzs7O0lBbEJOLGtDQUFxQjs7SUFDckIsdUNBQStCOztJQUUvQixpQ0FDZ0I7O0lBQ2hCLGlDQUNpQjs7SUFDakIsZ0NBQ2U7O0lBQ2YsZ0NBQ2U7O0lBQ2YsdUNBQ3NCOztJQUN0Qix1Q0FDc0I7O0lBRXRCLG9DQUMyQzs7SUFDM0MscUNBQzRDOzs7OztJQUVoQyw4QkFBa0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkRlc3Ryb3ksIE9uSW5pdCwgT25DaGFuZ2VzLCBJbnB1dCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRXh0ZW50IH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IExheWVyR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2xheWVyZ3JvdXAuY29tcG9uZW50JztcclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBMYXllckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogYW55O1xyXG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2xheWVyJztcclxuXHJcbiAgQElucHV0KClcclxuICBvcGFjaXR5OiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICB2aXNpYmxlOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgZXh0ZW50OiBFeHRlbnQ7XHJcbiAgQElucHV0KClcclxuICB6SW5kZXg6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIG1pblJlc29sdXRpb246IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIG1heFJlc29sdXRpb246IG51bWJlcjtcclxuXHJcbiAgQElucHV0KClcclxuICBwcmVjb21wb3NlOiAoZXZ0OiBvbC5ldmVudHMuRXZlbnQpID0+IHZvaWQ7XHJcbiAgQElucHV0KClcclxuICBwb3N0Y29tcG9zZTogKGV2dDogb2wuZXZlbnRzLkV2ZW50KSA9PiB2b2lkO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaG9zdDogTGF5ZXJHcm91cENvbXBvbmVudCB8IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICBpZiAodGhpcy5wcmVjb21wb3NlICE9PSBudWxsICYmIHRoaXMucHJlY29tcG9zZSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2Uub24oJ3ByZWNvbXBvc2UnLCB0aGlzLnByZWNvbXBvc2UpO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMucG9zdGNvbXBvc2UgIT09IG51bGwgJiYgdGhpcy5wb3N0Y29tcG9zZSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2Uub24oJ3Bvc3Rjb21wb3NlJywgdGhpcy5wb3N0Y29tcG9zZSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2UuZ2V0TGF5ZXJzKCkucHVzaCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLmdldExheWVycygpLnJlbW92ZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGNvbnN0IHByb3BlcnRpZXM6IHsgW2luZGV4OiBzdHJpbmddOiBhbnkgfSA9IHt9O1xyXG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGZvciAoY29uc3Qga2V5IGluIGNoYW5nZXMpIHtcclxuICAgICAgaWYgKGNoYW5nZXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgICAgIHByb3BlcnRpZXNba2V5XSA9IGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWU7XHJcbiAgICAgICAgaWYgKGtleSA9PT0gJ3ByZWNvbXBvc2UnKSB7XHJcbiAgICAgICAgICB0aGlzLmluc3RhbmNlLnVuKCdwcmVjb21wb3NlJywgY2hhbmdlc1trZXldLnByZXZpb3VzVmFsdWUpO1xyXG4gICAgICAgICAgdGhpcy5pbnN0YW5jZS5vbigncHJlY29tcG9zZScsIGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoa2V5ID09PSAncG9zdGNvbXBvc2UnKSB7XHJcbiAgICAgICAgICB0aGlzLmluc3RhbmNlLnVuKCdwb3N0Y29tcG9zZScsIGNoYW5nZXNba2V5XS5wcmV2aW91c1ZhbHVlKTtcclxuICAgICAgICAgIHRoaXMuaW5zdGFuY2Uub24oJ3Bvc3Rjb21wb3NlJywgY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyBjb25zb2xlLmxvZygnY2hhbmdlcyBkZXRlY3RlZCBpbiBhb2wtbGF5ZXIsIHNldHRpbmcgbmV3IHByb3BlcnRpZXM6ICcsIHByb3BlcnRpZXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5zZXRQcm9wZXJ0aWVzKHByb3BlcnRpZXMsIGZhbHNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/layers/layergroup.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/layers/layergroup.component.js
@@ -39,4 +39,4 @@ if (false) {
     /** @type {?} */
     LayerGroupComponent.prototype.instance;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJncm91cC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9sYXllcnMvbGF5ZXJncm91cC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakYsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNuQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUWhELE1BQU0sMEJBQTJCLFNBQVEsY0FBYzs7Ozs7SUFHckQsWUFDRSxHQUFpQixFQUdqQixLQUEyQjtRQUUzQixLQUFLLENBQUMsS0FBSyxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sK0RBQStEO1FBQy9ELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNuQixDQUFDOzs7WUF0QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxpQkFBaUI7Z0JBQzNCLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFQUSxZQUFZO1lBZVQsbUJBQW1CLHVCQUYxQixRQUFRLFlBQ1IsUUFBUTs7OztJQUxYLHVDQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIFNraXBTZWxmLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgbGF5ZXIgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IExheWVyQ29tcG9uZW50IH0gZnJvbSAnLi9sYXllci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1sYXllci1ncm91cCcsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBMYXllckdyb3VwQ29tcG9uZW50IGV4dGVuZHMgTGF5ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIHB1YmxpYyBpbnN0YW5jZTogb2wubGF5ZXIuR3JvdXA7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgbWFwOiBNYXBDb21wb25lbnQsXG4gICAgQFNraXBTZWxmKClcbiAgICBAT3B0aW9uYWwoKVxuICAgIGdyb3VwPzogTGF5ZXJHcm91cENvbXBvbmVudFxuICApIHtcbiAgICBzdXBlcihncm91cCB8fCBtYXApO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgLy8gY29uc29sZS5sb2coYGNyZWF0aW5nIG9sLmxheWVyLkdyb3VwIGluc3RhbmNlIHdpdGg6YCwgdGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBsYXllci5Hcm91cCh0aGlzKTtcbiAgICBzdXBlci5uZ09uSW5pdCgpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJncm91cC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9sYXllcnMvbGF5ZXJncm91cC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakYsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNuQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUWhELE1BQU0sMEJBQTJCLFNBQVEsY0FBYzs7Ozs7SUFHckQsWUFDRSxHQUFpQixFQUdqQixLQUEyQjtRQUUzQixLQUFLLENBQUMsS0FBSyxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sK0RBQStEO1FBQy9ELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNuQixDQUFDOzs7WUF0QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxpQkFBaUI7Z0JBQzNCLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFQUSxZQUFZO1lBZVQsbUJBQW1CLHVCQUYxQixRQUFRLFlBQ1IsUUFBUTs7OztJQUxYLHVDQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIFNraXBTZWxmLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBsYXllciB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBMYXllckNvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1sYXllci1ncm91cCcsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTGF5ZXJHcm91cENvbXBvbmVudCBleHRlbmRzIExheWVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogb2wubGF5ZXIuR3JvdXA7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgbWFwOiBNYXBDb21wb25lbnQsXHJcbiAgICBAU2tpcFNlbGYoKVxyXG4gICAgQE9wdGlvbmFsKClcclxuICAgIGdyb3VwPzogTGF5ZXJHcm91cENvbXBvbmVudFxyXG4gICkge1xyXG4gICAgc3VwZXIoZ3JvdXAgfHwgbWFwKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coYGNyZWF0aW5nIG9sLmxheWVyLkdyb3VwIGluc3RhbmNlIHdpdGg6YCwgdGhpcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGxheWVyLkdyb3VwKHRoaXMpO1xyXG4gICAgc3VwZXIubmdPbkluaXQoKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/layers/layerimage.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/layers/layerimage.component.js
@@ -66,4 +66,4 @@ if (false) {
     /** @type {?} */
     LayerImageComponent.prototype.zIndex;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJpbWFnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9sYXllcnMvbGF5ZXJpbWFnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixRQUFRLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQzdGLE9BQU8sRUFBVSxLQUFLLEVBQVUsTUFBTSxZQUFZLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQVE3RCxNQUFNLDBCQUEyQixTQUFRLGNBQWM7Ozs7O0lBZ0JyRCxZQUFZLEdBQWlCLEVBQWMsS0FBMkI7UUFDcEUsS0FBSyxDQUFDLEtBQUssSUFBSSxHQUFHLENBQUMsQ0FBQztJQUN0QixDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNuQixDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxLQUFLLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzdCLENBQUM7OztZQWpDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsUUFBUSxFQUFFOztHQUVUO2FBQ0Y7OztZQVRRLFlBQVk7WUFFWixtQkFBbUIsdUJBd0JNLFFBQVE7OztzQkFidkMsS0FBSztzQkFFTCxLQUFLO3FCQUVMLEtBQUs7NEJBRUwsS0FBSzs0QkFFTCxLQUFLO3FCQUVMLEtBQUs7Ozs7SUFaTixxQ0FBNEI7O0lBRTVCLHNDQUNnQjs7SUFDaEIsc0NBQ2lCOztJQUNqQixxQ0FDZTs7SUFDZiw0Q0FDc0I7O0lBQ3RCLDRDQUNzQjs7SUFDdEIscUNBQ2UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgT3B0aW9uYWwsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEV4dGVudCwgbGF5ZXIsIHNvdXJjZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMYXllckNvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IExheWVyR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2xheWVyZ3JvdXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWxheWVyLWltYWdlJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIExheWVySW1hZ2VDb21wb25lbnQgZXh0ZW5kcyBMYXllckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgcHVibGljIHNvdXJjZTogc291cmNlLkltYWdlO1xuXG4gIEBJbnB1dCgpXG4gIG9wYWNpdHk6IG51bWJlcjtcbiAgQElucHV0KClcbiAgdmlzaWJsZTogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgZXh0ZW50OiBFeHRlbnQ7XG4gIEBJbnB1dCgpXG4gIG1pblJlc29sdXRpb246IG51bWJlcjtcbiAgQElucHV0KClcbiAgbWF4UmVzb2x1dGlvbjogbnVtYmVyO1xuICBASW5wdXQoKVxuICB6SW5kZXg6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihtYXA6IE1hcENvbXBvbmVudCwgQE9wdGlvbmFsKCkgZ3JvdXA/OiBMYXllckdyb3VwQ29tcG9uZW50KSB7XG4gICAgc3VwZXIoZ3JvdXAgfHwgbWFwKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgbGF5ZXIuSW1hZ2UodGhpcyk7XG4gICAgc3VwZXIubmdPbkluaXQoKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBzdXBlci5uZ09uQ2hhbmdlcyhjaGFuZ2VzKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJpbWFnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9sYXllcnMvbGF5ZXJpbWFnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixRQUFRLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQzdGLE9BQU8sRUFBVSxLQUFLLEVBQVUsTUFBTSxZQUFZLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQVE3RCxNQUFNLDBCQUEyQixTQUFRLGNBQWM7Ozs7O0lBZ0JyRCxZQUFZLEdBQWlCLEVBQWMsS0FBMkI7UUFDcEUsS0FBSyxDQUFDLEtBQUssSUFBSSxHQUFHLENBQUMsQ0FBQztJQUN0QixDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNuQixDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxLQUFLLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzdCLENBQUM7OztZQWpDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsUUFBUSxFQUFFOztHQUVUO2FBQ0Y7OztZQVRRLFlBQVk7WUFFWixtQkFBbUIsdUJBd0JNLFFBQVE7OztzQkFidkMsS0FBSztzQkFFTCxLQUFLO3FCQUVMLEtBQUs7NEJBRUwsS0FBSzs0QkFFTCxLQUFLO3FCQUVMLEtBQUs7Ozs7SUFaTixxQ0FBNEI7O0lBRTVCLHNDQUNnQjs7SUFDaEIsc0NBQ2lCOztJQUNqQixxQ0FDZTs7SUFDZiw0Q0FDc0I7O0lBQ3RCLDRDQUNzQjs7SUFDdEIscUNBQ2UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgT3B0aW9uYWwsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRXh0ZW50LCBsYXllciwgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMYXllckNvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTGF5ZXJHcm91cENvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXJncm91cC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtbGF5ZXItaW1hZ2UnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIExheWVySW1hZ2VDb21wb25lbnQgZXh0ZW5kcyBMYXllckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuICBwdWJsaWMgc291cmNlOiBzb3VyY2UuSW1hZ2U7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgb3BhY2l0eTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgdmlzaWJsZTogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIGV4dGVudDogRXh0ZW50O1xyXG4gIEBJbnB1dCgpXHJcbiAgbWluUmVzb2x1dGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWF4UmVzb2x1dGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgekluZGV4OiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKG1hcDogTWFwQ29tcG9uZW50LCBAT3B0aW9uYWwoKSBncm91cD86IExheWVyR3JvdXBDb21wb25lbnQpIHtcclxuICAgIHN1cGVyKGdyb3VwIHx8IG1hcCk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgbGF5ZXIuSW1hZ2UodGhpcyk7XHJcbiAgICBzdXBlci5uZ09uSW5pdCgpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgc3VwZXIubmdPbkNoYW5nZXMoY2hhbmdlcyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/layers/layertile.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/layers/layertile.component.js
@@ -55,4 +55,4 @@ if (false) {
     /** @type {?} */
     LayerTileComponent.prototype.useInterimTilesOnError;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJ0aWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2xheWVycy9sYXllcnRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsUUFBUSxFQUE0QixNQUFNLGVBQWUsQ0FBQztBQUN4RyxPQUFPLEVBQUUsS0FBSyxFQUFVLE1BQU0sWUFBWSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFRN0QsTUFBTSx5QkFBMEIsU0FBUSxjQUFjOzs7OztJQVFwRCxZQUFZLEdBQWlCLEVBQWMsS0FBMkI7UUFDcEUsS0FBSyxDQUFDLEtBQUssSUFBSSxHQUFHLENBQUMsQ0FBQztJQUN0QixDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLDhEQUE4RDtRQUM5RCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDbkIsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM3QixDQUFDOzs7WUExQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFUUSxZQUFZO1lBRVosbUJBQW1CLHVCQWdCTSxRQUFROzs7c0JBTHZDLEtBQUs7cUNBRUwsS0FBSzs7OztJQUpOLG9DQUEyQjs7SUFFM0IscUNBQ2dCOztJQUNoQixvREFDZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCwgT3B0aW9uYWwsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgbGF5ZXIsIHNvdXJjZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMYXllckNvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IExheWVyR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2xheWVyZ3JvdXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWxheWVyLXRpbGUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgTGF5ZXJUaWxlQ29tcG9uZW50IGV4dGVuZHMgTGF5ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzIHtcbiAgcHVibGljIHNvdXJjZTogc291cmNlLlRpbGU7XG5cbiAgQElucHV0KClcbiAgcHJlbG9hZDogbnVtYmVyO1xuICBASW5wdXQoKVxuICB1c2VJbnRlcmltVGlsZXNPbkVycm9yOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKG1hcDogTWFwQ29tcG9uZW50LCBAT3B0aW9uYWwoKSBncm91cD86IExheWVyR3JvdXBDb21wb25lbnQpIHtcbiAgICBzdXBlcihncm91cCB8fCBtYXApO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIG9sLmxheWVyLlRpbGUgaW5zdGFuY2Ugd2l0aDonLCB0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGxheWVyLlRpbGUodGhpcyk7XG4gICAgc3VwZXIubmdPbkluaXQoKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBzdXBlci5uZ09uQ2hhbmdlcyhjaGFuZ2VzKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJ0aWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2xheWVycy9sYXllcnRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsUUFBUSxFQUE0QixNQUFNLGVBQWUsQ0FBQztBQUN4RyxPQUFPLEVBQUUsS0FBSyxFQUFVLE1BQU0sWUFBWSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFRN0QsTUFBTSx5QkFBMEIsU0FBUSxjQUFjOzs7OztJQVFwRCxZQUFZLEdBQWlCLEVBQWMsS0FBMkI7UUFDcEUsS0FBSyxDQUFDLEtBQUssSUFBSSxHQUFHLENBQUMsQ0FBQztJQUN0QixDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLDhEQUE4RDtRQUM5RCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDbkIsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM3QixDQUFDOzs7WUExQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFUUSxZQUFZO1lBRVosbUJBQW1CLHVCQWdCTSxRQUFROzs7c0JBTHZDLEtBQUs7cUNBRUwsS0FBSzs7OztJQUpOLG9DQUEyQjs7SUFFM0IscUNBQ2dCOztJQUNoQixvREFDZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCwgT3B0aW9uYWwsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBsYXllciwgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMYXllckNvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTGF5ZXJHcm91cENvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXJncm91cC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtbGF5ZXItdGlsZScsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTGF5ZXJUaWxlQ29tcG9uZW50IGV4dGVuZHMgTGF5ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzIHtcclxuICBwdWJsaWMgc291cmNlOiBzb3VyY2UuVGlsZTtcclxuXHJcbiAgQElucHV0KClcclxuICBwcmVsb2FkOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICB1c2VJbnRlcmltVGlsZXNPbkVycm9yOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3RvcihtYXA6IE1hcENvbXBvbmVudCwgQE9wdGlvbmFsKCkgZ3JvdXA/OiBMYXllckdyb3VwQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihncm91cCB8fCBtYXApO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgb2wubGF5ZXIuVGlsZSBpbnN0YW5jZSB3aXRoOicsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBsYXllci5UaWxlKHRoaXMpO1xyXG4gICAgc3VwZXIubmdPbkluaXQoKTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIHN1cGVyLm5nT25DaGFuZ2VzKGNoYW5nZXMpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/layers/layervector.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/layers/layervector.component.js
@@ -44,12 +44,21 @@ LayerVectorComponent.ctorParameters = () => [
     { type: LayerGroupComponent, decorators: [{ type: Optional }] }
 ];
 LayerVectorComponent.propDecorators = {
-    renderBuffer: [{ type: Input }]
+    renderBuffer: [{ type: Input }],
+    style: [{ type: Input }],
+    updateWhileAnimating: [{ type: Input }],
+    updateWhileInteracting: [{ type: Input }]
 };
 if (false) {
     /** @type {?} */
     LayerVectorComponent.prototype.source;
     /** @type {?} */
     LayerVectorComponent.prototype.renderBuffer;
+    /** @type {?} */
+    LayerVectorComponent.prototype.style;
+    /** @type {?} */
+    LayerVectorComponent.prototype.updateWhileAnimating;
+    /** @type {?} */
+    LayerVectorComponent.prototype.updateWhileInteracting;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJ2ZWN0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvbGF5ZXJzL2xheWVydmVjdG9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLFFBQVEsRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFDeEcsT0FBTyxFQUFFLEtBQUssRUFBVSxNQUFNLFlBQVksQ0FBQztBQUMzQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBUTdELE1BQU0sMkJBQTRCLFNBQVEsY0FBYzs7Ozs7SUFNdEQsWUFBWSxHQUFpQixFQUFjLEtBQTJCO1FBQ3BFLEtBQUssQ0FBQyxLQUFLLElBQUksR0FBRyxDQUFDLENBQUM7SUFDdEIsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixnRUFBZ0U7UUFDaEUsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ25CLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7O1lBeEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0JBQWtCO2dCQUM1QixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBVFEsWUFBWTtZQUVaLG1CQUFtQix1QkFjTSxRQUFROzs7MkJBSHZDLEtBQUs7Ozs7SUFGTixzQ0FBNkI7O0lBRTdCLDRDQUNxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0LCBPcHRpb25hbCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBsYXllciwgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcbmltcG9ydCB7IExheWVyQ29tcG9uZW50IH0gZnJvbSAnLi9sYXllci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTGF5ZXJHcm91cENvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXJncm91cC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtbGF5ZXItdmVjdG9yJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIExheWVyVmVjdG9yQ29tcG9uZW50IGV4dGVuZHMgTGF5ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzIHtcbiAgcHVibGljIHNvdXJjZTogc291cmNlLlZlY3RvcjtcblxuICBASW5wdXQoKVxuICByZW5kZXJCdWZmZXI6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihtYXA6IE1hcENvbXBvbmVudCwgQE9wdGlvbmFsKCkgZ3JvdXA/OiBMYXllckdyb3VwQ29tcG9uZW50KSB7XG4gICAgc3VwZXIoZ3JvdXAgfHwgbWFwKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5sYXllci5WZWN0b3IgaW5zdGFuY2Ugd2l0aDonLCB0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGxheWVyLlZlY3Rvcih0aGlzKTtcbiAgICBzdXBlci5uZ09uSW5pdCgpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIHN1cGVyLm5nT25DaGFuZ2VzKGNoYW5nZXMpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJ2ZWN0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvbGF5ZXJzL2xheWVydmVjdG9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLFFBQVEsRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFDeEcsT0FBTyxFQUFFLEtBQUssRUFBZ0MsTUFBTSxZQUFZLENBQUM7QUFDakUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQVE3RCxNQUFNLDJCQUE0QixTQUFRLGNBQWM7Ozs7O0lBZXRELFlBQVksR0FBaUIsRUFBYyxLQUEyQjtRQUNwRSxLQUFLLENBQUMsS0FBSyxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sZ0VBQWdFO1FBQ2hFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNuQixDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxLQUFLLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzdCLENBQUM7OztZQWpDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsUUFBUSxFQUFFOztHQUVUO2FBQ0Y7OztZQVRRLFlBQVk7WUFFWixtQkFBbUIsdUJBdUJNLFFBQVE7OzsyQkFadkMsS0FBSztvQkFHTCxLQUFLO21DQUdMLEtBQUs7cUNBR0wsS0FBSzs7OztJQVhOLHNDQUE2Qjs7SUFFN0IsNENBQ3FCOztJQUVyQixxQ0FDbUQ7O0lBRW5ELG9EQUM4Qjs7SUFFOUIsc0RBQ2dDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgSW5wdXQsIE9wdGlvbmFsLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgbGF5ZXIsIHNvdXJjZSwgc3R5bGUsIFN0eWxlRnVuY3Rpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExheWVyQ29tcG9uZW50IH0gZnJvbSAnLi9sYXllci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMYXllckdyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi9sYXllcmdyb3VwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1sYXllci12ZWN0b3InLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIExheWVyVmVjdG9yQ29tcG9uZW50IGV4dGVuZHMgTGF5ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzIHtcclxuICBwdWJsaWMgc291cmNlOiBzb3VyY2UuVmVjdG9yO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHJlbmRlckJ1ZmZlcjogbnVtYmVyO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHN0eWxlOiBzdHlsZS5TdHlsZSB8IHN0eWxlLlN0eWxlW10gfCBTdHlsZUZ1bmN0aW9uO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHVwZGF0ZVdoaWxlQW5pbWF0aW5nOiBib29sZWFuO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHVwZGF0ZVdoaWxlSW50ZXJhY3Rpbmc6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKG1hcDogTWFwQ29tcG9uZW50LCBAT3B0aW9uYWwoKSBncm91cD86IExheWVyR3JvdXBDb21wb25lbnQpIHtcclxuICAgIHN1cGVyKGdyb3VwIHx8IG1hcCk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5sYXllci5WZWN0b3IgaW5zdGFuY2Ugd2l0aDonLCB0aGlzKTtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgbGF5ZXIuVmVjdG9yKHRoaXMpO1xyXG4gICAgc3VwZXIubmdPbkluaXQoKTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIHN1cGVyLm5nT25DaGFuZ2VzKGNoYW5nZXMpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/layers/layervectortile.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/layers/layervectortile.component.js
@@ -68,4 +68,4 @@ if (false) {
     /** @type {?} */
     LayerVectorTileComponent.prototype.visible;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJ2ZWN0b3J0aWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2xheWVycy9sYXllcnZlY3RvcnRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxRQUFRLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQzdGLE9BQU8sRUFBRSxLQUFLLEVBQXdCLE1BQU0sWUFBWSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFRN0QsTUFBTSwrQkFBZ0MsU0FBUSxjQUFjOzs7OztJQWlCMUQsWUFBWSxHQUFpQixFQUFjLEtBQTJCO1FBQ3BFLEtBQUssQ0FBQyxLQUFLLElBQUksR0FBRyxDQUFDLENBQUM7SUFDdEIsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixvRUFBb0U7UUFDcEUsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDM0MsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ25CLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7O1lBbkNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyxRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBVFEsWUFBWTtZQUVaLG1CQUFtQix1QkF5Qk0sUUFBUTs7OzJCQWhCdkMsS0FBSzt5QkFFTCxLQUFLOzBCQUdMLEtBQUs7b0JBRUwsS0FBSzttQ0FFTCxLQUFLO3FDQUVMLEtBQUs7c0JBRUwsS0FBSzs7OztJQWJOLGdEQUNxQjs7SUFDckIsOENBQ2dEOztJQUVoRCwrQ0FDb0U7O0lBQ3BFLHlDQUNtRDs7SUFDbkQsd0RBQzhCOztJQUM5QiwwREFDZ0M7O0lBQ2hDLDJDQUNpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3B0aW9uYWwsIFNpbXBsZUNoYW5nZXMsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgbGF5ZXIsIHN0eWxlLCBTdHlsZUZ1bmN0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcbmltcG9ydCB7IExheWVyQ29tcG9uZW50IH0gZnJvbSAnLi9sYXllci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTGF5ZXJHcm91cENvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXJncm91cC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtbGF5ZXItdmVjdG9ydGlsZScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBMYXllclZlY3RvclRpbGVDb21wb25lbnQgZXh0ZW5kcyBMYXllckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgQElucHV0KClcbiAgcmVuZGVyQnVmZmVyOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHJlbmRlck1vZGU6IGxheWVyLlZlY3RvclRpbGVSZW5kZXJUeXBlIHwgc3RyaW5nO1xuICAvKiBub3QgbWFya2VkIGFzIG9wdGlvbmFsIGluIHRoZSB0eXBpbmdzICovXG4gIEBJbnB1dCgpXG4gIHJlbmRlck9yZGVyOiAoZmVhdHVyZTE6IG9sLkZlYXR1cmUsIGZlYXR1cmUyOiBvbC5GZWF0dXJlKSA9PiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHN0eWxlOiBzdHlsZS5TdHlsZSB8IHN0eWxlLlN0eWxlW10gfCBTdHlsZUZ1bmN0aW9uO1xuICBASW5wdXQoKVxuICB1cGRhdGVXaGlsZUFuaW1hdGluZzogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgdXBkYXRlV2hpbGVJbnRlcmFjdGluZzogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgdmlzaWJsZTogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihtYXA6IE1hcENvbXBvbmVudCwgQE9wdGlvbmFsKCkgZ3JvdXA/OiBMYXllckdyb3VwQ29tcG9uZW50KSB7XG4gICAgc3VwZXIoZ3JvdXAgfHwgbWFwKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5sYXllci5WZWN0b3JUaWxlIGluc3RhbmNlIHdpdGg6JywgdGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBsYXllci5WZWN0b3JUaWxlKHRoaXMpO1xuICAgIHN1cGVyLm5nT25Jbml0KCk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgc3VwZXIubmdPbkNoYW5nZXMoY2hhbmdlcyk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJ2ZWN0b3J0aWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2xheWVycy9sYXllcnZlY3RvcnRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxRQUFRLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQzdGLE9BQU8sRUFBRSxLQUFLLEVBQXdCLE1BQU0sWUFBWSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFRN0QsTUFBTSwrQkFBZ0MsU0FBUSxjQUFjOzs7OztJQWlCMUQsWUFBWSxHQUFpQixFQUFjLEtBQTJCO1FBQ3BFLEtBQUssQ0FBQyxLQUFLLElBQUksR0FBRyxDQUFDLENBQUM7SUFDdEIsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixvRUFBb0U7UUFDcEUsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDM0MsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ25CLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7O1lBbkNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyxRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBVFEsWUFBWTtZQUVaLG1CQUFtQix1QkF5Qk0sUUFBUTs7OzJCQWhCdkMsS0FBSzt5QkFFTCxLQUFLOzBCQUdMLEtBQUs7b0JBRUwsS0FBSzttQ0FFTCxLQUFLO3FDQUVMLEtBQUs7c0JBRUwsS0FBSzs7OztJQWJOLGdEQUNxQjs7SUFDckIsOENBQ2dEOztJQUVoRCwrQ0FDb0U7O0lBQ3BFLHlDQUNtRDs7SUFDbkQsd0RBQzhCOztJQUM5QiwwREFDZ0M7O0lBQ2hDLDJDQUNpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3B0aW9uYWwsIFNpbXBsZUNoYW5nZXMsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBsYXllciwgc3R5bGUsIFN0eWxlRnVuY3Rpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExheWVyQ29tcG9uZW50IH0gZnJvbSAnLi9sYXllci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMYXllckdyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi9sYXllcmdyb3VwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1sYXllci12ZWN0b3J0aWxlJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMYXllclZlY3RvclRpbGVDb21wb25lbnQgZXh0ZW5kcyBMYXllckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuICBASW5wdXQoKVxyXG4gIHJlbmRlckJ1ZmZlcjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgcmVuZGVyTW9kZTogbGF5ZXIuVmVjdG9yVGlsZVJlbmRlclR5cGUgfCBzdHJpbmc7XHJcbiAgLyogbm90IG1hcmtlZCBhcyBvcHRpb25hbCBpbiB0aGUgdHlwaW5ncyAqL1xyXG4gIEBJbnB1dCgpXHJcbiAgcmVuZGVyT3JkZXI6IChmZWF0dXJlMTogb2wuRmVhdHVyZSwgZmVhdHVyZTI6IG9sLkZlYXR1cmUpID0+IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHN0eWxlOiBzdHlsZS5TdHlsZSB8IHN0eWxlLlN0eWxlW10gfCBTdHlsZUZ1bmN0aW9uO1xyXG4gIEBJbnB1dCgpXHJcbiAgdXBkYXRlV2hpbGVBbmltYXRpbmc6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICB1cGRhdGVXaGlsZUludGVyYWN0aW5nOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgdmlzaWJsZTogYm9vbGVhbjtcclxuXHJcbiAgY29uc3RydWN0b3IobWFwOiBNYXBDb21wb25lbnQsIEBPcHRpb25hbCgpIGdyb3VwPzogTGF5ZXJHcm91cENvbXBvbmVudCkge1xyXG4gICAgc3VwZXIoZ3JvdXAgfHwgbWFwKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIG9sLmxheWVyLlZlY3RvclRpbGUgaW5zdGFuY2Ugd2l0aDonLCB0aGlzKTtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgbGF5ZXIuVmVjdG9yVGlsZSh0aGlzKTtcclxuICAgIHN1cGVyLm5nT25Jbml0KCk7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICBzdXBlci5uZ09uQ2hhbmdlcyhjaGFuZ2VzKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/map.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/map.component.js
@@ -153,4 +153,4 @@ if (false) {
      */
     MapComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/overlay.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/overlay.component.js
@@ -84,4 +84,4 @@ if (false) {
      */
     OverlayComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9vdmVybGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNsRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLE9BQU8sRUFBc0IsTUFBTSxZQUFZLENBQUM7QUFDekQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFNdkQsTUFBTTs7OztJQXdCSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBdkJyQyxrQkFBYSxHQUFHLFNBQVMsQ0FBQztJQXVCYyxDQUFDOzs7O0lBRXpDLFFBQVE7UUFDTixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUNqQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQztZQUNyRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2xDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUMsQ0FBQztJQUNILENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNqRCxDQUFDO0lBQ0gsQ0FBQzs7O1lBMUNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsYUFBYTtnQkFDdkIsUUFBUSxFQUFFLDJCQUEyQjthQUN0Qzs7O1lBUFEsWUFBWTs7O3NCQVlsQixZQUFZLFNBQUMsZ0JBQWdCO2lCQUc3QixLQUFLO3FCQUVMLEtBQUs7MEJBRUwsS0FBSzt3QkFFTCxLQUFLOzBCQUVMLEtBQUs7c0JBRUwsS0FBSzsrQkFFTCxLQUFLOzRCQUVMLEtBQUs7Ozs7SUFwQk4seUNBQTBCOztJQUMxQixvQ0FBa0I7O0lBQ2xCLG1DQUFpQjs7SUFDakIsbUNBQzBCOztJQUUxQiw4QkFDb0I7O0lBQ3BCLGtDQUNpQjs7SUFDakIsdUNBQ3lDOztJQUN6QyxxQ0FDbUI7O0lBQ25CLHVDQUNxQjs7SUFDckIsbUNBQ2lCOztJQUNqQiw0Q0FDMkM7O0lBQzNDLHlDQUNzQjs7Ozs7SUFFViwrQkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuL21hcC5jb21wb25lbnQnO1xuaW1wb3J0IHsgT3ZlcmxheSwgT3ZlcmxheVBvc2l0aW9uaW5nIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBDb250ZW50Q29tcG9uZW50IH0gZnJvbSAnLi9jb250ZW50LmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1vdmVybGF5JyxcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+Jyxcbn0pXG5leHBvcnQgY2xhc3MgT3ZlcmxheUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgY29tcG9uZW50VHlwZSA9ICdvdmVybGF5JztcbiAgaW5zdGFuY2U6IE92ZXJsYXk7XG4gIGVsZW1lbnQ6IEVsZW1lbnQ7XG4gIEBDb250ZW50Q2hpbGQoQ29udGVudENvbXBvbmVudClcbiAgY29udGVudDogQ29udGVudENvbXBvbmVudDtcblxuICBASW5wdXQoKVxuICBpZDogbnVtYmVyIHwgc3RyaW5nO1xuICBASW5wdXQoKVxuICBvZmZzZXQ6IG51bWJlcltdO1xuICBASW5wdXQoKVxuICBwb3NpdGlvbmluZzogT3ZlcmxheVBvc2l0aW9uaW5nIHwgc3RyaW5nO1xuICBASW5wdXQoKVxuICBzdG9wRXZlbnQ6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIGluc2VydEZpcnN0OiBib29sZWFuO1xuICBASW5wdXQoKVxuICBhdXRvUGFuOiBib29sZWFuO1xuICBASW5wdXQoKVxuICBhdXRvUGFuQW5pbWF0aW9uOiBvbHguYW5pbWF0aW9uLlBhbk9wdGlvbnM7XG4gIEBJbnB1dCgpXG4gIGF1dG9QYW5NYXJnaW46IG51bWJlcjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLmNvbnRlbnQpIHtcbiAgICAgIHRoaXMuZWxlbWVudCA9IHRoaXMuY29udGVudC5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICB0aGlzLmluc3RhbmNlID0gbmV3IE92ZXJsYXkodGhpcyk7XG4gICAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRPdmVybGF5KHRoaXMuaW5zdGFuY2UpO1xuICAgIH1cbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIGlmICh0aGlzLmluc3RhbmNlKSB7XG4gICAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVPdmVybGF5KHRoaXMuaW5zdGFuY2UpO1xuICAgIH1cbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9vdmVybGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNsRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLE9BQU8sRUFBc0IsTUFBTSxZQUFZLENBQUM7QUFDekQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFNdkQsTUFBTTs7OztJQXdCSixZQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBdkJyQyxrQkFBYSxHQUFHLFNBQVMsQ0FBQztJQXVCYyxDQUFDOzs7O0lBRXpDLFFBQVE7UUFDTixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUNqQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQztZQUNyRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2xDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUMsQ0FBQztJQUNILENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNqRCxDQUFDO0lBQ0gsQ0FBQzs7O1lBMUNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsYUFBYTtnQkFDdkIsUUFBUSxFQUFFLDJCQUEyQjthQUN0Qzs7O1lBUFEsWUFBWTs7O3NCQVlsQixZQUFZLFNBQUMsZ0JBQWdCO2lCQUc3QixLQUFLO3FCQUVMLEtBQUs7MEJBRUwsS0FBSzt3QkFFTCxLQUFLOzBCQUVMLEtBQUs7c0JBRUwsS0FBSzsrQkFFTCxLQUFLOzRCQUVMLEtBQUs7Ozs7SUFwQk4seUNBQTBCOztJQUMxQixvQ0FBa0I7O0lBQ2xCLG1DQUFpQjs7SUFDakIsbUNBQzBCOztJQUUxQiw4QkFDb0I7O0lBQ3BCLGtDQUNpQjs7SUFDakIsdUNBQ3lDOztJQUN6QyxxQ0FDbUI7O0lBQ25CLHVDQUNxQjs7SUFDckIsbUNBQ2lCOztJQUNqQiw0Q0FDMkM7O0lBQzNDLHlDQUNzQjs7Ozs7SUFFViwrQkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4vbWFwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE92ZXJsYXksIE92ZXJsYXlQb3NpdGlvbmluZyB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBDb250ZW50Q29tcG9uZW50IH0gZnJvbSAnLi9jb250ZW50LmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1vdmVybGF5JyxcclxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgT3ZlcmxheUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBjb21wb25lbnRUeXBlID0gJ292ZXJsYXknO1xyXG4gIGluc3RhbmNlOiBPdmVybGF5O1xyXG4gIGVsZW1lbnQ6IEVsZW1lbnQ7XHJcbiAgQENvbnRlbnRDaGlsZChDb250ZW50Q29tcG9uZW50KVxyXG4gIGNvbnRlbnQ6IENvbnRlbnRDb21wb25lbnQ7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgaWQ6IG51bWJlciB8IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIG9mZnNldDogbnVtYmVyW107XHJcbiAgQElucHV0KClcclxuICBwb3NpdGlvbmluZzogT3ZlcmxheVBvc2l0aW9uaW5nIHwgc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgc3RvcEV2ZW50OiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgaW5zZXJ0Rmlyc3Q6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICBhdXRvUGFuOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgYXV0b1BhbkFuaW1hdGlvbjogb2x4LmFuaW1hdGlvbi5QYW5PcHRpb25zO1xyXG4gIEBJbnB1dCgpXHJcbiAgYXV0b1Bhbk1hcmdpbjogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIGlmICh0aGlzLmNvbnRlbnQpIHtcclxuICAgICAgdGhpcy5lbGVtZW50ID0gdGhpcy5jb250ZW50LmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcclxuICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBPdmVybGF5KHRoaXMpO1xyXG4gICAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRPdmVybGF5KHRoaXMuaW5zdGFuY2UpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICBpZiAodGhpcy5pbnN0YW5jZSkge1xyXG4gICAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVPdmVybGF5KHRoaXMuaW5zdGFuY2UpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/bingmaps.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/bingmaps.component.js
@@ -67,4 +67,4 @@ if (false) {
     /** @type {?} */
     SourceBingmapsComponent.prototype.wrapX;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluZ21hcHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy9iaW5nbWFwcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBVSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFFLE1BQU0sRUFBd0IsTUFBTSxZQUFZLENBQUM7QUFDMUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBU25FLE1BQU0sOEJBQStCLFNBQVEsZUFBZTs7OztJQXNCMUQsWUFBb0IsS0FBeUI7UUFDM0MsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBWGYsZUFBVSxHQUE4RSxRQUFRLENBQUM7SUFZakcsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7OztZQXBDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtnQkFDL0IsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLEVBQUUsQ0FBQzthQUNsRzs7O1lBUlEsa0JBQWtCLHVCQStCWixJQUFJOzs7d0JBbkJoQixLQUFLO29CQUVMLEtBQUs7c0JBRUwsS0FBSztrQkFFTCxLQUFLO3lCQUVMLEtBQUs7c0JBRUwsS0FBSzt5Q0FFTCxLQUFLOytCQUVMLEtBQUs7b0JBRUwsS0FBSzs7OztJQWxCTiwyQ0FBMEI7O0lBRTFCLDRDQUNrQjs7SUFDbEIsd0NBQ2U7O0lBQ2YsMENBQ2dCOztJQUNoQixzQ0FDWTs7SUFDWiw2Q0FDaUc7O0lBQ2pHLDBDQUNnQjs7SUFDaEIsNkRBQ21DOztJQUNuQyxtREFDdUM7O0lBQ3ZDLHdDQUNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25Jbml0LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzb3VyY2UsIFRpbGVMb2FkRnVuY3Rpb25UeXBlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgTGF5ZXJUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydGlsZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLWJpbmdtYXBzJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLXNvdXJjZS1iaW5nbWFwc1wiPjwvZGl2PlxuICBgLFxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlQmluZ21hcHNDb21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VCaW5nbWFwc0NvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGluc3RhbmNlOiBzb3VyY2UuQmluZ01hcHM7XG5cbiAgQElucHV0KClcbiAgY2FjaGVTaXplOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIGhpZHBpOiBib29sZWFuO1xuICBASW5wdXQoKVxuICBjdWx0dXJlOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGtleTogc3RyaW5nO1xuICBASW5wdXQoKVxuICBpbWFnZXJ5U2V0OiAnUm9hZCcgfCAnQWVyaWFsJyB8ICdBZXJpYWxXaXRoTGFiZWxzJyB8ICdjb2xsaW5zQmFydCcgfCAnb3JkbmFuY2VTdXJ2ZXknID0gJ0FlcmlhbCc7XG4gIEBJbnB1dCgpXG4gIG1heFpvb206IG51bWJlcjtcbiAgQElucHV0KClcbiAgcmVwcm9qZWN0aW9uRXJyb3JUaHJlc2hvbGQ6IG51bWJlcjtcbiAgQElucHV0KClcbiAgdGlsZUxvYWRGdW5jdGlvbjogVGlsZUxvYWRGdW5jdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIHdyYXBYOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVyVGlsZUNvbXBvbmVudCkge1xuICAgIHN1cGVyKGxheWVyKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLkJpbmdNYXBzKHRoaXMpO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluZ21hcHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy9iaW5nbWFwcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBVSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFFLE1BQU0sRUFBd0IsTUFBTSxZQUFZLENBQUM7QUFDMUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBU25FLE1BQU0sOEJBQStCLFNBQVEsZUFBZTs7OztJQXNCMUQsWUFBb0IsS0FBeUI7UUFDM0MsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBWGYsZUFBVSxHQUE4RSxRQUFRLENBQUM7SUFZakcsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7OztZQXBDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtnQkFDL0IsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLEVBQUUsQ0FBQzthQUNsRzs7O1lBUlEsa0JBQWtCLHVCQStCWixJQUFJOzs7d0JBbkJoQixLQUFLO29CQUVMLEtBQUs7c0JBRUwsS0FBSztrQkFFTCxLQUFLO3lCQUVMLEtBQUs7c0JBRUwsS0FBSzt5Q0FFTCxLQUFLOytCQUVMLEtBQUs7b0JBRUwsS0FBSzs7OztJQWxCTiwyQ0FBMEI7O0lBRTFCLDRDQUNrQjs7SUFDbEIsd0NBQ2U7O0lBQ2YsMENBQ2dCOztJQUNoQixzQ0FDWTs7SUFDWiw2Q0FDaUc7O0lBQ2pHLDBDQUNnQjs7SUFDaEIsNkRBQ21DOztJQUNuQyxtREFDdUM7O0lBQ3ZDLHdDQUNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25Jbml0LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHNvdXJjZSwgVGlsZUxvYWRGdW5jdGlvblR5cGUgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTGF5ZXJUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydGlsZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLWJpbmdtYXBzJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPGRpdiBjbGFzcz1cImFvbC1zb3VyY2UtYmluZ21hcHNcIj48L2Rpdj5cclxuICBgLFxyXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VCaW5nbWFwc0NvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VCaW5nbWFwc0NvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgaW5zdGFuY2U6IHNvdXJjZS5CaW5nTWFwcztcclxuXHJcbiAgQElucHV0KClcclxuICBjYWNoZVNpemU6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIGhpZHBpOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgY3VsdHVyZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAga2V5OiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBpbWFnZXJ5U2V0OiAnUm9hZCcgfCAnQWVyaWFsJyB8ICdBZXJpYWxXaXRoTGFiZWxzJyB8ICdjb2xsaW5zQmFydCcgfCAnb3JkbmFuY2VTdXJ2ZXknID0gJ0FlcmlhbCc7XHJcbiAgQElucHV0KClcclxuICBtYXhab29tOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICByZXByb2plY3Rpb25FcnJvclRocmVzaG9sZDogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlsZUxvYWRGdW5jdGlvbjogVGlsZUxvYWRGdW5jdGlvblR5cGU7XHJcbiAgQElucHV0KClcclxuICB3cmFwWDogYm9vbGVhbjtcclxuXHJcbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJUaWxlQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLkJpbmdNYXBzKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/cluster.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/cluster.component.js
@@ -52,4 +52,4 @@ if (false) {
     /** @type {?} */
     SourceClusterComponent.prototype.source;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2x1c3Rlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL2NsdXN0ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBb0IsTUFBTSxlQUFlLENBQUM7QUFDbkcsT0FBTyxFQUFFLE1BQU0sRUFBaUIsTUFBTSxZQUFZLENBQUM7QUFDbkQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDdkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBUzNELE1BQU0sNkJBQThCLFNBQVEsZUFBZTs7OztJQVl6RCxZQUFvQixLQUEyQjtRQUM3QyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDZixDQUFDOzs7O0lBRUQsa0JBQWtCO1FBQ2hCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFFBQVEsQ0FBQztRQUVsRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7OztZQTVCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHNCQUFzQixDQUFDLEVBQUUsQ0FBQzthQUNqRzs7O1lBVlEsb0JBQW9CLHVCQXVCZCxJQUFJOzs7dUJBVGhCLEtBQUs7K0JBRUwsS0FBSztvQ0FHTCxZQUFZLFNBQUMscUJBQXFCOzs7O0lBUG5DLDBDQUF5Qjs7SUFFekIsMENBQ2lCOztJQUNqQixrREFDc0Q7O0lBRXRELHVEQUM2Qzs7SUFDN0Msd0NBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgZm9yd2FyZFJlZiwgQ29udGVudENoaWxkLCBBZnRlckNvbnRlbnRJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzb3VyY2UsIEZlYXR1cmUsIGdlb20gfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IExheWVyVmVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydmVjdG9yLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU291cmNlVmVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi92ZWN0b3IuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS1jbHVzdGVyJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VDbHVzdGVyQ29tcG9uZW50KSB9XSxcbn0pXG5leHBvcnQgY2xhc3MgU291cmNlQ2x1c3RlckNvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xuICBpbnN0YW5jZTogc291cmNlLkNsdXN0ZXI7XG5cbiAgQElucHV0KClcbiAgZGlzdGFuY2U6IG51bWJlcjtcbiAgQElucHV0KClcbiAgZ2VvbWV0cnlGdW5jdGlvbj86ICgoZmVhdHVyZTogRmVhdHVyZSkgPT4gZ2VvbS5Qb2ludCk7XG5cbiAgQENvbnRlbnRDaGlsZChTb3VyY2VWZWN0b3JDb21wb25lbnQpXG4gIHNvdXJjZVZlY3RvckNvbXBvbmVudDogU291cmNlVmVjdG9yQ29tcG9uZW50O1xuICBzb3VyY2U6IHNvdXJjZS5WZWN0b3I7XG5cbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJWZWN0b3JDb21wb25lbnQpIHtcbiAgICBzdXBlcihsYXllcik7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgdGhpcy5zb3VyY2UgPSB0aGlzLnNvdXJjZVZlY3RvckNvbXBvbmVudC5pbnN0YW5jZTtcblxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLkNsdXN0ZXIodGhpcyk7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2x1c3Rlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL2NsdXN0ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBb0IsTUFBTSxlQUFlLENBQUM7QUFDbkcsT0FBTyxFQUFFLE1BQU0sRUFBaUIsTUFBTSxZQUFZLENBQUM7QUFDbkQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDdkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBUzNELE1BQU0sNkJBQThCLFNBQVEsZUFBZTs7OztJQVl6RCxZQUFvQixLQUEyQjtRQUM3QyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDZixDQUFDOzs7O0lBRUQsa0JBQWtCO1FBQ2hCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFFBQVEsQ0FBQztRQUVsRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7OztZQTVCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHNCQUFzQixDQUFDLEVBQUUsQ0FBQzthQUNqRzs7O1lBVlEsb0JBQW9CLHVCQXVCZCxJQUFJOzs7dUJBVGhCLEtBQUs7K0JBRUwsS0FBSztvQ0FHTCxZQUFZLFNBQUMscUJBQXFCOzs7O0lBUG5DLDBDQUF5Qjs7SUFFekIsMENBQ2lCOztJQUNqQixrREFDc0Q7O0lBRXRELHVEQUM2Qzs7SUFDN0Msd0NBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgZm9yd2FyZFJlZiwgQ29udGVudENoaWxkLCBBZnRlckNvbnRlbnRJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHNvdXJjZSwgRmVhdHVyZSwgZ2VvbSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBMYXllclZlY3RvckNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcnZlY3Rvci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTb3VyY2VWZWN0b3JDb21wb25lbnQgfSBmcm9tICcuL3ZlY3Rvci5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLWNsdXN0ZXInLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlQ2x1c3RlckNvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VDbHVzdGVyQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XHJcbiAgaW5zdGFuY2U6IHNvdXJjZS5DbHVzdGVyO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGRpc3RhbmNlOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBnZW9tZXRyeUZ1bmN0aW9uPzogKChmZWF0dXJlOiBGZWF0dXJlKSA9PiBnZW9tLlBvaW50KTtcclxuXHJcbiAgQENvbnRlbnRDaGlsZChTb3VyY2VWZWN0b3JDb21wb25lbnQpXHJcbiAgc291cmNlVmVjdG9yQ29tcG9uZW50OiBTb3VyY2VWZWN0b3JDb21wb25lbnQ7XHJcbiAgc291cmNlOiBzb3VyY2UuVmVjdG9yO1xyXG5cclxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllclZlY3RvckNvbXBvbmVudCkge1xyXG4gICAgc3VwZXIobGF5ZXIpO1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xyXG4gICAgdGhpcy5zb3VyY2UgPSB0aGlzLnNvdXJjZVZlY3RvckNvbXBvbmVudC5pbnN0YW5jZTtcclxuXHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5DbHVzdGVyKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/geojson.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/geojson.component.js
@@ -54,4 +54,4 @@ if (false) {
     /** @type {?} */
     SourceGeoJSONComponent.prototype.url;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VvanNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL2dlb2pzb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQVUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxNQUFNLEVBQWtCLE1BQU0sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM1RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFTckQsTUFBTSw2QkFBOEIsU0FBUSxlQUFlOzs7O0lBWXpELFlBQW9CLEtBQTJCO1FBQzdDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNmLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7WUEzQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLFFBQVEsRUFBRTs7R0FFVDtnQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxFQUFFLENBQUM7YUFDakc7OztZQVRRLG9CQUFvQix1QkFzQmQsSUFBSTs7O29DQVRoQixLQUFLO2dDQUVMLEtBQUs7MkJBRUwsS0FBSztrQkFFTCxLQUFLOzs7O0lBUk4sMENBQXdCOztJQUN4Qix3Q0FBdUI7O0lBQ3ZCLHVEQUNzQzs7SUFDdEMsbURBQ2tDOztJQUNsQyw4Q0FDcUI7O0lBQ3JCLHFDQUNZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25Jbml0LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzb3VyY2UsIFByb2plY3Rpb25MaWtlLCBmb3JtYXQgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IExheWVyVmVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydmVjdG9yLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLWdlb2pzb24nLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZUdlb0pTT05Db21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VHZW9KU09OQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgaW5zdGFuY2U6IHNvdXJjZS5WZWN0b3I7XG4gIGZvcm1hdDogZm9ybWF0LkZlYXR1cmU7XG4gIEBJbnB1dCgpXG4gIGRlZmF1bHREYXRhUHJvamVjdGlvbjogUHJvamVjdGlvbkxpa2U7XG4gIEBJbnB1dCgpXG4gIGZlYXR1cmVQcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZTtcbiAgQElucHV0KClcbiAgZ2VvbWV0cnlOYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHVybDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVyVmVjdG9yQ29tcG9uZW50KSB7XG4gICAgc3VwZXIobGF5ZXIpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5mb3JtYXQgPSBuZXcgZm9ybWF0Lkdlb0pTT04odGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuVmVjdG9yKHRoaXMpO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VvanNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL2dlb2pzb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQVUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxNQUFNLEVBQWtCLE1BQU0sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM1RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFTckQsTUFBTSw2QkFBOEIsU0FBUSxlQUFlOzs7O0lBWXpELFlBQW9CLEtBQTJCO1FBQzdDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNmLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7WUEzQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLFFBQVEsRUFBRTs7R0FFVDtnQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxFQUFFLENBQUM7YUFDakc7OztZQVRRLG9CQUFvQix1QkFzQmQsSUFBSTs7O29DQVRoQixLQUFLO2dDQUVMLEtBQUs7MkJBRUwsS0FBSztrQkFFTCxLQUFLOzs7O0lBUk4sMENBQXdCOztJQUN4Qix3Q0FBdUI7O0lBQ3ZCLHVEQUNzQzs7SUFDdEMsbURBQ2tDOztJQUNsQyw4Q0FDcUI7O0lBQ3JCLHFDQUNZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25Jbml0LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHNvdXJjZSwgUHJvamVjdGlvbkxpa2UsIGZvcm1hdCB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBMYXllclZlY3RvckNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcnZlY3Rvci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLWdlb2pzb24nLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlR2VvSlNPTkNvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VHZW9KU09OQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBpbnN0YW5jZTogc291cmNlLlZlY3RvcjtcclxuICBmb3JtYXQ6IGZvcm1hdC5GZWF0dXJlO1xyXG4gIEBJbnB1dCgpXHJcbiAgZGVmYXVsdERhdGFQcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZTtcclxuICBASW5wdXQoKVxyXG4gIGZlYXR1cmVQcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZTtcclxuICBASW5wdXQoKVxyXG4gIGdlb21ldHJ5TmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgdXJsOiBzdHJpbmc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVyVmVjdG9yQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuZm9ybWF0ID0gbmV3IGZvcm1hdC5HZW9KU09OKHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuVmVjdG9yKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/imagearcgisrest.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/imagearcgisrest.component.js
@@ -67,4 +67,4 @@ if (false) {
     /** @type {?} */
     SourceImageArcGISRestComponent.prototype.logo;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2VhcmNnaXNyZXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvaW1hZ2VhcmNnaXNyZXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUUsTUFBTSxFQUFzRCxNQUFNLFlBQVksQ0FBQztBQUN4RixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFTckQsTUFBTSxxQ0FBc0MsU0FBUSxlQUFlOzs7O0lBYWpFLFlBQW9CLEtBQTBCO1FBQzVDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUxOLFVBQUssR0FBRyxDQUFDLENBQUM7SUFNbkIsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqRCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7OztZQTNCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtnQkFDdEMsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLDhCQUE4QixDQUFDLEVBQUUsQ0FBQzthQUN6Rzs7O1lBVFEsbUJBQW1CLHVCQXVCYixJQUFJOzs7eUJBVmhCLEtBQUs7a0JBQ0wsS0FBSzsyQkFDTCxLQUFLOzBCQUNMLEtBQUs7Z0NBQ0wsS0FBSztxQkFDTCxLQUFLO29CQUNMLEtBQUs7MEJBQ0wsS0FBSzttQkFDTCxLQUFLOzs7O0lBVk4sa0RBQWlDOztJQUVqQyxvREFBNkM7O0lBQzdDLDZDQUFxQjs7SUFDckIsc0RBQXFDOztJQUNyQyxxREFBOEI7O0lBQzlCLDJEQUFtRDs7SUFDbkQsZ0RBQXVDOztJQUN2QywrQ0FBbUI7O0lBQ25CLHFEQUFnQzs7SUFDaEMsOENBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBmb3J3YXJkUmVmLCBIb3N0LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzb3VyY2UsIFByb2plY3Rpb25MaWtlLCBBdHRyaWJ1dGlvbiwgSW1hZ2VMb2FkRnVuY3Rpb25UeXBlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBMYXllckltYWdlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVyaW1hZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtaW1hZ2VhcmNnaXNyZXN0JyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VJbWFnZUFyY0dJU1Jlc3RDb21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VJbWFnZUFyY0dJU1Jlc3RDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBpbnN0YW5jZTogc291cmNlLkltYWdlQXJjR0lTUmVzdDtcblxuICBASW5wdXQoKSBwcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZSB8IHN0cmluZztcbiAgQElucHV0KCkgdXJsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGF0dHJpYnV0aW9uczogQXR0cmlidXRpb25bXTtcbiAgQElucHV0KCkgY3Jvc3NPcmlnaW4/OiBzdHJpbmc7XG4gIEBJbnB1dCgpIGltYWdlTG9hZEZ1bmN0aW9uPzogSW1hZ2VMb2FkRnVuY3Rpb25UeXBlO1xuICBASW5wdXQoKSBwYXJhbXM/OiB7IFtrOiBzdHJpbmddOiBhbnkgfTtcbiAgQElucHV0KCkgcmF0aW8gPSAxO1xuICBASW5wdXQoKSByZXNvbHV0aW9ucz86IG51bWJlcltdO1xuICBASW5wdXQoKSBsb2dvPzogc3RyaW5nIHwgb2x4LkxvZ29PcHRpb25zO1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVySW1hZ2VDb21wb25lbnQpIHtcbiAgICBzdXBlcihsYXllcik7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5JbWFnZUFyY0dJU1Jlc3QodGhpcyk7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2VhcmNnaXNyZXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvaW1hZ2VhcmNnaXNyZXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUUsTUFBTSxFQUFzRCxNQUFNLFlBQVksQ0FBQztBQUN4RixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFTckQsTUFBTSxxQ0FBc0MsU0FBUSxlQUFlOzs7O0lBYWpFLFlBQW9CLEtBQTBCO1FBQzVDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUxOLFVBQUssR0FBRyxDQUFDLENBQUM7SUFNbkIsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqRCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7OztZQTNCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtnQkFDdEMsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLDhCQUE4QixDQUFDLEVBQUUsQ0FBQzthQUN6Rzs7O1lBVFEsbUJBQW1CLHVCQXVCYixJQUFJOzs7eUJBVmhCLEtBQUs7a0JBQ0wsS0FBSzsyQkFDTCxLQUFLOzBCQUNMLEtBQUs7Z0NBQ0wsS0FBSztxQkFDTCxLQUFLO29CQUNMLEtBQUs7MEJBQ0wsS0FBSzttQkFDTCxLQUFLOzs7O0lBVk4sa0RBQWlDOztJQUVqQyxvREFBNkM7O0lBQzdDLDZDQUFxQjs7SUFDckIsc0RBQXFDOztJQUNyQyxxREFBOEI7O0lBQzlCLDJEQUFtRDs7SUFDbkQsZ0RBQXVDOztJQUN2QywrQ0FBbUI7O0lBQ25CLHFEQUFnQzs7SUFDaEMsOENBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBmb3J3YXJkUmVmLCBIb3N0LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHNvdXJjZSwgUHJvamVjdGlvbkxpa2UsIEF0dHJpYnV0aW9uLCBJbWFnZUxvYWRGdW5jdGlvblR5cGUgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTGF5ZXJJbWFnZUNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcmltYWdlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtaW1hZ2VhcmNnaXNyZXN0JyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZUltYWdlQXJjR0lTUmVzdENvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VJbWFnZUFyY0dJU1Jlc3RDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIGluc3RhbmNlOiBzb3VyY2UuSW1hZ2VBcmNHSVNSZXN0O1xyXG5cclxuICBASW5wdXQoKSBwcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZSB8IHN0cmluZztcclxuICBASW5wdXQoKSB1cmw6IHN0cmluZztcclxuICBASW5wdXQoKSBhdHRyaWJ1dGlvbnM6IEF0dHJpYnV0aW9uW107XHJcbiAgQElucHV0KCkgY3Jvc3NPcmlnaW4/OiBzdHJpbmc7XHJcbiAgQElucHV0KCkgaW1hZ2VMb2FkRnVuY3Rpb24/OiBJbWFnZUxvYWRGdW5jdGlvblR5cGU7XHJcbiAgQElucHV0KCkgcGFyYW1zPzogeyBbazogc3RyaW5nXTogYW55IH07XHJcbiAgQElucHV0KCkgcmF0aW8gPSAxO1xyXG4gIEBJbnB1dCgpIHJlc29sdXRpb25zPzogbnVtYmVyW107XHJcbiAgQElucHV0KCkgbG9nbz86IHN0cmluZyB8IG9seC5Mb2dvT3B0aW9ucztcclxuXHJcbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJJbWFnZUNvbXBvbmVudCkge1xyXG4gICAgc3VwZXIobGF5ZXIpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5JbWFnZUFyY0dJU1Jlc3QodGhpcyk7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/imagestatic.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/imagestatic.component.js
@@ -63,4 +63,4 @@ if (false) {
     /** @type {?} */
     SourceImageStaticComponent.prototype.imageSize;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2VzdGF0aWMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy9pbWFnZXN0YXRpYy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBVSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFrQixNQUFNLEVBQXdELE1BQU0sWUFBWSxDQUFDO0FBQzFHLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQVNyRSxNQUFNLGlDQUFrQyxTQUFRLGVBQWU7Ozs7SUFvQjdELFlBQW9CLEtBQTBCO1FBQzVDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNmLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7WUFsQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLFFBQVEsRUFBRTs7R0FFVDtnQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQyxFQUFFLENBQUM7YUFDckc7OztZQVJRLG1CQUFtQix1QkE2QmIsSUFBSTs7O3lCQWpCaEIsS0FBSzswQkFFTCxLQUFLO2tCQUVMLEtBQUs7MkJBRUwsS0FBSzswQkFFTCxLQUFLO2dDQUVMLEtBQUs7bUJBRUwsS0FBSzt3QkFFTCxLQUFLOzs7O0lBaEJOLDhDQUE2Qjs7SUFFN0IsZ0RBQ29DOztJQUNwQyxpREFDb0I7O0lBQ3BCLHlDQUNZOztJQUNaLGtEQUM4Qjs7SUFDOUIsaURBQ3FCOztJQUNyQix1REFDMEM7O0lBQzFDLDBDQUNnQzs7SUFDaEMsK0NBQ2lCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25Jbml0LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQcm9qZWN0aW9uTGlrZSwgc291cmNlLCBFeHRlbnQsIEF0dHJpYnV0aW9uTGlrZSwgSW1hZ2VMb2FkRnVuY3Rpb25UeXBlLCBTaXplIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgTGF5ZXJJbWFnZUNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcmltYWdlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtaW1hZ2VzdGF0aWMnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZUltYWdlU3RhdGljQ29tcG9uZW50KSB9XSxcbn0pXG5leHBvcnQgY2xhc3MgU291cmNlSW1hZ2VTdGF0aWNDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBpbnN0YW5jZTogc291cmNlLkltYWdlU3RhdGljO1xuXG4gIEBJbnB1dCgpXG4gIHByb2plY3Rpb246IFByb2plY3Rpb25MaWtlIHwgc3RyaW5nO1xuICBASW5wdXQoKVxuICBpbWFnZUV4dGVudDogRXh0ZW50O1xuICBASW5wdXQoKVxuICB1cmw6IHN0cmluZztcbiAgQElucHV0KClcbiAgYXR0cmlidXRpb25zOiBBdHRyaWJ1dGlvbkxpa2U7XG4gIEBJbnB1dCgpXG4gIGNyb3NzT3JpZ2luPzogc3RyaW5nO1xuICBASW5wdXQoKVxuICBpbWFnZUxvYWRGdW5jdGlvbj86IEltYWdlTG9hZEZ1bmN0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgbG9nbz86IHN0cmluZyB8IG9seC5Mb2dvT3B0aW9ucztcbiAgQElucHV0KClcbiAgaW1hZ2VTaXplPzogU2l6ZTtcblxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllckltYWdlQ29tcG9uZW50KSB7XG4gICAgc3VwZXIobGF5ZXIpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuSW1hZ2VTdGF0aWModGhpcyk7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2VzdGF0aWMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy9pbWFnZXN0YXRpYy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBVSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFrQixNQUFNLEVBQXdELE1BQU0sWUFBWSxDQUFDO0FBQzFHLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQVNyRSxNQUFNLGlDQUFrQyxTQUFRLGVBQWU7Ozs7SUFvQjdELFlBQW9CLEtBQTBCO1FBQzVDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNmLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7WUFsQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLFFBQVEsRUFBRTs7R0FFVDtnQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQyxFQUFFLENBQUM7YUFDckc7OztZQVJRLG1CQUFtQix1QkE2QmIsSUFBSTs7O3lCQWpCaEIsS0FBSzswQkFFTCxLQUFLO2tCQUVMLEtBQUs7MkJBRUwsS0FBSzswQkFFTCxLQUFLO2dDQUVMLEtBQUs7bUJBRUwsS0FBSzt3QkFFTCxLQUFLOzs7O0lBaEJOLDhDQUE2Qjs7SUFFN0IsZ0RBQ29DOztJQUNwQyxpREFDb0I7O0lBQ3BCLHlDQUNZOztJQUNaLGtEQUM4Qjs7SUFDOUIsaURBQ3FCOztJQUNyQix1REFDMEM7O0lBQzFDLDBDQUNnQzs7SUFDaEMsK0NBQ2lCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25Jbml0LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFByb2plY3Rpb25MaWtlLCBzb3VyY2UsIEV4dGVudCwgQXR0cmlidXRpb25MaWtlLCBJbWFnZUxvYWRGdW5jdGlvblR5cGUsIFNpemUgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTGF5ZXJJbWFnZUNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcmltYWdlLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtaW1hZ2VzdGF0aWMnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlSW1hZ2VTdGF0aWNDb21wb25lbnQpIH1dLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU291cmNlSW1hZ2VTdGF0aWNDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIGluc3RhbmNlOiBzb3VyY2UuSW1hZ2VTdGF0aWM7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgcHJvamVjdGlvbjogUHJvamVjdGlvbkxpa2UgfCBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBpbWFnZUV4dGVudDogRXh0ZW50O1xyXG4gIEBJbnB1dCgpXHJcbiAgdXJsOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBhdHRyaWJ1dGlvbnM6IEF0dHJpYnV0aW9uTGlrZTtcclxuICBASW5wdXQoKVxyXG4gIGNyb3NzT3JpZ2luPzogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgaW1hZ2VMb2FkRnVuY3Rpb24/OiBJbWFnZUxvYWRGdW5jdGlvblR5cGU7XHJcbiAgQElucHV0KClcclxuICBsb2dvPzogc3RyaW5nIHwgb2x4LkxvZ29PcHRpb25zO1xyXG4gIEBJbnB1dCgpXHJcbiAgaW1hZ2VTaXplPzogU2l6ZTtcclxuXHJcbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJJbWFnZUNvbXBvbmVudCkge1xyXG4gICAgc3VwZXIobGF5ZXIpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5JbWFnZVN0YXRpYyh0aGlzKTtcclxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/imagewms.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/imagewms.component.js
@@ -81,4 +81,4 @@ if (false) {
     /** @type {?} */
     SourceImageWMSComponent.prototype.url;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2V3bXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy9pbWFnZXdtcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBcUIsVUFBVSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNyRyxPQUFPLEVBQTBELE1BQU0sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM1RixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFTckQsTUFBTSw4QkFBK0IsU0FBUSxlQUFlOzs7O0lBMEIxRCxZQUFvQixLQUEwQjtRQUM1QyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDZixDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxPQUFPLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0RCxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDMUMsQ0FBQztJQUNILENBQUM7OztZQTlDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtnQkFDL0IsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLEVBQUUsQ0FBQzthQUNsRzs7O1lBVFEsbUJBQW1CLHVCQW9DYixJQUFJOzs7MkJBdkJoQixLQUFLOzBCQUVMLEtBQUs7b0JBRUwsS0FBSzt5QkFFTCxLQUFLO2dDQUVMLEtBQUs7bUJBRUwsS0FBSztxQkFFTCxLQUFLO3lCQUVMLEtBQUs7b0JBRUwsS0FBSzswQkFFTCxLQUFLO2tCQUVMLEtBQUs7Ozs7SUF0Qk4sMkNBQTBCOztJQUUxQiwrQ0FDOEI7O0lBQzlCLDhDQUNvQjs7SUFDcEIsd0NBQ2U7O0lBQ2YsNkNBQ21COztJQUNuQixvREFDMEM7O0lBQzFDLHVDQUMrQjs7SUFDL0IseUNBQ2U7O0lBQ2YsNkNBQ29DOztJQUNwQyx3Q0FDYzs7SUFDZCw4Q0FDMkI7O0lBQzNCLHNDQUNZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIGZvcndhcmRSZWYsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEF0dHJpYnV0aW9uTGlrZSwgSW1hZ2VMb2FkRnVuY3Rpb25UeXBlLCBQcm9qZWN0aW9uTGlrZSwgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBMYXllckltYWdlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVyaW1hZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtaW1hZ2V3bXMnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZUltYWdlV01TQ29tcG9uZW50KSB9XSxcbn0pXG5leHBvcnQgY2xhc3MgU291cmNlSW1hZ2VXTVNDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uSW5pdCB7XG4gIGluc3RhbmNlOiBzb3VyY2UuSW1hZ2VXTVM7XG5cbiAgQElucHV0KClcbiAgYXR0cmlidXRpb25zOiBBdHRyaWJ1dGlvbkxpa2U7XG4gIEBJbnB1dCgpXG4gIGNyb3NzT3JpZ2luOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGhpZHBpOiBib29sZWFuO1xuICBASW5wdXQoKVxuICBzZXJ2ZXJUeXBlOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGltYWdlTG9hZEZ1bmN0aW9uPzogSW1hZ2VMb2FkRnVuY3Rpb25UeXBlO1xuICBASW5wdXQoKVxuICBsb2dvOiBzdHJpbmcgfCBvbHguTG9nb09wdGlvbnM7XG4gIEBJbnB1dCgpXG4gIHBhcmFtczogT2JqZWN0O1xuICBASW5wdXQoKVxuICBwcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZSB8IHN0cmluZztcbiAgQElucHV0KClcbiAgcmF0aW86IG51bWJlcjtcbiAgQElucHV0KClcbiAgcmVzb2x1dGlvbnM6IEFycmF5PG51bWJlcj47XG4gIEBJbnB1dCgpXG4gIHVybDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVySW1hZ2VDb21wb25lbnQpIHtcbiAgICBzdXBlcihsYXllcik7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5JbWFnZVdNUyh0aGlzKTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGlmICh0aGlzLmluc3RhbmNlICYmIGNoYW5nZXMuaGFzT3duUHJvcGVydHkoJ3BhcmFtcycpKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnVwZGF0ZVBhcmFtcyh0aGlzLnBhcmFtcyk7XG4gICAgfVxuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2V3bXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy9pbWFnZXdtcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBcUIsVUFBVSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNyRyxPQUFPLEVBQTBELE1BQU0sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM1RixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFTckQsTUFBTSw4QkFBK0IsU0FBUSxlQUFlOzs7O0lBMEIxRCxZQUFvQixLQUEwQjtRQUM1QyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDZixDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxPQUFPLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0RCxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDMUMsQ0FBQztJQUNILENBQUM7OztZQTlDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtnQkFDL0IsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLEVBQUUsQ0FBQzthQUNsRzs7O1lBVFEsbUJBQW1CLHVCQW9DYixJQUFJOzs7MkJBdkJoQixLQUFLOzBCQUVMLEtBQUs7b0JBRUwsS0FBSzt5QkFFTCxLQUFLO2dDQUVMLEtBQUs7bUJBRUwsS0FBSztxQkFFTCxLQUFLO3lCQUVMLEtBQUs7b0JBRUwsS0FBSzswQkFFTCxLQUFLO2tCQUVMLEtBQUs7Ozs7SUF0Qk4sMkNBQTBCOztJQUUxQiwrQ0FDOEI7O0lBQzlCLDhDQUNvQjs7SUFDcEIsd0NBQ2U7O0lBQ2YsNkNBQ21COztJQUNuQixvREFDMEM7O0lBQzFDLHVDQUMrQjs7SUFDL0IseUNBQ2U7O0lBQ2YsNkNBQ29DOztJQUNwQyx3Q0FDYzs7SUFDZCw4Q0FDMkI7O0lBQzNCLHNDQUNZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIGZvcndhcmRSZWYsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQXR0cmlidXRpb25MaWtlLCBJbWFnZUxvYWRGdW5jdGlvblR5cGUsIFByb2plY3Rpb25MaWtlLCBzb3VyY2UgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTGF5ZXJJbWFnZUNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcmltYWdlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtaW1hZ2V3bXMnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlSW1hZ2VXTVNDb21wb25lbnQpIH1dLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU291cmNlSW1hZ2VXTVNDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uSW5pdCB7XHJcbiAgaW5zdGFuY2U6IHNvdXJjZS5JbWFnZVdNUztcclxuXHJcbiAgQElucHV0KClcclxuICBhdHRyaWJ1dGlvbnM6IEF0dHJpYnV0aW9uTGlrZTtcclxuICBASW5wdXQoKVxyXG4gIGNyb3NzT3JpZ2luOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBoaWRwaTogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIHNlcnZlclR5cGU6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGltYWdlTG9hZEZ1bmN0aW9uPzogSW1hZ2VMb2FkRnVuY3Rpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgbG9nbzogc3RyaW5nIHwgb2x4LkxvZ29PcHRpb25zO1xyXG4gIEBJbnB1dCgpXHJcbiAgcGFyYW1zOiBPYmplY3Q7XHJcbiAgQElucHV0KClcclxuICBwcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZSB8IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHJhdGlvOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICByZXNvbHV0aW9uczogQXJyYXk8bnVtYmVyPjtcclxuICBASW5wdXQoKVxyXG4gIHVybDogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllckltYWdlQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLkltYWdlV01TKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGlmICh0aGlzLmluc3RhbmNlICYmIGNoYW5nZXMuaGFzT3duUHJvcGVydHkoJ3BhcmFtcycpKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2UudXBkYXRlUGFyYW1zKHRoaXMucGFyYW1zKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/osm.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/osm.component.js
@@ -73,4 +73,4 @@ if (false) {
     /** @type {?} */
     SourceOsmComponent.prototype.wrapX;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3NtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvb3NtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBb0IsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9GLE9BQU8sRUFBRSxNQUFNLEVBQXlDLE1BQU0sWUFBWSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQVMzRCxNQUFNLHlCQUEwQixTQUFRLGtCQUFrQjs7Ozs7SUFzQnhELFlBR0UsS0FBeUIsRUFHekIsTUFBOEI7UUFFOUIsS0FBSyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN2QixDQUFDOzs7O0lBRUQsa0JBQWtCO1FBQ2hCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBQ3JCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUM7UUFDNUMsQ0FBQztRQUNELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7OztZQTlDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtnQkFDMUIsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLGtCQUFrQixDQUFDLEVBQUUsQ0FBQzthQUM3Rjs7O1lBWFEsa0JBQWtCLHVCQW1DdEIsSUFBSSxZQUNKLFFBQVE7WUFqQ0oscUJBQXFCLHVCQW1DekIsSUFBSSxZQUNKLFFBQVE7OzsyQkF4QlYsS0FBSzt3QkFFTCxLQUFLOzBCQUVMLEtBQUs7c0JBRUwsS0FBSztxQkFFTCxLQUFLO3lDQUVMLEtBQUs7K0JBRUwsS0FBSztrQkFFTCxLQUFLO29CQUVMLEtBQUs7Ozs7SUFsQk4sc0NBQXFCOztJQUVyQiwwQ0FDOEI7O0lBQzlCLHVDQUNrQjs7SUFDbEIseUNBQ29COztJQUNwQixxQ0FDZ0I7O0lBQ2hCLG9DQUNnQjs7SUFDaEIsd0RBQ21DOztJQUNuQyw4Q0FDdUM7O0lBQ3ZDLGlDQUNZOztJQUNaLG1DQUNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBmb3J3YXJkUmVmLCBJbnB1dCwgQWZ0ZXJDb250ZW50SW5pdCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNvdXJjZSwgQXR0cmlidXRpb25MaWtlLCBUaWxlTG9hZEZ1bmN0aW9uVHlwZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTGF5ZXJUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydGlsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcbmltcG9ydCB7IFNvdXJjZVhZWkNvbXBvbmVudCB9IGZyb20gJy4veHl6LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb3VyY2VSYXN0ZXJDb21wb25lbnQgfSBmcm9tICcuL3Jhc3Rlci5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLW9zbScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImFvbC1zb3VyY2Utb3NtXCI+PC9kaXY+XG4gIGAsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VPc21Db21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VPc21Db21wb25lbnQgZXh0ZW5kcyBTb3VyY2VYWVpDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgaW5zdGFuY2U6IHNvdXJjZS5PU007XG5cbiAgQElucHV0KClcbiAgYXR0cmlidXRpb25zOiBBdHRyaWJ1dGlvbkxpa2U7XG4gIEBJbnB1dCgpXG4gIGNhY2hlU2l6ZTogbnVtYmVyO1xuICBASW5wdXQoKVxuICBjcm9zc09yaWdpbjogc3RyaW5nO1xuICBASW5wdXQoKVxuICBtYXhab29tOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIG9wYXF1ZTogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgcmVwcm9qZWN0aW9uRXJyb3JUaHJlc2hvbGQ6IG51bWJlcjtcbiAgQElucHV0KClcbiAgdGlsZUxvYWRGdW5jdGlvbjogVGlsZUxvYWRGdW5jdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIHVybDogc3RyaW5nO1xuICBASW5wdXQoKVxuICB3cmFwWDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASG9zdCgpXG4gICAgQE9wdGlvbmFsKClcbiAgICBsYXllcjogTGF5ZXJUaWxlQ29tcG9uZW50LFxuICAgIEBIb3N0KClcbiAgICBAT3B0aW9uYWwoKVxuICAgIHJhc3Rlcj86IFNvdXJjZVJhc3RlckNvbXBvbmVudFxuICApIHtcbiAgICBzdXBlcihsYXllciwgcmFzdGVyKTtcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICBpZiAodGhpcy50aWxlR3JpZFhZWikge1xuICAgICAgdGhpcy50aWxlR3JpZCA9IHRoaXMudGlsZUdyaWRYWVouaW5zdGFuY2U7XG4gICAgfVxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLk9TTSh0aGlzKTtcbiAgICB0aGlzLl9yZWdpc3Rlcih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3NtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvb3NtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBb0IsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9GLE9BQU8sRUFBRSxNQUFNLEVBQXlDLE1BQU0sWUFBWSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQVMzRCxNQUFNLHlCQUEwQixTQUFRLGtCQUFrQjs7Ozs7SUFzQnhELFlBR0UsS0FBeUIsRUFHekIsTUFBOEI7UUFFOUIsS0FBSyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN2QixDQUFDOzs7O0lBRUQsa0JBQWtCO1FBQ2hCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBQ3JCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUM7UUFDNUMsQ0FBQztRQUNELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7OztZQTlDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtnQkFDMUIsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLGtCQUFrQixDQUFDLEVBQUUsQ0FBQzthQUM3Rjs7O1lBWFEsa0JBQWtCLHVCQW1DdEIsSUFBSSxZQUNKLFFBQVE7WUFqQ0oscUJBQXFCLHVCQW1DekIsSUFBSSxZQUNKLFFBQVE7OzsyQkF4QlYsS0FBSzt3QkFFTCxLQUFLOzBCQUVMLEtBQUs7c0JBRUwsS0FBSztxQkFFTCxLQUFLO3lDQUVMLEtBQUs7K0JBRUwsS0FBSztrQkFFTCxLQUFLO29CQUVMLEtBQUs7Ozs7SUFsQk4sc0NBQXFCOztJQUVyQiwwQ0FDOEI7O0lBQzlCLHVDQUNrQjs7SUFDbEIseUNBQ29COztJQUNwQixxQ0FDZ0I7O0lBQ2hCLG9DQUNnQjs7SUFDaEIsd0RBQ21DOztJQUNuQyw4Q0FDdUM7O0lBQ3ZDLGlDQUNZOztJQUNaLG1DQUNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBmb3J3YXJkUmVmLCBJbnB1dCwgQWZ0ZXJDb250ZW50SW5pdCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc291cmNlLCBBdHRyaWJ1dGlvbkxpa2UsIFRpbGVMb2FkRnVuY3Rpb25UeXBlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IExheWVyVGlsZUNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcnRpbGUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU291cmNlWFlaQ29tcG9uZW50IH0gZnJvbSAnLi94eXouY29tcG9uZW50JztcclxuaW1wb3J0IHsgU291cmNlUmFzdGVyQ29tcG9uZW50IH0gZnJvbSAnLi9yYXN0ZXIuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS1vc20nLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLXNvdXJjZS1vc21cIj48L2Rpdj5cclxuICBgLFxyXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VPc21Db21wb25lbnQpIH1dLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU291cmNlT3NtQ29tcG9uZW50IGV4dGVuZHMgU291cmNlWFlaQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XHJcbiAgaW5zdGFuY2U6IHNvdXJjZS5PU007XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgYXR0cmlidXRpb25zOiBBdHRyaWJ1dGlvbkxpa2U7XHJcbiAgQElucHV0KClcclxuICBjYWNoZVNpemU6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIGNyb3NzT3JpZ2luOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBtYXhab29tOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBvcGFxdWU6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICByZXByb2plY3Rpb25FcnJvclRocmVzaG9sZDogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlsZUxvYWRGdW5jdGlvbjogVGlsZUxvYWRGdW5jdGlvblR5cGU7XHJcbiAgQElucHV0KClcclxuICB1cmw6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHdyYXBYOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIEBIb3N0KClcclxuICAgIEBPcHRpb25hbCgpXHJcbiAgICBsYXllcjogTGF5ZXJUaWxlQ29tcG9uZW50LFxyXG4gICAgQEhvc3QoKVxyXG4gICAgQE9wdGlvbmFsKClcclxuICAgIHJhc3Rlcj86IFNvdXJjZVJhc3RlckNvbXBvbmVudFxyXG4gICkge1xyXG4gICAgc3VwZXIobGF5ZXIsIHJhc3Rlcik7XHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XHJcbiAgICBpZiAodGhpcy50aWxlR3JpZFhZWikge1xyXG4gICAgICB0aGlzLnRpbGVHcmlkID0gdGhpcy50aWxlR3JpZFhZWi5pbnN0YW5jZTtcclxuICAgIH1cclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLk9TTSh0aGlzKTtcclxuICAgIHRoaXMuX3JlZ2lzdGVyKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/raster.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/raster.component.js
@@ -69,4 +69,4 @@ if (false) {
     /** @type {?} */
     SourceRasterComponent.prototype.sources;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFzdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvcmFzdGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFvQixTQUFTLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRyxPQUFPLEVBQXdDLE1BQU0sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUUxRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFjckQsTUFBTSw0QkFBNkIsU0FBUSxlQUFlOzs7O0lBbUJ4RCxZQUFvQixLQUEwQjtRQUM1QyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFQZixxQkFBZ0IsR0FBcUMsSUFBSSxZQUFZLEVBQXNCLENBQUM7UUFFNUYsb0JBQWUsR0FBcUMsSUFBSSxZQUFZLEVBQXNCLENBQUM7UUFFM0YsWUFBTyxHQUFvQixFQUFFLENBQUM7SUFJOUIsQ0FBQzs7OztJQUVELGtCQUFrQjtRQUNoQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV4QyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLEtBQXlCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUN2RyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLEtBQXlCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFFckcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7O1lBMUNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixRQUFRLEVBQUU7O0dBRVQ7Z0JBQ0QsU0FBUyxFQUFFO29CQUNUO3dCQUNFLE9BQU8sRUFBRSxlQUFlO3dCQUN4QixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHFCQUFxQixDQUFDO3FCQUNyRDtpQkFDRjthQUNGOzs7WUFkUSxtQkFBbUIsdUJBa0NiLElBQUk7Ozt3QkFoQmhCLEtBQUs7c0JBRUwsS0FBSztrQkFFTCxLQUFLOzRCQUVMLEtBQUs7K0JBR0wsTUFBTTs4QkFFTixNQUFNOzs7O0lBYlAseUNBQXdCOztJQUV4QiwwQ0FDNEI7O0lBQzVCLHdDQUNpQjs7SUFDakIsb0NBQ2E7O0lBQ2IsOENBQ29DOztJQUVwQyxpREFDNEY7O0lBQzVGLGdEQUMyRjs7SUFFM0Ysd0NBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJDb250ZW50SW5pdCwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIGZvcndhcmRSZWYsIEhvc3QsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJhc3Rlck9wZXJhdGlvbiwgUmFzdGVyT3BlcmF0aW9uVHlwZSwgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5cbmltcG9ydCB7IExheWVySW1hZ2VDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJpbWFnZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS1yYXN0ZXInLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlUmFzdGVyQ29tcG9uZW50KSxcbiAgICB9LFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VSYXN0ZXJDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgaW5zdGFuY2U6IHNvdXJjZS5SYXN0ZXI7XG5cbiAgQElucHV0KClcbiAgb3BlcmF0aW9uPzogUmFzdGVyT3BlcmF0aW9uO1xuICBASW5wdXQoKVxuICB0aHJlYWRzPzogbnVtYmVyO1xuICBASW5wdXQoKVxuICBsaWI/OiBPYmplY3Q7XG4gIEBJbnB1dCgpXG4gIG9wZXJhdGlvblR5cGU/OiBSYXN0ZXJPcGVyYXRpb25UeXBlO1xuXG4gIEBPdXRwdXQoKVxuICBiZWZvcmVPcGVyYXRpb25zOiBFdmVudEVtaXR0ZXI8c291cmNlLlJhc3RlckV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8c291cmNlLlJhc3RlckV2ZW50PigpO1xuICBAT3V0cHV0KClcbiAgYWZ0ZXJPcGVyYXRpb25zOiBFdmVudEVtaXR0ZXI8c291cmNlLlJhc3RlckV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8c291cmNlLlJhc3RlckV2ZW50PigpO1xuXG4gIHNvdXJjZXM6IHNvdXJjZS5Tb3VyY2VbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVySW1hZ2VDb21wb25lbnQpIHtcbiAgICBzdXBlcihsYXllcik7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuUmFzdGVyKHRoaXMpO1xuXG4gICAgdGhpcy5pbnN0YW5jZS5vbignYmVmb3Jlb3BlcmF0aW9ucycsIChldmVudDogc291cmNlLlJhc3RlckV2ZW50KSA9PiB0aGlzLmJlZm9yZU9wZXJhdGlvbnMuZW1pdChldmVudCkpO1xuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2FmdGVyb3BlcmF0aW9ucycsIChldmVudDogc291cmNlLlJhc3RlckV2ZW50KSA9PiB0aGlzLmFmdGVyT3BlcmF0aW9ucy5lbWl0KGV2ZW50KSk7XG5cbiAgICB0aGlzLl9yZWdpc3Rlcih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFzdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvcmFzdGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFvQixTQUFTLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRyxPQUFPLEVBQXdDLE1BQU0sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUUxRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFjckQsTUFBTSw0QkFBNkIsU0FBUSxlQUFlOzs7O0lBbUJ4RCxZQUFvQixLQUEwQjtRQUM1QyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFQZixxQkFBZ0IsR0FBcUMsSUFBSSxZQUFZLEVBQXNCLENBQUM7UUFFNUYsb0JBQWUsR0FBcUMsSUFBSSxZQUFZLEVBQXNCLENBQUM7UUFFM0YsWUFBTyxHQUFvQixFQUFFLENBQUM7SUFJOUIsQ0FBQzs7OztJQUVELGtCQUFrQjtRQUNoQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV4QyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLEtBQXlCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUN2RyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLEtBQXlCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFFckcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7O1lBMUNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixRQUFRLEVBQUU7O0dBRVQ7Z0JBQ0QsU0FBUyxFQUFFO29CQUNUO3dCQUNFLE9BQU8sRUFBRSxlQUFlO3dCQUN4QixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHFCQUFxQixDQUFDO3FCQUNyRDtpQkFDRjthQUNGOzs7WUFkUSxtQkFBbUIsdUJBa0NiLElBQUk7Ozt3QkFoQmhCLEtBQUs7c0JBRUwsS0FBSztrQkFFTCxLQUFLOzRCQUVMLEtBQUs7K0JBR0wsTUFBTTs4QkFFTixNQUFNOzs7O0lBYlAseUNBQXdCOztJQUV4QiwwQ0FDNEI7O0lBQzVCLHdDQUNpQjs7SUFDakIsb0NBQ2E7O0lBQ2IsOENBQ29DOztJQUVwQyxpREFDNEY7O0lBQzVGLGdEQUMyRjs7SUFFM0Ysd0NBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJDb250ZW50SW5pdCwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIGZvcndhcmRSZWYsIEhvc3QsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUmFzdGVyT3BlcmF0aW9uLCBSYXN0ZXJPcGVyYXRpb25UeXBlLCBzb3VyY2UgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuXHJcbmltcG9ydCB7IExheWVySW1hZ2VDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJpbWFnZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLXJhc3RlcicsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAge1xyXG4gICAgICBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsXHJcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZVJhc3RlckNvbXBvbmVudCksXHJcbiAgICB9LFxyXG4gIF0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VSYXN0ZXJDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcclxuICBpbnN0YW5jZTogc291cmNlLlJhc3RlcjtcclxuXHJcbiAgQElucHV0KClcclxuICBvcGVyYXRpb24/OiBSYXN0ZXJPcGVyYXRpb247XHJcbiAgQElucHV0KClcclxuICB0aHJlYWRzPzogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGliPzogT2JqZWN0O1xyXG4gIEBJbnB1dCgpXHJcbiAgb3BlcmF0aW9uVHlwZT86IFJhc3Rlck9wZXJhdGlvblR5cGU7XHJcblxyXG4gIEBPdXRwdXQoKVxyXG4gIGJlZm9yZU9wZXJhdGlvbnM6IEV2ZW50RW1pdHRlcjxzb3VyY2UuUmFzdGVyRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcjxzb3VyY2UuUmFzdGVyRXZlbnQ+KCk7XHJcbiAgQE91dHB1dCgpXHJcbiAgYWZ0ZXJPcGVyYXRpb25zOiBFdmVudEVtaXR0ZXI8c291cmNlLlJhc3RlckV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8c291cmNlLlJhc3RlckV2ZW50PigpO1xyXG5cclxuICBzb3VyY2VzOiBzb3VyY2UuU291cmNlW10gPSBbXTtcclxuXHJcbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJJbWFnZUNvbXBvbmVudCkge1xyXG4gICAgc3VwZXIobGF5ZXIpO1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuUmFzdGVyKHRoaXMpO1xyXG5cclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2JlZm9yZW9wZXJhdGlvbnMnLCAoZXZlbnQ6IHNvdXJjZS5SYXN0ZXJFdmVudCkgPT4gdGhpcy5iZWZvcmVPcGVyYXRpb25zLmVtaXQoZXZlbnQpKTtcclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2FmdGVyb3BlcmF0aW9ucycsIChldmVudDogc291cmNlLlJhc3RlckV2ZW50KSA9PiB0aGlzLmFmdGVyT3BlcmF0aW9ucy5lbWl0KGV2ZW50KSk7XHJcblxyXG4gICAgdGhpcy5fcmVnaXN0ZXIodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/source.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/source.component.js
@@ -59,4 +59,4 @@ if (false) {
      */
     SourceComponent.prototype.raster;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291cmNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvc291cmNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLEtBQUssRUFBYSxNQUFNLGVBQWUsQ0FBQztBQU1qRCxNQUFNOzs7OztJQU9KLFlBQXNCLElBQW9CLEVBQVksTUFBOEI7UUFBOUQsU0FBSSxHQUFKLElBQUksQ0FBZ0I7UUFBWSxXQUFNLEdBQU4sTUFBTSxDQUF3QjtRQUw3RSxrQkFBYSxHQUFHLFFBQVEsQ0FBQztJQUt1RCxDQUFDOzs7O0lBRXhGLFdBQVc7UUFDVCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNwQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2hCLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUMzQixDQUFDO0lBQ0gsQ0FBQzs7Ozs7O0lBRVMsU0FBUyxDQUFDLENBQWdCO1FBQ2xDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNoQixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVCLENBQUM7SUFDSCxDQUFDOzs7MkJBdkJBLEtBQUs7Ozs7SUFITixtQ0FBK0I7O0lBQy9CLHdDQUFnQzs7SUFFaEMsdUNBQzhCOzs7OztJQUVsQiwrQkFBOEI7Ozs7O0lBQUUsaUNBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBMYXllckNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllci5jb21wb25lbnQnO1xuaW1wb3J0IEF0dHJpYnV0aW9uTGlrZSA9IG9sLkF0dHJpYnV0aW9uTGlrZTtcbmltcG9ydCB7IFNvdXJjZVJhc3RlckNvbXBvbmVudCB9IGZyb20gJy4vcmFzdGVyLmNvbXBvbmVudCc7XG5cbmV4cG9ydCBjbGFzcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICBwdWJsaWMgaW5zdGFuY2U6IHNvdXJjZS5Tb3VyY2U7XG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ3NvdXJjZSc7XG5cbiAgQElucHV0KClcbiAgYXR0cmlidXRpb25zOiBBdHRyaWJ1dGlvbkxpa2U7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGhvc3Q6IExheWVyQ29tcG9uZW50LCBwcm90ZWN0ZWQgcmFzdGVyPzogU291cmNlUmFzdGVyQ29tcG9uZW50KSB7fVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIGlmICh0aGlzLmhvc3QgJiYgdGhpcy5ob3N0Lmluc3RhbmNlKSB7XG4gICAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKG51bGwpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnJhc3Rlcikge1xuICAgICAgdGhpcy5yYXN0ZXIuc291cmNlcyA9IFtdO1xuICAgIH1cbiAgfVxuXG4gIHByb3RlY3RlZCBfcmVnaXN0ZXIoczogc291cmNlLlNvdXJjZSkge1xuICAgIGlmICh0aGlzLmhvc3QpIHtcbiAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2Uocyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucmFzdGVyKSB7XG4gICAgICB0aGlzLnJhc3Rlci5zb3VyY2VzID0gW3NdO1xuICAgIH1cbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291cmNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvc291cmNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLEtBQUssRUFBYSxNQUFNLGVBQWUsQ0FBQztBQU1qRCxNQUFNOzs7OztJQU9KLFlBQXNCLElBQW9CLEVBQVksTUFBOEI7UUFBOUQsU0FBSSxHQUFKLElBQUksQ0FBZ0I7UUFBWSxXQUFNLEdBQU4sTUFBTSxDQUF3QjtRQUw3RSxrQkFBYSxHQUFHLFFBQVEsQ0FBQztJQUt1RCxDQUFDOzs7O0lBRXhGLFdBQVc7UUFDVCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNwQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2hCLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUMzQixDQUFDO0lBQ0gsQ0FBQzs7Ozs7O0lBRVMsU0FBUyxDQUFDLENBQWdCO1FBQ2xDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNoQixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVCLENBQUM7SUFDSCxDQUFDOzs7MkJBdkJBLEtBQUs7Ozs7SUFITixtQ0FBK0I7O0lBQy9CLHdDQUFnQzs7SUFFaEMsdUNBQzhCOzs7OztJQUVsQiwrQkFBOEI7Ozs7O0lBQUUsaUNBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBzb3VyY2UgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTGF5ZXJDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXIuY29tcG9uZW50JztcclxuaW1wb3J0IEF0dHJpYnV0aW9uTGlrZSA9IG9sLkF0dHJpYnV0aW9uTGlrZTtcclxuaW1wb3J0IHsgU291cmNlUmFzdGVyQ29tcG9uZW50IH0gZnJvbSAnLi9yYXN0ZXIuY29tcG9uZW50JztcclxuXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogc291cmNlLlNvdXJjZTtcclxuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdzb3VyY2UnO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGF0dHJpYnV0aW9uczogQXR0cmlidXRpb25MaWtlO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaG9zdDogTGF5ZXJDb21wb25lbnQsIHByb3RlY3RlZCByYXN0ZXI/OiBTb3VyY2VSYXN0ZXJDb21wb25lbnQpIHt9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgaWYgKHRoaXMuaG9zdCAmJiB0aGlzLmhvc3QuaW5zdGFuY2UpIHtcclxuICAgICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZShudWxsKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy5yYXN0ZXIpIHtcclxuICAgICAgdGhpcy5yYXN0ZXIuc291cmNlcyA9IFtdO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIF9yZWdpc3RlcihzOiBzb3VyY2UuU291cmNlKSB7XHJcbiAgICBpZiAodGhpcy5ob3N0KSB7XHJcbiAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2Uocyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMucmFzdGVyKSB7XHJcbiAgICAgIHRoaXMucmFzdGVyLnNvdXJjZXMgPSBbc107XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/tilejson.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/tilejson.component.js
@@ -42,4 +42,4 @@ if (false) {
     /** @type {?} */
     SourceTileJSONComponent.prototype.url;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZWpzb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy90aWxlanNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBVSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNwQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFTckQsTUFBTSw4QkFBK0IsU0FBUSxlQUFlOzs7O0lBTTFELFlBQW9CLEtBQXlCO1FBQzNDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNmLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7WUFwQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLFFBQVEsRUFBRTs7R0FFVDtnQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxFQUFFLENBQUM7YUFDbEc7OztZQVRRLGtCQUFrQix1QkFnQlosSUFBSTs7O2tCQUhoQixLQUFLOzs7O0lBRk4sMkNBQTBCOztJQUUxQixzQ0FDWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdCwgSW5wdXQsIE9uSW5pdCwgZm9yd2FyZFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBMYXllclRpbGVDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJ0aWxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLXRpbGVqc29uJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VUaWxlSlNPTkNvbXBvbmVudCkgfV0sXG59KVxuZXhwb3J0IGNsYXNzIFNvdXJjZVRpbGVKU09OQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgaW5zdGFuY2U6IHNvdXJjZS5UaWxlSlNPTjtcblxuICBASW5wdXQoKVxuICB1cmw6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllclRpbGVDb21wb25lbnQpIHtcbiAgICBzdXBlcihsYXllcik7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5UaWxlSlNPTih0aGlzKTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZWpzb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy90aWxlanNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBVSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNwQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFTckQsTUFBTSw4QkFBK0IsU0FBUSxlQUFlOzs7O0lBTTFELFlBQW9CLEtBQXlCO1FBQzNDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNmLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7WUFwQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLFFBQVEsRUFBRTs7R0FFVDtnQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxFQUFFLENBQUM7YUFDbEc7OztZQVRRLGtCQUFrQix1QkFnQlosSUFBSTs7O2tCQUhoQixLQUFLOzs7O0lBRk4sMkNBQTBCOztJQUUxQixzQ0FDWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdCwgSW5wdXQsIE9uSW5pdCwgZm9yd2FyZFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBzb3VyY2UgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTGF5ZXJUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydGlsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLXRpbGVqc29uJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZVRpbGVKU09OQ29tcG9uZW50KSB9XSxcclxufSlcclxuZXhwb3J0IGNsYXNzIFNvdXJjZVRpbGVKU09OQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBpbnN0YW5jZTogc291cmNlLlRpbGVKU09OO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHVybDogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllclRpbGVDb21wb25lbnQpIHtcclxuICAgIHN1cGVyKGxheWVyKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuVGlsZUpTT04odGhpcyk7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/tilewms.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/tilewms.component.js
@@ -87,4 +87,4 @@ if (false) {
     /** @type {?} */
     SourceTileWMSComponent.prototype.wrapX;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZXdtcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL3RpbGV3bXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQXFCLFVBQVUsRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDckcsT0FBTyxFQUFFLE1BQU0sRUFBd0IsUUFBUSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQVNyRCxNQUFNLDZCQUE4QixTQUFRLGVBQWU7Ozs7SUE2QnpELFlBQW9CLEtBQXlCO1FBQzNDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNmLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLE9BQU8sQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RELElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMxQyxDQUFDO0lBQ0gsQ0FBQzs7O1lBakRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsb0JBQW9CO2dCQUM5QixRQUFRLEVBQUU7O0dBRVQ7Z0JBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsc0JBQXNCLENBQUMsRUFBRSxDQUFDO2FBQ2pHOzs7WUFUUSxrQkFBa0IsdUJBdUNaLElBQUk7Ozt3QkEzQmhCLEtBQUs7MEJBRUwsS0FBSztxQkFFTCxLQUFLO29CQUVMLEtBQUs7cUJBRUwsS0FBSzt5QkFFTCxLQUFLO3lDQUVMLEtBQUs7eUJBRUwsS0FBSzt1QkFFTCxLQUFLOytCQUVMLEtBQUs7a0JBRUwsS0FBSzttQkFFTCxLQUFLO29CQUVMLEtBQUs7Ozs7SUF6Qk4sMENBQXlCOztJQUN6QiwyQ0FDa0I7O0lBQ2xCLDZDQUNvQjs7SUFDcEIsd0NBQ2U7O0lBQ2YsdUNBQ2U7O0lBQ2Ysd0NBQ2U7O0lBQ2YsNENBQ21COztJQUNuQiw0REFDbUM7O0lBQ25DLDRDQUNtQjs7SUFDbkIsMENBQzRCOztJQUM1QixrREFDdUM7O0lBQ3ZDLHFDQUNZOztJQUNaLHNDQUNlOztJQUNmLHVDQUNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIGZvcndhcmRSZWYsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNvdXJjZSwgVGlsZUxvYWRGdW5jdGlvblR5cGUsIHRpbGVncmlkIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBMYXllclRpbGVDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJ0aWxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLXRpbGV3bXMnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZVRpbGVXTVNDb21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VUaWxlV01TQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkluaXQge1xuICBpbnN0YW5jZTogc291cmNlLlRpbGVXTVM7XG4gIEBJbnB1dCgpXG4gIGNhY2hlU2l6ZTogbnVtYmVyO1xuICBASW5wdXQoKVxuICBjcm9zc09yaWdpbjogc3RyaW5nO1xuICBASW5wdXQoKVxuICBndXR0ZXI6IG51bWJlcjtcbiAgQElucHV0KClcbiAgaGlkcGk6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIHBhcmFtczogT2JqZWN0O1xuICBASW5wdXQoKVxuICBwcm9qZWN0aW9uOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHJlcHJvamVjdGlvbkVycm9yVGhyZXNob2xkOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHNlcnZlclR5cGU6IHN0cmluZztcbiAgQElucHV0KClcbiAgdGlsZUdyaWQ6IHRpbGVncmlkLlRpbGVHcmlkO1xuICBASW5wdXQoKVxuICB0aWxlTG9hZEZ1bmN0aW9uOiBUaWxlTG9hZEZ1bmN0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgdXJsOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHVybHM6IHN0cmluZ1tdO1xuICBASW5wdXQoKVxuICB3cmFwWDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllclRpbGVDb21wb25lbnQpIHtcbiAgICBzdXBlcihsYXllcik7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5UaWxlV01TKHRoaXMpO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKHRoaXMuaW5zdGFuY2UgJiYgY2hhbmdlcy5oYXNPd25Qcm9wZXJ0eSgncGFyYW1zJykpIHtcbiAgICAgIHRoaXMuaW5zdGFuY2UudXBkYXRlUGFyYW1zKHRoaXMucGFyYW1zKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZXdtcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL3RpbGV3bXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQXFCLFVBQVUsRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDckcsT0FBTyxFQUFFLE1BQU0sRUFBd0IsUUFBUSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQVNyRCxNQUFNLDZCQUE4QixTQUFRLGVBQWU7Ozs7SUE2QnpELFlBQW9CLEtBQXlCO1FBQzNDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNmLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLE9BQU8sQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RELElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMxQyxDQUFDO0lBQ0gsQ0FBQzs7O1lBakRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsb0JBQW9CO2dCQUM5QixRQUFRLEVBQUU7O0dBRVQ7Z0JBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsc0JBQXNCLENBQUMsRUFBRSxDQUFDO2FBQ2pHOzs7WUFUUSxrQkFBa0IsdUJBdUNaLElBQUk7Ozt3QkEzQmhCLEtBQUs7MEJBRUwsS0FBSztxQkFFTCxLQUFLO29CQUVMLEtBQUs7cUJBRUwsS0FBSzt5QkFFTCxLQUFLO3lDQUVMLEtBQUs7eUJBRUwsS0FBSzt1QkFFTCxLQUFLOytCQUVMLEtBQUs7a0JBRUwsS0FBSzttQkFFTCxLQUFLO29CQUVMLEtBQUs7Ozs7SUF6Qk4sMENBQXlCOztJQUN6QiwyQ0FDa0I7O0lBQ2xCLDZDQUNvQjs7SUFDcEIsd0NBQ2U7O0lBQ2YsdUNBQ2U7O0lBQ2Ysd0NBQ2U7O0lBQ2YsNENBQ21COztJQUNuQiw0REFDbUM7O0lBQ25DLDRDQUNtQjs7SUFDbkIsMENBQzRCOztJQUM1QixrREFDdUM7O0lBQ3ZDLHFDQUNZOztJQUNaLHNDQUNlOztJQUNmLHVDQUNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIGZvcndhcmRSZWYsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc291cmNlLCBUaWxlTG9hZEZ1bmN0aW9uVHlwZSwgdGlsZWdyaWQgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTGF5ZXJUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydGlsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLXRpbGV3bXMnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlVGlsZVdNU0NvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VUaWxlV01TQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkluaXQge1xyXG4gIGluc3RhbmNlOiBzb3VyY2UuVGlsZVdNUztcclxuICBASW5wdXQoKVxyXG4gIGNhY2hlU2l6ZTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgY3Jvc3NPcmlnaW46IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGd1dHRlcjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgaGlkcGk6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICBwYXJhbXM6IE9iamVjdDtcclxuICBASW5wdXQoKVxyXG4gIHByb2plY3Rpb246IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHJlcHJvamVjdGlvbkVycm9yVGhyZXNob2xkOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBzZXJ2ZXJUeXBlOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICB0aWxlR3JpZDogdGlsZWdyaWQuVGlsZUdyaWQ7XHJcbiAgQElucHV0KClcclxuICB0aWxlTG9hZEZ1bmN0aW9uOiBUaWxlTG9hZEZ1bmN0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIHVybDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgdXJsczogc3RyaW5nW107XHJcbiAgQElucHV0KClcclxuICB3cmFwWDogYm9vbGVhbjtcclxuXHJcbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJUaWxlQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLlRpbGVXTVModGhpcyk7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgaWYgKHRoaXMuaW5zdGFuY2UgJiYgY2hhbmdlcy5oYXNPd25Qcm9wZXJ0eSgncGFyYW1zJykpIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZS51cGRhdGVQYXJhbXModGhpcy5wYXJhbXMpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/tilewmts.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/tilewmts.component.js
@@ -134,4 +134,4 @@ if (false) {
     /** @type {?} */
     SourceTileWMTSComponent.prototype.tileGridWMTS;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZXdtdHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy90aWxld210cy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsSUFBSSxFQUNKLEtBQUssRUFDTCxVQUFVLEVBRVYsWUFBWSxHQUdiLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBd0IsUUFBUSxFQUFrQixNQUFNLEVBQThCLE1BQU0sWUFBWSxDQUFDO0FBQ2hILE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQVNsRSxNQUFNLDhCQUErQixTQUFRLGVBQWU7Ozs7SUFtRDFELFlBQW9CLEtBQXlCO1FBQzNDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCOztjQUMxQixVQUFVLEdBQTZCLEVBQUU7UUFDL0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUMsTUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztZQUMxQixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDWixLQUFLLEtBQUs7d0JBQ1IsSUFBSSxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsWUFBWSxDQUFDO3dCQUNyQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7d0JBQ3RCLEtBQUssQ0FBQztvQkFDUjt3QkFDRSxLQUFLLENBQUM7Z0JBQ1YsQ0FBQztnQkFDRCxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztZQUM5QyxDQUFDO1FBQ0gsQ0FBQztRQUNELElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7O0lBRUQsY0FBYztRQUNaLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELGtCQUFrQjtRQUNoQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztZQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDO1lBQzNDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN4QixDQUFDO0lBQ0gsQ0FBQzs7O1lBN0ZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixRQUFRLEVBQUU7O0dBRVQ7Z0JBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsdUJBQXVCLENBQUMsRUFBRSxDQUFDO2FBQ2xHOzs7WUFWUSxrQkFBa0IsdUJBOERaLElBQUk7Ozt3QkFqRGhCLEtBQUs7MEJBRUwsS0FBSzttQkFFTCxLQUFLO3VCQUVMLEtBQUs7eUJBRUwsS0FBSzt5Q0FFTCxLQUFLOzhCQUVMLEtBQUs7b0JBRUwsS0FBSztvQkFFTCxLQUFLO3dCQUVMLEtBQUs7NkJBU0wsS0FBSztzQkFFTCxLQUFLO3FCQUVMLEtBQUs7d0JBRUwsS0FBSzt5QkFFTCxLQUFLO2tCQUVMLEtBQUs7K0JBRUwsS0FBSzttQkFFTCxLQUFLO29CQUVMLEtBQUs7MkJBR0wsWUFBWSxTQUFDLHFCQUFxQjs7OztJQS9DbkMsMkNBQXNCOztJQUN0Qiw0Q0FDbUI7O0lBQ25CLDhDQUNxQjs7SUFDckIsdUNBQ2dDOztJQUNoQywyQ0FDd0I7O0lBQ3hCLDZDQUMyQjs7SUFDM0IsNkRBQ29DOztJQUNwQyxrREFDc0Q7O0lBQ3RELHdDQUNjOztJQUNkLHdDQUNjOztJQUNkLDRDQVFVOztJQUNWLGlEQUN3Qjs7SUFDeEIsMENBQ2lCOztJQUNqQix5Q0FDZ0I7O0lBQ2hCLDRDQUNrQjs7SUFDbEIsNkNBQzBCOztJQUMxQixzQ0FDYTs7SUFDYixtREFDd0M7O0lBQ3hDLHVDQUNnQjs7SUFDaEIsd0NBQ2dCOztJQUVoQiwrQ0FDb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEhvc3QsXG4gIElucHV0LFxuICBmb3J3YXJkUmVmLFxuICBBZnRlckNvbnRlbnRJbml0LFxuICBDb250ZW50Q2hpbGQsXG4gIFNpbXBsZUNoYW5nZXMsXG4gIE9uQ2hhbmdlcyxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUaWxlTG9hZEZ1bmN0aW9uVHlwZSwgdGlsZWdyaWQsIFByb2plY3Rpb25MaWtlLCBzb3VyY2UsIEltYWdlVGlsZSwgVGlsZUNvb3JkLCBUaWxlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBMYXllclRpbGVDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJ0aWxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGlsZUdyaWRXTVRTQ29tcG9uZW50IH0gZnJvbSAnLi4vdGlsZWdyaWR3bXRzLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtdGlsZXdtdHMnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZVRpbGVXTVRTQ29tcG9uZW50KSB9XSxcbn0pXG5leHBvcnQgY2xhc3MgU291cmNlVGlsZVdNVFNDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMge1xuICBpbnN0YW5jZTogc291cmNlLldNVFM7XG4gIEBJbnB1dCgpXG4gIGNhY2hlU2l6ZT86IG51bWJlcjtcbiAgQElucHV0KClcbiAgY3Jvc3NPcmlnaW4/OiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGxvZ28/OiBzdHJpbmcgfCBvbHguTG9nb09wdGlvbnM7XG4gIEBJbnB1dCgpXG4gIHRpbGVHcmlkOiB0aWxlZ3JpZC5XTVRTO1xuICBASW5wdXQoKVxuICBwcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZTtcbiAgQElucHV0KClcbiAgcmVwcm9qZWN0aW9uRXJyb3JUaHJlc2hvbGQ/OiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHJlcXVlc3RFbmNvZGluZz86IHNvdXJjZS5XTVRTUmVxdWVzdEVuY29kaW5nIHwgc3RyaW5nO1xuICBASW5wdXQoKVxuICBsYXllcjogc3RyaW5nO1xuICBASW5wdXQoKVxuICBzdHlsZTogc3RyaW5nO1xuICBASW5wdXQoKVxuICB0aWxlQ2xhc3M/OiAoKFxuICAgIG46IEltYWdlVGlsZSxcbiAgICBjb29yZHM6IFRpbGVDb29yZCxcbiAgICBzdGF0ZTogVGlsZS5TdGF0ZSxcbiAgICBzMTogc3RyaW5nLFxuICAgIHMyOiBzdHJpbmcsXG4gICAgdHlwZTogVGlsZUxvYWRGdW5jdGlvblR5cGVcbiAgKSA9PiBhbnkpO1xuICBASW5wdXQoKVxuICB0aWxlUGl4ZWxSYXRpbz86IG51bWJlcjtcbiAgQElucHV0KClcbiAgdmVyc2lvbj86IHN0cmluZztcbiAgQElucHV0KClcbiAgZm9ybWF0Pzogc3RyaW5nO1xuICBASW5wdXQoKVxuICBtYXRyaXhTZXQ6IHN0cmluZztcbiAgQElucHV0KClcbiAgZGltZW5zaW9ucz86IEdsb2JhbE9iamVjdDtcbiAgQElucHV0KClcbiAgdXJsPzogc3RyaW5nO1xuICBASW5wdXQoKVxuICB0aWxlTG9hZEZ1bmN0aW9uPzogVGlsZUxvYWRGdW5jdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIHVybHM/OiBzdHJpbmdbXTtcbiAgQElucHV0KClcbiAgd3JhcFg/OiBib29sZWFuO1xuXG4gIEBDb250ZW50Q2hpbGQoVGlsZUdyaWRXTVRTQ29tcG9uZW50KVxuICB0aWxlR3JpZFdNVFM6IFRpbGVHcmlkV01UU0NvbXBvbmVudDtcblxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllclRpbGVDb21wb25lbnQpIHtcbiAgICBzdXBlcihsYXllcik7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgY29uc3QgcHJvcGVydGllczogeyBbaW5kZXg6IHN0cmluZ106IGFueSB9ID0ge307XG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGZvciAoY29uc3Qga2V5IGluIGNoYW5nZXMpIHtcbiAgICAgIGlmIChjaGFuZ2VzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgc3dpdGNoIChrZXkpIHtcbiAgICAgICAgICBjYXNlICd1cmwnOlxuICAgICAgICAgICAgdGhpcy51cmwgPSBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlO1xuICAgICAgICAgICAgdGhpcy5zZXRMYXllclNvdXJjZSgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHByb3BlcnRpZXNba2V5XSA9IGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWU7XG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMuaW5zdGFuY2Uuc2V0UHJvcGVydGllcyhwcm9wZXJ0aWVzLCBmYWxzZSk7XG4gIH1cblxuICBzZXRMYXllclNvdXJjZSgpOiB2b2lkIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5XTVRTKHRoaXMpO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMudGlsZUdyaWRXTVRTKSB7XG4gICAgICB0aGlzLnRpbGVHcmlkID0gdGhpcy50aWxlR3JpZFdNVFMuaW5zdGFuY2U7XG4gICAgICB0aGlzLnNldExheWVyU291cmNlKCk7XG4gICAgfVxuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZXdtdHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy90aWxld210cy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsSUFBSSxFQUNKLEtBQUssRUFDTCxVQUFVLEVBRVYsWUFBWSxHQUdiLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBd0IsUUFBUSxFQUFrQixNQUFNLEVBQThCLE1BQU0sWUFBWSxDQUFDO0FBQ2hILE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQVNsRSxNQUFNLDhCQUErQixTQUFRLGVBQWU7Ozs7SUFtRDFELFlBQW9CLEtBQXlCO1FBQzNDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCOztjQUMxQixVQUFVLEdBQTZCLEVBQUU7UUFDL0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUMsTUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztZQUMxQixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDWixLQUFLLEtBQUs7d0JBQ1IsSUFBSSxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsWUFBWSxDQUFDO3dCQUNyQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7d0JBQ3RCLEtBQUssQ0FBQztvQkFDUjt3QkFDRSxLQUFLLENBQUM7Z0JBQ1YsQ0FBQztnQkFDRCxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztZQUM5QyxDQUFDO1FBQ0gsQ0FBQztRQUNELElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7O0lBRUQsY0FBYztRQUNaLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELGtCQUFrQjtRQUNoQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztZQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDO1lBQzNDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN4QixDQUFDO0lBQ0gsQ0FBQzs7O1lBN0ZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixRQUFRLEVBQUU7O0dBRVQ7Z0JBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsdUJBQXVCLENBQUMsRUFBRSxDQUFDO2FBQ2xHOzs7WUFWUSxrQkFBa0IsdUJBOERaLElBQUk7Ozt3QkFqRGhCLEtBQUs7MEJBRUwsS0FBSzttQkFFTCxLQUFLO3VCQUVMLEtBQUs7eUJBRUwsS0FBSzt5Q0FFTCxLQUFLOzhCQUVMLEtBQUs7b0JBRUwsS0FBSztvQkFFTCxLQUFLO3dCQUVMLEtBQUs7NkJBU0wsS0FBSztzQkFFTCxLQUFLO3FCQUVMLEtBQUs7d0JBRUwsS0FBSzt5QkFFTCxLQUFLO2tCQUVMLEtBQUs7K0JBRUwsS0FBSzttQkFFTCxLQUFLO29CQUVMLEtBQUs7MkJBR0wsWUFBWSxTQUFDLHFCQUFxQjs7OztJQS9DbkMsMkNBQXNCOztJQUN0Qiw0Q0FDbUI7O0lBQ25CLDhDQUNxQjs7SUFDckIsdUNBQ2dDOztJQUNoQywyQ0FDd0I7O0lBQ3hCLDZDQUMyQjs7SUFDM0IsNkRBQ29DOztJQUNwQyxrREFDc0Q7O0lBQ3RELHdDQUNjOztJQUNkLHdDQUNjOztJQUNkLDRDQVFVOztJQUNWLGlEQUN3Qjs7SUFDeEIsMENBQ2lCOztJQUNqQix5Q0FDZ0I7O0lBQ2hCLDRDQUNrQjs7SUFDbEIsNkNBQzBCOztJQUMxQixzQ0FDYTs7SUFDYixtREFDd0M7O0lBQ3hDLHVDQUNnQjs7SUFDaEIsd0NBQ2dCOztJQUVoQiwrQ0FDb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIENvbXBvbmVudCxcclxuICBIb3N0LFxyXG4gIElucHV0LFxyXG4gIGZvcndhcmRSZWYsXHJcbiAgQWZ0ZXJDb250ZW50SW5pdCxcclxuICBDb250ZW50Q2hpbGQsXHJcbiAgU2ltcGxlQ2hhbmdlcyxcclxuICBPbkNoYW5nZXMsXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRpbGVMb2FkRnVuY3Rpb25UeXBlLCB0aWxlZ3JpZCwgUHJvamVjdGlvbkxpa2UsIHNvdXJjZSwgSW1hZ2VUaWxlLCBUaWxlQ29vcmQsIFRpbGUgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTGF5ZXJUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydGlsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBUaWxlR3JpZFdNVFNDb21wb25lbnQgfSBmcm9tICcuLi90aWxlZ3JpZHdtdHMuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS10aWxld210cycsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VUaWxlV01UU0NvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VUaWxlV01UU0NvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgaW5zdGFuY2U6IHNvdXJjZS5XTVRTO1xyXG4gIEBJbnB1dCgpXHJcbiAgY2FjaGVTaXplPzogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgY3Jvc3NPcmlnaW4/OiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBsb2dvPzogc3RyaW5nIHwgb2x4LkxvZ29PcHRpb25zO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlsZUdyaWQ6IHRpbGVncmlkLldNVFM7XHJcbiAgQElucHV0KClcclxuICBwcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZTtcclxuICBASW5wdXQoKVxyXG4gIHJlcHJvamVjdGlvbkVycm9yVGhyZXNob2xkPzogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgcmVxdWVzdEVuY29kaW5nPzogc291cmNlLldNVFNSZXF1ZXN0RW5jb2RpbmcgfCBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBsYXllcjogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgc3R5bGU6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHRpbGVDbGFzcz86ICgoXHJcbiAgICBuOiBJbWFnZVRpbGUsXHJcbiAgICBjb29yZHM6IFRpbGVDb29yZCxcclxuICAgIHN0YXRlOiBUaWxlLlN0YXRlLFxyXG4gICAgczE6IHN0cmluZyxcclxuICAgIHMyOiBzdHJpbmcsXHJcbiAgICB0eXBlOiBUaWxlTG9hZEZ1bmN0aW9uVHlwZVxyXG4gICkgPT4gYW55KTtcclxuICBASW5wdXQoKVxyXG4gIHRpbGVQaXhlbFJhdGlvPzogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgdmVyc2lvbj86IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGZvcm1hdD86IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIG1hdHJpeFNldDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgZGltZW5zaW9ucz86IEdsb2JhbE9iamVjdDtcclxuICBASW5wdXQoKVxyXG4gIHVybD86IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHRpbGVMb2FkRnVuY3Rpb24/OiBUaWxlTG9hZEZ1bmN0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIHVybHM/OiBzdHJpbmdbXTtcclxuICBASW5wdXQoKVxyXG4gIHdyYXBYPzogYm9vbGVhbjtcclxuXHJcbiAgQENvbnRlbnRDaGlsZChUaWxlR3JpZFdNVFNDb21wb25lbnQpXHJcbiAgdGlsZUdyaWRXTVRTOiBUaWxlR3JpZFdNVFNDb21wb25lbnQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVyVGlsZUNvbXBvbmVudCkge1xyXG4gICAgc3VwZXIobGF5ZXIpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgY29uc3QgcHJvcGVydGllczogeyBbaW5kZXg6IHN0cmluZ106IGFueSB9ID0ge307XHJcbiAgICBpZiAoIXRoaXMuaW5zdGFuY2UpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgZm9yIChjb25zdCBrZXkgaW4gY2hhbmdlcykge1xyXG4gICAgICBpZiAoY2hhbmdlcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgc3dpdGNoIChrZXkpIHtcclxuICAgICAgICAgIGNhc2UgJ3VybCc6XHJcbiAgICAgICAgICAgIHRoaXMudXJsID0gY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZTtcclxuICAgICAgICAgICAgdGhpcy5zZXRMYXllclNvdXJjZSgpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwcm9wZXJ0aWVzW2tleV0gPSBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICB0aGlzLmluc3RhbmNlLnNldFByb3BlcnRpZXMocHJvcGVydGllcywgZmFsc2UpO1xyXG4gIH1cclxuXHJcbiAgc2V0TGF5ZXJTb3VyY2UoKTogdm9pZCB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5XTVRTKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLnRpbGVHcmlkV01UUykge1xyXG4gICAgICB0aGlzLnRpbGVHcmlkID0gdGhpcy50aWxlR3JpZFdNVFMuaW5zdGFuY2U7XHJcbiAgICAgIHRoaXMuc2V0TGF5ZXJTb3VyY2UoKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/vector.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/vector.component.js
@@ -57,4 +57,4 @@ if (false) {
     /** @type {?} */
     SourceVectorComponent.prototype.strategy;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVjdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvdmVjdG9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFVLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQVNyRCxNQUFNLDRCQUE2QixTQUFRLGVBQWU7Ozs7SUFleEQsWUFBb0IsS0FBMkI7UUFDN0MsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2YsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7OztZQTdCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtnQkFDN0IsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHFCQUFxQixDQUFDLEVBQUUsQ0FBQzthQUNoRzs7O1lBVFEsb0JBQW9CLHVCQXlCZCxJQUFJOzs7dUJBYmhCLEtBQUs7OEJBRUwsS0FBSztvQkFFTCxLQUFLO2tCQUVMLEtBQUs7cUJBRUwsS0FBSzt1QkFFTCxLQUFLOzs7O0lBWE4seUNBQXdCOztJQUN4Qix5Q0FDa0I7O0lBQ2xCLGdEQUN5Qjs7SUFDekIsc0NBQ2U7O0lBQ2Ysb0NBQ1k7O0lBQ1osdUNBQzBCOztJQUMxQix5Q0FDNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBPbkluaXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNvdXJjZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTGF5ZXJWZWN0b3JDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJ2ZWN0b3IuY29tcG9uZW50JztcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtdmVjdG9yJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VWZWN0b3JDb21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VWZWN0b3JDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBpbnN0YW5jZTogc291cmNlLlZlY3RvcjtcbiAgQElucHV0KClcbiAgb3ZlcmxhcHM6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIHVzZVNwYXRpYWxJbmRleDogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgd3JhcFg6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIHVybDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBmb3JtYXQ6IG9sLmZvcm1hdC5GZWF0dXJlO1xuICBASW5wdXQoKVxuICBzdHJhdGVneTogb2wuTG9hZGluZ1N0cmF0ZWd5O1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVyVmVjdG9yQ29tcG9uZW50KSB7XG4gICAgc3VwZXIobGF5ZXIpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuVmVjdG9yKHRoaXMpO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVjdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvdmVjdG9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFVLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQVNyRCxNQUFNLDRCQUE2QixTQUFRLGVBQWU7Ozs7SUFleEQsWUFBb0IsS0FBMkI7UUFDN0MsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2YsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7OztZQTdCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtnQkFDN0IsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHFCQUFxQixDQUFDLEVBQUUsQ0FBQzthQUNoRzs7O1lBVFEsb0JBQW9CLHVCQXlCZCxJQUFJOzs7dUJBYmhCLEtBQUs7OEJBRUwsS0FBSztvQkFFTCxLQUFLO2tCQUVMLEtBQUs7cUJBRUwsS0FBSzt1QkFFTCxLQUFLOzs7O0lBWE4seUNBQXdCOztJQUN4Qix5Q0FDa0I7O0lBQ2xCLGdEQUN5Qjs7SUFDekIsc0NBQ2U7O0lBQ2Ysb0NBQ1k7O0lBQ1osdUNBQzBCOztJQUMxQix5Q0FDNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBPbkluaXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IExheWVyVmVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydmVjdG9yLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtdmVjdG9yJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZVZlY3RvckNvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VWZWN0b3JDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIGluc3RhbmNlOiBzb3VyY2UuVmVjdG9yO1xyXG4gIEBJbnB1dCgpXHJcbiAgb3ZlcmxhcHM6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICB1c2VTcGF0aWFsSW5kZXg6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICB3cmFwWDogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIHVybDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgZm9ybWF0OiBvbC5mb3JtYXQuRmVhdHVyZTtcclxuICBASW5wdXQoKVxyXG4gIHN0cmF0ZWd5OiBvbC5Mb2FkaW5nU3RyYXRlZ3k7XHJcblxyXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVyVmVjdG9yQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLlZlY3Rvcih0aGlzKTtcclxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/vectortile.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/vectortile.component.js
@@ -79,4 +79,4 @@ if (false) {
     /** @type {?} */
     SourceVectorTileComponent.prototype.tileGrid;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVjdG9ydGlsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL3ZlY3RvcnRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBb0IsTUFBTSxlQUFlLENBQUM7QUFDbkcsT0FBTyxFQUFFLE1BQU0sRUFBeUQsTUFBTSxZQUFZLENBQUM7QUFDM0YsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDL0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzlELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQVNyRCxNQUFNLGdDQUFpQyxTQUFRLGVBQWU7Ozs7SUEwQjVELFlBQW9CLEtBQStCO1FBQ2pELEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNmLENBQUM7Ozs7O0lBR0Qsa0JBQWtCO1FBQ2hCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUM7UUFDNUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDO1FBQ2hELHFFQUFxRTtRQUNyRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7OztZQTVDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHVCQUF1QjtnQkFDakMsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHlCQUF5QixDQUFDLEVBQUUsQ0FBQzthQUNwRzs7O1lBWFEsd0JBQXdCLHVCQXNDbEIsSUFBSTs7O3dCQXhCaEIsS0FBSzt1QkFFTCxLQUFLO3lCQUVMLEtBQUs7NkJBRUwsS0FBSzs4QkFFTCxLQUFLO2tCQUVMLEtBQUs7bUJBRUwsS0FBSztvQkFFTCxLQUFLOzhCQUdMLFlBQVksU0FBQyxlQUFlO2dDQUc1QixZQUFZLFNBQUMsaUJBQWlCOzs7O0lBckIvQiw2Q0FBbUM7O0lBQ25DLDhDQUNrQjs7SUFDbEIsNkNBQ2tCOztJQUNsQiwrQ0FDMkI7O0lBQzNCLG1EQUN1Qjs7SUFDdkIsb0RBQ3FDOztJQUNyQyx3Q0FDWTs7SUFDWix5Q0FDZTs7SUFDZiwwQ0FDZTs7SUFFZixvREFDaUM7O0lBQ2pDLDJDQUF1Qjs7SUFDdkIsc0RBQ3FDOztJQUNyQyw2Q0FBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBmb3J3YXJkUmVmLCBDb250ZW50Q2hpbGQsIEFmdGVyQ29udGVudEluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNvdXJjZSwgUHJvamVjdGlvbkxpa2UsIFRpbGVVcmxGdW5jdGlvblR5cGUsIGZvcm1hdCwgdGlsZWdyaWQgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IExheWVyVmVjdG9yVGlsZUNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcnZlY3RvcnRpbGUuY29tcG9uZW50JztcbmltcG9ydCB7IEZvcm1hdENvbXBvbmVudCB9IGZyb20gJy4uL2Zvcm1hdHMvZm9ybWF0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaWxlR3JpZENvbXBvbmVudCB9IGZyb20gJy4uL3RpbGVncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLXZlY3RvcnRpbGUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZVZlY3RvclRpbGVDb21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VWZWN0b3JUaWxlQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XG4gIHB1YmxpYyBpbnN0YW5jZTogc291cmNlLlZlY3RvclRpbGU7XG4gIEBJbnB1dCgpXG4gIGNhY2hlU2l6ZTogbnVtYmVyO1xuICBASW5wdXQoKVxuICBvdmVybGFwczogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgcHJvamVjdGlvbjogUHJvamVjdGlvbkxpa2U7XG4gIEBJbnB1dCgpXG4gIHRpbGVQaXhlbFJhdGlvOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHRpbGVVcmxGdW5jdGlvbjogVGlsZVVybEZ1bmN0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgdXJsOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHVybHM6IHN0cmluZ1tdO1xuICBASW5wdXQoKVxuICB3cmFwWDogYm9vbGVhbjtcblxuICBAQ29udGVudENoaWxkKEZvcm1hdENvbXBvbmVudClcbiAgZm9ybWF0Q29tcG9uZW50OiBGb3JtYXRDb21wb25lbnQ7XG4gIGZvcm1hdDogZm9ybWF0LkZlYXR1cmU7XG4gIEBDb250ZW50Q2hpbGQoVGlsZUdyaWRDb21wb25lbnQpXG4gIHRpbGVHcmlkQ29tcG9uZW50OiBUaWxlR3JpZENvbXBvbmVudDtcbiAgdGlsZUdyaWQ6IHRpbGVncmlkLlRpbGVHcmlkO1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVyVmVjdG9yVGlsZUNvbXBvbmVudCkge1xuICAgIHN1cGVyKGxheWVyKTtcbiAgfVxuXG4gIC8qIG5lZWQgdGhlIGNoaWxkcmVuIHRvIGNvbnN0cnVjdCB0aGUgT0wzIG9iamVjdCAqL1xuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgdGhpcy5mb3JtYXQgPSB0aGlzLmZvcm1hdENvbXBvbmVudC5pbnN0YW5jZTtcbiAgICB0aGlzLnRpbGVHcmlkID0gdGhpcy50aWxlR3JpZENvbXBvbmVudC5pbnN0YW5jZTtcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgb2wuc291cmNlLlZlY3RvclRpbGUgaW5zdGFuY2Ugd2l0aDonLCB0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5WZWN0b3JUaWxlKHRoaXMpO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVjdG9ydGlsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL3ZlY3RvcnRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBb0IsTUFBTSxlQUFlLENBQUM7QUFDbkcsT0FBTyxFQUFFLE1BQU0sRUFBeUQsTUFBTSxZQUFZLENBQUM7QUFDM0YsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDL0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzlELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQVNyRCxNQUFNLGdDQUFpQyxTQUFRLGVBQWU7Ozs7SUEwQjVELFlBQW9CLEtBQStCO1FBQ2pELEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNmLENBQUM7Ozs7O0lBR0Qsa0JBQWtCO1FBQ2hCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUM7UUFDNUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDO1FBQ2hELHFFQUFxRTtRQUNyRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7OztZQTVDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHVCQUF1QjtnQkFDakMsUUFBUSxFQUFFOztHQUVUO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHlCQUF5QixDQUFDLEVBQUUsQ0FBQzthQUNwRzs7O1lBWFEsd0JBQXdCLHVCQXNDbEIsSUFBSTs7O3dCQXhCaEIsS0FBSzt1QkFFTCxLQUFLO3lCQUVMLEtBQUs7NkJBRUwsS0FBSzs4QkFFTCxLQUFLO2tCQUVMLEtBQUs7bUJBRUwsS0FBSztvQkFFTCxLQUFLOzhCQUdMLFlBQVksU0FBQyxlQUFlO2dDQUc1QixZQUFZLFNBQUMsaUJBQWlCOzs7O0lBckIvQiw2Q0FBbUM7O0lBQ25DLDhDQUNrQjs7SUFDbEIsNkNBQ2tCOztJQUNsQiwrQ0FDMkI7O0lBQzNCLG1EQUN1Qjs7SUFDdkIsb0RBQ3FDOztJQUNyQyx3Q0FDWTs7SUFDWix5Q0FDZTs7SUFDZiwwQ0FDZTs7SUFFZixvREFDaUM7O0lBQ2pDLDJDQUF1Qjs7SUFDdkIsc0RBQ3FDOztJQUNyQyw2Q0FBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBmb3J3YXJkUmVmLCBDb250ZW50Q2hpbGQsIEFmdGVyQ29udGVudEluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc291cmNlLCBQcm9qZWN0aW9uTGlrZSwgVGlsZVVybEZ1bmN0aW9uVHlwZSwgZm9ybWF0LCB0aWxlZ3JpZCB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBMYXllclZlY3RvclRpbGVDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJ2ZWN0b3J0aWxlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEZvcm1hdENvbXBvbmVudCB9IGZyb20gJy4uL2Zvcm1hdHMvZm9ybWF0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFRpbGVHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi4vdGlsZWdyaWQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS12ZWN0b3J0aWxlJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZVZlY3RvclRpbGVDb21wb25lbnQpIH1dLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU291cmNlVmVjdG9yVGlsZUNvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogc291cmNlLlZlY3RvclRpbGU7XHJcbiAgQElucHV0KClcclxuICBjYWNoZVNpemU6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIG92ZXJsYXBzOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgcHJvamVjdGlvbjogUHJvamVjdGlvbkxpa2U7XHJcbiAgQElucHV0KClcclxuICB0aWxlUGl4ZWxSYXRpbzogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlsZVVybEZ1bmN0aW9uOiBUaWxlVXJsRnVuY3Rpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgdXJsOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICB1cmxzOiBzdHJpbmdbXTtcclxuICBASW5wdXQoKVxyXG4gIHdyYXBYOiBib29sZWFuO1xyXG5cclxuICBAQ29udGVudENoaWxkKEZvcm1hdENvbXBvbmVudClcclxuICBmb3JtYXRDb21wb25lbnQ6IEZvcm1hdENvbXBvbmVudDtcclxuICBmb3JtYXQ6IGZvcm1hdC5GZWF0dXJlO1xyXG4gIEBDb250ZW50Q2hpbGQoVGlsZUdyaWRDb21wb25lbnQpXHJcbiAgdGlsZUdyaWRDb21wb25lbnQ6IFRpbGVHcmlkQ29tcG9uZW50O1xyXG4gIHRpbGVHcmlkOiB0aWxlZ3JpZC5UaWxlR3JpZDtcclxuXHJcbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJWZWN0b3JUaWxlQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICAvKiBuZWVkIHRoZSBjaGlsZHJlbiB0byBjb25zdHJ1Y3QgdGhlIE9MMyBvYmplY3QgKi9cclxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XHJcbiAgICB0aGlzLmZvcm1hdCA9IHRoaXMuZm9ybWF0Q29tcG9uZW50Lmluc3RhbmNlO1xyXG4gICAgdGhpcy50aWxlR3JpZCA9IHRoaXMudGlsZUdyaWRDb21wb25lbnQuaW5zdGFuY2U7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgb2wuc291cmNlLlZlY3RvclRpbGUgaW5zdGFuY2Ugd2l0aDonLCB0aGlzKTtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLlZlY3RvclRpbGUodGhpcyk7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/sources/xyz.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/sources/xyz.component.js
@@ -115,4 +115,4 @@ if (false) {
     /** @type {?} */
     SourceXYZComponent.prototype.tileGridXYZ;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieHl6LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMveHl6LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxJQUFJLEVBQ0osS0FBSyxFQUVMLFVBQVUsRUFFVixZQUFZLEVBRVosUUFBUSxHQUNULE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxNQUFNLEVBQW1ELFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUMvRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFTM0QsTUFBTSx5QkFBMEIsU0FBUSxlQUFlOzs7OztJQW9DckQsWUFHRSxLQUF5QixFQUd6QixNQUE4QjtRQUU5QixLQUFLLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7Ozs7SUFFRCxrQkFBa0I7UUFDaEIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDckIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQztRQUM1QyxDQUFDO1FBQ0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBc0I7O2NBQzFCLFVBQVUsR0FBNkIsRUFBRTtRQUUvQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25CLE1BQU0sQ0FBQztRQUNULENBQUM7UUFDRCxHQUFHLENBQUMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzFCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNoQyxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztZQUM5QyxDQUFDO1FBQ0gsQ0FBQztRQUVELElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMvQyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNsQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNyQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoQyxDQUFDO0lBQ0gsQ0FBQzs7O1lBL0VGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixRQUFRLEVBQUU7O0dBRVQ7Z0JBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDO2FBQzdGOzs7WUFYUSxrQkFBa0IsdUJBaUR0QixRQUFRLFlBQ1IsSUFBSTtZQS9DQSxxQkFBcUIsdUJBaUR6QixRQUFRLFlBQ1IsSUFBSTs7O3dCQXZDTixLQUFLOzBCQUVMLEtBQUs7cUJBRUwsS0FBSzt5QkFFTCxLQUFLO3lDQUVMLEtBQUs7c0JBRUwsS0FBSztzQkFFTCxLQUFLO3VCQUVMLEtBQUs7K0JBRUwsS0FBSzs2QkFFTCxLQUFLO3VCQUVMLEtBQUs7OEJBRUwsS0FBSztrQkFFTCxLQUFLO21CQUVMLEtBQUs7b0JBRUwsS0FBSzswQkFHTCxZQUFZLFNBQUMsaUJBQWlCOzs7O0lBaEMvQixzQ0FBcUI7O0lBQ3JCLHVDQUNrQjs7SUFDbEIseUNBQ29COztJQUNwQixvQ0FDZ0I7O0lBQ2hCLHdDQUNtQjs7SUFDbkIsd0RBQ21DOztJQUNuQyxxQ0FDZ0I7O0lBQ2hCLHFDQUNnQjs7SUFDaEIsc0NBQzRCOztJQUM1Qiw4Q0FDd0M7O0lBQ3hDLDRDQUN1Qjs7SUFDdkIsc0NBQ3dCOztJQUN4Qiw2Q0FDcUM7O0lBQ3JDLGlDQUNZOztJQUNaLGtDQUNlOztJQUNmLG1DQUNlOztJQUVmLHlDQUMrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgSG9zdCxcbiAgSW5wdXQsXG4gIEFmdGVyQ29udGVudEluaXQsXG4gIGZvcndhcmRSZWYsXG4gIE9uQ2hhbmdlcyxcbiAgQ29udGVudENoaWxkLFxuICBTaW1wbGVDaGFuZ2VzLFxuICBPcHRpb25hbCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzb3VyY2UsIFNpemUsIFRpbGVVcmxGdW5jdGlvblR5cGUsIFRpbGVMb2FkRnVuY3Rpb25UeXBlLCB0aWxlZ3JpZCB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTGF5ZXJUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydGlsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcbmltcG9ydCB7IFRpbGVHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi4vdGlsZWdyaWQuY29tcG9uZW50JztcbmltcG9ydCB7IFNvdXJjZVJhc3RlckNvbXBvbmVudCB9IGZyb20gJy4vcmFzdGVyLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UteHl6JyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VYWVpDb21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VYWVpDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMge1xuICBpbnN0YW5jZTogc291cmNlLlhZWjtcbiAgQElucHV0KClcbiAgY2FjaGVTaXplOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIGNyb3NzT3JpZ2luOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIG9wYXF1ZTogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgcHJvamVjdGlvbjogc3RyaW5nO1xuICBASW5wdXQoKVxuICByZXByb2plY3Rpb25FcnJvclRocmVzaG9sZDogbnVtYmVyO1xuICBASW5wdXQoKVxuICBtaW5ab29tOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIG1heFpvb206IG51bWJlcjtcbiAgQElucHV0KClcbiAgdGlsZUdyaWQ6IHRpbGVncmlkLlRpbGVHcmlkO1xuICBASW5wdXQoKVxuICB0aWxlTG9hZEZ1bmN0aW9uPzogVGlsZUxvYWRGdW5jdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIHRpbGVQaXhlbFJhdGlvOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHRpbGVTaXplOiBudW1iZXIgfCBTaXplO1xuICBASW5wdXQoKVxuICB0aWxlVXJsRnVuY3Rpb246IFRpbGVVcmxGdW5jdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIHVybDogc3RyaW5nO1xuICBASW5wdXQoKVxuICB1cmxzOiBzdHJpbmdbXTtcbiAgQElucHV0KClcbiAgd3JhcFg6IGJvb2xlYW47XG5cbiAgQENvbnRlbnRDaGlsZChUaWxlR3JpZENvbXBvbmVudClcbiAgdGlsZUdyaWRYWVo6IFRpbGVHcmlkQ29tcG9uZW50O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBPcHRpb25hbCgpXG4gICAgQEhvc3QoKVxuICAgIGxheWVyOiBMYXllclRpbGVDb21wb25lbnQsXG4gICAgQE9wdGlvbmFsKClcbiAgICBASG9zdCgpXG4gICAgcmFzdGVyPzogU291cmNlUmFzdGVyQ29tcG9uZW50XG4gICkge1xuICAgIHN1cGVyKGxheWVyLCByYXN0ZXIpO1xuICB9XG5cbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICAgIGlmICh0aGlzLnRpbGVHcmlkWFlaKSB7XG4gICAgICB0aGlzLnRpbGVHcmlkID0gdGhpcy50aWxlR3JpZFhZWi5pbnN0YW5jZTtcbiAgICB9XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuWFlaKHRoaXMpO1xuICAgIHRoaXMuX3JlZ2lzdGVyKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGNvbnN0IHByb3BlcnRpZXM6IHsgW2luZGV4OiBzdHJpbmddOiBhbnkgfSA9IHt9O1xuXG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGZvciAoY29uc3Qga2V5IGluIGNoYW5nZXMpIHtcbiAgICAgIGlmIChjaGFuZ2VzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgcHJvcGVydGllc1trZXldID0gY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmluc3RhbmNlLnNldFByb3BlcnRpZXMocHJvcGVydGllcywgZmFsc2UpO1xuICAgIGlmIChjaGFuZ2VzLmhhc093blByb3BlcnR5KCd1cmwnKSkge1xuICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuWFlaKHRoaXMpO1xuICAgICAgdGhpcy5fcmVnaXN0ZXIodGhpcy5pbnN0YW5jZSk7XG4gICAgfVxuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieHl6LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMveHl6LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxJQUFJLEVBQ0osS0FBSyxFQUVMLFVBQVUsRUFFVixZQUFZLEVBRVosUUFBUSxHQUNULE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxNQUFNLEVBQW1ELFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUMvRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFTM0QsTUFBTSx5QkFBMEIsU0FBUSxlQUFlOzs7OztJQW9DckQsWUFHRSxLQUF5QixFQUd6QixNQUE4QjtRQUU5QixLQUFLLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7Ozs7SUFFRCxrQkFBa0I7UUFDaEIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDckIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQztRQUM1QyxDQUFDO1FBQ0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBc0I7O2NBQzFCLFVBQVUsR0FBNkIsRUFBRTtRQUUvQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25CLE1BQU0sQ0FBQztRQUNULENBQUM7UUFDRCxHQUFHLENBQUMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzFCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNoQyxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztZQUM5QyxDQUFDO1FBQ0gsQ0FBQztRQUVELElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMvQyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNsQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNyQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoQyxDQUFDO0lBQ0gsQ0FBQzs7O1lBL0VGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixRQUFRLEVBQUU7O0dBRVQ7Z0JBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDO2FBQzdGOzs7WUFYUSxrQkFBa0IsdUJBaUR0QixRQUFRLFlBQ1IsSUFBSTtZQS9DQSxxQkFBcUIsdUJBaUR6QixRQUFRLFlBQ1IsSUFBSTs7O3dCQXZDTixLQUFLOzBCQUVMLEtBQUs7cUJBRUwsS0FBSzt5QkFFTCxLQUFLO3lDQUVMLEtBQUs7c0JBRUwsS0FBSztzQkFFTCxLQUFLO3VCQUVMLEtBQUs7K0JBRUwsS0FBSzs2QkFFTCxLQUFLO3VCQUVMLEtBQUs7OEJBRUwsS0FBSztrQkFFTCxLQUFLO21CQUVMLEtBQUs7b0JBRUwsS0FBSzswQkFHTCxZQUFZLFNBQUMsaUJBQWlCOzs7O0lBaEMvQixzQ0FBcUI7O0lBQ3JCLHVDQUNrQjs7SUFDbEIseUNBQ29COztJQUNwQixvQ0FDZ0I7O0lBQ2hCLHdDQUNtQjs7SUFDbkIsd0RBQ21DOztJQUNuQyxxQ0FDZ0I7O0lBQ2hCLHFDQUNnQjs7SUFDaEIsc0NBQzRCOztJQUM1Qiw4Q0FDd0M7O0lBQ3hDLDRDQUN1Qjs7SUFDdkIsc0NBQ3dCOztJQUN4Qiw2Q0FDcUM7O0lBQ3JDLGlDQUNZOztJQUNaLGtDQUNlOztJQUNmLG1DQUNlOztJQUVmLHlDQUMrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgQ29tcG9uZW50LFxyXG4gIEhvc3QsXHJcbiAgSW5wdXQsXHJcbiAgQWZ0ZXJDb250ZW50SW5pdCxcclxuICBmb3J3YXJkUmVmLFxyXG4gIE9uQ2hhbmdlcyxcclxuICBDb250ZW50Q2hpbGQsXHJcbiAgU2ltcGxlQ2hhbmdlcyxcclxuICBPcHRpb25hbCxcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc291cmNlLCBTaXplLCBUaWxlVXJsRnVuY3Rpb25UeXBlLCBUaWxlTG9hZEZ1bmN0aW9uVHlwZSwgdGlsZWdyaWQgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTGF5ZXJUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydGlsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBUaWxlR3JpZENvbXBvbmVudCB9IGZyb20gJy4uL3RpbGVncmlkLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNvdXJjZVJhc3RlckNvbXBvbmVudCB9IGZyb20gJy4vcmFzdGVyLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UteHl6JyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZVhZWkNvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VYWVpDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMge1xyXG4gIGluc3RhbmNlOiBzb3VyY2UuWFlaO1xyXG4gIEBJbnB1dCgpXHJcbiAgY2FjaGVTaXplOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBjcm9zc09yaWdpbjogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgb3BhcXVlOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgcHJvamVjdGlvbjogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgcmVwcm9qZWN0aW9uRXJyb3JUaHJlc2hvbGQ6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIG1pblpvb206IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIG1heFpvb206IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHRpbGVHcmlkOiB0aWxlZ3JpZC5UaWxlR3JpZDtcclxuICBASW5wdXQoKVxyXG4gIHRpbGVMb2FkRnVuY3Rpb24/OiBUaWxlTG9hZEZ1bmN0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIHRpbGVQaXhlbFJhdGlvOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICB0aWxlU2l6ZTogbnVtYmVyIHwgU2l6ZTtcclxuICBASW5wdXQoKVxyXG4gIHRpbGVVcmxGdW5jdGlvbjogVGlsZVVybEZ1bmN0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIHVybDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgdXJsczogc3RyaW5nW107XHJcbiAgQElucHV0KClcclxuICB3cmFwWDogYm9vbGVhbjtcclxuXHJcbiAgQENvbnRlbnRDaGlsZChUaWxlR3JpZENvbXBvbmVudClcclxuICB0aWxlR3JpZFhZWjogVGlsZUdyaWRDb21wb25lbnQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgQE9wdGlvbmFsKClcclxuICAgIEBIb3N0KClcclxuICAgIGxheWVyOiBMYXllclRpbGVDb21wb25lbnQsXHJcbiAgICBAT3B0aW9uYWwoKVxyXG4gICAgQEhvc3QoKVxyXG4gICAgcmFzdGVyPzogU291cmNlUmFzdGVyQ29tcG9uZW50XHJcbiAgKSB7XHJcbiAgICBzdXBlcihsYXllciwgcmFzdGVyKTtcclxuICB9XHJcblxyXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcclxuICAgIGlmICh0aGlzLnRpbGVHcmlkWFlaKSB7XHJcbiAgICAgIHRoaXMudGlsZUdyaWQgPSB0aGlzLnRpbGVHcmlkWFlaLmluc3RhbmNlO1xyXG4gICAgfVxyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuWFlaKHRoaXMpO1xyXG4gICAgdGhpcy5fcmVnaXN0ZXIodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICBjb25zdCBwcm9wZXJ0aWVzOiB7IFtpbmRleDogc3RyaW5nXTogYW55IH0gPSB7fTtcclxuXHJcbiAgICBpZiAoIXRoaXMuaW5zdGFuY2UpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgZm9yIChjb25zdCBrZXkgaW4gY2hhbmdlcykge1xyXG4gICAgICBpZiAoY2hhbmdlcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgcHJvcGVydGllc1trZXldID0gY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuaW5zdGFuY2Uuc2V0UHJvcGVydGllcyhwcm9wZXJ0aWVzLCBmYWxzZSk7XHJcbiAgICBpZiAoY2hhbmdlcy5oYXNPd25Qcm9wZXJ0eSgndXJsJykpIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuWFlaKHRoaXMpO1xyXG4gICAgICB0aGlzLl9yZWdpc3Rlcih0aGlzLmluc3RhbmNlKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/styles/circle.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/styles/circle.component.js
@@ -95,4 +95,4 @@ if (false) {
      */
     StyleCircleComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2lyY2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3N0eWxlcy9jaXJjbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQXlELE1BQU0sZUFBZSxDQUFDO0FBQzlHLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbkMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBUW5ELE1BQU07Ozs7SUFlSixZQUE0QixJQUFvQjtRQUFwQixTQUFJLEdBQUosSUFBSSxDQUFnQjtRQWR6QyxrQkFBYSxHQUFHLGNBQWMsQ0FBQztJQWNhLENBQUM7Ozs7Ozs7SUFPcEQsTUFBTTtRQUNKLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNwQiw2REFBNkQ7WUFDN0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZDLENBQUM7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFRCxrQkFBa0I7UUFDaEIsaUVBQWlFO1FBQ2pFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNyQixDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25CLE1BQU0sQ0FBQztRQUNULENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RCLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUMxRCxDQUFDO1FBQ0QsNkdBQTZHO0lBQy9HLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsNENBQTRDO1FBQzVDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwQyxDQUFDOzs7WUF4REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFQUSxjQUFjLHVCQXVCUixJQUFJOzs7bUJBWGhCLEtBQUs7cUJBRUwsS0FBSzswQkFFTCxLQUFLO3FCQUVMLEtBQUs7MkJBRUwsS0FBSzs7OztJQVhOLDZDQUFzQzs7SUFDdEMsd0NBQThCOztJQUU5QixvQ0FDaUI7O0lBQ2pCLHNDQUNlOztJQUNmLDJDQUNxQjs7SUFDckIsc0NBQ3FCOztJQUNyQiw0Q0FDaUM7Ozs7O0lBRXJCLG9DQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEhvc3QsIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzdHlsZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgU3R5bGVDb21wb25lbnQgfSBmcm9tICcuL3N0eWxlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zdHlsZS1jaXJjbGUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgU3R5bGVDaXJjbGVDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ3N0eWxlLWNpcmNsZSc7XG4gIHB1YmxpYyBpbnN0YW5jZTogc3R5bGUuQ2lyY2xlO1xuXG4gIEBJbnB1dCgpXG4gIGZpbGw6IHN0eWxlLkZpbGw7XG4gIEBJbnB1dCgpXG4gIHJhZGl1czogbnVtYmVyO1xuICBASW5wdXQoKVxuICBzbmFwVG9QaXhlbDogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgc3Ryb2tlOiBzdHlsZS5TdHJva2U7XG4gIEBJbnB1dCgpXG4gIGF0bGFzTWFuYWdlcjogc3R5bGUuQXRsYXNNYW5hZ2VyO1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgcHJpdmF0ZSBob3N0OiBTdHlsZUNvbXBvbmVudCkge31cblxuICAvKipcbiAgICogV09SSy1BUk9VTkQ6IHNpbmNlIHRoZSByZS1yZW5kZXJpbmcgaXMgbm90IHRyaWdnZXJlZCBvbiBzdHlsZSBjaGFuZ2VcbiAgICogd2UgdHJpZ2dlciBhIHJhZGl1cyBjaGFuZ2UuXG4gICAqIHNlZSBvcGVubGF5ZXJzICM2MjMzIGFuZCAjNTc3NVxuICAgKi9cbiAgdXBkYXRlKCkge1xuICAgIGlmICghIXRoaXMuaW5zdGFuY2UpIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdzZXR0aW5nIG9sLnN0eWxlLkNpcmNsZSBpbnN0YW5jZVxcJ3MgcmFkaXVzJyk7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldFJhZGl1cyh0aGlzLnJhZGl1cyk7XG4gICAgfVxuICAgIHRoaXMuaG9zdC51cGRhdGUoKTtcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgb2wuc3R5bGUuQ2lyY2xlIGluc3RhbmNlIHdpdGg6ICcsIHRoaXMpO1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc3R5bGUuQ2lyY2xlKHRoaXMpO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRJbWFnZSh0aGlzLmluc3RhbmNlKTtcbiAgICB0aGlzLmhvc3QudXBkYXRlKCk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydyYWRpdXMnXSkge1xuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRSYWRpdXMoY2hhbmdlc1sncmFkaXVzJ10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXN0eWxlLWNpcmNsZSwgc2V0dGluZyBuZXcgcmFkaXVzOiAnLCBjaGFuZ2VzWydyYWRpdXMnXS5jdXJyZW50VmFsdWUpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC1zdHlsZS1jaXJjbGUnKTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0SW1hZ2UobnVsbCk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2lyY2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3N0eWxlcy9jaXJjbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQXlELE1BQU0sZUFBZSxDQUFDO0FBQzlHLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbkMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBUW5ELE1BQU07Ozs7SUFlSixZQUE0QixJQUFvQjtRQUFwQixTQUFJLEdBQUosSUFBSSxDQUFnQjtRQWR6QyxrQkFBYSxHQUFHLGNBQWMsQ0FBQztJQWNhLENBQUM7Ozs7Ozs7SUFPcEQsTUFBTTtRQUNKLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNwQiw2REFBNkQ7WUFDN0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZDLENBQUM7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFRCxrQkFBa0I7UUFDaEIsaUVBQWlFO1FBQ2pFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNyQixDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25CLE1BQU0sQ0FBQztRQUNULENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RCLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUMxRCxDQUFDO1FBQ0QsNkdBQTZHO0lBQy9HLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsNENBQTRDO1FBQzVDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwQyxDQUFDOzs7WUF4REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFQUSxjQUFjLHVCQXVCUixJQUFJOzs7bUJBWGhCLEtBQUs7cUJBRUwsS0FBSzswQkFFTCxLQUFLO3FCQUVMLEtBQUs7MkJBRUwsS0FBSzs7OztJQVhOLDZDQUFzQzs7SUFDdEMsd0NBQThCOztJQUU5QixvQ0FDaUI7O0lBQ2pCLHNDQUNlOztJQUNmLDJDQUNxQjs7SUFDckIsc0NBQ3FCOztJQUNyQiw0Q0FDaUM7Ozs7O0lBRXJCLG9DQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEhvc3QsIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHN0eWxlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IFN0eWxlQ29tcG9uZW50IH0gZnJvbSAnLi9zdHlsZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc3R5bGUtY2lyY2xlJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTdHlsZUNpcmNsZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcclxuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdzdHlsZS1jaXJjbGUnO1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogc3R5bGUuQ2lyY2xlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGZpbGw6IHN0eWxlLkZpbGw7XHJcbiAgQElucHV0KClcclxuICByYWRpdXM6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHNuYXBUb1BpeGVsOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgc3Ryb2tlOiBzdHlsZS5TdHJva2U7XHJcbiAgQElucHV0KClcclxuICBhdGxhc01hbmFnZXI6IHN0eWxlLkF0bGFzTWFuYWdlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoQEhvc3QoKSBwcml2YXRlIGhvc3Q6IFN0eWxlQ29tcG9uZW50KSB7fVxyXG5cclxuICAvKipcclxuICAgKiBXT1JLLUFST1VORDogc2luY2UgdGhlIHJlLXJlbmRlcmluZyBpcyBub3QgdHJpZ2dlcmVkIG9uIHN0eWxlIGNoYW5nZVxyXG4gICAqIHdlIHRyaWdnZXIgYSByYWRpdXMgY2hhbmdlLlxyXG4gICAqIHNlZSBvcGVubGF5ZXJzICM2MjMzIGFuZCAjNTc3NVxyXG4gICAqL1xyXG4gIHVwZGF0ZSgpIHtcclxuICAgIGlmICghIXRoaXMuaW5zdGFuY2UpIHtcclxuICAgICAgLy8gY29uc29sZS5sb2coJ3NldHRpbmcgb2wuc3R5bGUuQ2lyY2xlIGluc3RhbmNlXFwncyByYWRpdXMnKTtcclxuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRSYWRpdXModGhpcy5yYWRpdXMpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5ob3N0LnVwZGF0ZSgpO1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIG9sLnN0eWxlLkNpcmNsZSBpbnN0YW5jZSB3aXRoOiAnLCB0aGlzKTtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc3R5bGUuQ2lyY2xlKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEltYWdlKHRoaXMuaW5zdGFuY2UpO1xyXG4gICAgdGhpcy5ob3N0LnVwZGF0ZSgpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWydyYWRpdXMnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldFJhZGl1cyhjaGFuZ2VzWydyYWRpdXMnXS5jdXJyZW50VmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXN0eWxlLWNpcmNsZSwgc2V0dGluZyBuZXcgcmFkaXVzOiAnLCBjaGFuZ2VzWydyYWRpdXMnXS5jdXJyZW50VmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLXN0eWxlLWNpcmNsZScpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEltYWdlKG51bGwpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/styles/fill.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/styles/fill.component.js
@@ -92,4 +92,4 @@ if (false) {
     /** @type {?} */
     StyleFillComponent.prototype.color;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zdHlsZXMvZmlsbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDN0YsT0FBTyxFQUFFLEtBQUssRUFBb0IsTUFBTSxZQUFZLENBQUM7QUFDckQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzFELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUXRELE1BQU07Ozs7OztJQVFKLFlBQ2MsU0FBeUIsRUFDekIsZUFBcUMsRUFDckMsYUFBaUM7UUFFN0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ2YsTUFBTSxJQUFJLEtBQUssQ0FBQyxvREFBb0QsQ0FBQyxDQUFDO1FBQ3hFLENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztZQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLGFBQWEsQ0FBQztRQUM1QixDQUFDO1FBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcsZUFBZSxDQUFDO1FBQzlCLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDO1FBQ3hCLENBQUM7UUFDRCx1REFBdUQ7SUFDekQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTiwrREFBK0Q7UUFDL0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO1lBQ2hDLEtBQUssT0FBTztnQkFDVixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUMxQyxnRUFBZ0U7Z0JBQ2hFLEtBQUssQ0FBQztZQUNSLEtBQUssWUFBWTtnQkFDZixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUMxQyxLQUFLLENBQUM7WUFDUixLQUFLLGNBQWM7Z0JBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQy9CLHVFQUF1RTtnQkFDdkUsS0FBSyxDQUFDO1lBQ1I7Z0JBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFdkQsQ0FBQztJQUNILENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbkIsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3hELENBQUM7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ25CLG1GQUFtRjtJQUNyRixDQUFDOzs7WUE5REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFUUSxjQUFjLHVCQW1CbEIsUUFBUTtZQWxCSixvQkFBb0IsdUJBbUJ4QixRQUFRO1lBbEJKLGtCQUFrQix1QkFtQnRCLFFBQVE7OztvQkFOVixLQUFLOzs7Ozs7O0lBSE4sa0NBQTZFOztJQUM3RSxzQ0FBNEI7O0lBRTVCLG1DQUN5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9wdGlvbmFsLCBPbkluaXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgc3R5bGUsIENvbG9yLCBDb2xvckxpa2UgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IFN0eWxlQ29tcG9uZW50IH0gZnJvbSAnLi9zdHlsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU3R5bGVDaXJjbGVDb21wb25lbnQgfSBmcm9tICcuL2NpcmNsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU3R5bGVUZXh0Q29tcG9uZW50IH0gZnJvbSAnLi90ZXh0LmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zdHlsZS1maWxsJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLXN0eWxlLWZpbGxcIj48L2Rpdj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgU3R5bGVGaWxsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICAvKiB0aGUgdHlwaW5ncyBkbyBub3QgaGF2ZSB0aGUgc2V0dGVycyAqL1xuICBwcml2YXRlIGhvc3Q6IC8qU3R5bGVDb21wb25lbnR8U3R5bGVDaXJjbGVDb21wb25lbnR8U3R5bGVUZXh0Q29tcG9uZW50Ki8gYW55O1xuICBwdWJsaWMgaW5zdGFuY2U6IHN0eWxlLkZpbGw7XG5cbiAgQElucHV0KClcbiAgY29sb3I6IENvbG9yIHwgQ29sb3JMaWtlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBPcHRpb25hbCgpIHN0eWxlSG9zdDogU3R5bGVDb21wb25lbnQsXG4gICAgQE9wdGlvbmFsKCkgc3R5bGVDaXJjbGVIb3N0OiBTdHlsZUNpcmNsZUNvbXBvbmVudCxcbiAgICBAT3B0aW9uYWwoKSBzdHlsZVRleHRIb3N0OiBTdHlsZVRleHRDb21wb25lbnRcbiAgKSB7XG4gICAgaWYgKCFzdHlsZUhvc3QpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignYW9sLXN0eWxlLXN0cm9rZSBtdXN0IGJlIGEgZGVzY2VuZGFudCBvZiBhb2wtc3R5bGUnKTtcbiAgICB9XG4gICAgaWYgKCEhc3R5bGVUZXh0SG9zdCkge1xuICAgICAgdGhpcy5ob3N0ID0gc3R5bGVUZXh0SG9zdDtcbiAgICB9IGVsc2UgaWYgKCEhc3R5bGVDaXJjbGVIb3N0KSB7XG4gICAgICB0aGlzLmhvc3QgPSBzdHlsZUNpcmNsZUhvc3Q7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaG9zdCA9IHN0eWxlSG9zdDtcbiAgICB9XG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIGFvbC1zdHlsZS1maWxsIHdpdGg6ICcsIHRoaXMpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIG9sLnN0eWxlLkZpbGwgaW5zdGFuY2Ugd2l0aDogJywgdGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzdHlsZS5GaWxsKHRoaXMpO1xuICAgIHN3aXRjaCAodGhpcy5ob3N0LmNvbXBvbmVudFR5cGUpIHtcbiAgICAgIGNhc2UgJ3N0eWxlJzpcbiAgICAgICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEZpbGwodGhpcy5pbnN0YW5jZSk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdzZXR0aW5nIG9sLnN0eWxlIGluc3RhbmNlXFwncyBmaWxsOicsIHRoaXMuaG9zdCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc3R5bGUtdGV4dCc6XG4gICAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRGaWxsKHRoaXMuaW5zdGFuY2UpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3N0eWxlLWNpcmNsZSc6XG4gICAgICAgIHRoaXMuaG9zdC5maWxsID0gdGhpcy5pbnN0YW5jZTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3NldHRpbmcgb2wuc3R5bGUuY2lyY2xlIGluc3RhbmNlXFwncyBmaWxsOicsIHRoaXMuaG9zdCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1bmtub3duIGhvc3QgdHlwZTogJyArIHRoaXMuaG9zdCk7XG4gICAgICAvLyBicmVhaztcbiAgICB9XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydjb2xvciddKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldENvbG9yKGNoYW5nZXNbJ2NvbG9yJ10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgdGhpcy5ob3N0LnVwZGF0ZSgpO1xuICAgIC8vIGNvbnNvbGUubG9nKCdjaGFuZ2VzIGRldGVjdGVkIGluIGFvbC1zdHlsZS1maWxsLCBzZXR0aW5nIG5ldyBjb2xvcjogJywgY2hhbmdlcyk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zdHlsZXMvZmlsbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDN0YsT0FBTyxFQUFFLEtBQUssRUFBb0IsTUFBTSxZQUFZLENBQUM7QUFDckQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzFELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUXRELE1BQU07Ozs7OztJQVFKLFlBQ2MsU0FBeUIsRUFDekIsZUFBcUMsRUFDckMsYUFBaUM7UUFFN0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ2YsTUFBTSxJQUFJLEtBQUssQ0FBQyxvREFBb0QsQ0FBQyxDQUFDO1FBQ3hFLENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztZQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLGFBQWEsQ0FBQztRQUM1QixDQUFDO1FBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcsZUFBZSxDQUFDO1FBQzlCLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDO1FBQ3hCLENBQUM7UUFDRCx1REFBdUQ7SUFDekQsQ0FBQzs7OztJQUVELFFBQVE7UUFDTiwrREFBK0Q7UUFDL0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO1lBQ2hDLEtBQUssT0FBTztnQkFDVixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUMxQyxnRUFBZ0U7Z0JBQ2hFLEtBQUssQ0FBQztZQUNSLEtBQUssWUFBWTtnQkFDZixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUMxQyxLQUFLLENBQUM7WUFDUixLQUFLLGNBQWM7Z0JBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQy9CLHVFQUF1RTtnQkFDdkUsS0FBSyxDQUFDO1lBQ1I7Z0JBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFdkQsQ0FBQztJQUNILENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbkIsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3hELENBQUM7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ25CLG1GQUFtRjtJQUNyRixDQUFDOzs7WUE5REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFUUSxjQUFjLHVCQW1CbEIsUUFBUTtZQWxCSixvQkFBb0IsdUJBbUJ4QixRQUFRO1lBbEJKLGtCQUFrQix1QkFtQnRCLFFBQVE7OztvQkFOVixLQUFLOzs7Ozs7O0lBSE4sa0NBQTZFOztJQUM3RSxzQ0FBNEI7O0lBRTVCLG1DQUN5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9wdGlvbmFsLCBPbkluaXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBzdHlsZSwgQ29sb3IsIENvbG9yTGlrZSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBTdHlsZUNvbXBvbmVudCB9IGZyb20gJy4vc3R5bGUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU3R5bGVDaXJjbGVDb21wb25lbnQgfSBmcm9tICcuL2NpcmNsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTdHlsZVRleHRDb21wb25lbnQgfSBmcm9tICcuL3RleHQuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLXN0eWxlLWZpbGwnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLXN0eWxlLWZpbGxcIj48L2Rpdj5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU3R5bGVGaWxsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xyXG4gIC8qIHRoZSB0eXBpbmdzIGRvIG5vdCBoYXZlIHRoZSBzZXR0ZXJzICovXHJcbiAgcHJpdmF0ZSBob3N0OiAvKlN0eWxlQ29tcG9uZW50fFN0eWxlQ2lyY2xlQ29tcG9uZW50fFN0eWxlVGV4dENvbXBvbmVudCovIGFueTtcclxuICBwdWJsaWMgaW5zdGFuY2U6IHN0eWxlLkZpbGw7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY29sb3I6IENvbG9yIHwgQ29sb3JMaWtlO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIEBPcHRpb25hbCgpIHN0eWxlSG9zdDogU3R5bGVDb21wb25lbnQsXHJcbiAgICBAT3B0aW9uYWwoKSBzdHlsZUNpcmNsZUhvc3Q6IFN0eWxlQ2lyY2xlQ29tcG9uZW50LFxyXG4gICAgQE9wdGlvbmFsKCkgc3R5bGVUZXh0SG9zdDogU3R5bGVUZXh0Q29tcG9uZW50XHJcbiAgKSB7XHJcbiAgICBpZiAoIXN0eWxlSG9zdCkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FvbC1zdHlsZS1zdHJva2UgbXVzdCBiZSBhIGRlc2NlbmRhbnQgb2YgYW9sLXN0eWxlJyk7XHJcbiAgICB9XHJcbiAgICBpZiAoISFzdHlsZVRleHRIb3N0KSB7XHJcbiAgICAgIHRoaXMuaG9zdCA9IHN0eWxlVGV4dEhvc3Q7XHJcbiAgICB9IGVsc2UgaWYgKCEhc3R5bGVDaXJjbGVIb3N0KSB7XHJcbiAgICAgIHRoaXMuaG9zdCA9IHN0eWxlQ2lyY2xlSG9zdDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuaG9zdCA9IHN0eWxlSG9zdDtcclxuICAgIH1cclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBhb2wtc3R5bGUtZmlsbCB3aXRoOiAnLCB0aGlzKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIG9sLnN0eWxlLkZpbGwgaW5zdGFuY2Ugd2l0aDogJywgdGhpcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHN0eWxlLkZpbGwodGhpcyk7XHJcbiAgICBzd2l0Y2ggKHRoaXMuaG9zdC5jb21wb25lbnRUeXBlKSB7XHJcbiAgICAgIGNhc2UgJ3N0eWxlJzpcclxuICAgICAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0RmlsbCh0aGlzLmluc3RhbmNlKTtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygnc2V0dGluZyBvbC5zdHlsZSBpbnN0YW5jZVxcJ3MgZmlsbDonLCB0aGlzLmhvc3QpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdzdHlsZS10ZXh0JzpcclxuICAgICAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0RmlsbCh0aGlzLmluc3RhbmNlKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAnc3R5bGUtY2lyY2xlJzpcclxuICAgICAgICB0aGlzLmhvc3QuZmlsbCA9IHRoaXMuaW5zdGFuY2U7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3NldHRpbmcgb2wuc3R5bGUuY2lyY2xlIGluc3RhbmNlXFwncyBmaWxsOicsIHRoaXMuaG9zdCk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1bmtub3duIGhvc3QgdHlwZTogJyArIHRoaXMuaG9zdCk7XHJcbiAgICAgIC8vIGJyZWFrO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWydjb2xvciddKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0Q29sb3IoY2hhbmdlc1snY29sb3InXS5jdXJyZW50VmFsdWUpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5ob3N0LnVwZGF0ZSgpO1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXN0eWxlLWZpbGwsIHNldHRpbmcgbmV3IGNvbG9yOiAnLCBjaGFuZ2VzKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/styles/icon.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/styles/icon.component.js
@@ -118,4 +118,4 @@ if (false) {
      */
     StyleIconComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zdHlsZXMvaWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDekYsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNuQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFRbkQsTUFBTTs7OztJQXNDSixZQUE0QixJQUFvQjtRQUFwQixTQUFJLEdBQUosSUFBSSxDQUFnQjtJQUFHLENBQUM7Ozs7SUFFcEQsUUFBUTtRQUNOLCtEQUErRDtRQUMvRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzdDLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbkIsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzVELENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM5RCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDeEQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM3QyxDQUFDO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNuQixnRUFBZ0U7SUFDbEUsQ0FBQzs7O1lBdkVGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsY0FBYyx1QkE4Q1IsSUFBSTs7O3FCQW5DaEIsS0FBSzsyQkFFTCxLQUFLOzJCQUVMLEtBQUs7MkJBRUwsS0FBSztvQkFFTCxLQUFLOzBCQUVMLEtBQUs7a0JBRUwsS0FBSztxQkFFTCxLQUFLOzJCQUVMLEtBQUs7c0JBRUwsS0FBSztvQkFFTCxLQUFLOzBCQUVMLEtBQUs7NkJBRUwsS0FBSzt1QkFFTCxLQUFLO21CQUVMLEtBQUs7c0JBRUwsS0FBSztrQkFFTCxLQUFLOzs7O0lBbENOLHNDQUE0Qjs7SUFFNUIsb0NBQ3lCOztJQUN6QiwwQ0FDb0M7O0lBQ3BDLDBDQUNvQzs7SUFDcEMsMENBQytCOztJQUMvQixtQ0FDd0M7O0lBQ3hDLHlDQUM4Qjs7SUFDOUIsaUNBQ1k7O0lBQ1osb0NBQ3lCOztJQUN6QiwwQ0FDK0I7O0lBQy9CLHFDQUNnQjs7SUFDaEIsbUNBQ2M7O0lBQ2QseUNBQ3FCOztJQUNyQiw0Q0FDd0I7O0lBQ3hCLHNDQUNpQjs7SUFDakIsa0NBQ3VCOztJQUN2QixxQ0FDMEI7O0lBQzFCLGlDQUNZOzs7OztJQUVBLGtDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEhvc3QsIE9uSW5pdCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzdHlsZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgU3R5bGVDb21wb25lbnQgfSBmcm9tICcuL3N0eWxlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zdHlsZS1pY29uJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLXN0eWxlLWljb25cIj48L2Rpdj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgU3R5bGVJY29uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICBwdWJsaWMgaW5zdGFuY2U6IHN0eWxlLkljb247XG5cbiAgQElucHV0KClcbiAgYW5jaG9yOiBbbnVtYmVyLCBudW1iZXJdO1xuICBASW5wdXQoKVxuICBhbmNob3JYVW5pdHM6IHN0eWxlLkljb25BbmNob3JVbml0cztcbiAgQElucHV0KClcbiAgYW5jaG9yWVVuaXRzOiBzdHlsZS5JY29uQW5jaG9yVW5pdHM7XG4gIEBJbnB1dCgpXG4gIGFuY2hvck9yaWdpbjogc3R5bGUuSWNvbk9yaWdpbjtcbiAgQElucHV0KClcbiAgY29sb3I6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICBASW5wdXQoKVxuICBjcm9zc09yaWdpbjogc3R5bGUuSWNvbk9yaWdpbjtcbiAgQElucHV0KClcbiAgaW1nOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIG9mZnNldDogW251bWJlciwgbnVtYmVyXTtcbiAgQElucHV0KClcbiAgb2Zmc2V0T3JpZ2luOiBzdHlsZS5JY29uT3JpZ2luO1xuICBASW5wdXQoKVxuICBvcGFjaXR5OiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHNjYWxlOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHNuYXBUb1BpeGVsOiBib29sZWFuO1xuICBASW5wdXQoKVxuICByb3RhdGVXaXRoVmlldzogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgcm90YXRpb246IG51bWJlcjtcbiAgQElucHV0KClcbiAgc2l6ZTogW251bWJlciwgbnVtYmVyXTtcbiAgQElucHV0KClcbiAgaW1nU2l6ZTogW251bWJlciwgbnVtYmVyXTtcbiAgQElucHV0KClcbiAgc3JjOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoQEhvc3QoKSBwcml2YXRlIGhvc3Q6IFN0eWxlQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5zdHlsZS5JY29uIGluc3RhbmNlIHdpdGg6ICcsIHRoaXMpO1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc3R5bGUuSWNvbih0aGlzKTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0SW1hZ2UodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydvcGFjaXR5J10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0T3BhY2l0eShjaGFuZ2VzWydvcGFjaXR5J10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXNbJ3JvdGF0aW9uJ10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0Um90YXRpb24oY2hhbmdlc1sncm90YXRpb24nXS5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgICBpZiAoY2hhbmdlc1snc2NhbGUnXSkge1xuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRTY2FsZShjaGFuZ2VzWydzY2FsZSddLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydzcmMnXSkge1xuICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzdHlsZS5JY29uKHRoaXMpO1xuICAgICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEltYWdlKHRoaXMuaW5zdGFuY2UpO1xuICAgIH1cbiAgICB0aGlzLmhvc3QudXBkYXRlKCk7XG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXN0eWxlLWljb246ICcsIGNoYW5nZXMpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zdHlsZXMvaWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDekYsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNuQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFRbkQsTUFBTTs7OztJQXNDSixZQUE0QixJQUFvQjtRQUFwQixTQUFJLEdBQUosSUFBSSxDQUFnQjtJQUFHLENBQUM7Ozs7SUFFcEQsUUFBUTtRQUNOLCtEQUErRDtRQUMvRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzdDLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbkIsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzVELENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM5RCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDeEQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM3QyxDQUFDO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNuQixnRUFBZ0U7SUFDbEUsQ0FBQzs7O1lBdkVGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixRQUFRLEVBQUU7O0dBRVQ7YUFDRjs7O1lBUFEsY0FBYyx1QkE4Q1IsSUFBSTs7O3FCQW5DaEIsS0FBSzsyQkFFTCxLQUFLOzJCQUVMLEtBQUs7MkJBRUwsS0FBSztvQkFFTCxLQUFLOzBCQUVMLEtBQUs7a0JBRUwsS0FBSztxQkFFTCxLQUFLOzJCQUVMLEtBQUs7c0JBRUwsS0FBSztvQkFFTCxLQUFLOzBCQUVMLEtBQUs7NkJBRUwsS0FBSzt1QkFFTCxLQUFLO21CQUVMLEtBQUs7c0JBRUwsS0FBSztrQkFFTCxLQUFLOzs7O0lBbENOLHNDQUE0Qjs7SUFFNUIsb0NBQ3lCOztJQUN6QiwwQ0FDb0M7O0lBQ3BDLDBDQUNvQzs7SUFDcEMsMENBQytCOztJQUMvQixtQ0FDd0M7O0lBQ3hDLHlDQUM4Qjs7SUFDOUIsaUNBQ1k7O0lBQ1osb0NBQ3lCOztJQUN6QiwwQ0FDK0I7O0lBQy9CLHFDQUNnQjs7SUFDaEIsbUNBQ2M7O0lBQ2QseUNBQ3FCOztJQUNyQiw0Q0FDd0I7O0lBQ3hCLHNDQUNpQjs7SUFDakIsa0NBQ3VCOztJQUN2QixxQ0FDMEI7O0lBQzFCLGlDQUNZOzs7OztJQUVBLGtDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEhvc3QsIE9uSW5pdCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHN0eWxlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IFN0eWxlQ29tcG9uZW50IH0gZnJvbSAnLi9zdHlsZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc3R5bGUtaWNvbicsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxkaXYgY2xhc3M9XCJhb2wtc3R5bGUtaWNvblwiPjwvZGl2PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTdHlsZUljb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgcHVibGljIGluc3RhbmNlOiBzdHlsZS5JY29uO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGFuY2hvcjogW251bWJlciwgbnVtYmVyXTtcclxuICBASW5wdXQoKVxyXG4gIGFuY2hvclhVbml0czogc3R5bGUuSWNvbkFuY2hvclVuaXRzO1xyXG4gIEBJbnB1dCgpXHJcbiAgYW5jaG9yWVVuaXRzOiBzdHlsZS5JY29uQW5jaG9yVW5pdHM7XHJcbiAgQElucHV0KClcclxuICBhbmNob3JPcmlnaW46IHN0eWxlLkljb25PcmlnaW47XHJcbiAgQElucHV0KClcclxuICBjb2xvcjogW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XHJcbiAgQElucHV0KClcclxuICBjcm9zc09yaWdpbjogc3R5bGUuSWNvbk9yaWdpbjtcclxuICBASW5wdXQoKVxyXG4gIGltZzogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgb2Zmc2V0OiBbbnVtYmVyLCBudW1iZXJdO1xyXG4gIEBJbnB1dCgpXHJcbiAgb2Zmc2V0T3JpZ2luOiBzdHlsZS5JY29uT3JpZ2luO1xyXG4gIEBJbnB1dCgpXHJcbiAgb3BhY2l0eTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgc2NhbGU6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHNuYXBUb1BpeGVsOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgcm90YXRlV2l0aFZpZXc6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICByb3RhdGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgc2l6ZTogW251bWJlciwgbnVtYmVyXTtcclxuICBASW5wdXQoKVxyXG4gIGltZ1NpemU6IFtudW1iZXIsIG51bWJlcl07XHJcbiAgQElucHV0KClcclxuICBzcmM6IHN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IoQEhvc3QoKSBwcml2YXRlIGhvc3Q6IFN0eWxlQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5zdHlsZS5JY29uIGluc3RhbmNlIHdpdGg6ICcsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzdHlsZS5JY29uKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEltYWdlKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWydvcGFjaXR5J10pIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRPcGFjaXR5KGNoYW5nZXNbJ29wYWNpdHknXS5jdXJyZW50VmFsdWUpO1xyXG4gICAgfVxyXG4gICAgaWYgKGNoYW5nZXNbJ3JvdGF0aW9uJ10pIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRSb3RhdGlvbihjaGFuZ2VzWydyb3RhdGlvbiddLmN1cnJlbnRWYWx1ZSk7XHJcbiAgICB9XHJcbiAgICBpZiAoY2hhbmdlc1snc2NhbGUnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldFNjYWxlKGNoYW5nZXNbJ3NjYWxlJ10uY3VycmVudFZhbHVlKTtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWydzcmMnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlID0gbmV3IHN0eWxlLkljb24odGhpcyk7XHJcbiAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRJbWFnZSh0aGlzLmluc3RhbmNlKTtcclxuICAgIH1cclxuICAgIHRoaXMuaG9zdC51cGRhdGUoKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjaGFuZ2VzIGRldGVjdGVkIGluIGFvbC1zdHlsZS1pY29uOiAnLCBjaGFuZ2VzKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/styles/stroke.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/styles/stroke.component.js
@@ -122,4 +122,4 @@ if (false) {
     /** @type {?} */
     StyleStrokeComponent.prototype.width;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Ryb2tlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3N0eWxlcy9zdHJva2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQW9DLE1BQU0sZUFBZSxDQUFDO0FBQzdGLE9BQU8sRUFBRSxLQUFLLEVBQVMsTUFBTSxZQUFZLENBQUM7QUFDMUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzFELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUXRELE1BQU07Ozs7OztJQWtCSixZQUNjLFNBQXlCLEVBQ3pCLGVBQXFDLEVBQ3JDLGFBQWlDO1FBRTdDLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNmLE1BQU0sSUFBSSxLQUFLLENBQUMsb0RBQW9ELENBQUMsQ0FBQztRQUN4RSxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7WUFDcEIsSUFBSSxDQUFDLElBQUksR0FBRyxhQUFhLENBQUM7UUFDNUIsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztZQUM3QixJQUFJLENBQUMsSUFBSSxHQUFHLGVBQWUsQ0FBQztRQUM5QixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixJQUFJLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQztRQUN4QixDQUFDO1FBQ0QseURBQXlEO0lBQzNELENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04saUVBQWlFO1FBQ2pFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMs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QzVCLHdDQUMrQjs7SUFDL0Isd0NBQzZCOztJQUM3QiwwQ0FDK0I7O0lBQy9CLHFDQUMwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9wdGlvbmFsLCBPbkluaXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgc3R5bGUsIENvbG9yIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBTdHlsZUNvbXBvbmVudCB9IGZyb20gJy4vc3R5bGUuY29tcG9uZW50JztcbmltcG9ydCB7IFN0eWxlQ2lyY2xlQ29tcG9uZW50IH0gZnJvbSAnLi9jaXJjbGUuY29tcG9uZW50JztcbmltcG9ydCB7IFN0eWxlVGV4dENvbXBvbmVudCB9IGZyb20gJy4vdGV4dC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc3R5bGUtc3Ryb2tlJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLXN0eWxlLXN0cm9rZVwiPjwvZGl2PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBTdHlsZVN0cm9rZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgcHVibGljIGluc3RhbmNlOiBzdHlsZS5TdHJva2U7XG4gIC8qIHRoZSB0eXBpbmdzIGRvIG5vdCBoYXZlIHRoZSBzZXR0ZXJzICovXG4gIHByaXZhdGUgaG9zdDogLypTdHlsZUNvbXBvbmVudHxTdHlsZUNpcmNsZUNvbXBvbmVudHxTdHlsZVRleHRDb21wb25lbnQqLyBhbnk7XG5cbiAgQElucHV0KClcbiAgY29sb3I6IENvbG9yIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKVxuICBsaW5lQ2FwOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIEBJbnB1dCgpXG4gIGxpbmVEYXNoOiBudW1iZXJbXSB8IHVuZGVmaW5lZDtcbiAgQElucHV0KClcbiAgbGluZUpvaW46IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgQElucHV0KClcbiAgbWl0ZXJMaW1pdDogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKVxuICB3aWR0aDogbnVtYmVyIHwgdW5kZWZpbmVkO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBPcHRpb25hbCgpIHN0eWxlSG9zdDogU3R5bGVDb21wb25lbnQsXG4gICAgQE9wdGlvbmFsKCkgc3R5bGVDaXJjbGVIb3N0OiBTdHlsZUNpcmNsZUNvbXBvbmVudCxcbiAgICBAT3B0aW9uYWwoKSBzdHlsZVRleHRIb3N0OiBTdHlsZVRleHRDb21wb25lbnRcbiAgKSB7XG4gICAgaWYgKCFzdHlsZUhvc3QpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignYW9sLXN0eWxlLXN0cm9rZSBtdXN0IGJlIGEgZGVzY2VuZGFudCBvZiBhb2wtc3R5bGUnKTtcbiAgICB9XG4gICAgaWYgKCEhc3R5bGVUZXh0SG9zdCkge1xuICAgICAgdGhpcy5ob3N0ID0gc3R5bGVUZXh0SG9zdDtcbiAgICB9IGVsc2UgaWYgKCEhc3R5bGVDaXJjbGVIb3N0KSB7XG4gICAgICB0aGlzLmhvc3QgPSBzdHlsZUNpcmNsZUhvc3Q7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaG9zdCA9IHN0eWxlSG9zdDtcbiAgICB9XG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIGFvbC1zdHlsZS1zdHJva2Ugd2l0aDogJywgdGhpcyk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgb2wuc3R5bGUuU3Ryb2tlIGluc3RhbmNlIHdpdGg6ICcsIHRoaXMpO1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc3R5bGUuU3Ryb2tlKHRoaXMpO1xuICAgIHN3aXRjaCAodGhpcy5ob3N0LmNvbXBvbmVudFR5cGUpIHtcbiAgICAgIGNhc2UgJ3N0eWxlJzpcbiAgICAgICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFN0cm9rZSh0aGlzLmluc3RhbmNlKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3NldHRpbmcgb2wuc3R5bGUgaW5zdGFuY2VcXCdzIHN0cm9rZTonLCB0aGlzLmhvc3QpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3N0eWxlLXRleHQnOlxuICAgICAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U3Ryb2tlKHRoaXMuaW5zdGFuY2UpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3N0eWxlLWNpcmNsZSc6XG4gICAgICAgIHRoaXMuaG9zdC5zdHJva2UgPSB0aGlzLmluc3RhbmNlO1xuICAgICAgICAvLyBjb25zb2xlLmxvZygnc2V0dGluZyBvbC5zdHlsZS5jaXJjbGUgaW5zdGFuY2VcXCdzIHN0cm9rZTonLCB0aGlzLmhvc3QpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biBob3N0IHR5cGU6ICcgKyB0aGlzLmhvc3QpO1xuICAgICAgLy8gYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoY2hhbmdlc1snY29sb3InXSkge1xuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRDb2xvcihjaGFuZ2VzWydjb2xvciddLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydsaW5lQ2FwJ10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0TGluZUNhcChjaGFuZ2VzWydsaW5lQ2FwJ10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXNbJ2xpbmVEYXNoJ10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0TGluZURhc2goY2hhbmdlc1snbGluZURhc2gnXS5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgICBpZiAoY2hhbmdlc1snbGluZUpvaW4nXSkge1xuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRMaW5lSm9pbihjaGFuZ2VzWydsaW5lSm9pbiddLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydtaXRlckxpbWl0J10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0TWl0ZXJMaW1pdChjaGFuZ2VzWydtaXRlckxpbWl0J10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXNbJ3dpZHRoJ10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0V2lkdGgoY2hhbmdlc1snd2lkdGgnXS5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgICB0aGlzLmhvc3QudXBkYXRlKCk7XG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXN0eWxlLXN0cm9rZSwgc2V0dGluZyBuZXcgcHJvcGVydGllczogJywgY2hhbmdlcyk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Ryb2tlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3N0eWxlcy9zdHJva2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQW9DLE1BQU0sZUFBZSxDQUFDO0FBQzdGLE9BQU8sRUFBRSxLQUFLLEVBQVMsTUFBTSxZQUFZLENBQUM7QUFDMUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzFELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBUXRELE1BQU07Ozs7OztJQWtCSixZQUNjLFNBQXlCLEVBQ3pCLGVBQXFDLEVBQ3JDLGFBQWlDO1FBRTdDLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNmLE1BQU0sSUFBSSxLQUFLLENBQUMsb0RBQW9ELENBQUMsQ0FBQztRQUN4RSxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7WUFDcEIsSUFBSSxDQUFDLElBQUksR0FBRyxhQUFhLENBQUM7UUFDNUIsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztZQUM3QixJQUFJLENBQUMsSUFBSSxHQUFHLGVBQWUsQ0FBQztRQUM5QixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixJQUFJLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQztRQUN4QixDQUFDO1FBQ0QseURBQXlEO0lBQzNELENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04saUVBQWlFO1FBQ2pFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMs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QzVCLHdDQUMrQjs7SUFDL0Isd0NBQzZCOztJQUM3QiwwQ0FDK0I7O0lBQy9CLHFDQUMwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9wdGlvbmFsLCBPbkluaXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBzdHlsZSwgQ29sb3IgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgU3R5bGVDb21wb25lbnQgfSBmcm9tICcuL3N0eWxlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFN0eWxlQ2lyY2xlQ29tcG9uZW50IH0gZnJvbSAnLi9jaXJjbGUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU3R5bGVUZXh0Q29tcG9uZW50IH0gZnJvbSAnLi90ZXh0LmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zdHlsZS1zdHJva2UnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLXN0eWxlLXN0cm9rZVwiPjwvZGl2PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTdHlsZVN0cm9rZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuICBwdWJsaWMgaW5zdGFuY2U6IHN0eWxlLlN0cm9rZTtcclxuICAvKiB0aGUgdHlwaW5ncyBkbyBub3QgaGF2ZSB0aGUgc2V0dGVycyAqL1xyXG4gIHByaXZhdGUgaG9zdDogLypTdHlsZUNvbXBvbmVudHxTdHlsZUNpcmNsZUNvbXBvbmVudHxTdHlsZVRleHRDb21wb25lbnQqLyBhbnk7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY29sb3I6IENvbG9yIHwgdW5kZWZpbmVkO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGluZUNhcDogc3RyaW5nIHwgdW5kZWZpbmVkO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGluZURhc2g6IG51bWJlcltdIHwgdW5kZWZpbmVkO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGluZUpvaW46IHN0cmluZyB8IHVuZGVmaW5lZDtcclxuICBASW5wdXQoKVxyXG4gIG1pdGVyTGltaXQ6IG51bWJlciB8IHVuZGVmaW5lZDtcclxuICBASW5wdXQoKVxyXG4gIHdpZHRoOiBudW1iZXIgfCB1bmRlZmluZWQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgQE9wdGlvbmFsKCkgc3R5bGVIb3N0OiBTdHlsZUNvbXBvbmVudCxcclxuICAgIEBPcHRpb25hbCgpIHN0eWxlQ2lyY2xlSG9zdDogU3R5bGVDaXJjbGVDb21wb25lbnQsXHJcbiAgICBAT3B0aW9uYWwoKSBzdHlsZVRleHRIb3N0OiBTdHlsZVRleHRDb21wb25lbnRcclxuICApIHtcclxuICAgIGlmICghc3R5bGVIb3N0KSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignYW9sLXN0eWxlLXN0cm9rZSBtdXN0IGJlIGEgZGVzY2VuZGFudCBvZiBhb2wtc3R5bGUnKTtcclxuICAgIH1cclxuICAgIGlmICghIXN0eWxlVGV4dEhvc3QpIHtcclxuICAgICAgdGhpcy5ob3N0ID0gc3R5bGVUZXh0SG9zdDtcclxuICAgIH0gZWxzZSBpZiAoISFzdHlsZUNpcmNsZUhvc3QpIHtcclxuICAgICAgdGhpcy5ob3N0ID0gc3R5bGVDaXJjbGVIb3N0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5ob3N0ID0gc3R5bGVIb3N0O1xyXG4gICAgfVxyXG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIGFvbC1zdHlsZS1zdHJva2Ugd2l0aDogJywgdGhpcyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5zdHlsZS5TdHJva2UgaW5zdGFuY2Ugd2l0aDogJywgdGhpcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHN0eWxlLlN0cm9rZSh0aGlzKTtcclxuICAgIHN3aXRjaCAodGhpcy5ob3N0LmNvbXBvbmVudFR5cGUpIHtcclxuICAgICAgY2FzZSAnc3R5bGUnOlxyXG4gICAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTdHJva2UodGhpcy5pbnN0YW5jZSk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3NldHRpbmcgb2wuc3R5bGUgaW5zdGFuY2VcXCdzIHN0cm9rZTonLCB0aGlzLmhvc3QpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdzdHlsZS10ZXh0JzpcclxuICAgICAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U3Ryb2tlKHRoaXMuaW5zdGFuY2UpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdzdHlsZS1jaXJjbGUnOlxyXG4gICAgICAgIHRoaXMuaG9zdC5zdHJva2UgPSB0aGlzLmluc3RhbmNlO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdzZXR0aW5nIG9sLnN0eWxlLmNpcmNsZSBpbnN0YW5jZVxcJ3Mgc3Ryb2tlOicsIHRoaXMuaG9zdCk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1bmtub3duIGhvc3QgdHlwZTogJyArIHRoaXMuaG9zdCk7XHJcbiAgICAgIC8vIGJyZWFrO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWydjb2xvciddKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0Q29sb3IoY2hhbmdlc1snY29sb3InXS5jdXJyZW50VmFsdWUpO1xyXG4gICAgfVxyXG4gICAgaWYgKGNoYW5nZXNbJ2xpbmVDYXAnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldExpbmVDYXAoY2hhbmdlc1snbGluZUNhcCddLmN1cnJlbnRWYWx1ZSk7XHJcbiAgICB9XHJcbiAgICBpZiAoY2hhbmdlc1snbGluZURhc2gnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldExpbmVEYXNoKGNoYW5nZXNbJ2xpbmVEYXNoJ10uY3VycmVudFZhbHVlKTtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWydsaW5lSm9pbiddKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0TGluZUpvaW4oY2hhbmdlc1snbGluZUpvaW4nXS5jdXJyZW50VmFsdWUpO1xyXG4gICAgfVxyXG4gICAgaWYgKGNoYW5nZXNbJ21pdGVyTGltaXQnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldE1pdGVyTGltaXQoY2hhbmdlc1snbWl0ZXJMaW1pdCddLmN1cnJlbnRWYWx1ZSk7XHJcbiAgICB9XHJcbiAgICBpZiAoY2hhbmdlc1snd2lkdGgnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldFdpZHRoKGNoYW5nZXNbJ3dpZHRoJ10uY3VycmVudFZhbHVlKTtcclxuICAgIH1cclxuICAgIHRoaXMuaG9zdC51cGRhdGUoKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjaGFuZ2VzIGRldGVjdGVkIGluIGFvbC1zdHlsZS1zdHJva2UsIHNldHRpbmcgbmV3IHByb3BlcnRpZXM6ICcsIGNoYW5nZXMpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/styles/style.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/styles/style.component.js
@@ -78,4 +78,4 @@ if (false) {
     /** @type {?} */
     StyleComponent.prototype.zIndex;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc3R5bGVzL3N0eWxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxLQUFLLEVBQStCLE1BQU0sWUFBWSxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBUXZFLE1BQU07Ozs7O0lBa0JKLFlBQXdCLFdBQTZCLEVBQWMsU0FBK0I7UUFmM0Ysa0JBQWEsR0FBRyxPQUFPLENBQUM7UUFnQjdCLHFDQUFxQztRQUNyQyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQ3BELEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDZixNQUFNLElBQUksS0FBSyxDQUFDLG1EQUFtRCxDQUFDLENBQUM7UUFDdkUsQ0FBQztJQUNILENBQUM7Ozs7SUFFRCxNQUFNO1FBQ0osc0RBQXNEO1FBQ3RELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQy9CLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sMkRBQTJEO1FBQzNELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDN0MsQ0FBQzs7O1lBekNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsV0FBVztnQkFDckIsUUFBUSxFQUFFOztHQUVUO2FBQ0Y7OztZQVJRLGdCQUFnQix1QkEyQlYsUUFBUTtZQTFCZCxvQkFBb0IsdUJBMEI2QixRQUFROzs7dUJBYi9ELEtBQUs7bUJBRUwsS0FBSztvQkFFTCxLQUFLO3FCQUVMLEtBQUs7bUJBRUwsS0FBSztxQkFFTCxLQUFLOzs7Ozs7O0lBZE4sOEJBQXNEOztJQUN0RCxrQ0FBNkI7O0lBQzdCLHVDQUErQjs7SUFFL0Isa0NBQ3lEOztJQUN6RCw4QkFDaUI7O0lBQ2pCLCtCQUNtQjs7SUFDbkIsZ0NBQ3FCOztJQUNyQiw4QkFDaUI7O0lBQ2pCLGdDQUNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3B0aW9uYWwsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgc3R5bGUsIFN0eWxlR2VvbWV0cnlGdW5jdGlvbiwgZ2VvbSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgRmVhdHVyZUNvbXBvbmVudCB9IGZyb20gJy4uL2ZlYXR1cmUuY29tcG9uZW50JztcbmltcG9ydCB7IExheWVyVmVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydmVjdG9yLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zdHlsZScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBTdHlsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHByaXZhdGUgaG9zdDogRmVhdHVyZUNvbXBvbmVudCB8IExheWVyVmVjdG9yQ29tcG9uZW50O1xuICBwdWJsaWMgaW5zdGFuY2U6IHN0eWxlLlN0eWxlO1xuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdzdHlsZSc7XG5cbiAgQElucHV0KClcbiAgZ2VvbWV0cnk6IHN0cmluZyB8IGdlb20uR2VvbWV0cnkgfCBTdHlsZUdlb21ldHJ5RnVuY3Rpb247XG4gIEBJbnB1dCgpXG4gIGZpbGw6IHN0eWxlLkZpbGw7XG4gIEBJbnB1dCgpXG4gIGltYWdlOiBzdHlsZS5JbWFnZTtcbiAgQElucHV0KClcbiAgc3Ryb2tlOiBzdHlsZS5TdHJva2U7XG4gIEBJbnB1dCgpXG4gIHRleHQ6IHN0eWxlLlRleHQ7XG4gIEBJbnB1dCgpXG4gIHpJbmRleDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGZlYXR1cmVIb3N0OiBGZWF0dXJlQ29tcG9uZW50LCBAT3B0aW9uYWwoKSBsYXllckhvc3Q6IExheWVyVmVjdG9yQ29tcG9uZW50KSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIGFvbC1zdHlsZScpO1xuICAgIHRoaXMuaG9zdCA9ICEhZmVhdHVyZUhvc3QgPyBmZWF0dXJlSG9zdCA6IGxheWVySG9zdDtcbiAgICBpZiAoIXRoaXMuaG9zdCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdhb2wtc3R5bGUgbXVzdCBiZSBhcHBsaWVkIHRvIGEgZmVhdHVyZSBvciBhIGxheWVyJyk7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlKCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCd1cGRhdGluZyBzdHlsZVxcJ3MgaG9zdDogJywgdGhpcy5ob3N0KTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2UuY2hhbmdlZCgpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIGFvbC1zdHlsZSBpbnN0YW5jZSB3aXRoOiAnLCB0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHN0eWxlLlN0eWxlKHRoaXMpO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTdHlsZSh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc3R5bGVzL3N0eWxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxLQUFLLEVBQStCLE1BQU0sWUFBWSxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBUXZFLE1BQU07Ozs7O0lBa0JKLFlBQXdCLFdBQTZCLEVBQWMsU0FBK0I7UUFmM0Ysa0JBQWEsR0FBRyxPQUFPLENBQUM7UUFnQjdCLHFDQUFxQztRQUNyQyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQ3BELEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDZixNQUFNLElBQUksS0FBSyxDQUFDLG1EQUFtRCxDQUFDLENBQUM7UUFDdkUsQ0FBQztJQUNILENBQUM7Ozs7SUFFRCxNQUFNO1FBQ0osc0RBQXNEO1FBQ3RELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQy9CLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sMkRBQTJEO1FBQzNELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDN0MsQ0FBQzs7O1lBekNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsV0FBVztnQkFDckIsUUFBUSxFQUFFOztHQUVUO2FBQ0Y7OztZQVJRLGdCQUFnQix1QkEyQlYsUUFBUTtZQTFCZCxvQkFBb0IsdUJBMEI2QixRQUFROzs7dUJBYi9ELEtBQUs7bUJBRUwsS0FBSztvQkFFTCxLQUFLO3FCQUVMLEtBQUs7bUJBRUwsS0FBSztxQkFFTCxLQUFLOzs7Ozs7O0lBZE4sOEJBQXNEOztJQUN0RCxrQ0FBNkI7O0lBQzdCLHVDQUErQjs7SUFFL0Isa0NBQ3lEOztJQUN6RCw4QkFDaUI7O0lBQ2pCLCtCQUNtQjs7SUFDbkIsZ0NBQ3FCOztJQUNyQiw4QkFDaUI7O0lBQ2pCLGdDQUNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3B0aW9uYWwsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBzdHlsZSwgU3R5bGVHZW9tZXRyeUZ1bmN0aW9uLCBnZW9tIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IEZlYXR1cmVDb21wb25lbnQgfSBmcm9tICcuLi9mZWF0dXJlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExheWVyVmVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydmVjdG9yLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zdHlsZScsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU3R5bGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIHByaXZhdGUgaG9zdDogRmVhdHVyZUNvbXBvbmVudCB8IExheWVyVmVjdG9yQ29tcG9uZW50O1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogc3R5bGUuU3R5bGU7XHJcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnc3R5bGUnO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGdlb21ldHJ5OiBzdHJpbmcgfCBnZW9tLkdlb21ldHJ5IHwgU3R5bGVHZW9tZXRyeUZ1bmN0aW9uO1xyXG4gIEBJbnB1dCgpXHJcbiAgZmlsbDogc3R5bGUuRmlsbDtcclxuICBASW5wdXQoKVxyXG4gIGltYWdlOiBzdHlsZS5JbWFnZTtcclxuICBASW5wdXQoKVxyXG4gIHN0cm9rZTogc3R5bGUuU3Ryb2tlO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGV4dDogc3R5bGUuVGV4dDtcclxuICBASW5wdXQoKVxyXG4gIHpJbmRleDogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBmZWF0dXJlSG9zdDogRmVhdHVyZUNvbXBvbmVudCwgQE9wdGlvbmFsKCkgbGF5ZXJIb3N0OiBMYXllclZlY3RvckNvbXBvbmVudCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIGFvbC1zdHlsZScpO1xyXG4gICAgdGhpcy5ob3N0ID0gISFmZWF0dXJlSG9zdCA/IGZlYXR1cmVIb3N0IDogbGF5ZXJIb3N0O1xyXG4gICAgaWYgKCF0aGlzLmhvc3QpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdhb2wtc3R5bGUgbXVzdCBiZSBhcHBsaWVkIHRvIGEgZmVhdHVyZSBvciBhIGxheWVyJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygndXBkYXRpbmcgc3R5bGVcXCdzIGhvc3Q6ICcsIHRoaXMuaG9zdCk7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2UuY2hhbmdlZCgpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgYW9sLXN0eWxlIGluc3RhbmNlIHdpdGg6ICcsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzdHlsZS5TdHlsZSh0aGlzKTtcclxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTdHlsZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/styles/text.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/styles/text.component.js
@@ -112,4 +112,4 @@ if (false) {
      */
     StyleTextComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zdHlsZXMvdGV4dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDN0YsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNuQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFRbkQsTUFBTTs7OztJQXVCSixZQUFnQyxJQUFvQjtRQUFwQixTQUFJLEdBQUosSUFBSSxDQUFnQjtRQXJCN0Msa0JBQWEsR0FBRyxZQUFZLENBQUM7UUFzQmxDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNWLE1BQU0sSUFBSSxLQUFLLENBQUMsa0RBQWtELENBQUMsQ0FBQztRQUN0RSxDQUFDO1FBQ0QsdURBQXVEO0lBQ3pELENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sK0RBQStEO1FBQy9ELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDNUMsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQixJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDdEQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzVELENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM1RCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDeEQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDeEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzlELENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3BCLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUN0RCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN6QixJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDaEUsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDNUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3RFLENBQUM7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ25CLHdGQUF3RjtJQUMxRixDQUFDOzs7WUF4RUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFQUSxjQUFjLHVCQStCUixRQUFROzs7bUJBbkJwQixLQUFLO3NCQUVMLEtBQUs7c0JBRUwsS0FBSztvQkFFTCxLQUFLOzZCQUVMLEtBQUs7dUJBRUwsS0FBSzttQkFFTCxLQUFLO3dCQUVMLEtBQUs7MkJBRUwsS0FBSzs7OztJQW5CTixzQ0FBNEI7O0lBQzVCLDJDQUFvQzs7SUFFcEMsa0NBQ3lCOztJQUN6QixxQ0FDNEI7O0lBQzVCLHFDQUM0Qjs7SUFDNUIsbUNBQzBCOztJQUMxQiw0Q0FDb0M7O0lBQ3BDLHNDQUM2Qjs7SUFDN0Isa0NBQ3lCOztJQUN6Qix1Q0FDOEI7O0lBQzlCLDBDQUNpQzs7Ozs7SUFFckIsa0NBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3B0aW9uYWwsIE9uSW5pdCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzdHlsZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgU3R5bGVDb21wb25lbnQgfSBmcm9tICcuL3N0eWxlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zdHlsZS10ZXh0JyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLXN0eWxlLXRleHRcIj48L2Rpdj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgU3R5bGVUZXh0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICBwdWJsaWMgaW5zdGFuY2U6IHN0eWxlLlRleHQ7XG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ3N0eWxlLXRleHQnO1xuXG4gIEBJbnB1dCgpXG4gIGZvbnQ6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgQElucHV0KClcbiAgb2Zmc2V0WDogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKVxuICBvZmZzZXRZOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIEBJbnB1dCgpXG4gIHNjYWxlOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIEBJbnB1dCgpXG4gIHJvdGF0ZVdpdGhWaWV3OiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKVxuICByb3RhdGlvbjogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKVxuICB0ZXh0OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIEBJbnB1dCgpXG4gIHRleHRBbGlnbjogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKVxuICB0ZXh0QmFzZUxpbmU6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBwcml2YXRlIGhvc3Q6IFN0eWxlQ29tcG9uZW50KSB7XG4gICAgaWYgKCFob3N0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FvbC1zdHlsZS10ZXh0IG11c3QgYmUgYSBkZXNjZW5kYW50IG9mIGFvbC1zdHlsZScpO1xuICAgIH1cbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgYW9sLXN0eWxlLXRleHQgd2l0aDogJywgdGhpcyk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgb2wuc3R5bGUuVGV4dCBpbnN0YW5jZSB3aXRoOiAnLCB0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHN0eWxlLlRleHQodGhpcyk7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFRleHQodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydmb250J10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0Rm9udChjaGFuZ2VzWydmb250J10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXNbJ29mZnNldFgnXSkge1xuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRPZmZzZXRYKGNoYW5nZXNbJ29mZnNldFgnXS5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgICBpZiAoY2hhbmdlc1snb2Zmc2V0WSddKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldE9mZnNldFkoY2hhbmdlc1snb2Zmc2V0WSddLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydzY2FsZSddKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldFNjYWxlKGNoYW5nZXNbJ3NjYWxlJ10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXNbJ3JvdGF0aW9uJ10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0Um90YXRpb24oY2hhbmdlc1sncm90YXRpb24nXS5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgICBpZiAoY2hhbmdlc1sndGV4dCddKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldFRleHQoY2hhbmdlc1sndGV4dCddLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWyd0ZXh0QWxpZ24nXSkge1xuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRUZXh0QWxpZ24oY2hhbmdlc1sndGV4dEFsaWduJ10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXNbJ3RleHRCYXNlTGluZSddKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldFRleHRCYXNlbGluZShjaGFuZ2VzWyd0ZXh0QmFzZUxpbmUnXS5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgICB0aGlzLmhvc3QudXBkYXRlKCk7XG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXN0eWxlLXRleHQsIHNldHRpbmcgbmV3IHByb3BlcnRpZXM6ICcsIGNoYW5nZXMpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zdHlsZXMvdGV4dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDN0YsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNuQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFRbkQsTUFBTTs7OztJQXVCSixZQUFnQyxJQUFvQjtRQUFwQixTQUFJLEdBQUosSUFBSSxDQUFnQjtRQXJCN0Msa0JBQWEsR0FBRyxZQUFZLENBQUM7UUFzQmxDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNWLE1BQU0sSUFBSSxLQUFLLENBQUMsa0RBQWtELENBQUMsQ0FBQztRQUN0RSxDQUFDO1FBQ0QsdURBQXVEO0lBQ3pELENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sK0RBQStEO1FBQy9ELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDNUMsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQixJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDdEQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzVELENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM1RCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDeEQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDeEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzlELENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3BCLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUN0RCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN6QixJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDaEUsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDNUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3RFLENBQUM7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ25CLHdGQUF3RjtJQUMxRixDQUFDOzs7WUF4RUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLFFBQVEsRUFBRTs7R0FFVDthQUNGOzs7WUFQUSxjQUFjLHVCQStCUixRQUFROzs7bUJBbkJwQixLQUFLO3NCQUVMLEtBQUs7c0JBRUwsS0FBSztvQkFFTCxLQUFLOzZCQUVMLEtBQUs7dUJBRUwsS0FBSzttQkFFTCxLQUFLO3dCQUVMLEtBQUs7MkJBRUwsS0FBSzs7OztJQW5CTixzQ0FBNEI7O0lBQzVCLDJDQUFvQzs7SUFFcEMsa0NBQ3lCOztJQUN6QixxQ0FDNEI7O0lBQzVCLHFDQUM0Qjs7SUFDNUIsbUNBQzBCOztJQUMxQiw0Q0FDb0M7O0lBQ3BDLHNDQUM2Qjs7SUFDN0Isa0NBQ3lCOztJQUN6Qix1Q0FDOEI7O0lBQzlCLDBDQUNpQzs7Ozs7SUFFckIsa0NBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3B0aW9uYWwsIE9uSW5pdCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHN0eWxlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IFN0eWxlQ29tcG9uZW50IH0gZnJvbSAnLi9zdHlsZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc3R5bGUtdGV4dCcsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxkaXYgY2xhc3M9XCJhb2wtc3R5bGUtdGV4dFwiPjwvZGl2PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTdHlsZVRleHRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgcHVibGljIGluc3RhbmNlOiBzdHlsZS5UZXh0O1xyXG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ3N0eWxlLXRleHQnO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGZvbnQ6IHN0cmluZyB8IHVuZGVmaW5lZDtcclxuICBASW5wdXQoKVxyXG4gIG9mZnNldFg6IG51bWJlciB8IHVuZGVmaW5lZDtcclxuICBASW5wdXQoKVxyXG4gIG9mZnNldFk6IG51bWJlciB8IHVuZGVmaW5lZDtcclxuICBASW5wdXQoKVxyXG4gIHNjYWxlOiBudW1iZXIgfCB1bmRlZmluZWQ7XHJcbiAgQElucHV0KClcclxuICByb3RhdGVXaXRoVmlldzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcclxuICBASW5wdXQoKVxyXG4gIHJvdGF0aW9uOiBudW1iZXIgfCB1bmRlZmluZWQ7XHJcbiAgQElucHV0KClcclxuICB0ZXh0OiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcbiAgQElucHV0KClcclxuICB0ZXh0QWxpZ246IHN0cmluZyB8IHVuZGVmaW5lZDtcclxuICBASW5wdXQoKVxyXG4gIHRleHRCYXNlTGluZTogc3RyaW5nIHwgdW5kZWZpbmVkO1xyXG5cclxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBwcml2YXRlIGhvc3Q6IFN0eWxlQ29tcG9uZW50KSB7XHJcbiAgICBpZiAoIWhvc3QpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdhb2wtc3R5bGUtdGV4dCBtdXN0IGJlIGEgZGVzY2VuZGFudCBvZiBhb2wtc3R5bGUnKTtcclxuICAgIH1cclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBhb2wtc3R5bGUtdGV4dCB3aXRoOiAnLCB0aGlzKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIG9sLnN0eWxlLlRleHQgaW5zdGFuY2Ugd2l0aDogJywgdGhpcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHN0eWxlLlRleHQodGhpcyk7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0VGV4dCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoY2hhbmdlc1snZm9udCddKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0Rm9udChjaGFuZ2VzWydmb250J10uY3VycmVudFZhbHVlKTtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWydvZmZzZXRYJ10pIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRPZmZzZXRYKGNoYW5nZXNbJ29mZnNldFgnXS5jdXJyZW50VmFsdWUpO1xyXG4gICAgfVxyXG4gICAgaWYgKGNoYW5nZXNbJ29mZnNldFknXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldE9mZnNldFkoY2hhbmdlc1snb2Zmc2V0WSddLmN1cnJlbnRWYWx1ZSk7XHJcbiAgICB9XHJcbiAgICBpZiAoY2hhbmdlc1snc2NhbGUnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldFNjYWxlKGNoYW5nZXNbJ3NjYWxlJ10uY3VycmVudFZhbHVlKTtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWydyb3RhdGlvbiddKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0Um90YXRpb24oY2hhbmdlc1sncm90YXRpb24nXS5jdXJyZW50VmFsdWUpO1xyXG4gICAgfVxyXG4gICAgaWYgKGNoYW5nZXNbJ3RleHQnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldFRleHQoY2hhbmdlc1sndGV4dCddLmN1cnJlbnRWYWx1ZSk7XHJcbiAgICB9XHJcbiAgICBpZiAoY2hhbmdlc1sndGV4dEFsaWduJ10pIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRUZXh0QWxpZ24oY2hhbmdlc1sndGV4dEFsaWduJ10uY3VycmVudFZhbHVlKTtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWyd0ZXh0QmFzZUxpbmUnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldFRleHRCYXNlbGluZShjaGFuZ2VzWyd0ZXh0QmFzZUxpbmUnXS5jdXJyZW50VmFsdWUpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5ob3N0LnVwZGF0ZSgpO1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXN0eWxlLXRleHQsIHNldHRpbmcgbmV3IHByb3BlcnRpZXM6ICcsIGNoYW5nZXMpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/tilegrid.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/tilegrid.component.js
@@ -59,4 +59,4 @@ if (false) {
     /** @type {?} */
     TileGridComponent.prototype.resolutions;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZWdyaWQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvdGlsZWdyaWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDbkYsT0FBTyxFQUFFLFFBQVEsRUFBNEIsTUFBTSxZQUFZLENBQUM7QUFNaEUsTUFBTTs7OztJQWdCSixRQUFRO1FBQ04sRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztZQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDM0MsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUMsQ0FBQztJQUNILENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNDLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlDLENBQUM7SUFDSCxDQUFDOzs7WUFsQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxjQUFjO2dCQUN4QixRQUFRLEVBQUUsRUFBRTthQUNiOzs7cUJBSUUsS0FBSztzQkFFTCxLQUFLO3NCQUVMLEtBQUs7dUJBRUwsS0FBSztxQkFFTCxLQUFLOzBCQUVMLEtBQUs7Ozs7SUFaTixxQ0FBNEI7O0lBRTVCLG1DQUNlOztJQUNmLG9DQUNnQjs7SUFDaEIsb0NBQ2dCOztJQUNoQixxQ0FDd0I7O0lBQ3hCLG1DQUNvQjs7SUFDcEIsd0NBQ3NCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHRpbGVncmlkLCBFeHRlbnQsIFNpemUsIENvb3JkaW5hdGUgfSBmcm9tICdvcGVubGF5ZXJzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLXRpbGVncmlkJyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBUaWxlR3JpZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgaW5zdGFuY2U6IHRpbGVncmlkLlRpbGVHcmlkO1xuXG4gIEBJbnB1dCgpXG4gIGV4dGVudDogRXh0ZW50O1xuICBASW5wdXQoKVxuICBtYXhab29tOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIG1pblpvb206IG51bWJlcjtcbiAgQElucHV0KClcbiAgdGlsZVNpemU6IG51bWJlciB8IFNpemU7XG4gIEBJbnB1dCgpXG4gIG9yaWdpbj86IENvb3JkaW5hdGU7XG4gIEBJbnB1dCgpXG4gIHJlc29sdXRpb25zOiBudW1iZXJbXTtcblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAoIXRoaXMucmVzb2x1dGlvbnMpIHtcbiAgICAgIHRoaXMuaW5zdGFuY2UgPSB0aWxlZ3JpZC5jcmVhdGVYWVoodGhpcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgdGlsZWdyaWQuVGlsZUdyaWQodGhpcyk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGlmICghdGhpcy5yZXNvbHV0aW9ucykge1xuICAgICAgdGhpcy5pbnN0YW5jZSA9IHRpbGVncmlkLmNyZWF0ZVhZWih0aGlzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyB0aWxlZ3JpZC5UaWxlR3JpZCh0aGlzKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZWdyaWQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvdGlsZWdyaWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDbkYsT0FBTyxFQUFFLFFBQVEsRUFBNEIsTUFBTSxZQUFZLENBQUM7QUFNaEUsTUFBTTs7OztJQWdCSixRQUFRO1FBQ04sRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztZQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDM0MsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUMsQ0FBQztJQUNILENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNDLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlDLENBQUM7SUFDSCxDQUFDOzs7WUFsQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxjQUFjO2dCQUN4QixRQUFRLEVBQUUsRUFBRTthQUNiOzs7cUJBSUUsS0FBSztzQkFFTCxLQUFLO3NCQUVMLEtBQUs7dUJBRUwsS0FBSztxQkFFTCxLQUFLOzBCQUVMLEtBQUs7Ozs7SUFaTixxQ0FBNEI7O0lBRTVCLG1DQUNlOztJQUNmLG9DQUNnQjs7SUFDaEIsb0NBQ2dCOztJQUNoQixxQ0FDd0I7O0lBQ3hCLG1DQUNvQjs7SUFDcEIsd0NBQ3NCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgdGlsZWdyaWQsIEV4dGVudCwgU2l6ZSwgQ29vcmRpbmF0ZSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtdGlsZWdyaWQnLFxyXG4gIHRlbXBsYXRlOiAnJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIFRpbGVHcmlkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xyXG4gIGluc3RhbmNlOiB0aWxlZ3JpZC5UaWxlR3JpZDtcclxuXHJcbiAgQElucHV0KClcclxuICBleHRlbnQ6IEV4dGVudDtcclxuICBASW5wdXQoKVxyXG4gIG1heFpvb206IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIG1pblpvb206IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHRpbGVTaXplOiBudW1iZXIgfCBTaXplO1xyXG4gIEBJbnB1dCgpXHJcbiAgb3JpZ2luPzogQ29vcmRpbmF0ZTtcclxuICBASW5wdXQoKVxyXG4gIHJlc29sdXRpb25zOiBudW1iZXJbXTtcclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICBpZiAoIXRoaXMucmVzb2x1dGlvbnMpIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZSA9IHRpbGVncmlkLmNyZWF0ZVhZWih0aGlzKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgdGlsZWdyaWQuVGlsZUdyaWQodGhpcyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICBpZiAoIXRoaXMucmVzb2x1dGlvbnMpIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZSA9IHRpbGVncmlkLmNyZWF0ZVhZWih0aGlzKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgdGlsZWdyaWQuVGlsZUdyaWQodGhpcyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/tilegridwmts.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/tilegridwmts.component.js
@@ -46,4 +46,4 @@ if (false) {
     /** @type {?} */
     TileGridWMTSComponent.prototype.widths;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZWdyaWR3bXRzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3RpbGVncmlkd210cy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxRQUFRLEVBQW9CLE1BQU0sWUFBWSxDQUFDO0FBQ3hELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBTXpELE1BQU0sNEJBQTZCLFNBQVEsaUJBQWlCOzs7O0lBa0IxRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDMUMsQ0FBQzs7O1lBeEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixRQUFRLEVBQUUsRUFBRTthQUNiOzs7cUJBSUUsS0FBSztzQkFFTCxLQUFLOzBCQUVMLEtBQUs7d0JBRUwsS0FBSztvQkFFTCxLQUFLO3dCQUVMLEtBQUs7cUJBRUwsS0FBSzs7OztJQWROLHlDQUF3Qjs7SUFFeEIsdUNBQ29COztJQUNwQix3Q0FDdUI7O0lBQ3ZCLDRDQUNzQjs7SUFDdEIsMENBQ29COztJQUNwQixzQ0FDZTs7SUFDZiwwQ0FDOEI7O0lBQzlCLHVDQUNrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgdGlsZWdyaWQsIFNpemUsIENvb3JkaW5hdGUgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IFRpbGVHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi90aWxlZ3JpZC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtdGlsZWdyaWQtd210cycsXG4gIHRlbXBsYXRlOiAnJyxcbn0pXG5leHBvcnQgY2xhc3MgVGlsZUdyaWRXTVRTQ29tcG9uZW50IGV4dGVuZHMgVGlsZUdyaWRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBpbnN0YW5jZTogdGlsZWdyaWQuV01UUztcblxuICBASW5wdXQoKVxuICBvcmlnaW4/OiBDb29yZGluYXRlO1xuICBASW5wdXQoKVxuICBvcmlnaW5zPzogQ29vcmRpbmF0ZVtdO1xuICBASW5wdXQoKVxuICByZXNvbHV0aW9uczogbnVtYmVyW107XG4gIEBJbnB1dCgpXG4gIG1hdHJpeElkczogc3RyaW5nW107XG4gIEBJbnB1dCgpXG4gIHNpemVzPzogU2l6ZVtdO1xuICBASW5wdXQoKVxuICB0aWxlU2l6ZXM/OiAobnVtYmVyIHwgU2l6ZSlbXTtcbiAgQElucHV0KClcbiAgd2lkdGhzPzogbnVtYmVyW107XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyB0aWxlZ3JpZC5XTVRTKHRoaXMpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZWdyaWR3bXRzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3RpbGVncmlkd210cy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxRQUFRLEVBQW9CLE1BQU0sWUFBWSxDQUFDO0FBQ3hELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBTXpELE1BQU0sNEJBQTZCLFNBQVEsaUJBQWlCOzs7O0lBa0IxRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDMUMsQ0FBQzs7O1lBeEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixRQUFRLEVBQUUsRUFBRTthQUNiOzs7cUJBSUUsS0FBSztzQkFFTCxLQUFLOzBCQUVMLEtBQUs7d0JBRUwsS0FBSztvQkFFTCxLQUFLO3dCQUVMLEtBQUs7cUJBRUwsS0FBSzs7OztJQWROLHlDQUF3Qjs7SUFFeEIsdUNBQ29COztJQUNwQix3Q0FDdUI7O0lBQ3ZCLDRDQUNzQjs7SUFDdEIsMENBQ29COztJQUNwQixzQ0FDZTs7SUFDZiwwQ0FDOEI7O0lBQzlCLHVDQUNrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyB0aWxlZ3JpZCwgU2l6ZSwgQ29vcmRpbmF0ZSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBUaWxlR3JpZENvbXBvbmVudCB9IGZyb20gJy4vdGlsZWdyaWQuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLXRpbGVncmlkLXdtdHMnLFxyXG4gIHRlbXBsYXRlOiAnJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIFRpbGVHcmlkV01UU0NvbXBvbmVudCBleHRlbmRzIFRpbGVHcmlkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBpbnN0YW5jZTogdGlsZWdyaWQuV01UUztcclxuXHJcbiAgQElucHV0KClcclxuICBvcmlnaW4/OiBDb29yZGluYXRlO1xyXG4gIEBJbnB1dCgpXHJcbiAgb3JpZ2lucz86IENvb3JkaW5hdGVbXTtcclxuICBASW5wdXQoKVxyXG4gIHJlc29sdXRpb25zOiBudW1iZXJbXTtcclxuICBASW5wdXQoKVxyXG4gIG1hdHJpeElkczogc3RyaW5nW107XHJcbiAgQElucHV0KClcclxuICBzaXplcz86IFNpemVbXTtcclxuICBASW5wdXQoKVxyXG4gIHRpbGVTaXplcz86IChudW1iZXIgfCBTaXplKVtdO1xyXG4gIEBJbnB1dCgpXHJcbiAgd2lkdGhzPzogbnVtYmVyW107XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyB0aWxlZ3JpZC5XTVRTKHRoaXMpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/lib/view.component.js
+++ b/node_modules/ngx-openlayers/esm2015/lib/view.component.js
@@ -134,4 +134,4 @@ if (false) {
      */
     ViewComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlldy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi92aWV3LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQStDLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEgsT0FBTyxFQUFFLElBQUksRUFBbUMsTUFBTSxZQUFZLENBQUM7QUFDbkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBUS9DLE1BQU07Ozs7SUF1Q0osWUFBb0IsSUFBa0I7UUFBbEIsU0FBSSxHQUFKLElBQUksQ0FBYztRQXJDL0Isa0JBQWEsR0FBRyxNQUFNLENBQUM7UUFnQzlCLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBR3RCLGlCQUFZLEdBQThCLElBQUksWUFBWSxFQUFlLENBQUM7SUFFakMsQ0FBQzs7OztJQUUxQyxRQUFRO1FBQ04seURBQXlEO1FBQ3pELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUUxQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxLQUFrQixFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3pGLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCOztjQUMxQixVQUFVLEdBQTZCLEVBQUU7UUFDL0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUMsTUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztZQUMxQixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDWixLQUFLLE1BQU07d0JBQ1QscUVBQXFFO3dCQUNyRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQzs0QkFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUM7d0JBQzdELENBQUM7d0JBQUMsSUFBSSxDQUFDLENBQUM7NEJBQ04sSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO3dCQUNuRCxDQUFDO3dCQUNELEtBQUssQ0FBQztvQkFDUjt3QkFDRSxLQUFLLENBQUM7Z0JBQ1YsQ0FBQztnQkFDRCxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztZQUM5QyxDQUFDO1FBQ0gsQ0FBQztRQUNELHFGQUFxRjtRQUNyRixJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDakQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxvQ0FBb0M7SUFDdEMsQ0FBQzs7O1lBbkZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsVUFBVTtnQkFDcEIsUUFBUSxFQUFFOztHQUVUO2FBQ0Y7OztZQVBRLFlBQVk7OztnQ0FZbEIsS0FBSzs2QkFFTCxLQUFLO3FCQUVMLEtBQUs7NEJBRUwsS0FBSzs0QkFFTCxLQUFLO3NCQUVMLEtBQUs7c0JBRUwsS0FBSzt5QkFFTCxLQUFLOzBCQUVMLEtBQUs7dUJBRUwsS0FBSzttQkFFTCxLQUFLO3lCQUVMLEtBQUs7cUJBRUwsS0FBSzt5QkFFTCxLQUFLOzRCQUdMLEtBQUs7MkJBR0wsTUFBTTs7OztJQW5DUCxpQ0FBc0I7O0lBQ3RCLHNDQUE4Qjs7SUFFOUIsMENBQ29DOztJQUNwQyx1Q0FDd0I7O0lBQ3hCLCtCQUNlOztJQUNmLHNDQUNzQjs7SUFDdEIsc0NBQ3NCOztJQUN0QixnQ0FDZ0I7O0lBQ2hCLGdDQUNnQjs7SUFDaEIsbUNBQ21COztJQUNuQixvQ0FDc0I7O0lBQ3RCLGlDQUNpQjs7SUFDakIsNkJBQ2E7O0lBQ2IsbUNBQ21COztJQUNuQiwrQkFDbUI7O0lBQ25CLG1DQUNtQjs7SUFFbkIsc0NBQ3NCOztJQUV0QixxQ0FDMEU7Ozs7O0lBRTlELDZCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIFNpbXBsZUNoYW5nZXMsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBWaWV3LCBFeHRlbnQsIE9iamVjdEV2ZW50LCBDb29yZGluYXRlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtdmlldycsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBWaWV3Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gIHB1YmxpYyBpbnN0YW5jZTogVmlldztcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAndmlldyc7XG5cbiAgQElucHV0KClcbiAgY29uc3RyYWluUm90YXRpb246IGJvb2xlYW4gfCBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIGVuYWJsZVJvdGF0aW9uOiBib29sZWFuO1xuICBASW5wdXQoKVxuICBleHRlbnQ6IEV4dGVudDtcbiAgQElucHV0KClcbiAgbWF4UmVzb2x1dGlvbjogbnVtYmVyO1xuICBASW5wdXQoKVxuICBtaW5SZXNvbHV0aW9uOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIG1heFpvb206IG51bWJlcjtcbiAgQElucHV0KClcbiAgbWluWm9vbTogbnVtYmVyO1xuICBASW5wdXQoKVxuICByZXNvbHV0aW9uOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHJlc29sdXRpb25zOiBudW1iZXJbXTtcbiAgQElucHV0KClcbiAgcm90YXRpb246IG51bWJlcjtcbiAgQElucHV0KClcbiAgem9vbTogbnVtYmVyO1xuICBASW5wdXQoKVxuICB6b29tRmFjdG9yOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIGNlbnRlcjogQ29vcmRpbmF0ZTtcbiAgQElucHV0KClcbiAgcHJvamVjdGlvbjogc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIHpvb21BbmltYXRpb24gPSBmYWxzZTtcblxuICBAT3V0cHV0KClcbiAgb25DaGFuZ2Vab29tOiBFdmVudEVtaXR0ZXI8T2JqZWN0RXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcjxPYmplY3RFdmVudD4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGhvc3Q6IE1hcENvbXBvbmVudCkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgb2wuVmlldyBpbnN0YW5jZSB3aXRoOiAnLCB0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IFZpZXcodGhpcyk7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFZpZXcodGhpcy5pbnN0YW5jZSk7XG5cbiAgICB0aGlzLmluc3RhbmNlLm9uKCdjaGFuZ2U6em9vbScsIChldmVudDogT2JqZWN0RXZlbnQpID0+IHRoaXMub25DaGFuZ2Vab29tLmVtaXQoZXZlbnQpKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBjb25zdCBwcm9wZXJ0aWVzOiB7IFtpbmRleDogc3RyaW5nXTogYW55IH0gPSB7fTtcbiAgICBpZiAoIXRoaXMuaW5zdGFuY2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yIChjb25zdCBrZXkgaW4gY2hhbmdlcykge1xuICAgICAgaWYgKGNoYW5nZXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICBzd2l0Y2ggKGtleSkge1xuICAgICAgICAgIGNhc2UgJ3pvb20nOlxuICAgICAgICAgICAgLyoqIFdvcmstYXJvdW5kOiBzZXR0aW5nIHRoZSB6b29tIHZpYSBzZXRQcm9wZXJ0aWVzIGRvZXMgbm90IHdvcmsuICovXG4gICAgICAgICAgICBpZiAodGhpcy56b29tQW5pbWF0aW9uKSB7XG4gICAgICAgICAgICAgIHRoaXMuaW5zdGFuY2UuYW5pbWF0ZSh7IHpvb206IGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWUgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0aGlzLmluc3RhbmNlLnNldFpvb20oY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcHJvcGVydGllc1trZXldID0gY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXZpZXcsIHNldHRpbmcgbmV3IHByb3BlcnRpZXM6ICcsIHByb3BlcnRpZXMpO1xuICAgIHRoaXMuaW5zdGFuY2Uuc2V0UHJvcGVydGllcyhwcm9wZXJ0aWVzLCBmYWxzZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLXZpZXcnKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlldy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi92aWV3LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQStDLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEgsT0FBTyxFQUFFLElBQUksRUFBbUMsTUFBTSxZQUFZLENBQUM7QUFDbkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBUS9DLE1BQU07Ozs7SUF1Q0osWUFBb0IsSUFBa0I7UUFBbEIsU0FBSSxHQUFKLElBQUksQ0FBYztRQXJDL0Isa0JBQWEsR0FBRyxNQUFNLENBQUM7UUFnQzlCLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBR3RCLGlCQUFZLEdBQThCLElBQUksWUFBWSxFQUFlLENBQUM7SUFFakMsQ0FBQzs7OztJQUUxQyxRQUFRO1FBQ04seURBQXlEO1FBQ3pELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUUxQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxLQUFrQixFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3pGLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCOztjQUMxQixVQUFVLEdBQTZCLEVBQUU7UUFDL0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUMsTUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztZQUMxQixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDWixLQUFLLE1BQU07d0JBQ1QscUVBQXFFO3dCQUNyRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQzs0QkFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUM7d0JBQzdELENBQUM7d0JBQUMsSUFBSSxDQUFDLENBQUM7NEJBQ04sSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO3dCQUNuRCxDQUFDO3dCQUNELEtBQUssQ0FBQztvQkFDUjt3QkFDRSxLQUFLLENBQUM7Z0JBQ1YsQ0FBQztnQkFDRCxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztZQUM5QyxDQUFDO1FBQ0gsQ0FBQztRQUNELHFGQUFxRjtRQUNyRixJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDakQsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxvQ0FBb0M7SUFDdEMsQ0FBQzs7O1lBbkZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsVUFBVTtnQkFDcEIsUUFBUSxFQUFFOztHQUVUO2FBQ0Y7OztZQVBRLFlBQVk7OztnQ0FZbEIsS0FBSzs2QkFFTCxLQUFLO3FCQUVMLEtBQUs7NEJBRUwsS0FBSzs0QkFFTCxLQUFLO3NCQUVMLEtBQUs7c0JBRUwsS0FBSzt5QkFFTCxLQUFLOzBCQUVMLEtBQUs7dUJBRUwsS0FBSzttQkFFTCxLQUFLO3lCQUVMLEtBQUs7cUJBRUwsS0FBSzt5QkFFTCxLQUFLOzRCQUdMLEtBQUs7MkJBR0wsTUFBTTs7OztJQW5DUCxpQ0FBc0I7O0lBQ3RCLHNDQUE4Qjs7SUFFOUIsMENBQ29DOztJQUNwQyx1Q0FDd0I7O0lBQ3hCLCtCQUNlOztJQUNmLHNDQUNzQjs7SUFDdEIsc0NBQ3NCOztJQUN0QixnQ0FDZ0I7O0lBQ2hCLGdDQUNnQjs7SUFDaEIsbUNBQ21COztJQUNuQixvQ0FDc0I7O0lBQ3RCLGlDQUNpQjs7SUFDakIsNkJBQ2E7O0lBQ2IsbUNBQ21COztJQUNuQiwrQkFDbUI7O0lBQ25CLG1DQUNtQjs7SUFFbkIsc0NBQ3NCOztJQUV0QixxQ0FDMEU7Ozs7O0lBRTlELDZCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIFNpbXBsZUNoYW5nZXMsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFZpZXcsIEV4dGVudCwgT2JqZWN0RXZlbnQsIENvb3JkaW5hdGUgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLXZpZXcnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIFZpZXdDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcclxuICBwdWJsaWMgaW5zdGFuY2U6IFZpZXc7XHJcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAndmlldyc7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY29uc3RyYWluUm90YXRpb246IGJvb2xlYW4gfCBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBlbmFibGVSb3RhdGlvbjogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIGV4dGVudDogRXh0ZW50O1xyXG4gIEBJbnB1dCgpXHJcbiAgbWF4UmVzb2x1dGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWluUmVzb2x1dGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWF4Wm9vbTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWluWm9vbTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgcmVzb2x1dGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgcmVzb2x1dGlvbnM6IG51bWJlcltdO1xyXG4gIEBJbnB1dCgpXHJcbiAgcm90YXRpb246IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHpvb206IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHpvb21GYWN0b3I6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIGNlbnRlcjogQ29vcmRpbmF0ZTtcclxuICBASW5wdXQoKVxyXG4gIHByb2plY3Rpb246IHN0cmluZztcclxuXHJcbiAgQElucHV0KClcclxuICB6b29tQW5pbWF0aW9uID0gZmFsc2U7XHJcblxyXG4gIEBPdXRwdXQoKVxyXG4gIG9uQ2hhbmdlWm9vbTogRXZlbnRFbWl0dGVyPE9iamVjdEV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8T2JqZWN0RXZlbnQ+KCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaG9zdDogTWFwQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5WaWV3IGluc3RhbmNlIHdpdGg6ICcsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBWaWV3KHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFZpZXcodGhpcy5pbnN0YW5jZSk7XHJcblxyXG4gICAgdGhpcy5pbnN0YW5jZS5vbignY2hhbmdlOnpvb20nLCAoZXZlbnQ6IE9iamVjdEV2ZW50KSA9PiB0aGlzLm9uQ2hhbmdlWm9vbS5lbWl0KGV2ZW50KSk7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICBjb25zdCBwcm9wZXJ0aWVzOiB7IFtpbmRleDogc3RyaW5nXTogYW55IH0gPSB7fTtcclxuICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBjaGFuZ2VzKSB7XHJcbiAgICAgIGlmIChjaGFuZ2VzLmhhc093blByb3BlcnR5KGtleSkpIHtcclxuICAgICAgICBzd2l0Y2ggKGtleSkge1xyXG4gICAgICAgICAgY2FzZSAnem9vbSc6XHJcbiAgICAgICAgICAgIC8qKiBXb3JrLWFyb3VuZDogc2V0dGluZyB0aGUgem9vbSB2aWEgc2V0UHJvcGVydGllcyBkb2VzIG5vdCB3b3JrLiAqL1xyXG4gICAgICAgICAgICBpZiAodGhpcy56b29tQW5pbWF0aW9uKSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5pbnN0YW5jZS5hbmltYXRlKHsgem9vbTogY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZSB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICB0aGlzLmluc3RhbmNlLnNldFpvb20oY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgcHJvcGVydGllc1trZXldID0gY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXZpZXcsIHNldHRpbmcgbmV3IHByb3BlcnRpZXM6ICcsIHByb3BlcnRpZXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5zZXRQcm9wZXJ0aWVzKHByb3BlcnRpZXMsIGZhbHNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC12aWV3Jyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm2015/public_api.js
+++ b/node_modules/ngx-openlayers/esm2015/public_api.js
@@ -150,4 +150,4 @@ AngularOpenlayersModule.decorators = [
                 exports: COMPONENTS,
             },] },
 ];
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/attribution.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/attribution.component.js
@@ -41,4 +41,4 @@ if (false) {
      */
     AttributionComponent.prototype.elementRef;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvYXR0cmlidXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRXpDO0lBUUUsOEJBQW9CLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7SUFBRyxDQUFDOzs7O0lBRTlDLHVDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDO1FBQ3BELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEMsQ0FBQzs7Z0JBYkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLFFBQVEsRUFBRSwyQkFBMkI7aUJBQ3RDOzs7Z0JBTm1CLFVBQVU7O0lBaUI5QiwyQkFBQztDQUFBLEFBZEQsSUFjQztTQVZZLG9CQUFvQjs7O0lBQy9CLHdDQUFzQjs7SUFDdEIsb0NBQWE7Ozs7O0lBRUQsMENBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEF0dHJpYnV0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1hdHRyaWJ1dGlvbicsXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG59KVxuZXhwb3J0IGNsYXNzIEF0dHJpYnV0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgaW5zdGFuY2U6IEF0dHJpYnV0aW9uO1xuICBodG1sOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaHRtbCA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmlubmVySFRNTDtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IEF0dHJpYnV0aW9uKHRoaXMpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvYXR0cmlidXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRXpDO0lBUUUsOEJBQW9CLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7SUFBRyxDQUFDOzs7O0lBRTlDLHVDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDO1FBQ3BELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEMsQ0FBQzs7Z0JBYkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLFFBQVEsRUFBRSwyQkFBMkI7aUJBQ3RDOzs7Z0JBTm1CLFVBQVU7O0lBaUI5QiwyQkFBQztDQUFBLEFBZEQsSUFjQztTQVZZLG9CQUFvQjs7O0lBQy9CLHdDQUFzQjs7SUFDdEIsb0NBQWE7Ozs7O0lBRUQsMENBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQXR0cmlidXRpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWF0dHJpYnV0aW9uJyxcclxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXR0cmlidXRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIGluc3RhbmNlOiBBdHRyaWJ1dGlvbjtcclxuICBodG1sOiBzdHJpbmc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmh0bWwgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5pbm5lckhUTUw7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IEF0dHJpYnV0aW9uKHRoaXMpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/attributions.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/attributions.component.js
@@ -51,4 +51,4 @@ if (false) {
      */
     AttributionsComponent.prototype.source;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRpb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2F0dHJpYnV0aW9ucy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUUvRDtJQVVFLCtCQUE0QixNQUF1QjtRQUF2QixXQUFNLEdBQU4sTUFBTSxDQUFpQjtJQUFHLENBQUM7SUFFdkQsb0NBQW9DOzs7OztJQUNwQywrQ0FBZTs7OztJQUFmO1FBQ0UsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsVUFBQSxHQUFHLElBQUksT0FBQSxHQUFHLENBQUMsUUFBUSxFQUFaLENBQVksQ0FBQyxDQUFDO1lBQzNELHVEQUF1RDtZQUN2RCxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3RELENBQUM7SUFDSCxDQUFDOztnQkFuQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLFFBQVEsRUFBRSwyQkFBMkI7aUJBQ3RDOzs7Z0JBTlEsZUFBZSx1QkFhVCxJQUFJOzs7K0JBSGhCLGVBQWUsU0FBQyxvQkFBb0I7O0lBYXZDLDRCQUFDO0NBQUEsQUFwQkQsSUFvQkM7U0FoQlkscUJBQXFCOzs7SUFDaEMseUNBQTZCOztJQUU3Qiw2Q0FDOEM7Ozs7O0lBRWxDLHVDQUF1QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgQ29udGVudENoaWxkcmVuLCBIb3N0LCBRdWVyeUxpc3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEF0dHJpYnV0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZXMvc291cmNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBdHRyaWJ1dGlvbkNvbXBvbmVudCB9IGZyb20gJy4vYXR0cmlidXRpb24uY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWF0dHJpYnV0aW9ucycsXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG59KVxuZXhwb3J0IGNsYXNzIEF0dHJpYnV0aW9uc0NvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBpbnN0YW5jZTogQXJyYXk8QXR0cmlidXRpb24+O1xuXG4gIEBDb250ZW50Q2hpbGRyZW4oQXR0cmlidXRpb25Db21wb25lbnQpXG4gIGF0dHJpYnV0aW9uczogUXVlcnlMaXN0PEF0dHJpYnV0aW9uQ29tcG9uZW50PjtcblxuICBjb25zdHJ1Y3RvcihASG9zdCgpIHByaXZhdGUgc291cmNlOiBTb3VyY2VDb21wb25lbnQpIHt9XG5cbiAgLyogd2UgY2FuIGRvIHRoaXMgYXQgdGhlIHZlcnkgZW5kICovXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBpZiAodGhpcy5hdHRyaWJ1dGlvbnMubGVuZ3RoKSB7XG4gICAgICB0aGlzLmluc3RhbmNlID0gdGhpcy5hdHRyaWJ1dGlvbnMubWFwKGNtcCA9PiBjbXAuaW5zdGFuY2UpO1xuICAgICAgLy8gY29uc29sZS5sb2coJ3NldHRpbmcgYXR0cmlidXRpb25zOicsIHRoaXMuaW5zdGFuY2UpO1xuICAgICAgdGhpcy5zb3VyY2UuaW5zdGFuY2Uuc2V0QXR0cmlidXRpb25zKHRoaXMuaW5zdGFuY2UpO1xuICAgIH1cbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRpb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2F0dHJpYnV0aW9ucy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUUvRDtJQVVFLCtCQUE0QixNQUF1QjtRQUF2QixXQUFNLEdBQU4sTUFBTSxDQUFpQjtJQUFHLENBQUM7SUFFdkQsb0NBQW9DOzs7OztJQUNwQywrQ0FBZTs7OztJQUFmO1FBQ0UsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsVUFBQSxHQUFHLElBQUksT0FBQSxHQUFHLENBQUMsUUFBUSxFQUFaLENBQVksQ0FBQyxDQUFDO1lBQzNELHVEQUF1RDtZQUN2RCxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3RELENBQUM7SUFDSCxDQUFDOztnQkFuQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLFFBQVEsRUFBRSwyQkFBMkI7aUJBQ3RDOzs7Z0JBTlEsZUFBZSx1QkFhVCxJQUFJOzs7K0JBSGhCLGVBQWUsU0FBQyxvQkFBb0I7O0lBYXZDLDRCQUFDO0NBQUEsQUFwQkQsSUFvQkM7U0FoQlkscUJBQXFCOzs7SUFDaEMseUNBQTZCOztJQUU3Qiw2Q0FDOEM7Ozs7O0lBRWxDLHVDQUF1QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgQ29udGVudENoaWxkcmVuLCBIb3N0LCBRdWVyeUxpc3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQXR0cmlidXRpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2VzL3NvdXJjZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBBdHRyaWJ1dGlvbkNvbXBvbmVudCB9IGZyb20gJy4vYXR0cmlidXRpb24uY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWF0dHJpYnV0aW9ucycsXHJcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+JyxcclxufSlcclxuZXhwb3J0IGNsYXNzIEF0dHJpYnV0aW9uc0NvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xyXG4gIGluc3RhbmNlOiBBcnJheTxBdHRyaWJ1dGlvbj47XHJcblxyXG4gIEBDb250ZW50Q2hpbGRyZW4oQXR0cmlidXRpb25Db21wb25lbnQpXHJcbiAgYXR0cmlidXRpb25zOiBRdWVyeUxpc3Q8QXR0cmlidXRpb25Db21wb25lbnQ+O1xyXG5cclxuICBjb25zdHJ1Y3RvcihASG9zdCgpIHByaXZhdGUgc291cmNlOiBTb3VyY2VDb21wb25lbnQpIHt9XHJcblxyXG4gIC8qIHdlIGNhbiBkbyB0aGlzIGF0IHRoZSB2ZXJ5IGVuZCAqL1xyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgIGlmICh0aGlzLmF0dHJpYnV0aW9ucy5sZW5ndGgpIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZSA9IHRoaXMuYXR0cmlidXRpb25zLm1hcChjbXAgPT4gY21wLmluc3RhbmNlKTtcclxuICAgICAgLy8gY29uc29sZS5sb2coJ3NldHRpbmcgYXR0cmlidXRpb25zOicsIHRoaXMuaW5zdGFuY2UpO1xyXG4gICAgICB0aGlzLnNvdXJjZS5pbnN0YW5jZS5zZXRBdHRyaWJ1dGlvbnModGhpcy5pbnN0YW5jZSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/content.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/content.component.js
@@ -23,4 +23,4 @@ if (false) {
     /** @type {?} */
     ContentComponent.prototype.elementRef;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250ZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEQ7SUFLRSwwQkFBbUIsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtJQUFHLENBQUM7O2dCQUw5QyxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7b0JBQ3ZCLFFBQVEsRUFBRSwyQkFBMkI7aUJBQ3RDOzs7Z0JBTG1CLFVBQVU7O0lBUTlCLHVCQUFDO0NBQUEsQUFORCxJQU1DO1NBRlksZ0JBQWdCOzs7SUFDZixzQ0FBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRlbnQnLFxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nLFxufSlcbmV4cG9ydCBjbGFzcyBDb250ZW50Q29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHt9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250ZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEQ7SUFLRSwwQkFBbUIsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtJQUFHLENBQUM7O2dCQUw5QyxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7b0JBQ3ZCLFFBQVEsRUFBRSwyQkFBMkI7aUJBQ3RDOzs7Z0JBTG1CLFVBQVU7O0lBUTlCLHVCQUFDO0NBQUEsQUFORCxJQU1DO1NBRlksZ0JBQWdCOzs7SUFDZixzQ0FBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRlbnQnLFxyXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb250ZW50Q29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZWxlbWVudFJlZjogRWxlbWVudFJlZikge31cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/controls/attribution.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/controls/attribution.component.js
@@ -69,4 +69,4 @@ if (false) {
      */
     ControlAttributionComponent.prototype.element;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvY29udHJvbHMvYXR0cmlidXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBV0UscUNBQW9CLEdBQWlCLEVBQVUsT0FBbUI7UUFBOUMsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUFVLFlBQU8sR0FBUCxPQUFPLENBQVk7UUFOM0Qsa0JBQWEsR0FBRyxTQUFTLENBQUM7SUFNb0MsQ0FBQzs7OztJQUV0RSw4Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDO1FBQ3pDLHNEQUFzRDtRQUN0RCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxpREFBVzs7O0lBQVg7UUFDRSxtREFBbUQ7UUFDbkQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNqRCxDQUFDOztnQkF2QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTtnQkFGRCxVQUFVOzs7OEJBWTNCLEtBQUs7O0lBZ0JSLGtDQUFDO0NBQUEsQUF4QkQsSUF3QkM7U0FwQlksMkJBQTJCOzs7SUFDdEMsb0RBQWlDOztJQUNqQywrQ0FBOEI7O0lBQzlCLDZDQUFnQjs7SUFDaEIsa0RBQ3FCOzs7OztJQUVULDBDQUF5Qjs7Ozs7SUFBRSw4Q0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29udHJvbCB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLWF0dHJpYnV0aW9uJyxcbiAgdGVtcGxhdGU6IGBgLFxufSlcbmV4cG9ydCBjbGFzcyBDb250cm9sQXR0cmlidXRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2NvbnRyb2wnO1xuICBpbnN0YW5jZTogY29udHJvbC5BdHRyaWJ1dGlvbjtcbiAgdGFyZ2V0OiBFbGVtZW50O1xuICBASW5wdXQoKVxuICBjb2xsYXBzaWJsZTogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50LCBwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy50YXJnZXQgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudDtcbiAgICAvLyBjb25zb2xlLmxvZygnb2wuY29udHJvbC5BdHRyaWJ1dGlvbiBpbml0OiAnLCB0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuQXR0cmlidXRpb24odGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC1hdHRyaWJ1dGlvbicpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2wodGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvY29udHJvbHMvYXR0cmlidXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBV0UscUNBQW9CLEdBQWlCLEVBQVUsT0FBbUI7UUFBOUMsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUFVLFlBQU8sR0FBUCxPQUFPLENBQVk7UUFOM0Qsa0JBQWEsR0FBRyxTQUFTLENBQUM7SUFNb0MsQ0FBQzs7OztJQUV0RSw4Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDO1FBQ3pDLHNEQUFzRDtRQUN0RCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7SUFFRCxpREFBVzs7O0lBQVg7UUFDRSxtREFBbUQ7UUFDbkQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNqRCxDQUFDOztnQkF2QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTtnQkFGRCxVQUFVOzs7OEJBWTNCLEtBQUs7O0lBZ0JSLGtDQUFDO0NBQUEsQUF4QkQsSUF3QkM7U0FwQlksMkJBQTJCOzs7SUFDdEMsb0RBQWlDOztJQUNqQywrQ0FBOEI7O0lBQzlCLDZDQUFnQjs7SUFDaEIsa0RBQ3FCOzs7OztJQUVULDBDQUF5Qjs7Ozs7SUFBRSw4Q0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBjb250cm9sIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtY29udHJvbC1hdHRyaWJ1dGlvbicsXHJcbiAgdGVtcGxhdGU6IGBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29udHJvbEF0dHJpYnV0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2NvbnRyb2wnO1xyXG4gIGluc3RhbmNlOiBjb250cm9sLkF0dHJpYnV0aW9uO1xyXG4gIHRhcmdldDogRWxlbWVudDtcclxuICBASW5wdXQoKVxyXG4gIGNvbGxhcHNpYmxlOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50LCBwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYpIHt9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy50YXJnZXQgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudDtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdvbC5jb250cm9sLkF0dHJpYnV0aW9uIGluaXQ6ICcsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLkF0dHJpYnV0aW9uKHRoaXMpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC1jb250cm9sLWF0dHJpYnV0aW9uJyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/controls/control.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/controls/control.component.js
@@ -65,4 +65,4 @@ if (false) {
      */
     ControlComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9jb250cm9sLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXhEO0lBYUUsMEJBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFOOUIsa0JBQWEsR0FBRyxTQUFTLENBQUM7SUFNTyxDQUFDOzs7O0lBRXpDLG1DQUFROzs7SUFBUjtRQUNFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ2pCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDO1lBQ3JELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzFDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUMsQ0FBQztJQUNILENBQUM7Ozs7SUFFRCxzQ0FBVzs7O0lBQVg7UUFDRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNsQixJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2pELENBQUM7SUFDSCxDQUFDOztnQkEzQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO29CQUN2QixRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFSUSxZQUFZOzs7MEJBYWxCLFlBQVksU0FBQyxnQkFBZ0I7O0lBa0JoQyx1QkFBQztDQUFBLEFBNUJELElBNEJDO1NBdEJZLGdCQUFnQjs7O0lBQzNCLHlDQUFpQzs7SUFDakMsb0NBQTBCOztJQUMxQixtQ0FBaUI7O0lBQ2pCLG1DQUMwQjs7Ozs7SUFFZCwrQkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvbnRyb2wgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29udGVudENvbXBvbmVudCB9IGZyb20gJy4uL2NvbnRlbnQuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgQ29udHJvbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnY29udHJvbCc7XG4gIGluc3RhbmNlOiBjb250cm9sLkNvbnRyb2w7XG4gIGVsZW1lbnQ6IEVsZW1lbnQ7XG4gIEBDb250ZW50Q2hpbGQoQ29udGVudENvbXBvbmVudClcbiAgY29udGVudDogQ29udGVudENvbXBvbmVudDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLmNvbnRlbnQpIHtcbiAgICAgIHRoaXMuZWxlbWVudCA9IHRoaXMuY29udGVudC5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuQ29udHJvbCh0aGlzKTtcbiAgICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZENvbnRyb2wodGhpcy5pbnN0YW5jZSk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2wodGhpcy5pbnN0YW5jZSk7XG4gICAgfVxuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9jb250cm9sLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXhEO0lBYUUsMEJBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFOOUIsa0JBQWEsR0FBRyxTQUFTLENBQUM7SUFNTyxDQUFDOzs7O0lBRXpDLG1DQUFROzs7SUFBUjtRQUNFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ2pCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDO1lBQ3JELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzFDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUMsQ0FBQztJQUNILENBQUM7Ozs7SUFFRCxzQ0FBVzs7O0lBQVg7UUFDRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNsQixJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2pELENBQUM7SUFDSCxDQUFDOztnQkEzQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO29CQUN2QixRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFSUSxZQUFZOzs7MEJBYWxCLFlBQVksU0FBQyxnQkFBZ0I7O0lBa0JoQyx1QkFBQztDQUFBLEFBNUJELElBNEJDO1NBdEJZLGdCQUFnQjs7O0lBQzNCLHlDQUFpQzs7SUFDakMsb0NBQTBCOztJQUMxQixtQ0FBaUI7O0lBQ2pCLG1DQUMwQjs7Ozs7SUFFZCwrQkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgY29udHJvbCB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQ29udGVudENvbXBvbmVudCB9IGZyb20gJy4uL2NvbnRlbnQuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbnRyb2xDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnY29udHJvbCc7XHJcbiAgaW5zdGFuY2U6IGNvbnRyb2wuQ29udHJvbDtcclxuICBlbGVtZW50OiBFbGVtZW50O1xyXG4gIEBDb250ZW50Q2hpbGQoQ29udGVudENvbXBvbmVudClcclxuICBjb250ZW50OiBDb250ZW50Q29tcG9uZW50O1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIGlmICh0aGlzLmNvbnRlbnQpIHtcclxuICAgICAgdGhpcy5lbGVtZW50ID0gdGhpcy5jb250ZW50LmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcclxuICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLkNvbnRyb2wodGhpcyk7XHJcbiAgICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZENvbnRyb2wodGhpcy5pbnN0YW5jZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIGlmICh0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2wodGhpcy5pbnN0YW5jZSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/controls/default.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/controls/default.component.js
@@ -73,4 +73,4 @@ if (false) {
      */
     DefaultControlComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9kZWZhdWx0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQWMsTUFBTSxZQUFZLENBQUM7QUFDakQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBbUJFLGlDQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6QywwQ0FBUTs7O0lBQVI7UUFBQSxpQkFJQztRQUhDLG1EQUFtRDtRQUNuRCxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxLQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQS9CLENBQStCLENBQUMsQ0FBQztJQUM5RCxDQUFDOzs7O0lBRUQsNkNBQVc7OztJQUFYO1FBQUEsaUJBR0M7UUFGQyxnREFBZ0Q7UUFDaEQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxLQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEVBQWxDLENBQWtDLENBQUMsQ0FBQztJQUNqRSxDQUFDOztnQkE5QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTs7OzhCQVFsQixLQUFLO3FDQUVMLEtBQUs7eUJBRUwsS0FBSztnQ0FFTCxLQUFLO3VCQUVMLEtBQUs7OEJBRUwsS0FBSzs7SUFlUiw4QkFBQztDQUFBLEFBL0JELElBK0JDO1NBM0JZLHVCQUF1Qjs7O0lBQ2xDLDJDQUFzQzs7SUFDdEMsOENBQ3FCOztJQUNyQixxREFDbUQ7O0lBQ25ELHlDQUNnQjs7SUFDaEIsZ0RBQ3lDOztJQUN6Qyx1Q0FDYzs7SUFDZCw4Q0FDcUM7Ozs7O0lBRXpCLHNDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb250cm9sLCBDb2xsZWN0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wtZGVmYXVsdHMnLFxuICB0ZW1wbGF0ZTogJycsXG59KVxuZXhwb3J0IGNsYXNzIERlZmF1bHRDb250cm9sQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBpbnN0YW5jZTogQ29sbGVjdGlvbjxjb250cm9sLkNvbnRyb2w+O1xuICBASW5wdXQoKVxuICBhdHRyaWJ1dGlvbjogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgYXR0cmlidXRpb25PcHRpb25zOiBvbHguY29udHJvbC5BdHRyaWJ1dGlvbk9wdGlvbnM7XG4gIEBJbnB1dCgpXG4gIHJvdGF0ZTogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgcm90YXRlT3B0aW9uczogb2x4LmNvbnRyb2wuUm90YXRlT3B0aW9ucztcbiAgQElucHV0KClcbiAgem9vbTogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgem9vbU9wdGlvbnM6IG9seC5jb250cm9sLlpvb21PcHRpb25zO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ29sLmNvbnRyb2wuZGVmYXVsdHMgaW5pdDogJywgdGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZSA9IGNvbnRyb2wuZGVmYXVsdHModGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZS5mb3JFYWNoKGMgPT4gdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbChjKSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLWNvbnRyb2wtZGVmYXVsdHMnKTtcbiAgICB0aGlzLmluc3RhbmNlLmZvckVhY2goYyA9PiB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKGMpKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9kZWZhdWx0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQWMsTUFBTSxZQUFZLENBQUM7QUFDakQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBbUJFLGlDQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6QywwQ0FBUTs7O0lBQVI7UUFBQSxpQkFJQztRQUhDLG1EQUFtRDtRQUNuRCxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxLQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQS9CLENBQStCLENBQUMsQ0FBQztJQUM5RCxDQUFDOzs7O0lBRUQsNkNBQVc7OztJQUFYO1FBQUEsaUJBR0M7UUFGQyxnREFBZ0Q7UUFDaEQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxLQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEVBQWxDLENBQWtDLENBQUMsQ0FBQztJQUNqRSxDQUFDOztnQkE5QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTs7OzhCQVFsQixLQUFLO3FDQUVMLEtBQUs7eUJBRUwsS0FBSztnQ0FFTCxLQUFLO3VCQUVMLEtBQUs7OEJBRUwsS0FBSzs7SUFlUiw4QkFBQztDQUFBLEFBL0JELElBK0JDO1NBM0JZLHVCQUF1Qjs7O0lBQ2xDLDJDQUFzQzs7SUFDdEMsOENBQ3FCOztJQUNyQixxREFDbUQ7O0lBQ25ELHlDQUNnQjs7SUFDaEIsZ0RBQ3lDOztJQUN6Qyx1Q0FDYzs7SUFDZCw4Q0FDcUM7Ozs7O0lBRXpCLHNDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGNvbnRyb2wsIENvbGxlY3Rpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLWRlZmF1bHRzJyxcclxuICB0ZW1wbGF0ZTogJycsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEZWZhdWx0Q29udHJvbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBpbnN0YW5jZTogQ29sbGVjdGlvbjxjb250cm9sLkNvbnRyb2w+O1xyXG4gIEBJbnB1dCgpXHJcbiAgYXR0cmlidXRpb246IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICBhdHRyaWJ1dGlvbk9wdGlvbnM6IG9seC5jb250cm9sLkF0dHJpYnV0aW9uT3B0aW9ucztcclxuICBASW5wdXQoKVxyXG4gIHJvdGF0ZTogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIHJvdGF0ZU9wdGlvbnM6IG9seC5jb250cm9sLlJvdGF0ZU9wdGlvbnM7XHJcbiAgQElucHV0KClcclxuICB6b29tOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgem9vbU9wdGlvbnM6IG9seC5jb250cm9sLlpvb21PcHRpb25zO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdvbC5jb250cm9sLmRlZmF1bHRzIGluaXQ6ICcsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IGNvbnRyb2wuZGVmYXVsdHModGhpcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlLmZvckVhY2goYyA9PiB0aGlzLm1hcC5pbnN0YW5jZS5hZGRDb250cm9sKGMpKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC1jb250cm9sLWRlZmF1bHRzJyk7XHJcbiAgICB0aGlzLmluc3RhbmNlLmZvckVhY2goYyA9PiB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKGMpKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/controls/fullscreen.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/controls/fullscreen.component.js
@@ -68,4 +68,4 @@ if (false) {
      */
     ControlFullScreenComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVsbHNjcmVlbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9mdWxsc2NyZWVuLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBb0JFLG9DQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLG9EQUFvRDtJQUN0RCxDQUFDOzs7O0lBRUQsNkNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsZ0RBQVc7OztJQUFYO1FBQ0Usa0RBQWtEO1FBQ2xELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7Z0JBaENGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxZQUFZOzs7NEJBV2xCLEtBQUs7d0JBRUwsS0FBSzs4QkFFTCxLQUFLOzJCQUVMLEtBQUs7dUJBRUwsS0FBSzs7SUFnQlIsaUNBQUM7Q0FBQSxBQWpDRCxJQWlDQztTQTNCWSwwQkFBMEI7OztJQUNyQyw4Q0FBNkI7O0lBRTdCLCtDQUNrQjs7SUFDbEIsMkNBQ2M7O0lBQ2QsaURBQ29COztJQUNwQiw4Q0FDaUI7O0lBQ2pCLDBDQUNjOzs7OztJQUVGLHlDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb250cm9sIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wtZnVsbHNjcmVlbicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBDb250cm9sRnVsbFNjcmVlbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGNvbnRyb2wuRnVsbFNjcmVlbjtcblxuICBASW5wdXQoKVxuICBjbGFzc05hbWU6IHN0cmluZztcbiAgQElucHV0KClcbiAgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KClcbiAgbGFiZWxBY3RpdmU6IHN0cmluZztcbiAgQElucHV0KClcbiAgdGlwTGFiZWw6IHN0cmluZztcbiAgQElucHV0KClcbiAga2V5czogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2luc3RhbmNpbmcgYW9sLWNvbnRyb2wtZnVsbHNjcmVlbicpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLkZ1bGxTY3JlZW4odGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC1mdWxsc2NyZWVuJyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVsbHNjcmVlbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9mdWxsc2NyZWVuLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBb0JFLG9DQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLG9EQUFvRDtJQUN0RCxDQUFDOzs7O0lBRUQsNkNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsZ0RBQVc7OztJQUFYO1FBQ0Usa0RBQWtEO1FBQ2xELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7Z0JBaENGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxZQUFZOzs7NEJBV2xCLEtBQUs7d0JBRUwsS0FBSzs4QkFFTCxLQUFLOzJCQUVMLEtBQUs7dUJBRUwsS0FBSzs7SUFnQlIsaUNBQUM7Q0FBQSxBQWpDRCxJQWlDQztTQTNCWSwwQkFBMEI7OztJQUNyQyw4Q0FBNkI7O0lBRTdCLCtDQUNrQjs7SUFDbEIsMkNBQ2M7O0lBQ2QsaURBQ29COztJQUNwQiw4Q0FDaUI7O0lBQ2pCLDBDQUNjOzs7OztJQUVGLHlDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGNvbnRyb2wgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLWZ1bGxzY3JlZW4nLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbnRyb2xGdWxsU2NyZWVuQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBjb250cm9sLkZ1bGxTY3JlZW47XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY2xhc3NOYW1lOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBsYWJlbDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGFiZWxBY3RpdmU6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHRpcExhYmVsOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBrZXlzOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnaW5zdGFuY2luZyBhb2wtY29udHJvbC1mdWxsc2NyZWVuJyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgY29udHJvbC5GdWxsU2NyZWVuKHRoaXMpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC1jb250cm9sLWZ1bGxzY3JlZW4nKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2wodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/controls/mouseposition.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/controls/mouseposition.component.js
@@ -69,4 +69,4 @@ if (false) {
      */
     ControlMousePositionComponent.prototype.element;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW91c2Vwb3NpdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9tb3VzZXBvc2l0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNoRixPQUFPLEVBQUUsT0FBTyxFQUF3QyxNQUFNLFlBQVksQ0FBQztBQUMzRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUFZRSx1Q0FBb0IsR0FBaUIsRUFBVSxPQUFtQjtRQUE5QyxRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQVUsWUFBTyxHQUFQLE9BQU8sQ0FBWTtJQUFHLENBQUM7Ozs7SUFFdEUsZ0RBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQztRQUN6Qyx3REFBd0Q7UUFDeEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsbURBQVc7OztJQUFYO1FBQ0UscURBQXFEO1FBQ3JELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7Z0JBeEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxRQUFRLEVBQUUsRUFBRTtpQkFDYjs7O2dCQUxRLFlBQVk7Z0JBRkQsVUFBVTs7O21DQVUzQixLQUFLOzZCQUVMLEtBQUs7O0lBaUJSLG9DQUFDO0NBQUEsQUF6QkQsSUF5QkM7U0FyQlksNkJBQTZCOzs7SUFDeEMsaURBQWdDOztJQUNoQyx5REFDdUM7O0lBQ3ZDLG1EQUMyQjs7SUFDM0IsK0NBQWdCOzs7OztJQUVKLDRDQUF5Qjs7Ozs7SUFBRSxnREFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29udHJvbCwgQ29vcmRpbmF0ZUZvcm1hdFR5cGUsIFByb2plY3Rpb25MaWtlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wtbW91c2Vwb3NpdGlvbicsXG4gIHRlbXBsYXRlOiBgYCxcbn0pXG5leHBvcnQgY2xhc3MgQ29udHJvbE1vdXNlUG9zaXRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBjb250cm9sLk1vdXNlUG9zaXRpb247XG4gIEBJbnB1dCgpXG4gIGNvb3JkaW5hdGVGb3JtYXQ6IENvb3JkaW5hdGVGb3JtYXRUeXBlO1xuICBASW5wdXQoKVxuICBwcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZTtcbiAgdGFyZ2V0OiBFbGVtZW50O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQsIHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZikge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnRhcmdldCA9IHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50O1xuICAgIC8vIGNvbnNvbGUubG9nKCdvbC5jb250cm9sLk1vdXNlUG9zaXRpb24gaW5pdDogJywgdGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLk1vdXNlUG9zaXRpb24odGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC1tb3VzZXBvc2l0aW9uJyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW91c2Vwb3NpdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9tb3VzZXBvc2l0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNoRixPQUFPLEVBQUUsT0FBTyxFQUF3QyxNQUFNLFlBQVksQ0FBQztBQUMzRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUFZRSx1Q0FBb0IsR0FBaUIsRUFBVSxPQUFtQjtRQUE5QyxRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQVUsWUFBTyxHQUFQLE9BQU8sQ0FBWTtJQUFHLENBQUM7Ozs7SUFFdEUsZ0RBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQztRQUN6Qyx3REFBd0Q7UUFDeEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsbURBQVc7OztJQUFYO1FBQ0UscURBQXFEO1FBQ3JELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7Z0JBeEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxRQUFRLEVBQUUsRUFBRTtpQkFDYjs7O2dCQUxRLFlBQVk7Z0JBRkQsVUFBVTs7O21DQVUzQixLQUFLOzZCQUVMLEtBQUs7O0lBaUJSLG9DQUFDO0NBQUEsQUF6QkQsSUF5QkM7U0FyQlksNkJBQTZCOzs7SUFDeEMsaURBQWdDOztJQUNoQyx5REFDdUM7O0lBQ3ZDLG1EQUMyQjs7SUFDM0IsK0NBQWdCOzs7OztJQUVKLDRDQUF5Qjs7Ozs7SUFBRSxnREFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBjb250cm9sLCBDb29yZGluYXRlRm9ybWF0VHlwZSwgUHJvamVjdGlvbkxpa2UgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLW1vdXNlcG9zaXRpb24nLFxyXG4gIHRlbXBsYXRlOiBgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbnRyb2xNb3VzZVBvc2l0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBjb250cm9sLk1vdXNlUG9zaXRpb247XHJcbiAgQElucHV0KClcclxuICBjb29yZGluYXRlRm9ybWF0OiBDb29yZGluYXRlRm9ybWF0VHlwZTtcclxuICBASW5wdXQoKVxyXG4gIHByb2plY3Rpb246IFByb2plY3Rpb25MaWtlO1xyXG4gIHRhcmdldDogRWxlbWVudDtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCwgcHJpdmF0ZSBlbGVtZW50OiBFbGVtZW50UmVmKSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMudGFyZ2V0ID0gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQ7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnb2wuY29udHJvbC5Nb3VzZVBvc2l0aW9uIGluaXQ6ICcsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLk1vdXNlUG9zaXRpb24odGhpcyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLWNvbnRyb2wtbW91c2Vwb3NpdGlvbicpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/controls/overviewmap.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/controls/overviewmap.component.js
@@ -77,4 +77,4 @@ if (false) {
      */
     ControlOverviewMapComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcnZpZXdtYXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvY29udHJvbHMvb3ZlcnZpZXdtYXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQVMsTUFBTSxZQUFZLENBQUM7QUFDbEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBeUJFLHFDQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLHFEQUFxRDtJQUN2RCxDQUFDOzs7O0lBRUQsOENBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsaURBQVc7OztJQUFYO1FBQ0UsbURBQW1EO1FBQ25ELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7Z0JBckNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxZQUFZOzs7NEJBVWxCLEtBQUs7Z0NBRUwsS0FBSzs4QkFFTCxLQUFLO3dCQUVMLEtBQUs7eUJBRUwsS0FBSzt5QkFFTCxLQUFLOzJCQUVMLEtBQUs7dUJBRUwsS0FBSzs7SUFnQlIsa0NBQUM7Q0FBQSxBQXRDRCxJQXNDQztTQWhDWSwyQkFBMkI7OztJQUN0QywrQ0FBOEI7O0lBQzlCLGdEQUNtQjs7SUFDbkIsb0RBQ3NCOztJQUN0QixrREFDcUI7O0lBQ3JCLDRDQUNjOztJQUNkLDZDQUNzQjs7SUFDdEIsNkNBQ2dCOztJQUNoQiwrQ0FDaUI7O0lBQ2pCLDJDQUNXOzs7OztJQUVDLDBDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb250cm9sLCBWaWV3LCBsYXllciB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLW92ZXJ2aWV3bWFwJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIENvbnRyb2xPdmVydmlld01hcENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGNvbnRyb2wuT3ZlcnZpZXdNYXA7XG4gIEBJbnB1dCgpXG4gIGNvbGxhcHNlZDogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgY29sbGFwc2VMYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBjb2xsYXBzaWJsZTogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KClcbiAgbGF5ZXJzOiBsYXllci5MYXllcltdO1xuICBASW5wdXQoKVxuICB0YXJnZXQ6IEVsZW1lbnQ7XG4gIEBJbnB1dCgpXG4gIHRpcExhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHZpZXc6IFZpZXc7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdpbnN0YW5jaW5nIGFvbC1jb250cm9sLW92ZXJ2aWV3bWFwJyk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuT3ZlcnZpZXdNYXAodGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC1vdmVydmlld21hcCcpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2wodGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcnZpZXdtYXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvY29udHJvbHMvb3ZlcnZpZXdtYXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQVMsTUFBTSxZQUFZLENBQUM7QUFDbEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBeUJFLHFDQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLHFEQUFxRDtJQUN2RCxDQUFDOzs7O0lBRUQsOENBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsaURBQVc7OztJQUFYO1FBQ0UsbURBQW1EO1FBQ25ELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7Z0JBckNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxZQUFZOzs7NEJBVWxCLEtBQUs7Z0NBRUwsS0FBSzs4QkFFTCxLQUFLO3dCQUVMLEtBQUs7eUJBRUwsS0FBSzt5QkFFTCxLQUFLOzJCQUVMLEtBQUs7dUJBRUwsS0FBSzs7SUFnQlIsa0NBQUM7Q0FBQSxBQXRDRCxJQXNDQztTQWhDWSwyQkFBMkI7OztJQUN0QywrQ0FBOEI7O0lBQzlCLGdEQUNtQjs7SUFDbkIsb0RBQ3NCOztJQUN0QixrREFDcUI7O0lBQ3JCLDRDQUNjOztJQUNkLDZDQUNzQjs7SUFDdEIsNkNBQ2dCOztJQUNoQiwrQ0FDaUI7O0lBQ2pCLDJDQUNXOzs7OztJQUVDLDBDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGNvbnRyb2wsIFZpZXcsIGxheWVyIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtY29udHJvbC1vdmVydmlld21hcCcsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29udHJvbE92ZXJ2aWV3TWFwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBjb250cm9sLk92ZXJ2aWV3TWFwO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29sbGFwc2VkOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29sbGFwc2VMYWJlbDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29sbGFwc2libGU6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICBsYWJlbDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGF5ZXJzOiBsYXllci5MYXllcltdO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGFyZ2V0OiBFbGVtZW50O1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlwTGFiZWw6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHZpZXc6IFZpZXc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdpbnN0YW5jaW5nIGFvbC1jb250cm9sLW92ZXJ2aWV3bWFwJyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgY29udHJvbC5PdmVydmlld01hcCh0aGlzKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZENvbnRyb2wodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC1vdmVydmlld21hcCcpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/controls/rotate.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/controls/rotate.component.js
@@ -68,4 +68,4 @@ if (false) {
      */
     ControlRotateComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm90YXRlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3JvdGF0ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQW9CRSxnQ0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyxnREFBZ0Q7SUFDbEQsQ0FBQzs7OztJQUVELHlDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELDRDQUFXOzs7SUFBWDtRQUNFLDhDQUE4QztRQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2pELENBQUM7O2dCQWhDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsUUFBUSxFQUFFLHFDQUVUO2lCQUNGOzs7Z0JBUFEsWUFBWTs7OzRCQVdsQixLQUFLO3dCQUVMLEtBQUs7MkJBRUwsS0FBSzsyQkFFTCxLQUFLOzJCQUVMLEtBQUs7O0lBZ0JSLDZCQUFDO0NBQUEsQUFqQ0QsSUFpQ0M7U0EzQlksc0JBQXNCOzs7SUFDakMsMENBQXlCOztJQUV6QiwyQ0FDa0I7O0lBQ2xCLHVDQUNjOztJQUNkLDBDQUNpQjs7SUFDakIsMENBQ2lCOztJQUNqQiwwQ0FDa0I7Ozs7O0lBRU4scUNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvbnRyb2wgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtY29udHJvbC1yb3RhdGUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgQ29udHJvbFJvdGF0ZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGNvbnRyb2wuUm90YXRlO1xuXG4gIEBJbnB1dCgpXG4gIGNsYXNzTmFtZTogc3RyaW5nO1xuICBASW5wdXQoKVxuICBsYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKVxuICB0aXBMYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBkdXJhdGlvbjogbnVtYmVyO1xuICBASW5wdXQoKVxuICBhdXRvSGlkZTogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2luc3RhbmNpbmcgYW9sLWNvbnRyb2wtcm90YXRlJyk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuUm90YXRlKHRoaXMpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZENvbnRyb2wodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLWNvbnRyb2wtcm90YXRlJyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm90YXRlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3JvdGF0ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQW9CRSxnQ0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyxnREFBZ0Q7SUFDbEQsQ0FBQzs7OztJQUVELHlDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELDRDQUFXOzs7SUFBWDtRQUNFLDhDQUE4QztRQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2pELENBQUM7O2dCQWhDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsUUFBUSxFQUFFLHFDQUVUO2lCQUNGOzs7Z0JBUFEsWUFBWTs7OzRCQVdsQixLQUFLO3dCQUVMLEtBQUs7MkJBRUwsS0FBSzsyQkFFTCxLQUFLOzJCQUVMLEtBQUs7O0lBZ0JSLDZCQUFDO0NBQUEsQUFqQ0QsSUFpQ0M7U0EzQlksc0JBQXNCOzs7SUFDakMsMENBQXlCOztJQUV6QiwyQ0FDa0I7O0lBQ2xCLHVDQUNjOztJQUNkLDBDQUNpQjs7SUFDakIsMENBQ2lCOztJQUNqQiwwQ0FDa0I7Ozs7O0lBRU4scUNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgY29udHJvbCB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wtcm90YXRlJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb250cm9sUm90YXRlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBjb250cm9sLlJvdGF0ZTtcclxuXHJcbiAgQElucHV0KClcclxuICBjbGFzc05hbWU6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGxhYmVsOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICB0aXBMYWJlbDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgZHVyYXRpb246IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIGF1dG9IaWRlOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnaW5zdGFuY2luZyBhb2wtY29udHJvbC1yb3RhdGUnKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLlJvdGF0ZSh0aGlzKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZENvbnRyb2wodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC1yb3RhdGUnKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2wodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/controls/scaleline.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/controls/scaleline.component.js
@@ -56,4 +56,4 @@ if (false) {
      */
     ControlScaleLineComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NhbGVsaW5lLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3NjYWxlbGluZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQVdFLG1DQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLG1EQUFtRDtJQUNyRCxDQUFDOzs7O0lBRUQsNENBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsK0NBQVc7OztJQUFYO1FBQ0UsaURBQWlEO1FBQ2pELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7Z0JBdkJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsdUJBQXVCO29CQUNqQyxRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxZQUFZOzs7d0JBVWxCLEtBQUs7O0lBZ0JSLGdDQUFDO0NBQUEsQUF4QkQsSUF3QkM7U0FsQlkseUJBQXlCOzs7SUFDcEMsNkNBQTRCOztJQUM1QiwwQ0FDYzs7Ozs7SUFFRix3Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29udHJvbCB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLXNjYWxlbGluZScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBDb250cm9sU2NhbGVMaW5lQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBpbnN0YW5jZTogY29udHJvbC5TY2FsZUxpbmU7XG4gIEBJbnB1dCgpXG4gIHVuaXRzOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdpbnN0YW5jaW5nIGFvbC1jb250cm9sLXNjYWxlbGluZScpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLlNjYWxlTGluZSh0aGlzKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC1jb250cm9sLXNjYWxlbGluZScpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUNvbnRyb2wodGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NhbGVsaW5lLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3NjYWxlbGluZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQVdFLG1DQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLG1EQUFtRDtJQUNyRCxDQUFDOzs7O0lBRUQsNENBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsK0NBQVc7OztJQUFYO1FBQ0UsaURBQWlEO1FBQ2pELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7Z0JBdkJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsdUJBQXVCO29CQUNqQyxRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxZQUFZOzs7d0JBVWxCLEtBQUs7O0lBZ0JSLGdDQUFDO0NBQUEsQUF4QkQsSUF3QkM7U0FsQlkseUJBQXlCOzs7SUFDcEMsNkNBQTRCOztJQUM1QiwwQ0FDYzs7Ozs7SUFFRix3Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBjb250cm9sIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtY29udHJvbC1zY2FsZWxpbmUnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbnRyb2xTY2FsZUxpbmVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGNvbnRyb2wuU2NhbGVMaW5lO1xyXG4gIEBJbnB1dCgpXHJcbiAgdW5pdHM6IHN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2luc3RhbmNpbmcgYW9sLWNvbnRyb2wtc2NhbGVsaW5lJyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgY29udHJvbC5TY2FsZUxpbmUodGhpcyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLWNvbnRyb2wtc2NhbGVsaW5lJyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/controls/zoom.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/controls/zoom.component.js
@@ -71,4 +71,4 @@ if (false) {
      */
     ControlZoomComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy96b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBc0JFLDhCQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLDhDQUE4QztJQUNoRCxDQUFDOzs7O0lBRUQsdUNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsMENBQVc7OztJQUFYO1FBQ0UsNENBQTRDO1FBQzVDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7Z0JBbENGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxZQUFZOzs7MkJBV2xCLEtBQUs7OEJBRUwsS0FBSzsrQkFFTCxLQUFLO2lDQUVMLEtBQUs7a0NBRUwsS0FBSzt3QkFFTCxLQUFLOztJQWdCUiwyQkFBQztDQUFBLEFBbkNELElBbUNDO1NBN0JZLG9CQUFvQjs7O0lBQy9CLHdDQUF1Qjs7SUFFdkIsd0NBQ2lCOztJQUNqQiwyQ0FDMkI7O0lBQzNCLDRDQUM0Qjs7SUFDNUIsOENBQ3VCOztJQUN2QiwrQ0FDd0I7O0lBQ3hCLHFDQUNjOzs7OztJQUVGLG1DQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb250cm9sIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wtem9vbScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBDb250cm9sWm9vbUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGNvbnRyb2wuWm9vbTtcblxuICBASW5wdXQoKVxuICBkdXJhdGlvbjogbnVtYmVyO1xuICBASW5wdXQoKVxuICB6b29tSW5MYWJlbDogc3RyaW5nIHwgTm9kZTtcbiAgQElucHV0KClcbiAgem9vbU91dExhYmVsOiBzdHJpbmcgfCBOb2RlO1xuICBASW5wdXQoKVxuICB6b29tSW5UaXBMYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKVxuICB6b29tT3V0VGlwTGFiZWw6IHN0cmluZztcbiAgQElucHV0KClcbiAgZGVsdGE6IG51bWJlcjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2luc3RhbmNpbmcgYW9sLWNvbnRyb2wtem9vbScpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLlpvb20odGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC16b29tJyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy96b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBc0JFLDhCQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLDhDQUE4QztJQUNoRCxDQUFDOzs7O0lBRUQsdUNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsMENBQVc7OztJQUFYO1FBQ0UsNENBQTRDO1FBQzVDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7Z0JBbENGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxZQUFZOzs7MkJBV2xCLEtBQUs7OEJBRUwsS0FBSzsrQkFFTCxLQUFLO2lDQUVMLEtBQUs7a0NBRUwsS0FBSzt3QkFFTCxLQUFLOztJQWdCUiwyQkFBQztDQUFBLEFBbkNELElBbUNDO1NBN0JZLG9CQUFvQjs7O0lBQy9CLHdDQUF1Qjs7SUFFdkIsd0NBQ2lCOztJQUNqQiwyQ0FDMkI7O0lBQzNCLDRDQUM0Qjs7SUFDNUIsOENBQ3VCOztJQUN2QiwrQ0FDd0I7O0lBQ3hCLHFDQUNjOzs7OztJQUVGLG1DQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGNvbnRyb2wgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLXpvb20nLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbnRyb2xab29tQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBjb250cm9sLlpvb207XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgZHVyYXRpb246IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHpvb21JbkxhYmVsOiBzdHJpbmcgfCBOb2RlO1xyXG4gIEBJbnB1dCgpXHJcbiAgem9vbU91dExhYmVsOiBzdHJpbmcgfCBOb2RlO1xyXG4gIEBJbnB1dCgpXHJcbiAgem9vbUluVGlwTGFiZWw6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHpvb21PdXRUaXBMYWJlbDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgZGVsdGE6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2luc3RhbmNpbmcgYW9sLWNvbnRyb2wtem9vbScpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuWm9vbSh0aGlzKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZENvbnRyb2wodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC16b29tJyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/controls/zoomslider.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/controls/zoomslider.component.js
@@ -65,4 +65,4 @@ if (false) {
      */
     ControlZoomSliderComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbXNsaWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy96b29tc2xpZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBa0JFLG9DQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLG9EQUFvRDtJQUN0RCxDQUFDOzs7O0lBRUQsNkNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsZ0RBQVc7OztJQUFYO1FBQ0Usa0RBQWtEO1FBQ2xELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7Z0JBOUJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxZQUFZOzs7NEJBV2xCLEtBQUs7MkJBRUwsS0FBSztnQ0FFTCxLQUFLO2dDQUVMLEtBQUs7O0lBZ0JSLGlDQUFDO0NBQUEsQUEvQkQsSUErQkM7U0F6QlksMEJBQTBCOzs7SUFDckMsOENBQTZCOztJQUU3QiwrQ0FDa0I7O0lBQ2xCLDhDQUNpQjs7SUFDakIsbURBQ3NCOztJQUN0QixtREFDc0I7Ozs7O0lBRVYseUNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvbnRyb2wgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtY29udHJvbC16b29tc2xpZGVyJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIENvbnRyb2xab29tU2xpZGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBpbnN0YW5jZTogY29udHJvbC5ab29tU2xpZGVyO1xuXG4gIEBJbnB1dCgpXG4gIGNsYXNzTmFtZTogc3RyaW5nO1xuICBASW5wdXQoKVxuICBkdXJhdGlvbjogbnVtYmVyO1xuICBASW5wdXQoKVxuICBtYXhSZXNvbHV0aW9uOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIG1pblJlc29sdXRpb246IG51bWJlcjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2luc3RhbmNpbmcgYW9sLWNvbnRyb2wtem9vbXNsaWRlcicpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLlpvb21TbGlkZXIodGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZW1vdmluZyBhb2wtY29udHJvbC16b29tc2xpZGVyJyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbXNsaWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy96b29tc2xpZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBa0JFLG9DQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBQ25DLG9EQUFvRDtJQUN0RCxDQUFDOzs7O0lBRUQsNkNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7O0lBRUQsZ0RBQVc7OztJQUFYO1FBQ0Usa0RBQWtEO1FBQ2xELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7Z0JBOUJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxZQUFZOzs7NEJBV2xCLEtBQUs7MkJBRUwsS0FBSztnQ0FFTCxLQUFLO2dDQUVMLEtBQUs7O0lBZ0JSLGlDQUFDO0NBQUEsQUEvQkQsSUErQkM7U0F6QlksMEJBQTBCOzs7SUFDckMsOENBQTZCOztJQUU3QiwrQ0FDa0I7O0lBQ2xCLDhDQUNpQjs7SUFDakIsbURBQ3NCOztJQUN0QixtREFDc0I7Ozs7O0lBRVYseUNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgY29udHJvbCB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWNvbnRyb2wtem9vbXNsaWRlcicsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29udHJvbFpvb21TbGlkZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGNvbnRyb2wuWm9vbVNsaWRlcjtcclxuXHJcbiAgQElucHV0KClcclxuICBjbGFzc05hbWU6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGR1cmF0aW9uOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBtYXhSZXNvbHV0aW9uOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBtaW5SZXNvbHV0aW9uOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdpbnN0YW5jaW5nIGFvbC1jb250cm9sLXpvb21zbGlkZXInKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjb250cm9sLlpvb21TbGlkZXIodGhpcyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRDb250cm9sKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLWNvbnRyb2wtem9vbXNsaWRlcicpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/controls/zoomtoextent.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/controls/zoomtoextent.component.js
@@ -65,4 +65,4 @@ if (false) {
      */
     ControlZoomToExtentComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbXRvZXh0ZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3pvb210b2V4dGVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsT0FBTyxFQUFVLE1BQU0sWUFBWSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQWtCRSxzQ0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyxzREFBc0Q7SUFDeEQsQ0FBQzs7OztJQUVELCtDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxPQUFPLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELGtEQUFXOzs7SUFBWDtRQUNFLG9EQUFvRDtRQUNwRCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2pELENBQUM7O2dCQTlCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsUUFBUSxFQUFFLHFDQUVUO2lCQUNGOzs7Z0JBUFEsWUFBWTs7OzRCQVdsQixLQUFLO3dCQUVMLEtBQUs7MkJBRUwsS0FBSzt5QkFFTCxLQUFLOztJQWdCUixtQ0FBQztDQUFBLEFBL0JELElBK0JDO1NBekJZLDRCQUE0Qjs7O0lBQ3ZDLGdEQUErQjs7SUFFL0IsaURBQ2tCOztJQUNsQiw2Q0FDcUI7O0lBQ3JCLGdEQUNpQjs7SUFDakIsOENBQ2U7Ozs7O0lBRUgsMkNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvbnRyb2wsIEV4dGVudCB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1jb250cm9sLXpvb210b2V4dGVudCcsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBDb250cm9sWm9vbVRvRXh0ZW50Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBpbnN0YW5jZTogY29udHJvbC5ab29tVG9FeHRlbnQ7XG5cbiAgQElucHV0KClcbiAgY2xhc3NOYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGxhYmVsOiBzdHJpbmcgfCBOb2RlO1xuICBASW5wdXQoKVxuICB0aXBMYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBleHRlbnQ6IEV4dGVudDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2luc3RhbmNpbmcgYW9sLWNvbnRyb2wtem9vbXRvZXh0ZW50Jyk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuWm9vbVRvRXh0ZW50KHRoaXMpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZENvbnRyb2wodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLWNvbnRyb2wtem9vbXRvZXh0ZW50Jyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbXRvZXh0ZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3pvb210b2V4dGVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsT0FBTyxFQUFVLE1BQU0sWUFBWSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQWtCRSxzQ0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQUNuQyxzREFBc0Q7SUFDeEQsQ0FBQzs7OztJQUVELCtDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxPQUFPLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELGtEQUFXOzs7SUFBWDtRQUNFLG9EQUFvRDtRQUNwRCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2pELENBQUM7O2dCQTlCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsUUFBUSxFQUFFLHFDQUVUO2lCQUNGOzs7Z0JBUFEsWUFBWTs7OzRCQVdsQixLQUFLO3dCQUVMLEtBQUs7MkJBRUwsS0FBSzt5QkFFTCxLQUFLOztJQWdCUixtQ0FBQztDQUFBLEFBL0JELElBK0JDO1NBekJZLDRCQUE0Qjs7O0lBQ3ZDLGdEQUErQjs7SUFFL0IsaURBQ2tCOztJQUNsQiw2Q0FDcUI7O0lBQ3JCLGdEQUNpQjs7SUFDakIsOENBQ2U7Ozs7O0lBRUgsMkNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgY29udHJvbCwgRXh0ZW50IH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtY29udHJvbC16b29tdG9leHRlbnQnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIENvbnRyb2xab29tVG9FeHRlbnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGNvbnRyb2wuWm9vbVRvRXh0ZW50O1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGNsYXNzTmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGFiZWw6IHN0cmluZyB8IE5vZGU7XHJcbiAgQElucHV0KClcclxuICB0aXBMYWJlbDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgZXh0ZW50OiBFeHRlbnQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdpbnN0YW5jaW5nIGFvbC1jb250cm9sLXpvb210b2V4dGVudCcpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGNvbnRyb2wuWm9vbVRvRXh0ZW50KHRoaXMpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC1jb250cm9sLXpvb210b2V4dGVudCcpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlQ29udHJvbCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/coordinate.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/coordinate.component.js
@@ -188,4 +188,4 @@ if (false) {
      */
     CollectionCoordinatesComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29vcmRpbmF0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb29yZGluYXRlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQWEsS0FBSyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNyRixPQUFPLEVBQUUsSUFBSSxFQUFjLE1BQU0sWUFBWSxDQUFDO0FBQzlDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQ0wsc0JBQXNCLEVBQ3RCLDJCQUEyQixFQUMzQix3QkFBd0IsRUFDeEIsdUJBQXVCLEdBQ3hCLE1BQU0sdUJBQXVCLENBQUM7QUFDL0IsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXZEO0lBZ0JFLDZCQUNVLEdBQWlCLEVBQ2IsUUFBdUIsRUFDdkIsaUJBQXlDLEVBQ3pDLGtCQUEyQyxFQUMzQyxXQUE2QjtRQUpqQyxRQUFHLEdBQUgsR0FBRyxDQUFjO1FBSDNCLFNBQUksR0FBRyxXQUFXLENBQUM7UUFTakIsNENBQTRDO1FBQzVDLEVBQUUsQ0FBQyxDQUFDLGlCQUFpQixLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDL0IsSUFBSSxDQUFDLElBQUksR0FBRyxpQkFBaUIsQ0FBQztRQUNoQyxDQUFDO1FBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLGtCQUFrQixLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDdkMsSUFBSSxDQUFDLElBQUksR0FBRyxrQkFBa0IsQ0FBQztRQUNqQyxDQUFDO1FBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFFBQVEsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxJQUFJ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QUFDO1lBQ1I7Z0JBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyxzREFBc0QsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRXRHLENBQUM7SUFDSCxDQUFDOztnQkE1REYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw0QkFBNEI7b0JBQ3RDLFFBQVEsRUFBRSw0REFFVDtpQkFDRjs7O2dCQS9FUSxZQUFZO2dCQUduQiwyQkFBMkIsdUJBdUZ4QixRQUFRO2dCQXRGWCx3QkFBd0IsdUJBdUZyQixRQUFROzs7OEJBUlYsS0FBSzt1QkFFTCxLQUFLOztJQWtEUixxQ0FBQztDQUFBLEFBN0RELElBNkRDO1NBdkRZLDhCQUE4Qjs7Ozs7O0lBQ3pDLDhDQUFrQjs7SUFFbEIscURBQ2dDOztJQUNoQyw4Q0FDbUI7Ozs7O0lBR2pCLDZDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT3B0aW9uYWwsIE9uQ2hhbmdlcywgSW5wdXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHByb2osIENvb3JkaW5hdGUgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4vbWFwLmNvbXBvbmVudCc7XG5pbXBvcnQge1xuICBHZW9tZXRyeVBvaW50Q29tcG9uZW50LFxuICBHZW9tZXRyeUxpbmVzdHJpbmdDb21wb25lbnQsXG4gIEdlb21ldHJ5UG9seWdvbkNvbXBvbmVudCxcbiAgR2VvbWV0cnlDaXJjbGVDb21wb25lbnQsXG59IGZyb20gJy4vZ2VvbWV0cnkuY29tcG9uZW50cyc7XG5pbXBvcnQgeyBWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi92aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPdmVybGF5Q29tcG9uZW50IH0gZnJvbSAnLi9vdmVybGF5LmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1jb29yZGluYXRlJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLWNvb3JkaW5hdGVcIj48L2Rpdj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgQ29vcmRpbmF0ZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIHByaXZhdGUgaG9zdDogYW55O1xuXG4gIEBJbnB1dCgpXG4gIHg6IG51bWJlcjtcbiAgQElucHV0KClcbiAgeTogbnVtYmVyO1xuICBASW5wdXQoKVxuICBzcmlkID0gJ0VQU0c6Mzg1Nyc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCxcbiAgICBAT3B0aW9uYWwoKSB2aWV3SG9zdDogVmlld0NvbXBvbmVudCxcbiAgICBAT3B0aW9uYWwoKSBnZW9tZXRyeVBvaW50SG9zdDogR2VvbWV0cnlQb2ludENvbXBvbmVudCxcbiAgICBAT3B0aW9uYWwoKSBnZW9tZXRyeUNpcmNsZUhvc3Q6IEdlb21ldHJ5Q2lyY2xlQ29tcG9uZW50LFxuICAgIEBPcHRpb25hbCgpIG92ZXJsYXlIb3N0OiBPdmVybGF5Q29tcG9uZW50XG4gICkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdpbnN0YW5jaW5nIGFvbC1jb29yZGluYXRlJyk7XG4gICAgaWYgKGdlb21ldHJ5UG9pbnRIb3N0ICE9PSBudWxsKSB7XG4gICAgICB0aGlzLmhvc3QgPSBnZW9tZXRyeVBvaW50SG9zdDtcbiAgICB9IGVsc2UgaWYgKGdlb21ldHJ5Q2lyY2xlSG9zdCAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5ob3N0ID0gZ2VvbWV0cnlDaXJjbGVIb3N0O1xuICAgIH0gZWxzZSBpZiAodmlld0hvc3QgIT09IG51bGwpIHtcbiAgICAgIHRoaXMuaG9zdCA9IHZpZXdIb3N0O1xuICAgIH0gZWxzZSBpZiAob3ZlcmxheUhvc3QgIT09IG51bGwpIHtcbiAgICAgIHRoaXMuaG9zdCA9IG92ZXJsYXlIb3N0O1xuICAgIH1cbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBsZXQgcmVmZXJlbmNlUHJvamVjdGlvbjogcHJvai5Qcm9qZWN0aW9uO1xuICAgIGxldCByZWZlcmVuY2VQcm9qZWN0aW9uQ29kZTogc3RyaW5nO1xuICAgIGxldCB0cmFuc2Zvcm1lZENvb3JkaW5hdGVzOiBudW1iZXJbXTtcblxuICAgIHJlZmVyZW5jZVByb2plY3Rpb24gPSB0aGlzLm1hcC5pbnN0YW5jZS5nZXRWaWV3KCkuZ2V0UHJvamVjdGlvbigpO1xuICAgIHJlZmVyZW5jZVByb2plY3Rpb25Db2RlID0gcmVmZXJlbmNlUHJvamVjdGlvbiA/IHJlZmVyZW5jZVByb2plY3Rpb24uZ2V0Q29kZSgpIDogJ0VQU0c6Mzg1Nyc7XG5cbiAgICBpZiAodGhpcy5zcmlkID09PSByZWZlcmVuY2VQcm9qZWN0aW9uQ29kZSkge1xuICAgICAgdHJhbnNmb3JtZWRDb29yZGluYXRlcyA9IFt0aGlzLngsIHRoaXMueV07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyYW5zZm9ybWVkQ29vcmRpbmF0ZXMgPSBwcm9qLnRyYW5zZm9ybShbdGhpcy54LCB0aGlzLnldLCB0aGlzLnNyaWQsIHJlZmVyZW5jZVByb2plY3Rpb25Db2RlKTtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHRoaXMuaG9zdC5jb21wb25lbnRUeXBlKSB7XG4gICAgICBjYXNlICdnZW9tZXRyeS1wb2ludCc6XG4gICAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRDb29yZGluYXRlcyh0cmFuc2Zvcm1lZENvb3JkaW5hdGVzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdnZW9tZXRyeS1jaXJjbGUnOlxuICAgICAgY2FzZSAndmlldyc6XG4gICAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRDZW50ZXIodHJhbnNmb3JtZWRDb29yZGluYXRlcyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnb3ZlcmxheSc6XG4gICAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRQb3NpdGlvbih0cmFuc2Zvcm1lZENvb3JkaW5hdGVzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1jb2xsZWN0aW9uLWNvb3JkaW5hdGVzJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLWNvbGxlY3Rpb24tY29vcmRpbmF0ZXNcIj48L2Rpdj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgQ29sbGVjdGlvbkNvb3JkaW5hdGVzQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgcHJpdmF0ZSBob3N0OiBhbnk7XG5cbiAgQElucHV0KClcbiAgY29vcmRpbmF0ZXM6IFtudW1iZXIsIG51bWJlcl1bXTtcbiAgQElucHV0KClcbiAgc3JpZCA9ICdFUFNHOjM4NTcnO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQsXG4gICAgQE9wdGlvbmFsKCkgZ2VvbWV0cnlMaW5lc3RyaW5nOiBHZW9tZXRyeUxpbmVzdHJpbmdDb21wb25lbnQsXG4gICAgQE9wdGlvbmFsKCkgZ2VvbWV0cnlQb2x5Z29uOiBHZW9tZXRyeVBvbHlnb25Db21wb25lbnRcbiAgKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIGFvbC1jb2xsZWN0aW9uLWNvb3JkaW5hdGVzJyk7XG4gICAgaWYgKCEhZ2VvbWV0cnlMaW5lc3RyaW5nKSB7XG4gICAgICB0aGlzLmhvc3QgPSBnZW9tZXRyeUxpbmVzdHJpbmc7XG4gICAgfSBlbHNlIGlmICghIWdlb21ldHJ5UG9seWdvbikge1xuICAgICAgdGhpcy5ob3N0ID0gZ2VvbWV0cnlQb2x5Z29uO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FvbC1jb2xsZWN0aW9uLWNvb3JkaW5hdGVzIG11c3QgYmUgYSBjaGlsZCBvZiBhIGdlb21ldHJ5IGNvbXBvbmVudCcpO1xuICAgIH1cbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBsZXQgcmVmZXJlbmNlUHJvamVjdGlvbjogcHJvai5Qcm9qZWN0aW9uO1xuICAgIGxldCByZWZlcmVuY2VQcm9qZWN0aW9uQ29kZTogc3RyaW5nO1xuICAgIGxldCB0cmFuc2Zvcm1lZENvb3JkaW5hdGVzOiBBcnJheTxDb29yZGluYXRlPjtcblxuICAgIC8vIGNvbnNvbGUubG9nKCdjb29yZGluYXRlcyBjaGFuZ2U6ICcsIHRoaXMuY29vcmRpbmF0ZXMpO1xuXG4gICAgcmVmZXJlbmNlUHJvamVjdGlvbiA9IHRoaXMubWFwLmluc3RhbmNlLmdldFZpZXcoKS5nZXRQcm9qZWN0aW9uKCk7XG4gICAgcmVmZXJlbmNlUHJvamVjdGlvbkNvZGUgPSByZWZlcmVuY2VQcm9qZWN0aW9uID8gcmVmZXJlbmNlUHJvamVjdGlvbi5nZXRDb2RlKCkgOiAnRVBTRzozODU3JztcblxuICAgIGlmICh0aGlzLnNyaWQgPT09IHJlZmVyZW5jZVByb2plY3Rpb25Db2RlKSB7XG4gICAgICB0cmFuc2Zvcm1lZENvb3JkaW5hdGVzID0gdGhpcy5jb29yZGluYXRlcztcbiAgICB9IGVsc2Uge1xuICAgICAgdHJhbnNmb3JtZWRDb29yZGluYXRlcyA9IFtdO1xuICAgICAgdGhpcy5jb29yZGluYXRlcy5mb3JFYWNoKFxuICAgICAgICBmdW5jdGlvbihjb29yZGluYXRlOiBDb29yZGluYXRlKSB7XG4gICAgICAgICAgdHJhbnNmb3JtZWRDb29yZGluYXRlcy5wdXNoKHByb2oudHJhbnNmb3JtKGNvb3JkaW5hdGUsIHRoaXMuc3JpZCwgcmVmZXJlbmNlUHJvamVjdGlvbkNvZGUpKTtcbiAgICAgICAgfS5iaW5kKHRoaXMpXG4gICAgICApO1xuICAgIH1cbiAgICBzd2l0Y2ggKHRoaXMuaG9zdC5jb21wb25lbnRUeXBlKSB7XG4gICAgICBjYXNlICdnZW9tZXRyeS1saW5lc3RyaW5nJzpcbiAgICAgICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldENvb3JkaW5hdGVzKHRyYW5zZm9ybWVkQ29vcmRpbmF0ZXMpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2dlb21ldHJ5LXBvbHlnb24nOlxuICAgICAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0Q29vcmRpbmF0ZXMoW3RyYW5zZm9ybWVkQ29vcmRpbmF0ZXNdKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FvbC1jb2xsZWN0aW9uLWNvb3JkaW5hdGVzIGhvc3QgaXMgb2YgdW5rbm93biB0eXBlOiAnICsgdGhpcy5ob3N0LmNvbXBvbmVudFR5cGUpO1xuICAgICAgLy8gYnJlYWs7XG4gICAgfVxuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29vcmRpbmF0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9jb29yZGluYXRlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQWEsS0FBSyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNyRixPQUFPLEVBQUUsSUFBSSxFQUFjLE1BQU0sWUFBWSxDQUFDO0FBQzlDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQ0wsc0JBQXNCLEVBQ3RCLDJCQUEyQixFQUMzQix3QkFBd0IsRUFDeEIsdUJBQXVCLEdBQ3hCLE1BQU0sdUJBQXVCLENBQUM7QUFDL0IsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXZEO0lBZ0JFLDZCQUNVLEdBQWlCLEVBQ2IsUUFBdUIsRUFDdkIsaUJBQXlDLEVBQ3pDLGtCQUEyQyxFQUMzQyxXQUE2QjtRQUpqQyxRQUFHLEdBQUgsR0FBRyxDQUFjO1FBSDNCLFNBQUksR0FBRyxXQUFXLENBQUM7UUFTakIsNENBQTRDO1FBQzVDLEVBQUUsQ0FBQyxDQUFDLGlCQUFpQixLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDL0IsSUFBSSxDQUFDLElBQUksR0FBRyxpQkFBaUIsQ0FBQztRQUNoQyxDQUFDO1FBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLGtCQUFrQixLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDdkMsSUFBSSxDQUFDLElBQUksR0FBRyxrQkFBa0IsQ0FBQztRQUNqQyxDQUFDO1FBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFFBQVEsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxJQUFJ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QUFDO1lBQ1I7Z0JBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyxzREFBc0QsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRXRHLENBQUM7SUFDSCxDQUFDOztnQkE1REYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw0QkFBNEI7b0JBQ3RDLFFBQVEsRUFBRSw0REFFVDtpQkFDRjs7O2dCQS9FUSxZQUFZO2dCQUduQiwyQkFBMkIsdUJBdUZ4QixRQUFRO2dCQXRGWCx3QkFBd0IsdUJBdUZyQixRQUFROzs7OEJBUlYsS0FBSzt1QkFFTCxLQUFLOztJQWtEUixxQ0FBQztDQUFBLEFBN0RELElBNkRDO1NBdkRZLDhCQUE4Qjs7Ozs7O0lBQ3pDLDhDQUFrQjs7SUFFbEIscURBQ2dDOztJQUNoQyw4Q0FDbUI7Ozs7O0lBR2pCLDZDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT3B0aW9uYWwsIE9uQ2hhbmdlcywgSW5wdXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgcHJvaiwgQ29vcmRpbmF0ZSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuL21hcC5jb21wb25lbnQnO1xyXG5pbXBvcnQge1xyXG4gIEdlb21ldHJ5UG9pbnRDb21wb25lbnQsXHJcbiAgR2VvbWV0cnlMaW5lc3RyaW5nQ29tcG9uZW50LFxyXG4gIEdlb21ldHJ5UG9seWdvbkNvbXBvbmVudCxcclxuICBHZW9tZXRyeUNpcmNsZUNvbXBvbmVudCxcclxufSBmcm9tICcuL2dlb21ldHJ5LmNvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi92aWV3LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE92ZXJsYXlDb21wb25lbnQgfSBmcm9tICcuL292ZXJsYXkuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWNvb3JkaW5hdGUnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLWNvb3JkaW5hdGVcIj48L2Rpdj5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29vcmRpbmF0ZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XHJcbiAgcHJpdmF0ZSBob3N0OiBhbnk7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgeDogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgeTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgc3JpZCA9ICdFUFNHOjM4NTcnO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQsXHJcbiAgICBAT3B0aW9uYWwoKSB2aWV3SG9zdDogVmlld0NvbXBvbmVudCxcclxuICAgIEBPcHRpb25hbCgpIGdlb21ldHJ5UG9pbnRIb3N0OiBHZW9tZXRyeVBvaW50Q29tcG9uZW50LFxyXG4gICAgQE9wdGlvbmFsKCkgZ2VvbWV0cnlDaXJjbGVIb3N0OiBHZW9tZXRyeUNpcmNsZUNvbXBvbmVudCxcclxuICAgIEBPcHRpb25hbCgpIG92ZXJsYXlIb3N0OiBPdmVybGF5Q29tcG9uZW50XHJcbiAgKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnaW5zdGFuY2luZyBhb2wtY29vcmRpbmF0ZScpO1xyXG4gICAgaWYgKGdlb21ldHJ5UG9pbnRIb3N0ICE9PSBudWxsKSB7XHJcbiAgICAgIHRoaXMuaG9zdCA9IGdlb21ldHJ5UG9pbnRIb3N0O1xyXG4gICAgfSBlbHNlIGlmIChnZW9tZXRyeUNpcmNsZUhvc3QgIT09IG51bGwpIHtcclxuICAgICAgdGhpcy5ob3N0ID0gZ2VvbWV0cnlDaXJjbGVIb3N0O1xyXG4gICAgfSBlbHNlIGlmICh2aWV3SG9zdCAhPT0gbnVsbCkge1xyXG4gICAgICB0aGlzLmhvc3QgPSB2aWV3SG9zdDtcclxuICAgIH0gZWxzZSBpZiAob3ZlcmxheUhvc3QgIT09IG51bGwpIHtcclxuICAgICAgdGhpcy5ob3N0ID0gb3ZlcmxheUhvc3Q7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICBsZXQgcmVmZXJlbmNlUHJvamVjdGlvbjogcHJvai5Qcm9qZWN0aW9uO1xyXG4gICAgbGV0IHJlZmVyZW5jZVByb2plY3Rpb25Db2RlOiBzdHJpbmc7XHJcbiAgICBsZXQgdHJhbnNmb3JtZWRDb29yZGluYXRlczogbnVtYmVyW107XHJcblxyXG4gICAgcmVmZXJlbmNlUHJvamVjdGlvbiA9IHRoaXMubWFwLmluc3RhbmNlLmdldFZpZXcoKS5nZXRQcm9qZWN0aW9uKCk7XHJcbiAgICByZWZlcmVuY2VQcm9qZWN0aW9uQ29kZSA9IHJlZmVyZW5jZVByb2plY3Rpb24gPyByZWZlcmVuY2VQcm9qZWN0aW9uLmdldENvZGUoKSA6ICdFUFNHOjM4NTcnO1xyXG5cclxuICAgIGlmICh0aGlzLnNyaWQgPT09IHJlZmVyZW5jZVByb2plY3Rpb25Db2RlKSB7XHJcbiAgICAgIHRyYW5zZm9ybWVkQ29vcmRpbmF0ZXMgPSBbdGhpcy54LCB0aGlzLnldO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdHJhbnNmb3JtZWRDb29yZGluYXRlcyA9IHByb2oudHJhbnNmb3JtKFt0aGlzLngsIHRoaXMueV0sIHRoaXMuc3JpZCwgcmVmZXJlbmNlUHJvamVjdGlvbkNvZGUpO1xyXG4gICAgfVxyXG5cclxuICAgIHN3aXRjaCAodGhpcy5ob3N0LmNvbXBvbmVudFR5cGUpIHtcclxuICAgICAgY2FzZSAnZ2VvbWV0cnktcG9pbnQnOlxyXG4gICAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRDb29yZGluYXRlcyh0cmFuc2Zvcm1lZENvb3JkaW5hdGVzKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAnZ2VvbWV0cnktY2lyY2xlJzpcclxuICAgICAgY2FzZSAndmlldyc6XHJcbiAgICAgICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldENlbnRlcih0cmFuc2Zvcm1lZENvb3JkaW5hdGVzKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAnb3ZlcmxheSc6XHJcbiAgICAgICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFBvc2l0aW9uKHRyYW5zZm9ybWVkQ29vcmRpbmF0ZXMpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtY29sbGVjdGlvbi1jb29yZGluYXRlcycsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxkaXYgY2xhc3M9XCJhb2wtY29sbGVjdGlvbi1jb29yZGluYXRlc1wiPjwvZGl2PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb2xsZWN0aW9uQ29vcmRpbmF0ZXNDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xyXG4gIHByaXZhdGUgaG9zdDogYW55O1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGNvb3JkaW5hdGVzOiBbbnVtYmVyLCBudW1iZXJdW107XHJcbiAgQElucHV0KClcclxuICBzcmlkID0gJ0VQU0c6Mzg1Nyc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCxcclxuICAgIEBPcHRpb25hbCgpIGdlb21ldHJ5TGluZXN0cmluZzogR2VvbWV0cnlMaW5lc3RyaW5nQ29tcG9uZW50LFxyXG4gICAgQE9wdGlvbmFsKCkgZ2VvbWV0cnlQb2x5Z29uOiBHZW9tZXRyeVBvbHlnb25Db21wb25lbnRcclxuICApIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBhb2wtY29sbGVjdGlvbi1jb29yZGluYXRlcycpO1xyXG4gICAgaWYgKCEhZ2VvbWV0cnlMaW5lc3RyaW5nKSB7XHJcbiAgICAgIHRoaXMuaG9zdCA9IGdlb21ldHJ5TGluZXN0cmluZztcclxuICAgIH0gZWxzZSBpZiAoISFnZW9tZXRyeVBvbHlnb24pIHtcclxuICAgICAgdGhpcy5ob3N0ID0gZ2VvbWV0cnlQb2x5Z29uO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdhb2wtY29sbGVjdGlvbi1jb29yZGluYXRlcyBtdXN0IGJlIGEgY2hpbGQgb2YgYSBnZW9tZXRyeSBjb21wb25lbnQnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGxldCByZWZlcmVuY2VQcm9qZWN0aW9uOiBwcm9qLlByb2plY3Rpb247XHJcbiAgICBsZXQgcmVmZXJlbmNlUHJvamVjdGlvbkNvZGU6IHN0cmluZztcclxuICAgIGxldCB0cmFuc2Zvcm1lZENvb3JkaW5hdGVzOiBBcnJheTxDb29yZGluYXRlPjtcclxuXHJcbiAgICAvLyBjb25zb2xlLmxvZygnY29vcmRpbmF0ZXMgY2hhbmdlOiAnLCB0aGlzLmNvb3JkaW5hdGVzKTtcclxuXHJcbiAgICByZWZlcmVuY2VQcm9qZWN0aW9uID0gdGhpcy5tYXAuaW5zdGFuY2UuZ2V0VmlldygpLmdldFByb2plY3Rpb24oKTtcclxuICAgIHJlZmVyZW5jZVByb2plY3Rpb25Db2RlID0gcmVmZXJlbmNlUHJvamVjdGlvbiA/IHJlZmVyZW5jZVByb2plY3Rpb24uZ2V0Q29kZSgpIDogJ0VQU0c6Mzg1Nyc7XHJcblxyXG4gICAgaWYgKHRoaXMuc3JpZCA9PT0gcmVmZXJlbmNlUHJvamVjdGlvbkNvZGUpIHtcclxuICAgICAgdHJhbnNmb3JtZWRDb29yZGluYXRlcyA9IHRoaXMuY29vcmRpbmF0ZXM7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0cmFuc2Zvcm1lZENvb3JkaW5hdGVzID0gW107XHJcbiAgICAgIHRoaXMuY29vcmRpbmF0ZXMuZm9yRWFjaChcclxuICAgICAgICBmdW5jdGlvbihjb29yZGluYXRlOiBDb29yZGluYXRlKSB7XHJcbiAgICAgICAgICB0cmFuc2Zvcm1lZENvb3JkaW5hdGVzLnB1c2gocHJvai50cmFuc2Zvcm0oY29vcmRpbmF0ZSwgdGhpcy5zcmlkLCByZWZlcmVuY2VQcm9qZWN0aW9uQ29kZSkpO1xyXG4gICAgICAgIH0uYmluZCh0aGlzKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgc3dpdGNoICh0aGlzLmhvc3QuY29tcG9uZW50VHlwZSkge1xyXG4gICAgICBjYXNlICdnZW9tZXRyeS1saW5lc3RyaW5nJzpcclxuICAgICAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0Q29vcmRpbmF0ZXModHJhbnNmb3JtZWRDb29yZGluYXRlcyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ2dlb21ldHJ5LXBvbHlnb24nOlxyXG4gICAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRDb29yZGluYXRlcyhbdHJhbnNmb3JtZWRDb29yZGluYXRlc10pO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignYW9sLWNvbGxlY3Rpb24tY29vcmRpbmF0ZXMgaG9zdCBpcyBvZiB1bmtub3duIHR5cGU6ICcgKyB0aGlzLmhvc3QuY29tcG9uZW50VHlwZSk7XHJcbiAgICAgIC8vIGJyZWFrO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/feature.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/feature.component.js
@@ -73,4 +73,4 @@ if (false) {
      */
     FeatureComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9mZWF0dXJlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBZ0MsS0FBSyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUM5RixPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRW5FO0lBYUUsMEJBQW9CLElBQTJCO1FBQTNCLFNBQUksR0FBSixJQUFJLENBQXVCO1FBTnhDLGtCQUFhLEdBQUcsU0FBUyxDQUFDO0lBTWlCLENBQUM7Ozs7SUFFbkQsbUNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBQzlCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztZQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDL0IsQ0FBQztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7OztJQUVELHNDQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7Ozs7SUFFRCxzQ0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQy9CLENBQUM7SUFDSCxDQUFDOztnQkEvQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO29CQUN2QixRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxxQkFBcUI7OztxQkFZM0IsS0FBSzs7SUFzQlIsdUJBQUM7Q0FBQSxBQWhDRCxJQWdDQztTQTFCWSxnQkFBZ0I7OztJQUMzQix5Q0FBaUM7O0lBQ2pDLG9DQUF5Qjs7SUFFekIsOEJBQ2dDOzs7OztJQUVwQixnQ0FBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMsIElucHV0LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGZWF0dXJlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBTb3VyY2VWZWN0b3JDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZXMvdmVjdG9yLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1mZWF0dXJlJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIEZlYXR1cmVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzIHtcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnZmVhdHVyZSc7XG4gIHB1YmxpYyBpbnN0YW5jZTogRmVhdHVyZTtcblxuICBASW5wdXQoKVxuICBpZDogc3RyaW5nIHwgbnVtYmVyIHwgdW5kZWZpbmVkO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaG9zdDogU291cmNlVmVjdG9yQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgRmVhdHVyZSgpO1xuICAgIGlmICh0aGlzLmlkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0SWQodGhpcy5pZCk7XG4gICAgfVxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5hZGRGZWF0dXJlKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnJlbW92ZUZlYXR1cmUodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKHRoaXMuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0SWQodGhpcy5pZCk7XG4gICAgfVxuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9mZWF0dXJlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBZ0MsS0FBSyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUM5RixPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRW5FO0lBYUUsMEJBQW9CLElBQTJCO1FBQTNCLFNBQUksR0FBSixJQUFJLENBQXVCO1FBTnhDLGtCQUFhLEdBQUcsU0FBUyxDQUFDO0lBTWlCLENBQUM7Ozs7SUFFbkQsbUNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBQzlCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztZQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDL0IsQ0FBQztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7OztJQUVELHNDQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7Ozs7SUFFRCxzQ0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQy9CLENBQUM7SUFDSCxDQUFDOztnQkEvQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO29CQUN2QixRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxxQkFBcUI7OztxQkFZM0IsS0FBSzs7SUFzQlIsdUJBQUM7Q0FBQSxBQWhDRCxJQWdDQztTQTFCWSxnQkFBZ0I7OztJQUMzQix5Q0FBaUM7O0lBQ2pDLG9DQUF5Qjs7SUFFekIsOEJBQ2dDOzs7OztJQUVwQixnQ0FBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMsIElucHV0LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZlYXR1cmUgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgU291cmNlVmVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2VzL3ZlY3Rvci5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtZmVhdHVyZScsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRmVhdHVyZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMge1xyXG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2ZlYXR1cmUnO1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogRmVhdHVyZTtcclxuXHJcbiAgQElucHV0KClcclxuICBpZDogc3RyaW5nIHwgbnVtYmVyIHwgdW5kZWZpbmVkO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGhvc3Q6IFNvdXJjZVZlY3RvckNvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IEZlYXR1cmUoKTtcclxuICAgIGlmICh0aGlzLmlkICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRJZCh0aGlzLmlkKTtcclxuICAgIH1cclxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5hZGRGZWF0dXJlKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2UucmVtb3ZlRmVhdHVyZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGlmICh0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0SWQodGhpcy5pZCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/formats/format.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/formats/format.component.js
@@ -15,4 +15,4 @@ if (false) {
     /** @type {?} */
     FormatComponent.prototype.componentType;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2Zvcm1hdHMvZm9ybWF0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUE7SUFBQTtRQUVTLGtCQUFhLEdBQUcsUUFBUSxDQUFDO0lBQ2xDLENBQUM7SUFBRCxzQkFBQztBQUFELENBQUMsQUFIRCxJQUdDOzs7O0lBRkMsbUNBQWdDOztJQUNoQyx3Q0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3JtYXQgfSBmcm9tICdvcGVubGF5ZXJzJztcblxuZXhwb3J0IGNsYXNzIEZvcm1hdENvbXBvbmVudCB7XG4gIHB1YmxpYyBpbnN0YW5jZTogZm9ybWF0LkZlYXR1cmU7XG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2Zvcm1hdCc7XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2Zvcm1hdHMvZm9ybWF0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUE7SUFBQTtRQUVTLGtCQUFhLEdBQUcsUUFBUSxDQUFDO0lBQ2xDLENBQUM7SUFBRCxzQkFBQztBQUFELENBQUMsQUFIRCxJQUdDOzs7O0lBRkMsbUNBQWdDOztJQUNoQyx3Q0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3JtYXQgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGb3JtYXRDb21wb25lbnQge1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogZm9ybWF0LkZlYXR1cmU7XHJcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnZm9ybWF0JztcclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/formats/mvt.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/formats/mvt.component.js
@@ -42,4 +42,4 @@ if (false) {
     /** @type {?} */
     FormatMVTComponent.prototype.layers;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXZ0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2Zvcm1hdHMvbXZ0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsTUFBTSxFQUFRLE1BQU0sWUFBWSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVyRDtJQUt3Qyw4Q0FBZTtJQWNyRDtRQUFBLFlBQ0UsaUJBQU8sU0FFUjtRQURDLEtBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUksQ0FBQyxDQUFDOztJQUN2QyxDQUFDOztnQkF0QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFFBQVEsRUFBRSxFQUFFO29CQUNaLFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxrQkFBa0IsRUFBbEIsQ0FBa0IsQ0FBQyxFQUFFLENBQUM7aUJBQzdGOzs7OytCQUlFLEtBQUs7K0JBSUwsS0FBSzs0QkFFTCxLQUFLO3lCQUVMLEtBQUs7O0lBT1IseUJBQUM7Q0FBQSxBQXZCRCxDQUt3QyxlQUFlLEdBa0J0RDtTQWxCWSxrQkFBa0I7OztJQUM3QixzQ0FBcUI7O0lBRXJCLDBDQUdnSDs7SUFDaEgsMENBQ3FCOztJQUNyQix1Q0FDa0I7O0lBQ2xCLG9DQUNpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgZm9yd2FyZFJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGZvcm1hdCwgZ2VvbSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgRm9ybWF0Q29tcG9uZW50IH0gZnJvbSAnLi9mb3JtYXQuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWZvcm1hdC1tdnQnLFxuICB0ZW1wbGF0ZTogJycsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogRm9ybWF0Q29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBGb3JtYXRNVlRDb21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBGb3JtYXRNVlRDb21wb25lbnQgZXh0ZW5kcyBGb3JtYXRDb21wb25lbnQge1xuICBpbnN0YW5jZTogZm9ybWF0Lk1WVDtcblxuICBASW5wdXQoKVxuICBmZWF0dXJlQ2xhc3M6XG4gICAgfCAoKGdlb206IGdlb20uR2VvbWV0cnkgfCB7IFtrOiBzdHJpbmddOiBhbnkgfSkgPT4gYW55KVxuICAgIHwgKChnZW9tOiBnZW9tLkdlb21ldHJ5VHlwZSwgYXJnMjogbnVtYmVyW10sIGFyZzM6IG51bWJlcltdIHwgbnVtYmVyW11bXSwgYXJnNDogeyBbazogc3RyaW5nXTogYW55IH0pID0+IGFueSk7XG4gIEBJbnB1dCgpXG4gIGdlb21ldHJ5TmFtZTogc3RyaW5nO1xuICBASW5wdXQoKVxuICBsYXllck5hbWU6IHN0cmluZztcbiAgQElucHV0KClcbiAgbGF5ZXJzOiBzdHJpbmdbXTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgZm9ybWF0Lk1WVCh0aGlzKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXZ0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2Zvcm1hdHMvbXZ0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsTUFBTSxFQUFRLE1BQU0sWUFBWSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVyRDtJQUt3Qyw4Q0FBZTtJQWNyRDtRQUFBLFlBQ0UsaUJBQU8sU0FFUjtRQURDLEtBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUksQ0FBQyxDQUFDOztJQUN2QyxDQUFDOztnQkF0QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFFBQVEsRUFBRSxFQUFFO29CQUNaLFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxrQkFBa0IsRUFBbEIsQ0FBa0IsQ0FBQyxFQUFFLENBQUM7aUJBQzdGOzs7OytCQUlFLEtBQUs7K0JBSUwsS0FBSzs0QkFFTCxLQUFLO3lCQUVMLEtBQUs7O0lBT1IseUJBQUM7Q0FBQSxBQXZCRCxDQUt3QyxlQUFlLEdBa0J0RDtTQWxCWSxrQkFBa0I7OztJQUM3QixzQ0FBcUI7O0lBRXJCLDBDQUdnSDs7SUFDaEgsMENBQ3FCOztJQUNyQix1Q0FDa0I7O0lBQ2xCLG9DQUNpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgZm9yd2FyZFJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgZm9ybWF0LCBnZW9tIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IEZvcm1hdENvbXBvbmVudCB9IGZyb20gJy4vZm9ybWF0LmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1mb3JtYXQtbXZ0JyxcclxuICB0ZW1wbGF0ZTogJycsXHJcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBGb3JtYXRDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IEZvcm1hdE1WVENvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGb3JtYXRNVlRDb21wb25lbnQgZXh0ZW5kcyBGb3JtYXRDb21wb25lbnQge1xyXG4gIGluc3RhbmNlOiBmb3JtYXQuTVZUO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGZlYXR1cmVDbGFzczpcclxuICAgIHwgKChnZW9tOiBnZW9tLkdlb21ldHJ5IHwgeyBbazogc3RyaW5nXTogYW55IH0pID0+IGFueSlcclxuICAgIHwgKChnZW9tOiBnZW9tLkdlb21ldHJ5VHlwZSwgYXJnMjogbnVtYmVyW10sIGFyZzM6IG51bWJlcltdIHwgbnVtYmVyW11bXSwgYXJnNDogeyBbazogc3RyaW5nXTogYW55IH0pID0+IGFueSk7XHJcbiAgQElucHV0KClcclxuICBnZW9tZXRyeU5hbWU6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGxheWVyTmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGF5ZXJzOiBzdHJpbmdbXTtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBmb3JtYXQuTVZUKHRoaXMpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/geometry.components.js
+++ b/node_modules/ngx-openlayers/esm5/lib/geometry.components.js
@@ -209,4 +209,4 @@ if (false) {
      */
     GeometryCircleComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VvbWV0cnkuY29tcG9uZW50cy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2dlb21ldHJ5LmNvbXBvbmVudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXZEO0lBVUUscUNBQW9CLElBQXNCO1FBQXRCLFNBQUksR0FBSixJQUFJLENBQWtCO1FBSG5DLGtCQUFhLEdBQUcscUJBQXFCLENBQUM7UUFJM0MscURBQXFEO0lBQ3ZELENBQUM7Ozs7SUFFRCw4Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hELENBQUM7Ozs7SUFDRCxpREFBVzs7O0lBQVg7UUFDRSwrQkFBK0I7SUFDakMsQ0FBQzs7Z0JBcEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxnQkFBZ0I7O0lBdUJ6QixrQ0FBQztDQUFBLEFBckJELElBcUJDO1NBZlksMkJBQTJCOzs7SUFDdEMsb0RBQTZDOztJQUM3QywrQ0FBaUM7Ozs7O0lBRXJCLDJDQUE4Qjs7QUFhNUM7SUFVRSxnQ0FBb0IsSUFBc0I7UUFBdEIsU0FBSSxHQUFKLElBQUksQ0FBa0I7UUFIbkMsa0JBQWEsR0FBRyxnQkFBZ0IsQ0FBQztRQUl0Qyw4Q0FBOEM7SUFDaEQsQ0FBQzs7OztJQUVELHlDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyx3RUFBd0U7UUFDaEgsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoRCxDQUFDOzs7O0lBRUQsNENBQVc7OztJQUFYO1FBQ0UsK0JBQStCO0lBQ2pDLENBQUM7O2dCQXJCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsUUFBUSxFQUFFLHFDQUVUO2lCQUNGOzs7Z0JBOUJRLGdCQUFnQjs7SUErQ3pCLDZCQUFDO0NBQUEsQUF0QkQsSUFzQkM7U0FoQlksc0JBQXNCOzs7SUFDakMsK0NBQXdDOztJQUN4QywwQ0FBNEI7Ozs7O0lBRWhCLHNDQUE4Qjs7QUFjNUM7SUFVRSxrQ0FBb0IsSUFBc0I7UUFBdEIsU0FBSSxHQUFKLElBQUksQ0FBa0I7UUFIbkMsa0JBQWEsR0FBRyxrQkFBa0IsQ0FBQztRQUl4QyxnREFBZ0Q7SUFDbEQsQ0FBQzs7OztJQUVELDJDQUFROzs7SUFBUjtRQUNFLHdFQUF3RTtRQUN4RSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoRCxDQUFDOzs7O0lBRUQsOENBQVc7OztJQUFYO1FBQ0UsK0JBQStCO0lBQ2pDLENBQUM7O2dCQXRCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsUUFBUSxFQUFFLHFDQUVUO2lCQUNGOzs7Z0JBdERRLGdCQUFnQjs7SUF3RXpCLCtCQUFDO0NBQUEsQUF2QkQsSUF1QkM7U0FqQlksd0JBQXdCOzs7SUFDbkMsaURBQTBDOztJQUMxQyw0Q0FBOEI7Ozs7O0lBRWxCLHdDQUE4Qjs7QUFlNUM7SUFrQkUsaUNBQW9CLElBQXNCO1FBQXRCLFNBQUksR0FBSixJQUFJLENBQWtCO1FBWG5DLGtCQUFhLEdBQUcsaUJBQWlCLENBQUM7UUFZdkMsd0VBQXdFO1FBQ3hFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQVhELHNCQUNJLDJDQUFNOzs7O1FBRFY7WUFFRSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNuQyxDQUFDOzs7OztRQUNELFVBQVcsTUFBYztZQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNsQyxDQUFDOzs7T0FIQTs7OztJQVVELDBDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEQsQ0FBQzs7Z0JBekJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUscUJBQXFCO29CQUMvQixRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkEvRVEsZ0JBQWdCOzs7eUJBb0Z0QixLQUFLOztJQWdCUiw4QkFBQztDQUFBLEFBMUJELElBMEJDO1NBcEJZLHVCQUF1Qjs7O0lBQ2xDLGdEQUF5Qzs7SUFDekMsMkNBQTZCOzs7OztJQVVqQix1Q0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25EZXN0cm95LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2VvbSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgRmVhdHVyZUNvbXBvbmVudCB9IGZyb20gJy4vZmVhdHVyZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtZ2VvbWV0cnktbGluZXN0cmluZycsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBHZW9tZXRyeUxpbmVzdHJpbmdDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2dlb21ldHJ5LWxpbmVzdHJpbmcnO1xuICBwdWJsaWMgaW5zdGFuY2U6IGdlb20uTGluZVN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGhvc3Q6IEZlYXR1cmVDb21wb25lbnQpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnaW5zdGFuY2luZyBhb2wtZ2VvbWV0cnktbGluZXN0cmluZycpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBnZW9tLkxpbmVTdHJpbmcoW10pO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRHZW9tZXRyeSh0aGlzLmluc3RhbmNlKTtcbiAgfVxuICBuZ09uRGVzdHJveSgpIHtcbiAgICAvLyB0aGlzLmhvc3Quc2V0R2VvbWV0cnkobnVsbCk7XG4gIH1cbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWdlb21ldHJ5LXBvaW50JyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIEdlb21ldHJ5UG9pbnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2dlb21ldHJ5LXBvaW50JztcbiAgcHVibGljIGluc3RhbmNlOiBnZW9tLlBvaW50O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaG9zdDogRmVhdHVyZUNvbXBvbmVudCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBhb2wtZ2VvbWV0cnktcG9pbnQnKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgZ2VvbS5Qb2ludChbMCwgMF0pOyAvLyBkZWZhdWx0aW5nIGNvb3JkaW5hdGVzIHRvIFswLDBdLiBUbyBiZSBvdmVycmlkZGVuIGluIGNoaWxkIGNvbXBvbmVudC5cbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0R2VvbWV0cnkodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICAvLyB0aGlzLmhvc3Quc2V0R2VvbWV0cnkobnVsbCk7XG4gIH1cbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWdlb21ldHJ5LXBvbHlnb24nLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgR2VvbWV0cnlQb2x5Z29uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdnZW9tZXRyeS1wb2x5Z29uJztcbiAgcHVibGljIGluc3RhbmNlOiBnZW9tLlBvbHlnb247XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBob3N0OiBGZWF0dXJlQ29tcG9uZW50KSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIGFvbC1nZW9tZXRyeS1wb2x5Z29uJyk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICAvLyBkZWZhdWx0aW5nIGNvb3JkaW5hdGVzIHRvIFswLDBdLiBUbyBiZSBvdmVycmlkZGVuIGluIGNoaWxkIGNvbXBvbmVudC5cbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGdlb20uUG9seWdvbihbW1swLCAwXSwgWzEsIDBdLCBbMSwgMV1dXSk7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEdlb21ldHJ5KHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgLy8gdGhpcy5ob3N0LnNldEdlb21ldHJ5KG51bGwpO1xuICB9XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1nZW9tZXRyeS1jaXJjbGUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgR2VvbWV0cnlDaXJjbGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdnZW9tZXRyeS1jaXJjbGUnO1xuICBwdWJsaWMgaW5zdGFuY2U6IGdlb20uQ2lyY2xlO1xuXG4gIEBJbnB1dCgpXG4gIGdldCByYWRpdXMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5pbnN0YW5jZS5nZXRSYWRpdXMoKTtcbiAgfVxuICBzZXQgcmFkaXVzKHJhZGl1czogbnVtYmVyKSB7XG4gICAgdGhpcy5pbnN0YW5jZS5zZXRSYWRpdXMocmFkaXVzKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaG9zdDogRmVhdHVyZUNvbXBvbmVudCkge1xuICAgIC8vIGRlZmF1bHRpbmcgY29vcmRpbmF0ZXMgdG8gWzAsMF0uIFRvIGJlIG92ZXJyaWRkZW4gaW4gY2hpbGQgY29tcG9uZW50LlxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgZ2VvbS5DaXJjbGUoWzAsIDBdKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRHZW9tZXRyeSh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VvbWV0cnkuY29tcG9uZW50cy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2dlb21ldHJ5LmNvbXBvbmVudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXZEO0lBVUUscUNBQW9CLElBQXNCO1FBQXRCLFNBQUksR0FBSixJQUFJLENBQWtCO1FBSG5DLGtCQUFhLEdBQUcscUJBQXFCLENBQUM7UUFJM0MscURBQXFEO0lBQ3ZELENBQUM7Ozs7SUFFRCw4Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hELENBQUM7Ozs7SUFDRCxpREFBVzs7O0lBQVg7UUFDRSwrQkFBK0I7SUFDakMsQ0FBQzs7Z0JBcEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxnQkFBZ0I7O0lBdUJ6QixrQ0FBQztDQUFBLEFBckJELElBcUJDO1NBZlksMkJBQTJCOzs7SUFDdEMsb0RBQTZDOztJQUM3QywrQ0FBaUM7Ozs7O0lBRXJCLDJDQUE4Qjs7QUFhNUM7SUFVRSxnQ0FBb0IsSUFBc0I7UUFBdEIsU0FBSSxHQUFKLElBQUksQ0FBa0I7UUFIbkMsa0JBQWEsR0FBRyxnQkFBZ0IsQ0FBQztRQUl0Qyw4Q0FBOEM7SUFDaEQsQ0FBQzs7OztJQUVELHlDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyx3RUFBd0U7UUFDaEgsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoRCxDQUFDOzs7O0lBRUQsNENBQVc7OztJQUFYO1FBQ0UsK0JBQStCO0lBQ2pDLENBQUM7O2dCQXJCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsUUFBUSxFQUFFLHFDQUVUO2lCQUNGOzs7Z0JBOUJRLGdCQUFnQjs7SUErQ3pCLDZCQUFDO0NBQUEsQUF0QkQsSUFzQkM7U0FoQlksc0JBQXNCOzs7SUFDakMsK0NBQXdDOztJQUN4QywwQ0FBNEI7Ozs7O0lBRWhCLHNDQUE4Qjs7QUFjNUM7SUFVRSxrQ0FBb0IsSUFBc0I7UUFBdEIsU0FBSSxHQUFKLElBQUksQ0FBa0I7UUFIbkMsa0JBQWEsR0FBRyxrQkFBa0IsQ0FBQztRQUl4QyxnREFBZ0Q7SUFDbEQsQ0FBQzs7OztJQUVELDJDQUFROzs7SUFBUjtRQUNFLHdFQUF3RTtRQUN4RSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoRCxDQUFDOzs7O0lBRUQsOENBQVc7OztJQUFYO1FBQ0UsK0JBQStCO0lBQ2pDLENBQUM7O2dCQXRCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsUUFBUSxFQUFFLHFDQUVUO2lCQUNGOzs7Z0JBdERRLGdCQUFnQjs7SUF3RXpCLCtCQUFDO0NBQUEsQUF2QkQsSUF1QkM7U0FqQlksd0JBQXdCOzs7SUFDbkMsaURBQTBDOztJQUMxQyw0Q0FBOEI7Ozs7O0lBRWxCLHdDQUE4Qjs7QUFlNUM7SUFrQkUsaUNBQW9CLElBQXNCO1FBQXRCLFNBQUksR0FBSixJQUFJLENBQWtCO1FBWG5DLGtCQUFhLEdBQUcsaUJBQWlCLENBQUM7UUFZdkMsd0VBQXdFO1FBQ3hFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQVhELHNCQUNJLDJDQUFNOzs7O1FBRFY7WUFFRSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNuQyxDQUFDOzs7OztRQUNELFVBQVcsTUFBYztZQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNsQyxDQUFDOzs7T0FIQTs7OztJQVVELDBDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEQsQ0FBQzs7Z0JBekJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUscUJBQXFCO29CQUMvQixRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkEvRVEsZ0JBQWdCOzs7eUJBb0Z0QixLQUFLOztJQWdCUiw4QkFBQztDQUFBLEFBMUJELElBMEJDO1NBcEJZLHVCQUF1Qjs7O0lBQ2xDLGdEQUF5Qzs7SUFDekMsMkNBQTZCOzs7OztJQVVqQix1Q0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25EZXN0cm95LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBnZW9tIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IEZlYXR1cmVDb21wb25lbnQgfSBmcm9tICcuL2ZlYXR1cmUuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWdlb21ldHJ5LWxpbmVzdHJpbmcnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIEdlb21ldHJ5TGluZXN0cmluZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdnZW9tZXRyeS1saW5lc3RyaW5nJztcclxuICBwdWJsaWMgaW5zdGFuY2U6IGdlb20uTGluZVN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBob3N0OiBGZWF0dXJlQ29tcG9uZW50KSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnaW5zdGFuY2luZyBhb2wtZ2VvbWV0cnktbGluZXN0cmluZycpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGdlb20uTGluZVN0cmluZyhbXSk7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0R2VvbWV0cnkodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gdGhpcy5ob3N0LnNldEdlb21ldHJ5KG51bGwpO1xyXG4gIH1cclxufVxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtZ2VvbWV0cnktcG9pbnQnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIEdlb21ldHJ5UG9pbnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnZ2VvbWV0cnktcG9pbnQnO1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogZ2VvbS5Qb2ludDtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBob3N0OiBGZWF0dXJlQ29tcG9uZW50KSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgYW9sLWdlb21ldHJ5LXBvaW50Jyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgZ2VvbS5Qb2ludChbMCwgMF0pOyAvLyBkZWZhdWx0aW5nIGNvb3JkaW5hdGVzIHRvIFswLDBdLiBUbyBiZSBvdmVycmlkZGVuIGluIGNoaWxkIGNvbXBvbmVudC5cclxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRHZW9tZXRyeSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gdGhpcy5ob3N0LnNldEdlb21ldHJ5KG51bGwpO1xyXG4gIH1cclxufVxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtZ2VvbWV0cnktcG9seWdvbicsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgR2VvbWV0cnlQb2x5Z29uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2dlb21ldHJ5LXBvbHlnb24nO1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogZ2VvbS5Qb2x5Z29uO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGhvc3Q6IEZlYXR1cmVDb21wb25lbnQpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBhb2wtZ2VvbWV0cnktcG9seWdvbicpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICAvLyBkZWZhdWx0aW5nIGNvb3JkaW5hdGVzIHRvIFswLDBdLiBUbyBiZSBvdmVycmlkZGVuIGluIGNoaWxkIGNvbXBvbmVudC5cclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgZ2VvbS5Qb2x5Z29uKFtbWzAsIDBdLCBbMSwgMF0sIFsxLCAxXV1dKTtcclxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRHZW9tZXRyeSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gdGhpcy5ob3N0LnNldEdlb21ldHJ5KG51bGwpO1xyXG4gIH1cclxufVxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtZ2VvbWV0cnktY2lyY2xlJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBHZW9tZXRyeUNpcmNsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnZ2VvbWV0cnktY2lyY2xlJztcclxuICBwdWJsaWMgaW5zdGFuY2U6IGdlb20uQ2lyY2xlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGdldCByYWRpdXMoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLmluc3RhbmNlLmdldFJhZGl1cygpO1xyXG4gIH1cclxuICBzZXQgcmFkaXVzKHJhZGl1czogbnVtYmVyKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlLnNldFJhZGl1cyhyYWRpdXMpO1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBob3N0OiBGZWF0dXJlQ29tcG9uZW50KSB7XHJcbiAgICAvLyBkZWZhdWx0aW5nIGNvb3JkaW5hdGVzIHRvIFswLDBdLiBUbyBiZSBvdmVycmlkZGVuIGluIGNoaWxkIGNvbXBvbmVudC5cclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgZ2VvbS5DaXJjbGUoWzAsIDBdKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEdlb21ldHJ5KHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/graticule.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/graticule.component.js
@@ -86,4 +86,4 @@ if (false) {
      */
     GraticuleComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhdGljdWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2dyYXRpY3VsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUE4QyxNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM5QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0M7SUFpQkUsNEJBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFYOUIsa0JBQWEsR0FBRyxXQUFXLENBQUM7SUFXSyxDQUFDOzs7OztJQUV6Qyx3Q0FBVzs7OztJQUFYLFVBQVksT0FBc0I7O1lBQzFCLFVBQVUsR0FBNkIsRUFBRTtRQUUvQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25CLE1BQU0sQ0FBQztRQUNULENBQUM7UUFFRCxHQUFHLENBQUMsQ0FBQyxJQUFNLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzFCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNoQyxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztZQUM5QyxDQUFDO1FBQ0gsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDZixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzVDLENBQUM7UUFDRCxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLENBQUM7Ozs7SUFFRCwrQ0FBa0I7OztJQUFsQjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxTQUFTLENBQUM7WUFDNUIsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXO1lBQzdCLFVBQVUsRUFBRSxJQUFJLENBQUMsVUFBVTtZQUMzQixnQkFBZ0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1lBQ3ZDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxnQkFBZ0I7U0FDeEMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMxQyxDQUFDOztnQkE5Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxlQUFlO29CQUN6QixRQUFRLEVBQUUsMkJBQTJCO2lCQUN0Qzs7O2dCQUxRLFlBQVk7Ozs4QkFVbEIsS0FBSzs2QkFFTCxLQUFLO21DQUVMLEtBQUs7bUNBRUwsS0FBSzs7SUFpQ1IseUJBQUM7Q0FBQSxBQS9DRCxJQStDQztTQTNDWSxrQkFBa0I7OztJQUM3QixzQ0FBYzs7SUFDZCwyQ0FBbUM7O0lBRW5DLHlDQUMwQjs7SUFDMUIsd0NBQ29COztJQUNwQiw4Q0FDeUI7O0lBQ3pCLDhDQUN5Qjs7Ozs7SUFFYixpQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdyYXRpY3VsZSwgc3R5bGUgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1ncmF0aWN1bGUnLFxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nLFxufSlcbmV4cG9ydCBjbGFzcyBHcmF0aWN1bGVDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMge1xuICBpbnN0YW5jZTogYW55O1xuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdncmF0aWN1bGUnO1xuXG4gIEBJbnB1dCgpXG4gIHN0cm9rZVN0eWxlOiBzdHlsZS5TdHJva2U7XG4gIEBJbnB1dCgpXG4gIHNob3dMYWJlbHM6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIGxvbkxhYmVsUG9zaXRpb246IG51bWJlcjtcbiAgQElucHV0KClcbiAgbGF0TGFiZWxQb3NpdGlvbjogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGNvbnN0IHByb3BlcnRpZXM6IHsgW2luZGV4OiBzdHJpbmddOiBhbnkgfSA9IHt9O1xuXG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yIChjb25zdCBrZXkgaW4gY2hhbmdlcykge1xuICAgICAgaWYgKGNoYW5nZXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICBwcm9wZXJ0aWVzW2tleV0gPSBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChwcm9wZXJ0aWVzKSB7XG4gICAgICB0aGlzLmluc3RhbmNlID0gbmV3IEdyYXRpY3VsZShwcm9wZXJ0aWVzKTtcbiAgICB9XG4gICAgdGhpcy5pbnN0YW5jZS5zZXRNYXAodGhpcy5tYXAuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgR3JhdGljdWxlKHtcbiAgICAgIHN0cm9rZVN0eWxlOiB0aGlzLnN0cm9rZVN0eWxlLFxuICAgICAgc2hvd0xhYmVsczogdGhpcy5zaG93TGFiZWxzLFxuICAgICAgbG9uTGFiZWxQb3NpdGlvbjogdGhpcy5sb25MYWJlbFBvc2l0aW9uLFxuICAgICAgbGF0TGFiZWxQb3NpdGlvbjogdGhpcy5sYXRMYWJlbFBvc2l0aW9uLFxuICAgIH0pO1xuICAgIHRoaXMuaW5zdGFuY2Uuc2V0TWFwKHRoaXMubWFwLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhdGljdWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2dyYXRpY3VsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUE4QyxNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM5QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0M7SUFpQkUsNEJBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFYOUIsa0JBQWEsR0FBRyxXQUFXLENBQUM7SUFXSyxDQUFDOzs7OztJQUV6Qyx3Q0FBVzs7OztJQUFYLFVBQVksT0FBc0I7O1lBQzFCLFVBQVUsR0FBNkIsRUFBRTtRQUUvQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25CLE1BQU0sQ0FBQztRQUNULENBQUM7UUFFRCxHQUFHLENBQUMsQ0FBQyxJQUFNLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzFCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNoQyxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztZQUM5QyxDQUFDO1FBQ0gsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDZixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzVDLENBQUM7UUFDRCxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLENBQUM7Ozs7SUFFRCwrQ0FBa0I7OztJQUFsQjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxTQUFTLENBQUM7WUFDNUIsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXO1lBQzdCLFVBQVUsRUFBRSxJQUFJLENBQUMsVUFBVTtZQUMzQixnQkFBZ0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1lBQ3ZDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxnQkFBZ0I7U0FDeEMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMxQyxDQUFDOztnQkE5Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxlQUFlO29CQUN6QixRQUFRLEVBQUUsMkJBQTJCO2lCQUN0Qzs7O2dCQUxRLFlBQVk7Ozs4QkFVbEIsS0FBSzs2QkFFTCxLQUFLO21DQUVMLEtBQUs7bUNBRUwsS0FBSzs7SUFpQ1IseUJBQUM7Q0FBQSxBQS9DRCxJQStDQztTQTNDWSxrQkFBa0I7OztJQUM3QixzQ0FBYzs7SUFDZCwyQ0FBbUM7O0lBRW5DLHlDQUMwQjs7SUFDMUIsd0NBQ29COztJQUNwQiw4Q0FDeUI7O0lBQ3pCLDhDQUN5Qjs7Ozs7SUFFYixpQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgR3JhdGljdWxlLCBzdHlsZSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtZ3JhdGljdWxlJyxcclxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgR3JhdGljdWxlQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCwgT25DaGFuZ2VzIHtcclxuICBpbnN0YW5jZTogYW55O1xyXG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ2dyYXRpY3VsZSc7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgc3Ryb2tlU3R5bGU6IHN0eWxlLlN0cm9rZTtcclxuICBASW5wdXQoKVxyXG4gIHNob3dMYWJlbHM6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICBsb25MYWJlbFBvc2l0aW9uOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBsYXRMYWJlbFBvc2l0aW9uOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGNvbnN0IHByb3BlcnRpZXM6IHsgW2luZGV4OiBzdHJpbmddOiBhbnkgfSA9IHt9O1xyXG5cclxuICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgZm9yIChjb25zdCBrZXkgaW4gY2hhbmdlcykge1xyXG4gICAgICBpZiAoY2hhbmdlcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgcHJvcGVydGllc1trZXldID0gY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChwcm9wZXJ0aWVzKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgR3JhdGljdWxlKHByb3BlcnRpZXMpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5pbnN0YW5jZS5zZXRNYXAodGhpcy5tYXAuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBHcmF0aWN1bGUoe1xyXG4gICAgICBzdHJva2VTdHlsZTogdGhpcy5zdHJva2VTdHlsZSxcclxuICAgICAgc2hvd0xhYmVsczogdGhpcy5zaG93TGFiZWxzLFxyXG4gICAgICBsb25MYWJlbFBvc2l0aW9uOiB0aGlzLmxvbkxhYmVsUG9zaXRpb24sXHJcbiAgICAgIGxhdExhYmVsUG9zaXRpb246IHRoaXMubGF0TGFiZWxQb3NpdGlvbixcclxuICAgIH0pO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5zZXRNYXAodGhpcy5tYXAuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/default.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/default.component.js
@@ -51,4 +51,4 @@ if (false) {
      */
     DefaultInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZGVmYXVsdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxXQUFXLEVBQWMsTUFBTSxZQUFZLENBQUM7QUFDckQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBT0UscUNBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLDhDQUFROzs7SUFBUjtRQUFBLGlCQUdDO1FBRkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxXQUFXLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDdkMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxLQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLEVBQW5DLENBQW1DLENBQUMsQ0FBQztJQUNsRSxDQUFDOzs7O0lBRUQsaURBQVc7OztJQUFYO1FBQUEsaUJBRUM7UUFEQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLEtBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxFQUF0QyxDQUFzQyxDQUFDLENBQUM7SUFDckUsQ0FBQzs7Z0JBaEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxRQUFRLEVBQUUsRUFBRTtpQkFDYjs7O2dCQUxRLFlBQVk7O0lBbUJyQixrQ0FBQztDQUFBLEFBakJELElBaUJDO1NBYlksMkJBQTJCOzs7SUFDdEMsK0NBQThDOzs7OztJQUVsQywwQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpbnRlcmFjdGlvbiwgQ29sbGVjdGlvbiB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kZWZhdWx0JyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBEZWZhdWx0SW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBDb2xsZWN0aW9uPGludGVyYWN0aW9uLkludGVyYWN0aW9uPjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBpbnRlcmFjdGlvbi5kZWZhdWx0cygpO1xuICAgIHRoaXMuaW5zdGFuY2UuZm9yRWFjaChpID0+IHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKGkpKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuaW5zdGFuY2UuZm9yRWFjaChpID0+IHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKGkpKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZGVmYXVsdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxXQUFXLEVBQWMsTUFBTSxZQUFZLENBQUM7QUFDckQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBT0UscUNBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLDhDQUFROzs7SUFBUjtRQUFBLGlCQUdDO1FBRkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxXQUFXLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDdkMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxLQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLEVBQW5DLENBQW1DLENBQUMsQ0FBQztJQUNsRSxDQUFDOzs7O0lBRUQsaURBQVc7OztJQUFYO1FBQUEsaUJBRUM7UUFEQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLEtBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxFQUF0QyxDQUFzQyxDQUFDLENBQUM7SUFDckUsQ0FBQzs7Z0JBaEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxRQUFRLEVBQUUsRUFBRTtpQkFDYjs7O2dCQUxRLFlBQVk7O0lBbUJyQixrQ0FBQztDQUFBLEFBakJELElBaUJDO1NBYlksMkJBQTJCOzs7SUFDdEMsK0NBQThDOzs7OztJQUVsQywwQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGludGVyYWN0aW9uLCBDb2xsZWN0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tZGVmYXVsdCcsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRGVmYXVsdEludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBDb2xsZWN0aW9uPGludGVyYWN0aW9uLkludGVyYWN0aW9uPjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gaW50ZXJhY3Rpb24uZGVmYXVsdHMoKTtcclxuICAgIHRoaXMuaW5zdGFuY2UuZm9yRWFjaChpID0+IHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKGkpKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZS5mb3JFYWNoKGkgPT4gdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24oaSkpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/doubleclickzoom.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/doubleclickzoom.component.js
@@ -57,4 +57,4 @@ if (false) {
      */
     DoubleClickZoomInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG91YmxlY2xpY2t6b29tLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9kb3VibGVjbGlja3pvb20uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUFZRSw2Q0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsc0RBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQseURBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7O2dCQXJCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGlDQUFpQztvQkFDM0MsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OztnQkFMUSxZQUFZOzs7MkJBU2xCLEtBQUs7d0JBRUwsS0FBSzs7SUFhUiwwQ0FBQztDQUFBLEFBdEJELElBc0JDO1NBbEJZLG1DQUFtQzs7O0lBQzlDLHVEQUFzQzs7SUFFdEMsdURBQ2lCOztJQUNqQixvREFDYzs7Ozs7SUFFRixrREFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaW50ZXJhY3Rpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tZG91YmxlY2xpY2t6b29tJyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBEb3VibGVDbGlja1pvb21JbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRvdWJsZUNsaWNrWm9vbTtcblxuICBASW5wdXQoKVxuICBkdXJhdGlvbjogbnVtYmVyO1xuICBASW5wdXQoKVxuICBkZWx0YTogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5Eb3VibGVDbGlja1pvb20odGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG91YmxlY2xpY2t6b29tLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9kb3VibGVjbGlja3pvb20uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUFZRSw2Q0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsc0RBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQseURBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7O2dCQXJCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGlDQUFpQztvQkFDM0MsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OztnQkFMUSxZQUFZOzs7MkJBU2xCLEtBQUs7d0JBRUwsS0FBSzs7SUFhUiwwQ0FBQztDQUFBLEFBdEJELElBc0JDO1NBbEJZLG1DQUFtQzs7O0lBQzlDLHVEQUFzQzs7SUFFdEMsdURBQ2lCOztJQUNqQixvREFDYzs7Ozs7SUFFRixrREFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpbnRlcmFjdGlvbiB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLWRvdWJsZWNsaWNrem9vbScsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRG91YmxlQ2xpY2tab29tSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRvdWJsZUNsaWNrWm9vbTtcclxuXHJcbiAgQElucHV0KClcclxuICBkdXJhdGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgZGVsdGE6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLkRvdWJsZUNsaWNrWm9vbSh0aGlzKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/draganddrop.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/draganddrop.component.js
@@ -60,4 +60,4 @@ if (false) {
      */
     DragAndDropInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ2FuZGRyb3AuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL2RyYWdhbmRkcm9wLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQTBCLE1BQU0sWUFBWSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQWNFLHlDQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6QyxrREFBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxxREFBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7Z0JBdkJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsNkJBQTZCO29CQUN2QyxRQUFRLEVBQUUsRUFBRTtpQkFDYjs7O2dCQUxRLFlBQVk7OztxQ0FTbEIsS0FBSzs2QkFFTCxLQUFLO3lCQUVMLEtBQUs7O0lBYVIsc0NBQUM7Q0FBQSxBQXhCRCxJQXdCQztTQXBCWSwrQkFBK0I7OztJQUMxQyxtREFBa0M7O0lBRWxDLDZEQUNtRDs7SUFDbkQscURBQzJCOztJQUMzQixpREFDZ0I7Ozs7O0lBRUosOENBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGludGVyYWN0aW9uLCBmb3JtYXQsIFByb2plY3Rpb25MaWtlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLWRyYWdhbmRkcm9wJyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBEcmFnQW5kRHJvcEludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBpbnN0YW5jZTogaW50ZXJhY3Rpb24uRHJhZ0FuZERyb3A7XG5cbiAgQElucHV0KClcbiAgZm9ybWF0Q29uc3RydWN0b3JzOiAoKG46IGZvcm1hdC5GZWF0dXJlKSA9PiBhbnkpW107XG4gIEBJbnB1dCgpXG4gIHByb2plY3Rpb246IFByb2plY3Rpb25MaWtlO1xuICBASW5wdXQoKVxuICB0YXJnZXQ6IEVsZW1lbnQ7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLkRyYWdBbmREcm9wKHRoaXMpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ2FuZGRyb3AuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL2RyYWdhbmRkcm9wLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQTBCLE1BQU0sWUFBWSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQWNFLHlDQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6QyxrREFBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxxREFBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7Z0JBdkJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsNkJBQTZCO29CQUN2QyxRQUFRLEVBQUUsRUFBRTtpQkFDYjs7O2dCQUxRLFlBQVk7OztxQ0FTbEIsS0FBSzs2QkFFTCxLQUFLO3lCQUVMLEtBQUs7O0lBYVIsc0NBQUM7Q0FBQSxBQXhCRCxJQXdCQztTQXBCWSwrQkFBK0I7OztJQUMxQyxtREFBa0M7O0lBRWxDLDZEQUNtRDs7SUFDbkQscURBQzJCOztJQUMzQixpREFDZ0I7Ozs7O0lBRUosOENBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaW50ZXJhY3Rpb24sIGZvcm1hdCwgUHJvamVjdGlvbkxpa2UgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kcmFnYW5kZHJvcCcsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRHJhZ0FuZERyb3BJbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBpbnN0YW5jZTogaW50ZXJhY3Rpb24uRHJhZ0FuZERyb3A7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgZm9ybWF0Q29uc3RydWN0b3JzOiAoKG46IGZvcm1hdC5GZWF0dXJlKSA9PiBhbnkpW107XHJcbiAgQElucHV0KClcclxuICBwcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZTtcclxuICBASW5wdXQoKVxyXG4gIHRhcmdldDogRWxlbWVudDtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLkRyYWdBbmREcm9wKHRoaXMpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/dragbox.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/dragbox.component.js
@@ -60,4 +60,4 @@ if (false) {
      */
     DragBoxInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ2JveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhZ2JveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUFnRCxNQUFNLFlBQVksQ0FBQztBQUN2RixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUFjRSxxQ0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsOENBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsaURBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7O2dCQXZCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHlCQUF5QjtvQkFDbkMsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OztnQkFMUSxZQUFZOzs7NEJBU2xCLEtBQUs7NEJBRUwsS0FBSztrQ0FFTCxLQUFLOztJQWFSLGtDQUFDO0NBQUEsQUF4QkQsSUF3QkM7U0FwQlksMkJBQTJCOzs7SUFDdEMsK0NBQThCOztJQUU5QixnREFDa0I7O0lBQ2xCLGdEQUMrQjs7SUFDL0Isc0RBQ3lDOzs7OztJQUU3QiwwQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaW50ZXJhY3Rpb24sIEV2ZW50c0NvbmRpdGlvblR5cGUsIERyYWdCb3hFbmRDb25kaXRpb25UeXBlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLWRyYWdib3gnLFxuICB0ZW1wbGF0ZTogJycsXG59KVxuZXhwb3J0IGNsYXNzIERyYWdCb3hJbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYWdCb3g7XG5cbiAgQElucHV0KClcbiAgY2xhc3NOYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGNvbmRpdGlvbjogRXZlbnRzQ29uZGl0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgYm94RW5kQ29uZGl0aW9uOiBEcmFnQm94RW5kQ29uZGl0aW9uVHlwZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uRHJhZ0JveCh0aGlzKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ2JveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhZ2JveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUFnRCxNQUFNLFlBQVksQ0FBQztBQUN2RixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUFjRSxxQ0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsOENBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsaURBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7O2dCQXZCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHlCQUF5QjtvQkFDbkMsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OztnQkFMUSxZQUFZOzs7NEJBU2xCLEtBQUs7NEJBRUwsS0FBSztrQ0FFTCxLQUFLOztJQWFSLGtDQUFDO0NBQUEsQUF4QkQsSUF3QkM7U0FwQlksMkJBQTJCOzs7SUFDdEMsK0NBQThCOztJQUU5QixnREFDa0I7O0lBQ2xCLGdEQUMrQjs7SUFDL0Isc0RBQ3lDOzs7OztJQUU3QiwwQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpbnRlcmFjdGlvbiwgRXZlbnRzQ29uZGl0aW9uVHlwZSwgRHJhZ0JveEVuZENvbmRpdGlvblR5cGUgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kcmFnYm94JyxcclxuICB0ZW1wbGF0ZTogJycsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEcmFnQm94SW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYWdCb3g7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY2xhc3NOYW1lOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBjb25kaXRpb246IEV2ZW50c0NvbmRpdGlvblR5cGU7XHJcbiAgQElucHV0KClcclxuICBib3hFbmRDb25kaXRpb246IERyYWdCb3hFbmRDb25kaXRpb25UeXBlO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uRHJhZ0JveCh0aGlzKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/dragpan.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/dragpan.component.js
@@ -57,4 +57,4 @@ if (false) {
      */
     DragPanInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3Bhbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhZ3Bhbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUF1QixPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBWUUscUNBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLDhDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELGlEQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOztnQkFyQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTs7OzRCQVNsQixLQUFLOzBCQUVMLEtBQUs7O0lBYVIsa0NBQUM7Q0FBQSxBQXRCRCxJQXNCQztTQWxCWSwyQkFBMkI7OztJQUN0QywrQ0FBOEI7O0lBRTlCLGdEQUMrQjs7SUFDL0IsOENBQ2lCOzs7OztJQUVMLDBDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpbnRlcmFjdGlvbiwgRXZlbnRzQ29uZGl0aW9uVHlwZSwgS2luZXRpYyB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kcmFncGFuJyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBEcmFnUGFuSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5EcmFnUGFuO1xuXG4gIEBJbnB1dCgpXG4gIGNvbmRpdGlvbjogRXZlbnRzQ29uZGl0aW9uVHlwZTtcbiAgQElucHV0KClcbiAga2luZXRpYzogS2luZXRpYztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uRHJhZ1Bhbih0aGlzKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3Bhbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhZ3Bhbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUF1QixPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBWUUscUNBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLDhDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELGlEQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOztnQkFyQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTs7OzRCQVNsQixLQUFLOzBCQUVMLEtBQUs7O0lBYVIsa0NBQUM7Q0FBQSxBQXRCRCxJQXNCQztTQWxCWSwyQkFBMkI7OztJQUN0QywrQ0FBOEI7O0lBRTlCLGdEQUMrQjs7SUFDL0IsOENBQ2lCOzs7OztJQUVMLDBDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGludGVyYWN0aW9uLCBFdmVudHNDb25kaXRpb25UeXBlLCBLaW5ldGljIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tZHJhZ3BhbicsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRHJhZ1BhbkludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5EcmFnUGFuO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGNvbmRpdGlvbjogRXZlbnRzQ29uZGl0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIGtpbmV0aWM6IEtpbmV0aWM7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5EcmFnUGFuKHRoaXMpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/dragrotate.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/dragrotate.component.js
@@ -57,4 +57,4 @@ if (false) {
      */
     DragRotateInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3JvdGF0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhZ3JvdGF0ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUF1QixNQUFNLFlBQVksQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUFZRSx3Q0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsaURBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsb0RBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7O2dCQXJCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtvQkFDdEMsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OztnQkFMUSxZQUFZOzs7NEJBU2xCLEtBQUs7MkJBRUwsS0FBSzs7SUFhUixxQ0FBQztDQUFBLEFBdEJELElBc0JDO1NBbEJZLDhCQUE4Qjs7O0lBQ3pDLGtEQUFpQzs7SUFFakMsbURBQytCOztJQUMvQixrREFDaUI7Ozs7O0lBRUwsNkNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGludGVyYWN0aW9uLCBFdmVudHNDb25kaXRpb25UeXBlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLWRyYWdyb3RhdGUnLFxuICB0ZW1wbGF0ZTogJycsXG59KVxuZXhwb3J0IGNsYXNzIERyYWdSb3RhdGVJbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYWdSb3RhdGU7XG5cbiAgQElucHV0KClcbiAgY29uZGl0aW9uOiBFdmVudHNDb25kaXRpb25UeXBlO1xuICBASW5wdXQoKVxuICBkdXJhdGlvbjogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5EcmFnUm90YXRlKHRoaXMpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3JvdGF0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhZ3JvdGF0ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUF1QixNQUFNLFlBQVksQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUFZRSx3Q0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsaURBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsb0RBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7O2dCQXJCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtvQkFDdEMsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OztnQkFMUSxZQUFZOzs7NEJBU2xCLEtBQUs7MkJBRUwsS0FBSzs7SUFhUixxQ0FBQztDQUFBLEFBdEJELElBc0JDO1NBbEJZLDhCQUE4Qjs7O0lBQ3pDLGtEQUFpQzs7SUFFakMsbURBQytCOztJQUMvQixrREFDaUI7Ozs7O0lBRUwsNkNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaW50ZXJhY3Rpb24sIEV2ZW50c0NvbmRpdGlvblR5cGUgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kcmFncm90YXRlJyxcclxuICB0ZW1wbGF0ZTogJycsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEcmFnUm90YXRlSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYWdSb3RhdGU7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY29uZGl0aW9uOiBFdmVudHNDb25kaXRpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgZHVyYXRpb246IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLkRyYWdSb3RhdGUodGhpcyk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/dragrotateandzoom.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/dragrotateandzoom.component.js
@@ -57,4 +57,4 @@ if (false) {
      */
     DragRotateAndZoomInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3JvdGF0ZWFuZHpvb20uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL2RyYWdyb3RhdGVhbmR6b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQXVCLE1BQU0sWUFBWSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQVlFLCtDQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6Qyx3REFBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3hELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELDJEQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOztnQkFyQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQ0FBbUM7b0JBQzdDLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTs7OzRCQVNsQixLQUFLOzJCQUVMLEtBQUs7O0lBYVIsNENBQUM7Q0FBQSxBQXRCRCxJQXNCQztTQWxCWSxxQ0FBcUM7OztJQUNoRCx5REFBaUM7O0lBRWpDLDBEQUMrQjs7SUFDL0IseURBQ2lCOzs7OztJQUVMLG9EQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpbnRlcmFjdGlvbiwgRXZlbnRzQ29uZGl0aW9uVHlwZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kcmFncm90YXRlYW5kem9vbScsXG4gIHRlbXBsYXRlOiAnJyxcbn0pXG5leHBvcnQgY2xhc3MgRHJhZ1JvdGF0ZUFuZFpvb21JbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYWdSb3RhdGU7XG5cbiAgQElucHV0KClcbiAgY29uZGl0aW9uOiBFdmVudHNDb25kaXRpb25UeXBlO1xuICBASW5wdXQoKVxuICBkdXJhdGlvbjogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5EcmFnUm90YXRlQW5kWm9vbSh0aGlzKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3JvdGF0ZWFuZHpvb20uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL2RyYWdyb3RhdGVhbmR6b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQXVCLE1BQU0sWUFBWSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQVlFLCtDQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBQUcsQ0FBQzs7OztJQUV6Qyx3REFBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3hELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELDJEQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOztnQkFyQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQ0FBbUM7b0JBQzdDLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTs7OzRCQVNsQixLQUFLOzJCQUVMLEtBQUs7O0lBYVIsNENBQUM7Q0FBQSxBQXRCRCxJQXNCQztTQWxCWSxxQ0FBcUM7OztJQUNoRCx5REFBaUM7O0lBRWpDLDBEQUMrQjs7SUFDL0IseURBQ2lCOzs7OztJQUVMLG9EQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGludGVyYWN0aW9uLCBFdmVudHNDb25kaXRpb25UeXBlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tZHJhZ3JvdGF0ZWFuZHpvb20nLFxyXG4gIHRlbXBsYXRlOiAnJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIERyYWdSb3RhdGVBbmRab29tSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYWdSb3RhdGU7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY29uZGl0aW9uOiBFdmVudHNDb25kaXRpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgZHVyYXRpb246IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLkRyYWdSb3RhdGVBbmRab29tKHRoaXMpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/dragzoom.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/dragzoom.component.js
@@ -63,4 +63,4 @@ if (false) {
      */
     DragZoomInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3pvb20uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL2RyYWd6b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQXVCLE1BQU0sWUFBWSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQWdCRSxzQ0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsK0NBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDL0MsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsa0RBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7O2dCQXpCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OztnQkFMUSxZQUFZOzs7NEJBU2xCLEtBQUs7NEJBRUwsS0FBSzsyQkFFTCxLQUFLO3NCQUVMLEtBQUs7O0lBYVIsbUNBQUM7Q0FBQSxBQTFCRCxJQTBCQztTQXRCWSw0QkFBNEI7OztJQUN2QyxnREFBK0I7O0lBRS9CLGlEQUNrQjs7SUFDbEIsaURBQytCOztJQUMvQixnREFDaUI7O0lBQ2pCLDJDQUNhOzs7OztJQUVELDJDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpbnRlcmFjdGlvbiwgRXZlbnRzQ29uZGl0aW9uVHlwZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kcmFnem9vbScsXG4gIHRlbXBsYXRlOiAnJyxcbn0pXG5leHBvcnQgY2xhc3MgRHJhZ1pvb21JbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYWdab29tO1xuXG4gIEBJbnB1dCgpXG4gIGNsYXNzTmFtZTogc3RyaW5nO1xuICBASW5wdXQoKVxuICBjb25kaXRpb246IEV2ZW50c0NvbmRpdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIGR1cmF0aW9uOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIG91dDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uRHJhZ1pvb20odGhpcyk7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ3pvb20uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL2RyYWd6b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQXVCLE1BQU0sWUFBWSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQWdCRSxzQ0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsK0NBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDL0MsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsa0RBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7O2dCQXpCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OztnQkFMUSxZQUFZOzs7NEJBU2xCLEtBQUs7NEJBRUwsS0FBSzsyQkFFTCxLQUFLO3NCQUVMLEtBQUs7O0lBYVIsbUNBQUM7Q0FBQSxBQTFCRCxJQTBCQztTQXRCWSw0QkFBNEI7OztJQUN2QyxnREFBK0I7O0lBRS9CLGlEQUNrQjs7SUFDbEIsaURBQytCOztJQUMvQixnREFDaUI7O0lBQ2pCLDJDQUNhOzs7OztJQUVELDJDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGludGVyYWN0aW9uLCBFdmVudHNDb25kaXRpb25UeXBlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tZHJhZ3pvb20nLFxyXG4gIHRlbXBsYXRlOiAnJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIERyYWdab29tSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYWdab29tO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGNsYXNzTmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29uZGl0aW9uOiBFdmVudHNDb25kaXRpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgZHVyYXRpb246IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIG91dDogYm9vbGVhbjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLkRyYWdab29tKHRoaXMpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/draw.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/draw.component.js
@@ -122,4 +122,4 @@ if (false) {
      */
     DrawInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhdy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhdy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBaURFLGtDQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBVnJDLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBNkIsQ0FBQztRQUV6RCxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUE2QixDQUFDO1FBRS9ELGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBNkIsQ0FBQztRQUUxRCxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUE2QixDQUFDO1FBRTVELHFCQUFnQixHQUFHLElBQUksWUFBWSxFQUE2QixDQUFDO0lBRXpCLENBQUM7Ozs7SUFFekMsMkNBQVE7OztJQUFSO1FBQUEsaUJBUUM7UUFQQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsVUFBQyxLQUFnQyxJQUFLLE9BQUEsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQXpCLENBQXlCLENBQUMsQ0FBQztRQUM1RixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxlQUFlLEVBQUUsVUFBQyxLQUFnQyxJQUFLLE9BQUEsS0FBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQS9CLENBQStCLENBQUMsQ0FBQztRQUN6RyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsVUFBQyxLQUFnQyxJQUFLLE9BQUEsS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQTFCLENBQTBCLENBQUMsQ0FBQztRQUM5RixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsVUFBQyxLQUFnQyxJQUFLLE9BQUEsS0FBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQTVCLENBQTRCLENBQUMsQ0FBQztRQUNsRyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxVQUFDLEtBQWdDLElBQUssT0FBQSxLQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFqQyxDQUFpQyxDQUFDLENBQUM7UUFDNUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsOENBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7O2dCQS9ERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OztnQkFMUSxZQUFZOzs7aUNBU2xCLEtBQUs7MkJBRUwsS0FBSzt5QkFFTCxLQUFLO2dDQUVMLEtBQUs7dUJBRUwsS0FBSzs0QkFFTCxLQUFLOzRCQUVMLEtBQUs7a0NBRUwsS0FBSzt3QkFFTCxLQUFLO21DQUVMLEtBQUs7K0JBRUwsS0FBSzs0QkFFTCxLQUFLO29DQUVMLEtBQUs7MkJBRUwsS0FBSzt3QkFFTCxLQUFLOzJCQUdMLE1BQU07aUNBRU4sTUFBTTs0QkFFTixNQUFNOzhCQUVOLE1BQU07bUNBRU4sTUFBTTs7SUFrQlQsK0JBQUM7Q0FBQSxBQWhFRCxJQWdFQztTQTVEWSx3QkFBd0I7OztJQUNuQyw0Q0FBMkI7O0lBRTNCLGtEQUN3Qjs7SUFDeEIsNENBQ3FDOztJQUNyQywwQ0FDMEI7O0lBQzFCLGlEQUN1Qjs7SUFDdkIsd0NBQzJCOztJQUMzQiw2Q0FDbUI7O0lBQ25CLDZDQUNtQjs7SUFDbkIsbURBQ3lDOztJQUN6Qyx5Q0FDNkQ7O0lBQzdELG9EQUMrQzs7SUFDL0MsZ0RBQ3NCOztJQUN0Qiw2Q0FDbUM7O0lBQ25DLHFEQUMyQzs7SUFDM0MsNENBQ21COztJQUNuQix5Q0FDZ0I7O0lBRWhCLDRDQUN5RDs7SUFDekQsa0RBQytEOztJQUMvRCw2Q0FDMEQ7O0lBQzFELCtDQUM0RDs7SUFDNUQsb0RBQ2lFOzs7OztJQUVyRCx1Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCwgRXZlbnRFbWl0dGVyLCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGludGVyYWN0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLWRyYXcnLFxuICB0ZW1wbGF0ZTogJycsXG59KVxuZXhwb3J0IGNsYXNzIERyYXdJbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYXc7XG5cbiAgQElucHV0KClcbiAgY2xpY2tUb2xlcmFuY2U/OiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIGZlYXR1cmVzPzogb2wuQ29sbGVjdGlvbjxvbC5GZWF0dXJlPjtcbiAgQElucHV0KClcbiAgc291cmNlPzogb2wuc291cmNlLlZlY3RvcjtcbiAgQElucHV0KClcbiAgc25hcFRvbGVyYW5jZT86IG51bWJlcjtcbiAgQElucHV0KClcbiAgdHlwZTogb2wuZ2VvbS5HZW9tZXRyeVR5cGU7XG4gIEBJbnB1dCgpXG4gIG1heFBvaW50cz86IG51bWJlcjtcbiAgQElucHV0KClcbiAgbWluUG9pbnRzPzogbnVtYmVyO1xuICBASW5wdXQoKVxuICBmaW5pc2hDb25kaXRpb24/OiBvbC5FdmVudHNDb25kaXRpb25UeXBlO1xuICBASW5wdXQoKVxuICBzdHlsZT86IG9sLnN0eWxlLlN0eWxlIHwgb2wuc3R5bGUuU3R5bGVbXSB8IG9sLlN0eWxlRnVuY3Rpb247XG4gIEBJbnB1dCgpXG4gIGdlb21ldHJ5RnVuY3Rpb24/OiBvbC5EcmF3R2VvbWV0cnlGdW5jdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIGdlb21ldHJ5TmFtZT86IHN0cmluZztcbiAgQElucHV0KClcbiAgY29uZGl0aW9uPzogb2wuRXZlbnRzQ29uZGl0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgZnJlZWhhbmRDb25kaXRpb24/OiBvbC5FdmVudHNDb25kaXRpb25UeXBlO1xuICBASW5wdXQoKVxuICBmcmVlaGFuZD86IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIHdyYXBYPzogYm9vbGVhbjtcblxuICBAT3V0cHV0KClcbiAgb25DaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQ+KCk7XG4gIEBPdXRwdXQoKVxuICBvbkNoYW5nZUFjdGl2ZSA9IG5ldyBFdmVudEVtaXR0ZXI8b2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudD4oKTtcbiAgQE91dHB1dCgpXG4gIG9uRHJhd0VuZCA9IG5ldyBFdmVudEVtaXR0ZXI8b2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudD4oKTtcbiAgQE91dHB1dCgpXG4gIG9uRHJhd1N0YXJ0ID0gbmV3IEV2ZW50RW1pdHRlcjxvbC5pbnRlcmFjdGlvbi5EcmF3LkV2ZW50PigpO1xuICBAT3V0cHV0KClcbiAgb25Qcm9wZXJ0eUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8b2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudD4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uRHJhdyh0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdjaGFuZ2UnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25DaGFuZ2UuZW1pdChldmVudCkpO1xuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2NoYW5nZTphY3RpdmUnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25DaGFuZ2VBY3RpdmUuZW1pdChldmVudCkpO1xuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2RyYXdlbmQnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25EcmF3RW5kLmVtaXQoZXZlbnQpKTtcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdkcmF3c3RhcnQnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25EcmF3U3RhcnQuZW1pdChldmVudCkpO1xuICAgIHRoaXMuaW5zdGFuY2Uub24oJ3Byb3BlcnR5Y2hhbmdlJywgKGV2ZW50OiBvbC5pbnRlcmFjdGlvbi5EcmF3LkV2ZW50KSA9PiB0aGlzLm9uUHJvcGVydHlDaGFuZ2UuZW1pdChldmVudCkpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhdy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmFjdGlvbnMvZHJhdy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBaURFLGtDQUFvQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO1FBVnJDLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBNkIsQ0FBQztRQUV6RCxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUE2QixDQUFDO1FBRS9ELGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBNkIsQ0FBQztRQUUxRCxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUE2QixDQUFDO1FBRTVELHFCQUFnQixHQUFHLElBQUksWUFBWSxFQUE2QixDQUFDO0lBRXpCLENBQUM7Ozs7SUFFekMsMkNBQVE7OztJQUFSO1FBQUEsaUJBUUM7UUFQQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsVUFBQyxLQUFnQyxJQUFLLE9BQUEsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQXpCLENBQXlCLENBQUMsQ0FBQztRQUM1RixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxlQUFlLEVBQUUsVUFBQyxLQUFnQyxJQUFLLE9BQUEsS0FBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQS9CLENBQStCLENBQUMsQ0FBQztRQUN6RyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsVUFBQyxLQUFnQyxJQUFLLE9BQUEsS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQTFCLENBQTBCLENBQUMsQ0FBQztRQUM5RixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsVUFBQyxLQUFnQyxJQUFLLE9BQUEsS0FBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQTVCLENBQTRCLENBQUMsQ0FBQztRQUNsRyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxVQUFDLEtBQWdDLElBQUssT0FBQSxLQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFqQyxDQUFpQyxDQUFDLENBQUM7UUFDNUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsOENBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7O2dCQS9ERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OztnQkFMUSxZQUFZOzs7aUNBU2xCLEtBQUs7MkJBRUwsS0FBSzt5QkFFTCxLQUFLO2dDQUVMLEtBQUs7dUJBRUwsS0FBSzs0QkFFTCxLQUFLOzRCQUVMLEtBQUs7a0NBRUwsS0FBSzt3QkFFTCxLQUFLO21DQUVMLEtBQUs7K0JBRUwsS0FBSzs0QkFFTCxLQUFLO29DQUVMLEtBQUs7MkJBRUwsS0FBSzt3QkFFTCxLQUFLOzJCQUdMLE1BQU07aUNBRU4sTUFBTTs0QkFFTixNQUFNOzhCQUVOLE1BQU07bUNBRU4sTUFBTTs7SUFrQlQsK0JBQUM7Q0FBQSxBQWhFRCxJQWdFQztTQTVEWSx3QkFBd0I7OztJQUNuQyw0Q0FBMkI7O0lBRTNCLGtEQUN3Qjs7SUFDeEIsNENBQ3FDOztJQUNyQywwQ0FDMEI7O0lBQzFCLGlEQUN1Qjs7SUFDdkIsd0NBQzJCOztJQUMzQiw2Q0FDbUI7O0lBQ25CLDZDQUNtQjs7SUFDbkIsbURBQ3lDOztJQUN6Qyx5Q0FDNkQ7O0lBQzdELG9EQUMrQzs7SUFDL0MsZ0RBQ3NCOztJQUN0Qiw2Q0FDbUM7O0lBQ25DLHFEQUMyQzs7SUFDM0MsNENBQ21COztJQUNuQix5Q0FDZ0I7O0lBRWhCLDRDQUN5RDs7SUFDekQsa0RBQytEOztJQUMvRCw2Q0FDMEQ7O0lBQzFELCtDQUM0RDs7SUFDNUQsb0RBQ2lFOzs7OztJQUVyRCx1Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCwgRXZlbnRFbWl0dGVyLCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaW50ZXJhY3Rpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1kcmF3JyxcclxuICB0ZW1wbGF0ZTogJycsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEcmF3SW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLkRyYXc7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY2xpY2tUb2xlcmFuY2U/OiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBmZWF0dXJlcz86IG9sLkNvbGxlY3Rpb248b2wuRmVhdHVyZT47XHJcbiAgQElucHV0KClcclxuICBzb3VyY2U/OiBvbC5zb3VyY2UuVmVjdG9yO1xyXG4gIEBJbnB1dCgpXHJcbiAgc25hcFRvbGVyYW5jZT86IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHR5cGU6IG9sLmdlb20uR2VvbWV0cnlUeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWF4UG9pbnRzPzogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWluUG9pbnRzPzogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgZmluaXNoQ29uZGl0aW9uPzogb2wuRXZlbnRzQ29uZGl0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIHN0eWxlPzogb2wuc3R5bGUuU3R5bGUgfCBvbC5zdHlsZS5TdHlsZVtdIHwgb2wuU3R5bGVGdW5jdGlvbjtcclxuICBASW5wdXQoKVxyXG4gIGdlb21ldHJ5RnVuY3Rpb24/OiBvbC5EcmF3R2VvbWV0cnlGdW5jdGlvblR5cGU7XHJcbiAgQElucHV0KClcclxuICBnZW9tZXRyeU5hbWU/OiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBjb25kaXRpb24/OiBvbC5FdmVudHNDb25kaXRpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgZnJlZWhhbmRDb25kaXRpb24/OiBvbC5FdmVudHNDb25kaXRpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgZnJlZWhhbmQ/OiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgd3JhcFg/OiBib29sZWFuO1xyXG5cclxuICBAT3V0cHV0KClcclxuICBvbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8b2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudD4oKTtcclxuICBAT3V0cHV0KClcclxuICBvbkNoYW5nZUFjdGl2ZSA9IG5ldyBFdmVudEVtaXR0ZXI8b2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudD4oKTtcclxuICBAT3V0cHV0KClcclxuICBvbkRyYXdFbmQgPSBuZXcgRXZlbnRFbWl0dGVyPG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQ+KCk7XHJcbiAgQE91dHB1dCgpXHJcbiAgb25EcmF3U3RhcnQgPSBuZXcgRXZlbnRFbWl0dGVyPG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQ+KCk7XHJcbiAgQE91dHB1dCgpXHJcbiAgb25Qcm9wZXJ0eUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8b2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudD4oKTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLkRyYXcodGhpcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdjaGFuZ2UnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25DaGFuZ2UuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbignY2hhbmdlOmFjdGl2ZScsIChldmVudDogb2wuaW50ZXJhY3Rpb24uRHJhdy5FdmVudCkgPT4gdGhpcy5vbkNoYW5nZUFjdGl2ZS5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdkcmF3ZW5kJywgKGV2ZW50OiBvbC5pbnRlcmFjdGlvbi5EcmF3LkV2ZW50KSA9PiB0aGlzLm9uRHJhd0VuZC5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdkcmF3c3RhcnQnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25EcmF3U3RhcnQuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbigncHJvcGVydHljaGFuZ2UnLCAoZXZlbnQ6IG9sLmludGVyYWN0aW9uLkRyYXcuRXZlbnQpID0+IHRoaXMub25Qcm9wZXJ0eUNoYW5nZS5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/modify.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/modify.component.js
@@ -98,4 +98,4 @@ if (false) {
      */
     ModifyInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kaWZ5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9tb2RpZnkuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUUsV0FBVyxFQUE2QyxVQUFVLEVBQVcsTUFBTSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ2pILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQWlDRSxvQ0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQVZyQyxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUE0QixDQUFDO1FBRTNELGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQTRCLENBQUM7UUFFN0QsYUFBUSxHQUFHLElBQUksWUFBWSxFQUE0QixDQUFDO1FBRXhELG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQTRCLENBQUM7UUFFOUQscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQTRCLENBQUM7SUFFeEIsQ0FBQzs7OztJQUV6Qyw2Q0FBUTs7O0lBQVI7UUFBQSxpQkFRQztRQVBDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxVQUFDLEtBQStCLElBQUssT0FBQSxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBekIsQ0FBeUIsQ0FBQyxDQUFDO1FBQzNGLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGVBQWUsRUFBRSxVQUFDLEtBQStCLElBQUssT0FBQSxLQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBL0IsQ0FBK0IsQ0FBQyxDQUFDO1FBQ3hHLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLFVBQUMsS0FBK0IsSUFBSyxPQUFBLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQWpDLENBQWlDLENBQUMsQ0FBQztRQUMzRyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsVUFBQyxLQUErQixJQUFLLE9BQUEsS0FBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQTVCLENBQTRCLENBQUMsQ0FBQztRQUNqRyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsVUFBQyxLQUErQixJQUFLLE9BQUEsS0FBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQTlCLENBQThCLENBQUMsQ0FBQztRQUNyRyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxnREFBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7Z0JBL0NGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxRQUFRLEVBQUUsRUFBRTtpQkFDYjs7O2dCQUxRLFlBQVk7Ozs0QkFTbEIsS0FBSztrQ0FFTCxLQUFLO2lDQUVMLEtBQUs7d0JBRUwsS0FBSzsyQkFFTCxLQUFLO3dCQUVMLEtBQUs7eUJBRUwsS0FBSzs4QkFHTCxNQUFNO2dDQUVOLE1BQU07MkJBRU4sTUFBTTtpQ0FFTixNQUFNO21DQUVOLE1BQU07O0lBa0JULGlDQUFDO0NBQUEsQUFoREQsSUFnREM7U0E1Q1ksMEJBQTBCOzs7SUFDckMsOENBQTZCOztJQUU3QiwrQ0FDZ0M7O0lBQ2hDLHFEQUNzQzs7SUFDdEMsb0RBQ3dCOztJQUN4QiwyQ0FDb0Q7O0lBQ3BELDhDQUM4Qjs7SUFDOUIsMkNBQ2dCOztJQUNoQiw0Q0FDdUI7O0lBRXZCLGlEQUMyRDs7SUFDM0QsbURBQzZEOztJQUM3RCw4Q0FDd0Q7O0lBQ3hELG9EQUM4RDs7SUFDOUQsc0RBQ2dFOzs7OztJQUVwRCx5Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGludGVyYWN0aW9uLCBFdmVudHNDb25kaXRpb25UeXBlLCBzdHlsZSwgU3R5bGVGdW5jdGlvbiwgQ29sbGVjdGlvbiwgRmVhdHVyZSwgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLW1vZGlmeScsXG4gIHRlbXBsYXRlOiAnJyxcbn0pXG5leHBvcnQgY2xhc3MgTW9kaWZ5SW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5Nb2RpZnk7XG5cbiAgQElucHV0KClcbiAgY29uZGl0aW9uPzogRXZlbnRzQ29uZGl0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgZGVsZXRlQ29uZGl0aW9uPzogRXZlbnRzQ29uZGl0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgcGl4ZWxUb2xlcmFuY2U/OiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHN0eWxlPzogc3R5bGUuU3R5bGUgfCBzdHlsZS5TdHlsZVtdIHwgU3R5bGVGdW5jdGlvbjtcbiAgQElucHV0KClcbiAgZmVhdHVyZXM6IENvbGxlY3Rpb248RmVhdHVyZT47XG4gIEBJbnB1dCgpXG4gIHdyYXBYPzogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgc291cmNlPzogc291cmNlLlZlY3RvcjtcblxuICBAT3V0cHV0KClcbiAgb25Nb2RpZnlFbmQgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLk1vZGlmeS5FdmVudD4oKTtcbiAgQE91dHB1dCgpXG4gIG9uTW9kaWZ5U3RhcnQgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLk1vZGlmeS5FdmVudD4oKTtcbiAgQE91dHB1dCgpXG4gIG9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5Nb2RpZnkuRXZlbnQ+KCk7XG4gIEBPdXRwdXQoKVxuICBvbkNoYW5nZUFjdGl2ZSA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uTW9kaWZ5LkV2ZW50PigpO1xuICBAT3V0cHV0KClcbiAgb25Qcm9wZXJ0eUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uTW9kaWZ5LkV2ZW50PigpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5Nb2RpZnkodGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZS5vbignY2hhbmdlJywgKGV2ZW50OiBpbnRlcmFjdGlvbi5Nb2RpZnkuRXZlbnQpID0+IHRoaXMub25DaGFuZ2UuZW1pdChldmVudCkpO1xuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2NoYW5nZTphY3RpdmUnLCAoZXZlbnQ6IGludGVyYWN0aW9uLk1vZGlmeS5FdmVudCkgPT4gdGhpcy5vbkNoYW5nZUFjdGl2ZS5lbWl0KGV2ZW50KSk7XG4gICAgdGhpcy5pbnN0YW5jZS5vbigncHJvcGVydHljaGFuZ2UnLCAoZXZlbnQ6IGludGVyYWN0aW9uLk1vZGlmeS5FdmVudCkgPT4gdGhpcy5vblByb3BlcnR5Q2hhbmdlLmVtaXQoZXZlbnQpKTtcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdtb2RpZnllbmQnLCAoZXZlbnQ6IGludGVyYWN0aW9uLk1vZGlmeS5FdmVudCkgPT4gdGhpcy5vbk1vZGlmeUVuZC5lbWl0KGV2ZW50KSk7XG4gICAgdGhpcy5pbnN0YW5jZS5vbignbW9kaWZ5c3RhcnQnLCAoZXZlbnQ6IGludGVyYWN0aW9uLk1vZGlmeS5FdmVudCkgPT4gdGhpcy5vbk1vZGlmeVN0YXJ0LmVtaXQoZXZlbnQpKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kaWZ5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9tb2RpZnkuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUUsV0FBVyxFQUE2QyxVQUFVLEVBQVcsTUFBTSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ2pILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQWlDRSxvQ0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztRQVZyQyxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUE0QixDQUFDO1FBRTNELGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQTRCLENBQUM7UUFFN0QsYUFBUSxHQUFHLElBQUksWUFBWSxFQUE0QixDQUFDO1FBRXhELG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQTRCLENBQUM7UUFFOUQscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQTRCLENBQUM7SUFFeEIsQ0FBQzs7OztJQUV6Qyw2Q0FBUTs7O0lBQVI7UUFBQSxpQkFRQztRQVBDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxVQUFDLEtBQStCLElBQUssT0FBQSxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBekIsQ0FBeUIsQ0FBQyxDQUFDO1FBQzNGLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGVBQWUsRUFBRSxVQUFDLEtBQStCLElBQUssT0FBQSxLQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBL0IsQ0FBK0IsQ0FBQyxDQUFDO1FBQ3hHLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLFVBQUMsS0FBK0IsSUFBSyxPQUFBLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQWpDLENBQWlDLENBQUMsQ0FBQztRQUMzRyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsVUFBQyxLQUErQixJQUFLLE9BQUEsS0FBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQTVCLENBQTRCLENBQUMsQ0FBQztRQUNqRyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsVUFBQyxLQUErQixJQUFLLE9BQUEsS0FBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQTlCLENBQThCLENBQUMsQ0FBQztRQUNyRyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7SUFFRCxnREFBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7Z0JBL0NGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxRQUFRLEVBQUUsRUFBRTtpQkFDYjs7O2dCQUxRLFlBQVk7Ozs0QkFTbEIsS0FBSztrQ0FFTCxLQUFLO2lDQUVMLEtBQUs7d0JBRUwsS0FBSzsyQkFFTCxLQUFLO3dCQUVMLEtBQUs7eUJBRUwsS0FBSzs4QkFHTCxNQUFNO2dDQUVOLE1BQU07MkJBRU4sTUFBTTtpQ0FFTixNQUFNO21DQUVOLE1BQU07O0lBa0JULGlDQUFDO0NBQUEsQUFoREQsSUFnREM7U0E1Q1ksMEJBQTBCOzs7SUFDckMsOENBQTZCOztJQUU3QiwrQ0FDZ0M7O0lBQ2hDLHFEQUNzQzs7SUFDdEMsb0RBQ3dCOztJQUN4QiwyQ0FDb0Q7O0lBQ3BELDhDQUM4Qjs7SUFDOUIsMkNBQ2dCOztJQUNoQiw0Q0FDdUI7O0lBRXZCLGlEQUMyRDs7SUFDM0QsbURBQzZEOztJQUM3RCw4Q0FDd0Q7O0lBQ3hELG9EQUM4RDs7SUFDOUQsc0RBQ2dFOzs7OztJQUVwRCx5Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaW50ZXJhY3Rpb24sIEV2ZW50c0NvbmRpdGlvblR5cGUsIHN0eWxlLCBTdHlsZUZ1bmN0aW9uLCBDb2xsZWN0aW9uLCBGZWF0dXJlLCBzb3VyY2UgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1tb2RpZnknLFxyXG4gIHRlbXBsYXRlOiAnJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIE1vZGlmeUludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5Nb2RpZnk7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY29uZGl0aW9uPzogRXZlbnRzQ29uZGl0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIGRlbGV0ZUNvbmRpdGlvbj86IEV2ZW50c0NvbmRpdGlvblR5cGU7XHJcbiAgQElucHV0KClcclxuICBwaXhlbFRvbGVyYW5jZT86IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHN0eWxlPzogc3R5bGUuU3R5bGUgfCBzdHlsZS5TdHlsZVtdIHwgU3R5bGVGdW5jdGlvbjtcclxuICBASW5wdXQoKVxyXG4gIGZlYXR1cmVzOiBDb2xsZWN0aW9uPEZlYXR1cmU+O1xyXG4gIEBJbnB1dCgpXHJcbiAgd3JhcFg/OiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgc291cmNlPzogc291cmNlLlZlY3RvcjtcclxuXHJcbiAgQE91dHB1dCgpXHJcbiAgb25Nb2RpZnlFbmQgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLk1vZGlmeS5FdmVudD4oKTtcclxuICBAT3V0cHV0KClcclxuICBvbk1vZGlmeVN0YXJ0ID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5Nb2RpZnkuRXZlbnQ+KCk7XHJcbiAgQE91dHB1dCgpXHJcbiAgb25DaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLk1vZGlmeS5FdmVudD4oKTtcclxuICBAT3V0cHV0KClcclxuICBvbkNoYW5nZUFjdGl2ZSA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uTW9kaWZ5LkV2ZW50PigpO1xyXG4gIEBPdXRwdXQoKVxyXG4gIG9uUHJvcGVydHlDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLk1vZGlmeS5FdmVudD4oKTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLk1vZGlmeSh0aGlzKTtcclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2NoYW5nZScsIChldmVudDogaW50ZXJhY3Rpb24uTW9kaWZ5LkV2ZW50KSA9PiB0aGlzLm9uQ2hhbmdlLmVtaXQoZXZlbnQpKTtcclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2NoYW5nZTphY3RpdmUnLCAoZXZlbnQ6IGludGVyYWN0aW9uLk1vZGlmeS5FdmVudCkgPT4gdGhpcy5vbkNoYW5nZUFjdGl2ZS5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdwcm9wZXJ0eWNoYW5nZScsIChldmVudDogaW50ZXJhY3Rpb24uTW9kaWZ5LkV2ZW50KSA9PiB0aGlzLm9uUHJvcGVydHlDaGFuZ2UuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbignbW9kaWZ5ZW5kJywgKGV2ZW50OiBpbnRlcmFjdGlvbi5Nb2RpZnkuRXZlbnQpID0+IHRoaXMub25Nb2RpZnlFbmQuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbignbW9kaWZ5c3RhcnQnLCAoZXZlbnQ6IGludGVyYWN0aW9uLk1vZGlmeS5FdmVudCkgPT4gdGhpcy5vbk1vZGlmeVN0YXJ0LmVtaXQoZXZlbnQpKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/mousewheelzoom.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/mousewheelzoom.component.js
@@ -60,4 +60,4 @@ if (false) {
      */
     MouseWheelZoomInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW91c2V3aGVlbHpvb20uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL21vdXNld2hlZWx6b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBYUUsNENBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLHFEQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELHdEQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOztnQkF0QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQ0FBZ0M7b0JBQzFDLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTs7OzJCQVFsQixLQUFLOzBCQUVMLEtBQUs7NEJBRUwsS0FBSzs7SUFhUix5Q0FBQztDQUFBLEFBdkJELElBdUJDO1NBbkJZLGtDQUFrQzs7O0lBQzdDLHNEQUFxQzs7SUFDckMsc0RBQ2lCOztJQUNqQixxREFDZ0I7O0lBQ2hCLHVEQUNtQjs7Ozs7SUFFUCxpREFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaW50ZXJhY3Rpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tbW91c2V3aGVlbHpvb20nLFxuICB0ZW1wbGF0ZTogJycsXG59KVxuZXhwb3J0IGNsYXNzIE1vdXNlV2hlZWxab29tSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5Nb3VzZVdoZWVsWm9vbTtcbiAgQElucHV0KClcbiAgZHVyYXRpb246IG51bWJlcjtcbiAgQElucHV0KClcbiAgdGltZW91dDogbnVtYmVyO1xuICBASW5wdXQoKVxuICB1c2VBbmNob3I6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLk1vdXNlV2hlZWxab29tKHRoaXMpO1xuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW91c2V3aGVlbHpvb20uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zL21vdXNld2hlZWx6b29tLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEO0lBYUUsNENBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7SUFBRyxDQUFDOzs7O0lBRXpDLHFEQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxXQUFXLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELHdEQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOztnQkF0QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQ0FBZ0M7b0JBQzFDLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTs7OzJCQVFsQixLQUFLOzBCQUVMLEtBQUs7NEJBRUwsS0FBSzs7SUFhUix5Q0FBQztDQUFBLEFBdkJELElBdUJDO1NBbkJZLGtDQUFrQzs7O0lBQzdDLHNEQUFxQzs7SUFDckMsc0RBQ2lCOztJQUNqQixxREFDZ0I7O0lBQ2hCLHVEQUNtQjs7Ozs7SUFFUCxpREFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpbnRlcmFjdGlvbiB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLW1vdXNld2hlZWx6b29tJyxcclxuICB0ZW1wbGF0ZTogJycsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNb3VzZVdoZWVsWm9vbUludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGluc3RhbmNlOiBpbnRlcmFjdGlvbi5Nb3VzZVdoZWVsWm9vbTtcclxuICBASW5wdXQoKVxyXG4gIGR1cmF0aW9uOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICB0aW1lb3V0OiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICB1c2VBbmNob3I6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5Nb3VzZVdoZWVsWm9vbSh0aGlzKTtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZEludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/pinchzoom.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/pinchzoom.component.js
@@ -57,4 +57,4 @@ if (false) {
      */
     PinchZoomInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGluY2h6b29tLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9waW5jaHpvb20uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUFZRSx1Q0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsZ0RBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsbURBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7O2dCQXJCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OztnQkFMUSxZQUFZOzs7MkJBU2xCLEtBQUs7c0NBRUwsS0FBSzs7SUFhUixvQ0FBQztDQUFBLEFBdEJELElBc0JDO1NBbEJZLDZCQUE2Qjs7O0lBQ3hDLGlEQUFnQzs7SUFFaEMsaURBQ2lCOztJQUNqQiw0REFDNkI7Ozs7O0lBRWpCLDRDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpbnRlcmFjdGlvbiB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1pbnRlcmFjdGlvbi1waW5jaHpvb20nLFxuICB0ZW1wbGF0ZTogJycsXG59KVxuZXhwb3J0IGNsYXNzIFBpbmNoWm9vbUludGVyYWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBpbnN0YW5jZTogaW50ZXJhY3Rpb24uUGluY2hab29tO1xuXG4gIEBJbnB1dCgpXG4gIGR1cmF0aW9uOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIGNvbnN0cmFpblJlc29sdXRpb246IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXA6IE1hcENvbXBvbmVudCkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGludGVyYWN0aW9uLlBpbmNoWm9vbSh0aGlzKTtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGluY2h6b29tLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9waW5jaHpvb20uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUFZRSx1Q0FBb0IsR0FBaUI7UUFBakIsUUFBRyxHQUFILEdBQUcsQ0FBYztJQUFHLENBQUM7Ozs7SUFFekMsZ0RBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsbURBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7O2dCQXJCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OztnQkFMUSxZQUFZOzs7MkJBU2xCLEtBQUs7c0NBRUwsS0FBSzs7SUFhUixvQ0FBQztDQUFBLEFBdEJELElBc0JDO1NBbEJZLDZCQUE2Qjs7O0lBQ3hDLGlEQUFnQzs7SUFFaEMsaURBQ2lCOztJQUNqQiw0REFDNkI7Ozs7O0lBRWpCLDRDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGludGVyYWN0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tcGluY2h6b29tJyxcclxuICB0ZW1wbGF0ZTogJycsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQaW5jaFpvb21JbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBpbnN0YW5jZTogaW50ZXJhY3Rpb24uUGluY2hab29tO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGR1cmF0aW9uOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBjb25zdHJhaW5SZXNvbHV0aW9uOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uUGluY2hab29tKHRoaXMpO1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/select.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/select.component.js
@@ -97,4 +97,4 @@ if (false) {
      */
     SelectInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9zZWxlY3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQ0wsV0FBVyxFQUlYLFVBQVUsR0FJWCxNQUFNLFlBQVksQ0FBQztBQUNwQixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUFtQ0Usb0NBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFOckMsYUFBUSxHQUFHLElBQUksWUFBWSxFQUE0QixDQUFDO1FBRXhELGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBNEIsQ0FBQztRQUV4RCxxQkFBZ0IsR0FBRyxJQUFJLFlBQVksRUFBNEIsQ0FBQztJQUV4QixDQUFDOzs7O0lBRXpDLDZDQUFROzs7SUFBUjtRQUFBLGlCQVFDO1FBUEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFN0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLFVBQUMsS0FBK0IsSUFBSyxPQUFBLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUF6QixDQUF5QixDQUFDLENBQUM7UUFDM0YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLFVBQUMsS0FBK0IsSUFBSyxPQUFBLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUF6QixDQUF5QixDQUFDLENBQUM7UUFDM0YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsVUFBQyxLQUErQixJQUFLLE9BQUEsS0FBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBakMsQ0FBaUMsQ0FBQyxDQUFDO1FBRTNHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELGdEQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOztnQkFqREYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTs7OytCQVNsQixLQUFLOzRCQUVMLEtBQUs7eUJBRUwsS0FBSzt3QkFFTCxLQUFLO2tDQUVMLEtBQUs7a0NBRUwsS0FBSzt3QkFFTCxLQUFLOzJCQUVMLEtBQUs7eUJBRUwsS0FBSzt3QkFFTCxLQUFLOzJCQUdMLE1BQU07MkJBRU4sTUFBTTttQ0FFTixNQUFNOztJQWtCVCxpQ0FBQztDQUFBLEFBbERELElBa0RDO1NBOUNZLDBCQUEwQjs7O0lBQ3JDLDhDQUE2Qjs7SUFFN0Isa0RBQ21DOztJQUNuQywrQ0FDZ0M7O0lBQ2hDLDRDQUMyRDs7SUFDM0QsMkNBQ29EOztJQUNwRCxxREFDc0M7O0lBQ3RDLHFEQUNzQzs7SUFDdEMsMkNBQ2dCOztJQUNoQiw4Q0FDK0I7O0lBQy9CLDRDQUM4Qjs7SUFDOUIsMkNBQ2dCOztJQUVoQiw4Q0FDd0Q7O0lBQ3hELDhDQUN3RDs7SUFDeEQsc0RBQ2dFOzs7OztJQUVwRCx5Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIGludGVyYWN0aW9uLFxuICBFdmVudHNDb25kaXRpb25UeXBlLFxuICBsYXllcixcbiAgc3R5bGUsXG4gIENvbGxlY3Rpb24sXG4gIFNlbGVjdEZpbHRlckZ1bmN0aW9uLFxuICBTdHlsZUZ1bmN0aW9uLFxuICBGZWF0dXJlLFxufSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tc2VsZWN0JyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBTZWxlY3RJbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLlNlbGVjdDtcblxuICBASW5wdXQoKVxuICBhZGRDb25kaXRpb24/OiBFdmVudHNDb25kaXRpb25UeXBlO1xuICBASW5wdXQoKVxuICBjb25kaXRpb24/OiBFdmVudHNDb25kaXRpb25UeXBlO1xuICBASW5wdXQoKVxuICBsYXllcnM/OiBsYXllci5MYXllcltdIHwgKChsYXllcjogbGF5ZXIuTGF5ZXIpID0+IGJvb2xlYW4pO1xuICBASW5wdXQoKVxuICBzdHlsZT86IHN0eWxlLlN0eWxlIHwgc3R5bGUuU3R5bGVbXSB8IFN0eWxlRnVuY3Rpb247XG4gIEBJbnB1dCgpXG4gIHJlbW92ZUNvbmRpdGlvbj86IEV2ZW50c0NvbmRpdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIHRvZ2dsZUNvbmRpdGlvbj86IEV2ZW50c0NvbmRpdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIG11bHRpPzogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgZmVhdHVyZXM/OiBDb2xsZWN0aW9uPEZlYXR1cmU+O1xuICBASW5wdXQoKVxuICBmaWx0ZXI/OiBTZWxlY3RGaWx0ZXJGdW5jdGlvbjtcbiAgQElucHV0KClcbiAgd3JhcFg/OiBib29sZWFuO1xuXG4gIEBPdXRwdXQoKVxuICBvbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uU2VsZWN0LkV2ZW50PigpO1xuICBAT3V0cHV0KClcbiAgb25TZWxlY3QgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlNlbGVjdC5FdmVudD4oKTtcbiAgQE91dHB1dCgpXG4gIG9uUHJvcGVydHlDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlNlbGVjdC5FdmVudD4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uU2VsZWN0KHRoaXMpO1xuXG4gICAgdGhpcy5pbnN0YW5jZS5vbignY2hhbmdlJywgKGV2ZW50OiBpbnRlcmFjdGlvbi5TZWxlY3QuRXZlbnQpID0+IHRoaXMub25DaGFuZ2UuZW1pdChldmVudCkpO1xuICAgIHRoaXMuaW5zdGFuY2Uub24oJ3NlbGVjdCcsIChldmVudDogaW50ZXJhY3Rpb24uU2VsZWN0LkV2ZW50KSA9PiB0aGlzLm9uU2VsZWN0LmVtaXQoZXZlbnQpKTtcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdwcm9wZXJ0eWNoYW5nZScsIChldmVudDogaW50ZXJhY3Rpb24uU2VsZWN0LkV2ZW50KSA9PiB0aGlzLm9uUHJvcGVydHlDaGFuZ2UuZW1pdChldmVudCkpO1xuXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy9zZWxlY3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQ0wsV0FBVyxFQUlYLFVBQVUsR0FJWCxNQUFNLFlBQVksQ0FBQztBQUNwQixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUFtQ0Usb0NBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFOckMsYUFBUSxHQUFHLElBQUksWUFBWSxFQUE0QixDQUFDO1FBRXhELGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBNEIsQ0FBQztRQUV4RCxxQkFBZ0IsR0FBRyxJQUFJLFlBQVksRUFBNEIsQ0FBQztJQUV4QixDQUFDOzs7O0lBRXpDLDZDQUFROzs7SUFBUjtRQUFBLGlCQVFDO1FBUEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFN0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLFVBQUMsS0FBK0IsSUFBSyxPQUFBLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUF6QixDQUF5QixDQUFDLENBQUM7UUFDM0YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLFVBQUMsS0FBK0IsSUFBSyxPQUFBLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUF6QixDQUF5QixDQUFDLENBQUM7UUFDM0YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsVUFBQyxLQUErQixJQUFLLE9BQUEsS0FBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBakMsQ0FBaUMsQ0FBQyxDQUFDO1FBRTNHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELGdEQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOztnQkFqREYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTs7OytCQVNsQixLQUFLOzRCQUVMLEtBQUs7eUJBRUwsS0FBSzt3QkFFTCxLQUFLO2tDQUVMLEtBQUs7a0NBRUwsS0FBSzt3QkFFTCxLQUFLOzJCQUVMLEtBQUs7eUJBRUwsS0FBSzt3QkFFTCxLQUFLOzJCQUdMLE1BQU07MkJBRU4sTUFBTTttQ0FFTixNQUFNOztJQWtCVCxpQ0FBQztDQUFBLEFBbERELElBa0RDO1NBOUNZLDBCQUEwQjs7O0lBQ3JDLDhDQUE2Qjs7SUFFN0Isa0RBQ21DOztJQUNuQywrQ0FDZ0M7O0lBQ2hDLDRDQUMyRDs7SUFDM0QsMkNBQ29EOztJQUNwRCxxREFDc0M7O0lBQ3RDLHFEQUNzQzs7SUFDdEMsMkNBQ2dCOztJQUNoQiw4Q0FDK0I7O0lBQy9CLDRDQUM4Qjs7SUFDOUIsMkNBQ2dCOztJQUVoQiw4Q0FDd0Q7O0lBQ3hELDhDQUN3RDs7SUFDeEQsc0RBQ2dFOzs7OztJQUVwRCx5Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICBpbnRlcmFjdGlvbixcclxuICBFdmVudHNDb25kaXRpb25UeXBlLFxyXG4gIGxheWVyLFxyXG4gIHN0eWxlLFxyXG4gIENvbGxlY3Rpb24sXHJcbiAgU2VsZWN0RmlsdGVyRnVuY3Rpb24sXHJcbiAgU3R5bGVGdW5jdGlvbixcclxuICBGZWF0dXJlLFxyXG59IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLXNlbGVjdCcsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2VsZWN0SW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLlNlbGVjdDtcclxuXHJcbiAgQElucHV0KClcclxuICBhZGRDb25kaXRpb24/OiBFdmVudHNDb25kaXRpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgY29uZGl0aW9uPzogRXZlbnRzQ29uZGl0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIGxheWVycz86IGxheWVyLkxheWVyW10gfCAoKGxheWVyOiBsYXllci5MYXllcikgPT4gYm9vbGVhbik7XHJcbiAgQElucHV0KClcclxuICBzdHlsZT86IHN0eWxlLlN0eWxlIHwgc3R5bGUuU3R5bGVbXSB8IFN0eWxlRnVuY3Rpb247XHJcbiAgQElucHV0KClcclxuICByZW1vdmVDb25kaXRpb24/OiBFdmVudHNDb25kaXRpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgdG9nZ2xlQ29uZGl0aW9uPzogRXZlbnRzQ29uZGl0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIG11bHRpPzogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIGZlYXR1cmVzPzogQ29sbGVjdGlvbjxGZWF0dXJlPjtcclxuICBASW5wdXQoKVxyXG4gIGZpbHRlcj86IFNlbGVjdEZpbHRlckZ1bmN0aW9uO1xyXG4gIEBJbnB1dCgpXHJcbiAgd3JhcFg/OiBib29sZWFuO1xyXG5cclxuICBAT3V0cHV0KClcclxuICBvbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uU2VsZWN0LkV2ZW50PigpO1xyXG4gIEBPdXRwdXQoKVxyXG4gIG9uU2VsZWN0ID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5TZWxlY3QuRXZlbnQ+KCk7XHJcbiAgQE91dHB1dCgpXHJcbiAgb25Qcm9wZXJ0eUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uU2VsZWN0LkV2ZW50PigpO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uU2VsZWN0KHRoaXMpO1xyXG5cclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2NoYW5nZScsIChldmVudDogaW50ZXJhY3Rpb24uU2VsZWN0LkV2ZW50KSA9PiB0aGlzLm9uQ2hhbmdlLmVtaXQoZXZlbnQpKTtcclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ3NlbGVjdCcsIChldmVudDogaW50ZXJhY3Rpb24uU2VsZWN0LkV2ZW50KSA9PiB0aGlzLm9uU2VsZWN0LmVtaXQoZXZlbnQpKTtcclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ3Byb3BlcnR5Y2hhbmdlJywgKGV2ZW50OiBpbnRlcmFjdGlvbi5TZWxlY3QuRXZlbnQpID0+IHRoaXMub25Qcm9wZXJ0eUNoYW5nZS5lbWl0KGV2ZW50KSk7XHJcblxyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZUludGVyYWN0aW9uKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/interactions/translate.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/interactions/translate.component.js
@@ -86,4 +86,4 @@ if (false) {
      */
     TranslateInteractionComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy90cmFuc2xhdGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUUsV0FBVyxFQUFTLFVBQVUsRUFBVyxNQUFNLFlBQVksQ0FBQztBQUNyRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUF5QkUsdUNBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFDbkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFlBQVksRUFBK0IsQ0FBQztRQUNoRSxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQStCLENBQUM7UUFDeEUsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLFlBQVksRUFBK0IsQ0FBQztRQUN0RSxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQStCLENBQUM7UUFDeEUsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLFlBQVksRUFBK0IsQ0FBQztJQUN2RSxDQUFDOzs7O0lBRUQsZ0RBQVE7OztJQUFSO1FBQUEsaUJBVUM7UUFUQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVoRCxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsVUFBQyxLQUFrQyxJQUFLLE9BQUEsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQXpCLENBQXlCLENBQUMsQ0FBQztRQUM5RixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxVQUFDLEtBQWtDLElBQUssT0FBQSxLQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFqQyxDQUFpQyxDQUFDLENBQUM7UUFDOUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsY0FBYyxFQUFFLFVBQUMsS0FBa0MsSUFBSyxPQUFBLEtBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUEvQixDQUErQixDQUFDLENBQUM7UUFDMUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsVUFBQyxLQUFrQyxJQUFLLE9BQUEsS0FBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBakMsQ0FBaUMsQ0FBQyxDQUFDO1FBQzlHLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxVQUFDLEtBQWtDLElBQUssT0FBQSxLQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBOUIsQ0FBOEIsQ0FBQyxDQUFDO1FBRXhHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELG1EQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOztnQkEvQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTs7OzJCQVNsQixLQUFLO3lCQUVMLEtBQUs7K0JBRUwsS0FBSzsyQkFHTCxNQUFNO21DQUVOLE1BQU07aUNBRU4sTUFBTTttQ0FFTixNQUFNO2dDQUVOLE1BQU07O0lBMEJULG9DQUFDO0NBQUEsQUFoREQsSUFnREM7U0E1Q1ksNkJBQTZCOzs7SUFDeEMsaURBQWdDOztJQUVoQyxpREFDK0I7O0lBQy9CLCtDQUMyRDs7SUFDM0QscURBQ3NCOztJQUV0QixpREFDb0Q7O0lBQ3BELHlEQUM0RDs7SUFDNUQsdURBQzBEOztJQUMxRCx5REFDNEQ7O0lBQzVELHNEQUN5RDs7Ozs7SUFFN0MsNENBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpbnRlcmFjdGlvbiwgbGF5ZXIsIENvbGxlY3Rpb24sIEZlYXR1cmUgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtaW50ZXJhY3Rpb24tdHJhbnNsYXRlJyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBUcmFuc2xhdGVJbnRlcmFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLlRyYW5zbGF0ZTtcblxuICBASW5wdXQoKVxuICBmZWF0dXJlcz86IENvbGxlY3Rpb248RmVhdHVyZT47XG4gIEBJbnB1dCgpXG4gIGxheWVycz86IGxheWVyLkxheWVyW10gfCAoKGxheWVyOiBsYXllci5MYXllcikgPT4gYm9vbGVhbik7XG4gIEBJbnB1dCgpXG4gIGhpdFRvbGVyYW5jZT86IG51bWJlcjtcblxuICBAT3V0cHV0KClcbiAgb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+O1xuICBAT3V0cHV0KClcbiAgb25Qcm9wZXJ0eUNoYW5nZTogRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudD47XG4gIEBPdXRwdXQoKVxuICBvblRyYW5zbGF0ZUVuZDogRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudD47XG4gIEBPdXRwdXQoKVxuICBvblRyYW5zbGF0ZVN0YXJ0OiBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50PjtcbiAgQE91dHB1dCgpXG4gIG9uVHJhbnNsYXRpbmc6IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHtcbiAgICB0aGlzLm9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+KCk7XG4gICAgdGhpcy5vblByb3BlcnR5Q2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+KCk7XG4gICAgdGhpcy5vblRyYW5zbGF0ZUVuZCA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50PigpO1xuICAgIHRoaXMub25UcmFuc2xhdGVTdGFydCA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50PigpO1xuICAgIHRoaXMub25UcmFuc2xhdGluZyA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50PigpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBpbnRlcmFjdGlvbi5UcmFuc2xhdGUodGhpcyk7XG5cbiAgICB0aGlzLmluc3RhbmNlLm9uKCdjaGFuZ2UnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudCkgPT4gdGhpcy5vbkNoYW5nZS5lbWl0KGV2ZW50KSk7XG4gICAgdGhpcy5pbnN0YW5jZS5vbigncHJvcGVydHljaGFuZ2UnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudCkgPT4gdGhpcy5vblByb3BlcnR5Q2hhbmdlLmVtaXQoZXZlbnQpKTtcbiAgICB0aGlzLmluc3RhbmNlLm9uKCd0cmFuc2xhdGVlbmQnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudCkgPT4gdGhpcy5vblRyYW5zbGF0ZUVuZC5lbWl0KGV2ZW50KSk7XG4gICAgdGhpcy5pbnN0YW5jZS5vbigndHJhbnNsYXRlc3RhcnQnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudCkgPT4gdGhpcy5vblRyYW5zbGF0ZVN0YXJ0LmVtaXQoZXZlbnQpKTtcbiAgICB0aGlzLmluc3RhbmNlLm9uKCd0cmFuc2xhdGluZycsIChldmVudDogaW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50KSA9PiB0aGlzLm9uVHJhbnNsYXRpbmcuZW1pdChldmVudCkpO1xuXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UuYWRkSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5yZW1vdmVJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9ucy90cmFuc2xhdGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUUsV0FBVyxFQUFTLFVBQVUsRUFBVyxNQUFNLFlBQVksQ0FBQztBQUNyRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUF5QkUsdUNBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUFDbkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFlBQVksRUFBK0IsQ0FBQztRQUNoRSxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQStCLENBQUM7UUFDeEUsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLFlBQVksRUFBK0IsQ0FBQztRQUN0RSxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQStCLENBQUM7UUFDeEUsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLFlBQVksRUFBK0IsQ0FBQztJQUN2RSxDQUFDOzs7O0lBRUQsZ0RBQVE7OztJQUFSO1FBQUEsaUJBVUM7UUFUQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVoRCxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsVUFBQyxLQUFrQyxJQUFLLE9BQUEsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQXpCLENBQXlCLENBQUMsQ0FBQztRQUM5RixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxVQUFDLEtBQWtDLElBQUssT0FBQSxLQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFqQyxDQUFpQyxDQUFDLENBQUM7UUFDOUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsY0FBYyxFQUFFLFVBQUMsS0FBa0MsSUFBSyxPQUFBLEtBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUEvQixDQUErQixDQUFDLENBQUM7UUFDMUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsVUFBQyxLQUFrQyxJQUFLLE9BQUEsS0FBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBakMsQ0FBaUMsQ0FBQyxDQUFDO1FBQzlHLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxVQUFDLEtBQWtDLElBQUssT0FBQSxLQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBOUIsQ0FBOEIsQ0FBQyxDQUFDO1FBRXhHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUVELG1EQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRCxDQUFDOztnQkEvQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7Z0JBTFEsWUFBWTs7OzJCQVNsQixLQUFLO3lCQUVMLEtBQUs7K0JBRUwsS0FBSzsyQkFHTCxNQUFNO21DQUVOLE1BQU07aUNBRU4sTUFBTTttQ0FFTixNQUFNO2dDQUVOLE1BQU07O0lBMEJULG9DQUFDO0NBQUEsQUFoREQsSUFnREM7U0E1Q1ksNkJBQTZCOzs7SUFDeEMsaURBQWdDOztJQUVoQyxpREFDK0I7O0lBQy9CLCtDQUMyRDs7SUFDM0QscURBQ3NCOztJQUV0QixpREFDb0Q7O0lBQ3BELHlEQUM0RDs7SUFDNUQsdURBQzBEOztJQUMxRCx5REFDNEQ7O0lBQzVELHNEQUN5RDs7Ozs7SUFFN0MsNENBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGludGVyYWN0aW9uLCBsYXllciwgQ29sbGVjdGlvbiwgRmVhdHVyZSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWludGVyYWN0aW9uLXRyYW5zbGF0ZScsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVHJhbnNsYXRlSW50ZXJhY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgaW5zdGFuY2U6IGludGVyYWN0aW9uLlRyYW5zbGF0ZTtcclxuXHJcbiAgQElucHV0KClcclxuICBmZWF0dXJlcz86IENvbGxlY3Rpb248RmVhdHVyZT47XHJcbiAgQElucHV0KClcclxuICBsYXllcnM/OiBsYXllci5MYXllcltdIHwgKChsYXllcjogbGF5ZXIuTGF5ZXIpID0+IGJvb2xlYW4pO1xyXG4gIEBJbnB1dCgpXHJcbiAgaGl0VG9sZXJhbmNlPzogbnVtYmVyO1xyXG5cclxuICBAT3V0cHV0KClcclxuICBvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudD47XHJcbiAgQE91dHB1dCgpXHJcbiAgb25Qcm9wZXJ0eUNoYW5nZTogRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudD47XHJcbiAgQE91dHB1dCgpXHJcbiAgb25UcmFuc2xhdGVFbmQ6IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+O1xyXG4gIEBPdXRwdXQoKVxyXG4gIG9uVHJhbnNsYXRlU3RhcnQ6IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+O1xyXG4gIEBPdXRwdXQoKVxyXG4gIG9uVHJhbnNsYXRpbmc6IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+O1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcDogTWFwQ29tcG9uZW50KSB7XHJcbiAgICB0aGlzLm9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+KCk7XHJcbiAgICB0aGlzLm9uUHJvcGVydHlDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudD4oKTtcclxuICAgIHRoaXMub25UcmFuc2xhdGVFbmQgPSBuZXcgRXZlbnRFbWl0dGVyPGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudD4oKTtcclxuICAgIHRoaXMub25UcmFuc2xhdGVTdGFydCA9IG5ldyBFdmVudEVtaXR0ZXI8aW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50PigpO1xyXG4gICAgdGhpcy5vblRyYW5zbGF0aW5nID0gbmV3IEV2ZW50RW1pdHRlcjxpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQ+KCk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgaW50ZXJhY3Rpb24uVHJhbnNsYXRlKHRoaXMpO1xyXG5cclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2NoYW5nZScsIChldmVudDogaW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50KSA9PiB0aGlzLm9uQ2hhbmdlLmVtaXQoZXZlbnQpKTtcclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ3Byb3BlcnR5Y2hhbmdlJywgKGV2ZW50OiBpbnRlcmFjdGlvbi5UcmFuc2xhdGUuRXZlbnQpID0+IHRoaXMub25Qcm9wZXJ0eUNoYW5nZS5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCd0cmFuc2xhdGVlbmQnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudCkgPT4gdGhpcy5vblRyYW5zbGF0ZUVuZC5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCd0cmFuc2xhdGVzdGFydCcsIChldmVudDogaW50ZXJhY3Rpb24uVHJhbnNsYXRlLkV2ZW50KSA9PiB0aGlzLm9uVHJhbnNsYXRlU3RhcnQuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbigndHJhbnNsYXRpbmcnLCAoZXZlbnQ6IGludGVyYWN0aW9uLlRyYW5zbGF0ZS5FdmVudCkgPT4gdGhpcy5vblRyYW5zbGF0aW5nLmVtaXQoZXZlbnQpKTtcclxuXHJcbiAgICB0aGlzLm1hcC5pbnN0YW5jZS5hZGRJbnRlcmFjdGlvbih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5tYXAuaW5zdGFuY2UucmVtb3ZlSW50ZXJhY3Rpb24odGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/layers/layer.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/layers/layer.component.js
@@ -105,4 +105,4 @@ if (false) {
      */
     LayerComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvbGF5ZXJzL2xheWVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFnQyxLQUFLLEVBQWlCLE1BQU0sZUFBZSxDQUFDOzs7O0FBS25GO0lBc0JFLHdCQUFzQixJQUF3QztRQUF4QyxTQUFJLEdBQUosSUFBSSxDQUFvQztRQXBCdkQsa0JBQWEsR0FBRyxPQUFPLENBQUM7SUFvQmtDLENBQUM7Ozs7SUFFbEUsaUNBQVE7OztJQUFSO1FBQ0UsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLFVBQVUsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQzlELElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDbEQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLEtBQUssSUFBSSxJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNoRSxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3BELENBQUM7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7Ozs7SUFFRCxvQ0FBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7Ozs7O0lBRUQsb0NBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCOztZQUMxQixVQUFVLEdBQTZCLEVBQUU7UUFDL0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUMsSUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztZQUMxQixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7Z0JBQzVDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxZQUFZLENBQUMsQ0FBQyxDQUFDO29CQUN6QixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO29CQUMzRCxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUM1RCxDQUFDO2dCQUNELEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxhQUFhLENBQUMsQ0FBQyxDQUFDO29CQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO29CQUM1RCxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUM3RCxDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUM7UUFDRCxzRkFBc0Y7UUFDdEYsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2pELENBQUM7OzBCQXREQSxLQUFLOzBCQUVMLEtBQUs7eUJBRUwsS0FBSzt5QkFFTCxLQUFLO2dDQUVMLEtBQUs7Z0NBRUwsS0FBSzs2QkFHTCxLQUFLOzhCQUVMLEtBQUs7O0lBd0NSLHFCQUFDO0NBQUEsQUEzREQsSUEyREM7U0EzRHFCLGNBQWM7OztJQUNsQyxrQ0FBcUI7O0lBQ3JCLHVDQUErQjs7SUFFL0IsaUNBQ2dCOztJQUNoQixpQ0FDaUI7O0lBQ2pCLGdDQUNlOztJQUNmLGdDQUNlOztJQUNmLHVDQUNzQjs7SUFDdEIsdUNBQ3NCOztJQUV0QixvQ0FDMkM7O0lBQzNDLHFDQUM0Qzs7Ozs7SUFFaEMsOEJBQWtEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25EZXN0cm95LCBPbkluaXQsIE9uQ2hhbmdlcywgSW5wdXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRXh0ZW50IH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBMYXllckdyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi9sYXllcmdyb3VwLmNvbXBvbmVudCc7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBMYXllckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICBwdWJsaWMgaW5zdGFuY2U6IGFueTtcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnbGF5ZXInO1xuXG4gIEBJbnB1dCgpXG4gIG9wYWNpdHk6IG51bWJlcjtcbiAgQElucHV0KClcbiAgdmlzaWJsZTogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgZXh0ZW50OiBFeHRlbnQ7XG4gIEBJbnB1dCgpXG4gIHpJbmRleDogbnVtYmVyO1xuICBASW5wdXQoKVxuICBtaW5SZXNvbHV0aW9uOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIG1heFJlc29sdXRpb246IG51bWJlcjtcblxuICBASW5wdXQoKVxuICBwcmVjb21wb3NlOiAoZXZ0OiBvbC5ldmVudHMuRXZlbnQpID0+IHZvaWQ7XG4gIEBJbnB1dCgpXG4gIHBvc3Rjb21wb3NlOiAoZXZ0OiBvbC5ldmVudHMuRXZlbnQpID0+IHZvaWQ7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGhvc3Q6IExheWVyR3JvdXBDb21wb25lbnQgfCBNYXBDb21wb25lbnQpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKHRoaXMucHJlY29tcG9zZSAhPT0gbnVsbCAmJiB0aGlzLnByZWNvbXBvc2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy5pbnN0YW5jZS5vbigncHJlY29tcG9zZScsIHRoaXMucHJlY29tcG9zZSk7XG4gICAgfVxuICAgIGlmICh0aGlzLnBvc3Rjb21wb3NlICE9PSBudWxsICYmIHRoaXMucG9zdGNvbXBvc2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy5pbnN0YW5jZS5vbigncG9zdGNvbXBvc2UnLCB0aGlzLnBvc3Rjb21wb3NlKTtcbiAgICB9XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLmdldExheWVycygpLnB1c2godGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2UuZ2V0TGF5ZXJzKCkucmVtb3ZlKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGNvbnN0IHByb3BlcnRpZXM6IHsgW2luZGV4OiBzdHJpbmddOiBhbnkgfSA9IHt9O1xuICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGtleSBpbiBjaGFuZ2VzKSB7XG4gICAgICBpZiAoY2hhbmdlcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIHByb3BlcnRpZXNba2V5XSA9IGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWU7XG4gICAgICAgIGlmIChrZXkgPT09ICdwcmVjb21wb3NlJykge1xuICAgICAgICAgIHRoaXMuaW5zdGFuY2UudW4oJ3ByZWNvbXBvc2UnLCBjaGFuZ2VzW2tleV0ucHJldmlvdXNWYWx1ZSk7XG4gICAgICAgICAgdGhpcy5pbnN0YW5jZS5vbigncHJlY29tcG9zZScsIGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChrZXkgPT09ICdwb3N0Y29tcG9zZScpIHtcbiAgICAgICAgICB0aGlzLmluc3RhbmNlLnVuKCdwb3N0Y29tcG9zZScsIGNoYW5nZXNba2V5XS5wcmV2aW91c1ZhbHVlKTtcbiAgICAgICAgICB0aGlzLmluc3RhbmNlLm9uKCdwb3N0Y29tcG9zZScsIGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIC8vIGNvbnNvbGUubG9nKCdjaGFuZ2VzIGRldGVjdGVkIGluIGFvbC1sYXllciwgc2V0dGluZyBuZXcgcHJvcGVydGllczogJywgcHJvcGVydGllcyk7XG4gICAgdGhpcy5pbnN0YW5jZS5zZXRQcm9wZXJ0aWVzKHByb3BlcnRpZXMsIGZhbHNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvbGF5ZXJzL2xheWVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFnQyxLQUFLLEVBQWlCLE1BQU0sZUFBZSxDQUFDOzs7O0FBS25GO0lBc0JFLHdCQUFzQixJQUF3QztRQUF4QyxTQUFJLEdBQUosSUFBSSxDQUFvQztRQXBCdkQsa0JBQWEsR0FBRyxPQUFPLENBQUM7SUFvQmtDLENBQUM7Ozs7SUFFbEUsaUNBQVE7OztJQUFSO1FBQ0UsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLFVBQVUsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQzlELElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDbEQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLEtBQUssSUFBSSxJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNoRSxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3BELENBQUM7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7Ozs7SUFFRCxvQ0FBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7Ozs7O0lBRUQsb0NBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCOztZQUMxQixVQUFVLEdBQTZCLEVBQUU7UUFDL0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUMsSUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztZQUMxQixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7Z0JBQzVDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxZQUFZLENBQUMsQ0FBQyxDQUFDO29CQUN6QixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO29CQUMzRCxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUM1RCxDQUFDO2dCQUNELEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxhQUFhLENBQUMsQ0FBQyxDQUFDO29CQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO29CQUM1RCxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUM3RCxDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUM7UUFDRCxzRkFBc0Y7UUFDdEYsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2pELENBQUM7OzBCQXREQSxLQUFLOzBCQUVMLEtBQUs7eUJBRUwsS0FBSzt5QkFFTCxLQUFLO2dDQUVMLEtBQUs7Z0NBRUwsS0FBSzs2QkFHTCxLQUFLOzhCQUVMLEtBQUs7O0lBd0NSLHFCQUFDO0NBQUEsQUEzREQsSUEyREM7U0EzRHFCLGNBQWM7OztJQUNsQyxrQ0FBcUI7O0lBQ3JCLHVDQUErQjs7SUFFL0IsaUNBQ2dCOztJQUNoQixpQ0FDaUI7O0lBQ2pCLGdDQUNlOztJQUNmLGdDQUNlOztJQUNmLHVDQUNzQjs7SUFDdEIsdUNBQ3NCOztJQUV0QixvQ0FDMkM7O0lBQzNDLHFDQUM0Qzs7Ozs7SUFFaEMsOEJBQWtEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25EZXN0cm95LCBPbkluaXQsIE9uQ2hhbmdlcywgSW5wdXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEV4dGVudCB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBMYXllckdyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi9sYXllcmdyb3VwLmNvbXBvbmVudCc7XHJcblxyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgTGF5ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcclxuICBwdWJsaWMgaW5zdGFuY2U6IGFueTtcclxuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdsYXllcic7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgb3BhY2l0eTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgdmlzaWJsZTogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIGV4dGVudDogRXh0ZW50O1xyXG4gIEBJbnB1dCgpXHJcbiAgekluZGV4OiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBtaW5SZXNvbHV0aW9uOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBtYXhSZXNvbHV0aW9uOiBudW1iZXI7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgcHJlY29tcG9zZTogKGV2dDogb2wuZXZlbnRzLkV2ZW50KSA9PiB2b2lkO1xyXG4gIEBJbnB1dCgpXHJcbiAgcG9zdGNvbXBvc2U6IChldnQ6IG9sLmV2ZW50cy5FdmVudCkgPT4gdm9pZDtcclxuXHJcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGhvc3Q6IExheWVyR3JvdXBDb21wb25lbnQgfCBNYXBDb21wb25lbnQpIHt9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgaWYgKHRoaXMucHJlY29tcG9zZSAhPT0gbnVsbCAmJiB0aGlzLnByZWNvbXBvc2UgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLm9uKCdwcmVjb21wb3NlJywgdGhpcy5wcmVjb21wb3NlKTtcclxuICAgIH1cclxuICAgIGlmICh0aGlzLnBvc3Rjb21wb3NlICE9PSBudWxsICYmIHRoaXMucG9zdGNvbXBvc2UgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLm9uKCdwb3N0Y29tcG9zZScsIHRoaXMucG9zdGNvbXBvc2UpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLmdldExheWVycygpLnB1c2godGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5nZXRMYXllcnMoKS5yZW1vdmUodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICBjb25zdCBwcm9wZXJ0aWVzOiB7IFtpbmRleDogc3RyaW5nXTogYW55IH0gPSB7fTtcclxuICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBjaGFuZ2VzKSB7XHJcbiAgICAgIGlmIChjaGFuZ2VzLmhhc093blByb3BlcnR5KGtleSkpIHtcclxuICAgICAgICBwcm9wZXJ0aWVzW2tleV0gPSBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlO1xyXG4gICAgICAgIGlmIChrZXkgPT09ICdwcmVjb21wb3NlJykge1xyXG4gICAgICAgICAgdGhpcy5pbnN0YW5jZS51bigncHJlY29tcG9zZScsIGNoYW5nZXNba2V5XS5wcmV2aW91c1ZhbHVlKTtcclxuICAgICAgICAgIHRoaXMuaW5zdGFuY2Uub24oJ3ByZWNvbXBvc2UnLCBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGtleSA9PT0gJ3Bvc3Rjb21wb3NlJykge1xyXG4gICAgICAgICAgdGhpcy5pbnN0YW5jZS51bigncG9zdGNvbXBvc2UnLCBjaGFuZ2VzW2tleV0ucHJldmlvdXNWYWx1ZSk7XHJcbiAgICAgICAgICB0aGlzLmluc3RhbmNlLm9uKCdwb3N0Y29tcG9zZScsIGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLWxheWVyLCBzZXR0aW5nIG5ldyBwcm9wZXJ0aWVzOiAnLCBwcm9wZXJ0aWVzKTtcclxuICAgIHRoaXMuaW5zdGFuY2Uuc2V0UHJvcGVydGllcyhwcm9wZXJ0aWVzLCBmYWxzZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/layers/layergroup.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/layers/layergroup.component.js
@@ -40,4 +40,4 @@ if (false) {
     /** @type {?} */
     LayerGroupComponent.prototype.instance;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJncm91cC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9sYXllcnMvbGF5ZXJncm91cC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbkMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQU15QywrQ0FBYztJQUdyRCw2QkFDRSxHQUFpQixFQUdqQixLQUEyQjtlQUUzQixrQkFBTSxLQUFLLElBQUksR0FBRyxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFRCxzQ0FBUTs7O0lBQVI7UUFDRSwrREFBK0Q7UUFDL0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEMsaUJBQU0sUUFBUSxXQUFFLENBQUM7SUFDbkIsQ0FBQzs7Z0JBdEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxZQUFZO2dCQWVULG1CQUFtQix1QkFGMUIsUUFBUSxZQUNSLFFBQVE7O0lBV2IsMEJBQUM7Q0FBQSxBQXZCRCxDQU15QyxjQUFjLEdBaUJ0RDtTQWpCWSxtQkFBbUI7OztJQUM5Qix1Q0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBTa2lwU2VsZiwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGxheWVyIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBMYXllckNvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtbGF5ZXItZ3JvdXAnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgTGF5ZXJHcm91cENvbXBvbmVudCBleHRlbmRzIExheWVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBwdWJsaWMgaW5zdGFuY2U6IG9sLmxheWVyLkdyb3VwO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIG1hcDogTWFwQ29tcG9uZW50LFxuICAgIEBTa2lwU2VsZigpXG4gICAgQE9wdGlvbmFsKClcbiAgICBncm91cD86IExheWVyR3JvdXBDb21wb25lbnRcbiAgKSB7XG4gICAgc3VwZXIoZ3JvdXAgfHwgbWFwKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKGBjcmVhdGluZyBvbC5sYXllci5Hcm91cCBpbnN0YW5jZSB3aXRoOmAsIHRoaXMpO1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgbGF5ZXIuR3JvdXAodGhpcyk7XG4gICAgc3VwZXIubmdPbkluaXQoKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJncm91cC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9sYXllcnMvbGF5ZXJncm91cC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbkMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQU15QywrQ0FBYztJQUdyRCw2QkFDRSxHQUFpQixFQUdqQixLQUEyQjtlQUUzQixrQkFBTSxLQUFLLElBQUksR0FBRyxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFRCxzQ0FBUTs7O0lBQVI7UUFDRSwrREFBK0Q7UUFDL0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEMsaUJBQU0sUUFBUSxXQUFFLENBQUM7SUFDbkIsQ0FBQzs7Z0JBdEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFQUSxZQUFZO2dCQWVULG1CQUFtQix1QkFGMUIsUUFBUSxZQUNSLFFBQVE7O0lBV2IsMEJBQUM7Q0FBQSxBQXZCRCxDQU15QyxjQUFjLEdBaUJ0RDtTQWpCWSxtQkFBbUI7OztJQUM5Qix1Q0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBTa2lwU2VsZiwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgbGF5ZXIgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTGF5ZXJDb21wb25lbnQgfSBmcm9tICcuL2xheWVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtbGF5ZXItZ3JvdXAnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIExheWVyR3JvdXBDb21wb25lbnQgZXh0ZW5kcyBMYXllckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBwdWJsaWMgaW5zdGFuY2U6IG9sLmxheWVyLkdyb3VwO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIG1hcDogTWFwQ29tcG9uZW50LFxyXG4gICAgQFNraXBTZWxmKClcclxuICAgIEBPcHRpb25hbCgpXHJcbiAgICBncm91cD86IExheWVyR3JvdXBDb21wb25lbnRcclxuICApIHtcclxuICAgIHN1cGVyKGdyb3VwIHx8IG1hcCk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKGBjcmVhdGluZyBvbC5sYXllci5Hcm91cCBpbnN0YW5jZSB3aXRoOmAsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBsYXllci5Hcm91cCh0aGlzKTtcclxuICAgIHN1cGVyLm5nT25Jbml0KCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/layers/layerimage.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/layers/layerimage.component.js
@@ -71,4 +71,4 @@ if (false) {
     /** @type {?} */
     LayerImageComponent.prototype.zIndex;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJpbWFnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9sYXllcnMvbGF5ZXJpbWFnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsUUFBUSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQVUsS0FBSyxFQUFVLE1BQU0sWUFBWSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFN0Q7SUFNeUMsK0NBQWM7SUFnQnJELDZCQUFZLEdBQWlCLEVBQWMsS0FBMkI7ZUFDcEUsa0JBQU0sS0FBSyxJQUFJLEdBQUcsQ0FBQztJQUNyQixDQUFDOzs7O0lBRUQsc0NBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEMsaUJBQU0sUUFBUSxXQUFFLENBQUM7SUFDbkIsQ0FBQzs7Ozs7SUFFRCx5Q0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsaUJBQU0sV0FBVyxZQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzdCLENBQUM7O2dCQWpDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtvQkFDM0IsUUFBUSxFQUFFLHFDQUVUO2lCQUNGOzs7Z0JBVFEsWUFBWTtnQkFFWixtQkFBbUIsdUJBd0JNLFFBQVE7OzswQkFidkMsS0FBSzswQkFFTCxLQUFLO3lCQUVMLEtBQUs7Z0NBRUwsS0FBSztnQ0FFTCxLQUFLO3lCQUVMLEtBQUs7O0lBZVIsMEJBQUM7Q0FBQSxBQWxDRCxDQU15QyxjQUFjLEdBNEJ0RDtTQTVCWSxtQkFBbUI7OztJQUM5QixxQ0FBNEI7O0lBRTVCLHNDQUNnQjs7SUFDaEIsc0NBQ2lCOztJQUNqQixxQ0FDZTs7SUFDZiw0Q0FDc0I7O0lBQ3RCLDRDQUNzQjs7SUFDdEIscUNBQ2UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgT3B0aW9uYWwsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEV4dGVudCwgbGF5ZXIsIHNvdXJjZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMYXllckNvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IExheWVyR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2xheWVyZ3JvdXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWxheWVyLWltYWdlJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIExheWVySW1hZ2VDb21wb25lbnQgZXh0ZW5kcyBMYXllckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgcHVibGljIHNvdXJjZTogc291cmNlLkltYWdlO1xuXG4gIEBJbnB1dCgpXG4gIG9wYWNpdHk6IG51bWJlcjtcbiAgQElucHV0KClcbiAgdmlzaWJsZTogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgZXh0ZW50OiBFeHRlbnQ7XG4gIEBJbnB1dCgpXG4gIG1pblJlc29sdXRpb246IG51bWJlcjtcbiAgQElucHV0KClcbiAgbWF4UmVzb2x1dGlvbjogbnVtYmVyO1xuICBASW5wdXQoKVxuICB6SW5kZXg6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihtYXA6IE1hcENvbXBvbmVudCwgQE9wdGlvbmFsKCkgZ3JvdXA/OiBMYXllckdyb3VwQ29tcG9uZW50KSB7XG4gICAgc3VwZXIoZ3JvdXAgfHwgbWFwKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgbGF5ZXIuSW1hZ2UodGhpcyk7XG4gICAgc3VwZXIubmdPbkluaXQoKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBzdXBlci5uZ09uQ2hhbmdlcyhjaGFuZ2VzKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJpbWFnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9sYXllcnMvbGF5ZXJpbWFnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsUUFBUSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQVUsS0FBSyxFQUFVLE1BQU0sWUFBWSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFN0Q7SUFNeUMsK0NBQWM7SUFnQnJELDZCQUFZLEdBQWlCLEVBQWMsS0FBMkI7ZUFDcEUsa0JBQU0sS0FBSyxJQUFJLEdBQUcsQ0FBQztJQUNyQixDQUFDOzs7O0lBRUQsc0NBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEMsaUJBQU0sUUFBUSxXQUFFLENBQUM7SUFDbkIsQ0FBQzs7Ozs7SUFFRCx5Q0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsaUJBQU0sV0FBVyxZQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzdCLENBQUM7O2dCQWpDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtvQkFDM0IsUUFBUSxFQUFFLHFDQUVUO2lCQUNGOzs7Z0JBVFEsWUFBWTtnQkFFWixtQkFBbUIsdUJBd0JNLFFBQVE7OzswQkFidkMsS0FBSzswQkFFTCxLQUFLO3lCQUVMLEtBQUs7Z0NBRUwsS0FBSztnQ0FFTCxLQUFLO3lCQUVMLEtBQUs7O0lBZVIsMEJBQUM7Q0FBQSxBQWxDRCxDQU15QyxjQUFjLEdBNEJ0RDtTQTVCWSxtQkFBbUI7OztJQUM5QixxQ0FBNEI7O0lBRTVCLHNDQUNnQjs7SUFDaEIsc0NBQ2lCOztJQUNqQixxQ0FDZTs7SUFDZiw0Q0FDc0I7O0lBQ3RCLDRDQUNzQjs7SUFDdEIscUNBQ2UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgT3B0aW9uYWwsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRXh0ZW50LCBsYXllciwgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMYXllckNvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTGF5ZXJHcm91cENvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXJncm91cC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtbGF5ZXItaW1hZ2UnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIExheWVySW1hZ2VDb21wb25lbnQgZXh0ZW5kcyBMYXllckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuICBwdWJsaWMgc291cmNlOiBzb3VyY2UuSW1hZ2U7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgb3BhY2l0eTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgdmlzaWJsZTogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIGV4dGVudDogRXh0ZW50O1xyXG4gIEBJbnB1dCgpXHJcbiAgbWluUmVzb2x1dGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWF4UmVzb2x1dGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgekluZGV4OiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKG1hcDogTWFwQ29tcG9uZW50LCBAT3B0aW9uYWwoKSBncm91cD86IExheWVyR3JvdXBDb21wb25lbnQpIHtcclxuICAgIHN1cGVyKGdyb3VwIHx8IG1hcCk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgbGF5ZXIuSW1hZ2UodGhpcyk7XHJcbiAgICBzdXBlci5uZ09uSW5pdCgpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgc3VwZXIubmdPbkNoYW5nZXMoY2hhbmdlcyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/layers/layertile.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/layers/layertile.component.js
@@ -60,4 +60,4 @@ if (false) {
     /** @type {?} */
     LayerTileComponent.prototype.useInterimTilesOnError;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJ0aWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2xheWVycy9sYXllcnRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLFFBQVEsRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFDeEcsT0FBTyxFQUFFLEtBQUssRUFBVSxNQUFNLFlBQVksQ0FBQztBQUMzQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRTdEO0lBTXdDLDhDQUFjO0lBUXBELDRCQUFZLEdBQWlCLEVBQWMsS0FBMkI7ZUFDcEUsa0JBQU0sS0FBSyxJQUFJLEdBQUcsQ0FBQztJQUNyQixDQUFDOzs7O0lBRUQscUNBQVE7OztJQUFSO1FBQ0UsOERBQThEO1FBQzlELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLGlCQUFNLFFBQVEsV0FBRSxDQUFDO0lBQ25CLENBQUM7Ozs7O0lBRUQsd0NBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQ2hDLGlCQUFNLFdBQVcsWUFBQyxPQUFPLENBQUMsQ0FBQztJQUM3QixDQUFDOztnQkExQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFFBQVEsRUFBRSxxQ0FFVDtpQkFDRjs7O2dCQVRRLFlBQVk7Z0JBRVosbUJBQW1CLHVCQWdCTSxRQUFROzs7MEJBTHZDLEtBQUs7eUNBRUwsS0FBSzs7SUFnQlIseUJBQUM7Q0FBQSxBQTNCRCxDQU13QyxjQUFjLEdBcUJyRDtTQXJCWSxrQkFBa0I7OztJQUM3QixvQ0FBMkI7O0lBRTNCLHFDQUNnQjs7SUFDaEIsb0RBQ2dDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgSW5wdXQsIE9wdGlvbmFsLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGxheWVyLCBzb3VyY2UgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTGF5ZXJDb21wb25lbnQgfSBmcm9tICcuL2xheWVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMYXllckdyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi9sYXllcmdyb3VwLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1sYXllci10aWxlJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIExheWVyVGlsZUNvbXBvbmVudCBleHRlbmRzIExheWVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3ksIE9uQ2hhbmdlcyB7XG4gIHB1YmxpYyBzb3VyY2U6IHNvdXJjZS5UaWxlO1xuXG4gIEBJbnB1dCgpXG4gIHByZWxvYWQ6IG51bWJlcjtcbiAgQElucHV0KClcbiAgdXNlSW50ZXJpbVRpbGVzT25FcnJvcjogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihtYXA6IE1hcENvbXBvbmVudCwgQE9wdGlvbmFsKCkgZ3JvdXA/OiBMYXllckdyb3VwQ29tcG9uZW50KSB7XG4gICAgc3VwZXIoZ3JvdXAgfHwgbWFwKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5sYXllci5UaWxlIGluc3RhbmNlIHdpdGg6JywgdGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBsYXllci5UaWxlKHRoaXMpO1xuICAgIHN1cGVyLm5nT25Jbml0KCk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgc3VwZXIubmdPbkNoYW5nZXMoY2hhbmdlcyk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJ0aWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2xheWVycy9sYXllcnRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFFLFFBQVEsRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFDeEcsT0FBTyxFQUFFLEtBQUssRUFBVSxNQUFNLFlBQVksQ0FBQztBQUMzQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRTdEO0lBTXdDLDhDQUFjO0lBUXBELDRCQUFZLEdBQWlCLEVBQWMsS0FBMkI7ZUFDcEUsa0JBQU0sS0FBSyxJQUFJLEdBQUcsQ0FBQztJQUNyQixDQUFDOzs7O0lBRUQscUNBQVE7OztJQUFSO1FBQ0UsOERBQThEO1FBQzlELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLGlCQUFNLFFBQVEsV0FBRSxDQUFDO0lBQ25CLENBQUM7Ozs7O0lBRUQsd0NBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQ2hDLGlCQUFNLFdBQVcsWUFBQyxPQUFPLENBQUMsQ0FBQztJQUM3QixDQUFDOztnQkExQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFFBQVEsRUFBRSxxQ0FFVDtpQkFDRjs7O2dCQVRRLFlBQVk7Z0JBRVosbUJBQW1CLHVCQWdCTSxRQUFROzs7MEJBTHZDLEtBQUs7eUNBRUwsS0FBSzs7SUFnQlIseUJBQUM7Q0FBQSxBQTNCRCxDQU13QyxjQUFjLEdBcUJyRDtTQXJCWSxrQkFBa0I7OztJQUM3QixvQ0FBMkI7O0lBRTNCLHFDQUNnQjs7SUFDaEIsb0RBQ2dDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCwgSW5wdXQsIE9wdGlvbmFsLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgbGF5ZXIsIHNvdXJjZSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuLi9tYXAuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTGF5ZXJDb21wb25lbnQgfSBmcm9tICcuL2xheWVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExheWVyR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2xheWVyZ3JvdXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLWxheWVyLXRpbGUnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIExheWVyVGlsZUNvbXBvbmVudCBleHRlbmRzIExheWVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3ksIE9uQ2hhbmdlcyB7XHJcbiAgcHVibGljIHNvdXJjZTogc291cmNlLlRpbGU7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgcHJlbG9hZDogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgdXNlSW50ZXJpbVRpbGVzT25FcnJvcjogYm9vbGVhbjtcclxuXHJcbiAgY29uc3RydWN0b3IobWFwOiBNYXBDb21wb25lbnQsIEBPcHRpb25hbCgpIGdyb3VwPzogTGF5ZXJHcm91cENvbXBvbmVudCkge1xyXG4gICAgc3VwZXIoZ3JvdXAgfHwgbWFwKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIG9sLmxheWVyLlRpbGUgaW5zdGFuY2Ugd2l0aDonLCB0aGlzKTtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgbGF5ZXIuVGlsZSh0aGlzKTtcclxuICAgIHN1cGVyLm5nT25Jbml0KCk7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICBzdXBlci5uZ09uQ2hhbmdlcyhjaGFuZ2VzKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/layers/layervector.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/layers/layervector.component.js
@@ -46,7 +46,10 @@ var LayerVectorComponent = /** @class */ (function (_super) {
         { type: LayerGroupComponent, decorators: [{ type: Optional }] }
     ]; };
     LayerVectorComponent.propDecorators = {
-        renderBuffer: [{ type: Input }]
+        renderBuffer: [{ type: Input }],
+        style: [{ type: Input }],
+        updateWhileAnimating: [{ type: Input }],
+        updateWhileInteracting: [{ type: Input }]
     };
     return LayerVectorComponent;
 }(LayerComponent));
@@ -56,5 +59,11 @@ if (false) {
     LayerVectorComponent.prototype.source;
     /** @type {?} */
     LayerVectorComponent.prototype.renderBuffer;
+    /** @type {?} */
+    LayerVectorComponent.prototype.style;
+    /** @type {?} */
+    LayerVectorComponent.prototype.updateWhileAnimating;
+    /** @type {?} */
+    LayerVectorComponent.prototype.updateWhileInteracting;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJ2ZWN0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvbGF5ZXJzL2xheWVydmVjdG9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxRQUFRLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQ3hHLE9BQU8sRUFBRSxLQUFLLEVBQVUsTUFBTSxZQUFZLENBQUM7QUFDM0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUU3RDtJQU0wQyxnREFBYztJQU10RCw4QkFBWSxHQUFpQixFQUFjLEtBQTJCO2VBQ3BFLGtCQUFNLEtBQUssSUFBSSxHQUFHLENBQUM7SUFDckIsQ0FBQzs7OztJQUVELHVDQUFROzs7SUFBUjtRQUNFLGdFQUFnRTtRQUNoRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxpQkFBTSxRQUFRLFdBQUUsQ0FBQztJQUNuQixDQUFDOzs7OztJQUVELDBDQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjtRQUNoQyxpQkFBTSxXQUFXLFlBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7Z0JBeEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFUUSxZQUFZO2dCQUVaLG1CQUFtQix1QkFjTSxRQUFROzs7K0JBSHZDLEtBQUs7O0lBZ0JSLDJCQUFDO0NBQUEsQUF6QkQsQ0FNMEMsY0FBYyxHQW1CdkQ7U0FuQlksb0JBQW9COzs7SUFDL0Isc0NBQTZCOztJQUU3Qiw0Q0FDcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBJbnB1dCwgT3B0aW9uYWwsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgbGF5ZXIsIHNvdXJjZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMYXllckNvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IExheWVyR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2xheWVyZ3JvdXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWxheWVyLXZlY3RvcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBMYXllclZlY3RvckNvbXBvbmVudCBleHRlbmRzIExheWVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3ksIE9uQ2hhbmdlcyB7XG4gIHB1YmxpYyBzb3VyY2U6IHNvdXJjZS5WZWN0b3I7XG5cbiAgQElucHV0KClcbiAgcmVuZGVyQnVmZmVyOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IobWFwOiBNYXBDb21wb25lbnQsIEBPcHRpb25hbCgpIGdyb3VwPzogTGF5ZXJHcm91cENvbXBvbmVudCkge1xuICAgIHN1cGVyKGdyb3VwIHx8IG1hcCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgb2wubGF5ZXIuVmVjdG9yIGluc3RhbmNlIHdpdGg6JywgdGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBsYXllci5WZWN0b3IodGhpcyk7XG4gICAgc3VwZXIubmdPbkluaXQoKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBzdXBlci5uZ09uQ2hhbmdlcyhjaGFuZ2VzKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJ2ZWN0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvbGF5ZXJzL2xheWVydmVjdG9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLEtBQUssRUFBRSxRQUFRLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQ3hHLE9BQU8sRUFBRSxLQUFLLEVBQWdDLE1BQU0sWUFBWSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFN0Q7SUFNMEMsZ0RBQWM7SUFldEQsOEJBQVksR0FBaUIsRUFBYyxLQUEyQjtlQUNwRSxrQkFBTSxLQUFLLElBQUksR0FBRyxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFRCx1Q0FBUTs7O0lBQVI7UUFDRSxnRUFBZ0U7UUFDaEUsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsaUJBQU0sUUFBUSxXQUFFLENBQUM7SUFDbkIsQ0FBQzs7Ozs7SUFFRCwwQ0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsaUJBQU0sV0FBVyxZQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzdCLENBQUM7O2dCQWpDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtvQkFDNUIsUUFBUSxFQUFFLHFDQUVUO2lCQUNGOzs7Z0JBVFEsWUFBWTtnQkFFWixtQkFBbUIsdUJBdUJNLFFBQVE7OzsrQkFadkMsS0FBSzt3QkFHTCxLQUFLO3VDQUdMLEtBQUs7eUNBR0wsS0FBSzs7SUFnQlIsMkJBQUM7Q0FBQSxBQWxDRCxDQU0wQyxjQUFjLEdBNEJ2RDtTQTVCWSxvQkFBb0I7OztJQUMvQixzQ0FBNkI7O0lBRTdCLDRDQUNxQjs7SUFFckIscUNBQ21EOztJQUVuRCxvREFDOEI7O0lBRTlCLHNEQUNnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQsIElucHV0LCBPcHRpb25hbCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGxheWVyLCBzb3VyY2UsIHN0eWxlLCBTdHlsZUZ1bmN0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMYXllckNvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTGF5ZXJHcm91cENvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXJncm91cC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtbGF5ZXItdmVjdG9yJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMYXllclZlY3RvckNvbXBvbmVudCBleHRlbmRzIExheWVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3ksIE9uQ2hhbmdlcyB7XHJcbiAgcHVibGljIHNvdXJjZTogc291cmNlLlZlY3RvcjtcclxuXHJcbiAgQElucHV0KClcclxuICByZW5kZXJCdWZmZXI6IG51bWJlcjtcclxuXHJcbiAgQElucHV0KClcclxuICBzdHlsZTogc3R5bGUuU3R5bGUgfCBzdHlsZS5TdHlsZVtdIHwgU3R5bGVGdW5jdGlvbjtcclxuXHJcbiAgQElucHV0KClcclxuICB1cGRhdGVXaGlsZUFuaW1hdGluZzogYm9vbGVhbjtcclxuXHJcbiAgQElucHV0KClcclxuICB1cGRhdGVXaGlsZUludGVyYWN0aW5nOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3RvcihtYXA6IE1hcENvbXBvbmVudCwgQE9wdGlvbmFsKCkgZ3JvdXA/OiBMYXllckdyb3VwQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihncm91cCB8fCBtYXApO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgb2wubGF5ZXIuVmVjdG9yIGluc3RhbmNlIHdpdGg6JywgdGhpcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGxheWVyLlZlY3Rvcih0aGlzKTtcclxuICAgIHN1cGVyLm5nT25Jbml0KCk7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICBzdXBlci5uZ09uQ2hhbmdlcyhjaGFuZ2VzKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/layers/layervectortile.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/layers/layervectortile.component.js
@@ -73,4 +73,4 @@ if (false) {
     /** @type {?} */
     LayerVectorTileComponent.prototype.visible;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJ2ZWN0b3J0aWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2xheWVycy9sYXllcnZlY3RvcnRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsUUFBUSxFQUE0QixNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQUUsS0FBSyxFQUF3QixNQUFNLFlBQVksQ0FBQztBQUN6RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRTdEO0lBTThDLG9EQUFjO0lBaUIxRCxrQ0FBWSxHQUFpQixFQUFjLEtBQTJCO2VBQ3BFLGtCQUFNLEtBQUssSUFBSSxHQUFHLENBQUM7SUFDckIsQ0FBQzs7OztJQUVELDJDQUFROzs7SUFBUjtRQUNFLG9FQUFvRTtRQUNwRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzQyxpQkFBTSxRQUFRLFdBQUUsQ0FBQztJQUNuQixDQUFDOzs7OztJQUVELDhDQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjtRQUNoQyxpQkFBTSxXQUFXLFlBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7Z0JBbkNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsc0JBQXNCO29CQUNoQyxRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFUUSxZQUFZO2dCQUVaLG1CQUFtQix1QkF5Qk0sUUFBUTs7OytCQWhCdkMsS0FBSzs2QkFFTCxLQUFLOzhCQUdMLEtBQUs7d0JBRUwsS0FBSzt1Q0FFTCxLQUFLO3lDQUVMLEtBQUs7MEJBRUwsS0FBSzs7SUFnQlIsK0JBQUM7Q0FBQSxBQXBDRCxDQU04QyxjQUFjLEdBOEIzRDtTQTlCWSx3QkFBd0I7OztJQUNuQyxnREFDcUI7O0lBQ3JCLDhDQUNnRDs7SUFFaEQsK0NBQ29FOztJQUNwRSx5Q0FDbUQ7O0lBQ25ELHdEQUM4Qjs7SUFDOUIsMERBQ2dDOztJQUNoQywyQ0FDaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE9wdGlvbmFsLCBTaW1wbGVDaGFuZ2VzLCBPbkNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGxheWVyLCBzdHlsZSwgU3R5bGVGdW5jdGlvbiB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi4vbWFwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMYXllckNvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IExheWVyR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2xheWVyZ3JvdXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLWxheWVyLXZlY3RvcnRpbGUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgTGF5ZXJWZWN0b3JUaWxlQ29tcG9uZW50IGV4dGVuZHMgTGF5ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpXG4gIHJlbmRlckJ1ZmZlcjogbnVtYmVyO1xuICBASW5wdXQoKVxuICByZW5kZXJNb2RlOiBsYXllci5WZWN0b3JUaWxlUmVuZGVyVHlwZSB8IHN0cmluZztcbiAgLyogbm90IG1hcmtlZCBhcyBvcHRpb25hbCBpbiB0aGUgdHlwaW5ncyAqL1xuICBASW5wdXQoKVxuICByZW5kZXJPcmRlcjogKGZlYXR1cmUxOiBvbC5GZWF0dXJlLCBmZWF0dXJlMjogb2wuRmVhdHVyZSkgPT4gbnVtYmVyO1xuICBASW5wdXQoKVxuICBzdHlsZTogc3R5bGUuU3R5bGUgfCBzdHlsZS5TdHlsZVtdIHwgU3R5bGVGdW5jdGlvbjtcbiAgQElucHV0KClcbiAgdXBkYXRlV2hpbGVBbmltYXRpbmc6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIHVwZGF0ZVdoaWxlSW50ZXJhY3Rpbmc6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIHZpc2libGU6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IobWFwOiBNYXBDb21wb25lbnQsIEBPcHRpb25hbCgpIGdyb3VwPzogTGF5ZXJHcm91cENvbXBvbmVudCkge1xuICAgIHN1cGVyKGdyb3VwIHx8IG1hcCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgb2wubGF5ZXIuVmVjdG9yVGlsZSBpbnN0YW5jZSB3aXRoOicsIHRoaXMpO1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgbGF5ZXIuVmVjdG9yVGlsZSh0aGlzKTtcbiAgICBzdXBlci5uZ09uSW5pdCgpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIHN1cGVyLm5nT25DaGFuZ2VzKGNoYW5nZXMpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJ2ZWN0b3J0aWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL2xheWVycy9sYXllcnZlY3RvcnRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsUUFBUSxFQUE0QixNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQUUsS0FBSyxFQUF3QixNQUFNLFlBQVksQ0FBQztBQUN6RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRTdEO0lBTThDLG9EQUFjO0lBaUIxRCxrQ0FBWSxHQUFpQixFQUFjLEtBQTJCO2VBQ3BFLGtCQUFNLEtBQUssSUFBSSxHQUFHLENBQUM7SUFDckIsQ0FBQzs7OztJQUVELDJDQUFROzs7SUFBUjtRQUNFLG9FQUFvRTtRQUNwRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzQyxpQkFBTSxRQUFRLFdBQUUsQ0FBQztJQUNuQixDQUFDOzs7OztJQUVELDhDQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjtRQUNoQyxpQkFBTSxXQUFXLFlBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7Z0JBbkNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsc0JBQXNCO29CQUNoQyxRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFUUSxZQUFZO2dCQUVaLG1CQUFtQix1QkF5Qk0sUUFBUTs7OytCQWhCdkMsS0FBSzs2QkFFTCxLQUFLOzhCQUdMLEtBQUs7d0JBRUwsS0FBSzt1Q0FFTCxLQUFLO3lDQUVMLEtBQUs7MEJBRUwsS0FBSzs7SUFnQlIsK0JBQUM7Q0FBQSxBQXBDRCxDQU04QyxjQUFjLEdBOEIzRDtTQTlCWSx3QkFBd0I7OztJQUNuQyxnREFDcUI7O0lBQ3JCLDhDQUNnRDs7SUFFaEQsK0NBQ29FOztJQUNwRSx5Q0FDbUQ7O0lBQ25ELHdEQUM4Qjs7SUFDOUIsMERBQ2dDOztJQUNoQywyQ0FDaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE9wdGlvbmFsLCBTaW1wbGVDaGFuZ2VzLCBPbkNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgbGF5ZXIsIHN0eWxlLCBTdHlsZUZ1bmN0aW9uIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4uL21hcC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMYXllckNvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTGF5ZXJHcm91cENvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXJncm91cC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtbGF5ZXItdmVjdG9ydGlsZScsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTGF5ZXJWZWN0b3JUaWxlQ29tcG9uZW50IGV4dGVuZHMgTGF5ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgQElucHV0KClcclxuICByZW5kZXJCdWZmZXI6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHJlbmRlck1vZGU6IGxheWVyLlZlY3RvclRpbGVSZW5kZXJUeXBlIHwgc3RyaW5nO1xyXG4gIC8qIG5vdCBtYXJrZWQgYXMgb3B0aW9uYWwgaW4gdGhlIHR5cGluZ3MgKi9cclxuICBASW5wdXQoKVxyXG4gIHJlbmRlck9yZGVyOiAoZmVhdHVyZTE6IG9sLkZlYXR1cmUsIGZlYXR1cmUyOiBvbC5GZWF0dXJlKSA9PiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBzdHlsZTogc3R5bGUuU3R5bGUgfCBzdHlsZS5TdHlsZVtdIHwgU3R5bGVGdW5jdGlvbjtcclxuICBASW5wdXQoKVxyXG4gIHVwZGF0ZVdoaWxlQW5pbWF0aW5nOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgdXBkYXRlV2hpbGVJbnRlcmFjdGluZzogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIHZpc2libGU6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKG1hcDogTWFwQ29tcG9uZW50LCBAT3B0aW9uYWwoKSBncm91cD86IExheWVyR3JvdXBDb21wb25lbnQpIHtcclxuICAgIHN1cGVyKGdyb3VwIHx8IG1hcCk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5sYXllci5WZWN0b3JUaWxlIGluc3RhbmNlIHdpdGg6JywgdGhpcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IGxheWVyLlZlY3RvclRpbGUodGhpcyk7XHJcbiAgICBzdXBlci5uZ09uSW5pdCgpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgc3VwZXIubmdPbkNoYW5nZXMoY2hhbmdlcyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/map.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/map.component.js
@@ -160,4 +160,4 @@ if (false) {
      */
     MapComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL21hcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBRVQsVUFBVSxFQUNWLEtBQUssRUFDTCxNQUFNLEVBQ04sWUFBWSxHQUliLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxHQUFHLEVBQXdFLE1BQU0sWUFBWSxDQUFDO0FBRXZHO0lBcURFLHNCQUFvQixJQUFnQjtRQUFoQixTQUFJLEdBQUosSUFBSSxDQUFZO1FBNUM3QixrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUc3QixVQUFLLEdBQUcsTUFBTSxDQUFDO1FBRWYsV0FBTSxHQUFHLE1BQU0sQ0FBQztRQW1DaEIsbUdBQW1HO1FBQ25HLGFBQVEsR0FBc0IsRUFBRSxDQUFDO1FBQ2pDLGlCQUFZLEdBQThCLEVBQUUsQ0FBQztRQUczQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksWUFBWSxFQUFtQixDQUFDO1FBQ25ELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxZQUFZLEVBQW1CLENBQUM7UUFDdEQsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLFlBQVksRUFBWSxDQUFDO1FBQzlDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxZQUFZLEVBQW1CLENBQUM7UUFDekQsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLFlBQVksRUFBbUIsQ0FBQztRQUN6RCxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksWUFBWSxFQUFnQixDQUFDO1FBQ3RELElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxZQUFZLEVBQVksQ0FBQztRQUNqRCxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksWUFBWSxFQUFnQixDQUFDO1FBQ3JELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLFlBQVksRUFBZSxDQUFDO1FBQ3hELElBQUksQ0FBQyxhQUFh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cnQge1xyXG4gIENvbXBvbmVudCxcclxuICBPbkluaXQsXHJcbiAgRWxlbWVudFJlZixcclxuICBJbnB1dCxcclxuICBPdXRwdXQsXHJcbiAgRXZlbnRFbWl0dGVyLFxyXG4gIEFmdGVyVmlld0luaXQsXHJcbiAgU2ltcGxlQ2hhbmdlcyxcclxuICBPbkNoYW5nZXMsXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1hcCwgTWFwQnJvd3NlckV2ZW50LCBNYXBFdmVudCwgcmVuZGVyLCBPYmplY3RFdmVudCwgY29udHJvbCwgaW50ZXJhY3Rpb24gfSBmcm9tICdvcGVubGF5ZXJzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLW1hcCcsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxkaXYgW3N0eWxlLndpZHRoXT1cIndpZHRoXCIgW3N0eWxlLmhlaWdodF09XCJoZWlnaHRcIj48L2Rpdj5cclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTWFwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdJbml0LCBPbkNoYW5nZXMge1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogTWFwO1xyXG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ21hcCc7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgd2lkdGggPSAnMTAwJSc7XHJcbiAgQElucHV0KClcclxuICBoZWlnaHQgPSAnMTAwJSc7XHJcbiAgQElucHV0KClcclxuICBwaXhlbFJhdGlvOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBrZXlib2FyZEV2ZW50VGFyZ2V0OiBFbGVtZW50IHwgc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgbG9hZFRpbGVzV2hpbGVBbmltYXRpbmc6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICBsb2FkVGlsZXNXaGlsZUludGVyYWN0aW5nOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgbG9nbzogc3RyaW5nIHwgYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIHJlbmRlcmVyOiAnY2FudmFzJyB8ICd3ZWJnbCc7XHJcblxyXG4gIEBPdXRwdXQoKVxyXG4gIG9uQ2xpY2s6IEV2ZW50RW1pdHRlcjxNYXBCcm93c2VyRXZlbnQ+O1xyXG4gIEBPdXRwdXQoKVxyXG4gIG9uRGJsQ2xpY2s6IEV2ZW50RW1pdHRlcjxNYXBCcm93c2VyRXZlbnQ+O1xyXG4gIEBPdXRwdXQoKVxyXG4gIG9uTW92ZUVuZDogRXZlbnRFbWl0dGVyPE1hcEV2ZW50PjtcclxuICBAT3V0cHV0KClcclxuICBvblBvaW50ZXJEcmFnOiBFdmVudEVtaXR0ZXI8TWFwQnJvd3NlckV2ZW50PjtcclxuICBAT3V0cHV0KClcclxuICBvblBvaW50ZXJNb3ZlOiBFdmVudEVtaXR0ZXI8TWFwQnJvd3NlckV2ZW50PjtcclxuICBAT3V0cHV0KClcclxuICBvblBvc3RDb21wb3NlOiBFdmVudEVtaXR0ZXI8cmVuZGVyLkV2ZW50PjtcclxuICBAT3V0cHV0KClcclxuICBvblBvc3RSZW5kZXI6IEV2ZW50RW1pdHRlcjxNYXBFdmVudD47XHJcbiAgQE91dHB1dCgpXHJcbiAgb25QcmVDb21wb3NlOiBFdmVudEVtaXR0ZXI8cmVuZGVyLkV2ZW50PjtcclxuICBAT3V0cHV0KClcclxuICBvblByb3BlcnR5Q2hhbmdlOiBFdmVudEVtaXR0ZXI8T2JqZWN0RXZlbnQ+O1xyXG4gIEBPdXRwdXQoKVxyXG4gIG9uU2luZ2xlQ2xpY2s6IEV2ZW50RW1pdHRlcjxNYXBCcm93c2VyRXZlbnQ+O1xyXG5cclxuICAvLyB3ZSBwYXNzIGVtcHR5IGFycmF5cyB0byBub3QgZ2V0IGRlZmF1bHQgY29udHJvbHMvaW50ZXJhY3Rpb25zIGJlY2F1c2Ugd2UgaGF2ZSBvdXIgb3duIGRpcmVjdGl2ZXNcclxuICBjb250cm9sczogY29udHJvbC5Db250cm9sW10gPSBbXTtcclxuICBpbnRlcmFjdGlvbnM6IGludGVyYWN0aW9uLkludGVyYWN0aW9uW10gPSBbXTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBob3N0OiBFbGVtZW50UmVmKSB7XHJcbiAgICB0aGlzLm9uQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPE1hcEJyb3dzZXJFdmVudD4oKTtcclxuICAgIHRoaXMub25EYmxDbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8TWFwQnJvd3NlckV2ZW50PigpO1xyXG4gICAgdGhpcy5vbk1vdmVFbmQgPSBuZXcgRXZlbnRFbWl0dGVyPE1hcEV2ZW50PigpO1xyXG4gICAgdGhpcy5vblBvaW50ZXJEcmFnID0gbmV3IEV2ZW50RW1pdHRlcjxNYXBCcm93c2VyRXZlbnQ+KCk7XHJcbiAgICB0aGlzLm9uUG9pbnRlck1vdmUgPSBuZXcgRXZlbnRFbWl0dGVyPE1hcEJyb3dzZXJFdmVudD4oKTtcclxuICAgIHRoaXMub25Qb3N0Q29tcG9zZSA9IG5ldyBFdmVudEVtaXR0ZXI8cmVuZGVyLkV2ZW50PigpO1xyXG4gICAgdGhpcy5vblBvc3RSZW5kZXIgPSBuZXcgRXZlbnRFbWl0dGVyPE1hcEV2ZW50PigpO1xyXG4gICAgdGhpcy5vblByZUNvbXBvc2UgPSBuZXcgRXZlbnRFbWl0dGVyPHJlbmRlci5FdmVudD4oKTtcclxuICAgIHRoaXMub25Qcm9wZXJ0eUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8T2JqZWN0RXZlbnQ+KCk7XHJcbiAgICB0aGlzLm9uU2luZ2xlQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPE1hcEJyb3dzZXJFdmVudD4oKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIG9sLk1hcCBpbnN0YW5jZSB3aXRoOicsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBNYXAodGhpcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlLnNldFRhcmdldCh0aGlzLmhvc3QubmF0aXZlRWxlbWVudC5maXJzdEVsZW1lbnRDaGlsZCk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdjbGljaycsIChldmVudDogTWFwQnJvd3NlckV2ZW50KSA9PiB0aGlzLm9uQ2xpY2suZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbignZGJsY2xpY2snLCAoZXZlbnQ6IE1hcEJyb3dzZXJFdmVudCkgPT4gdGhpcy5vbkRibENsaWNrLmVtaXQoZXZlbnQpKTtcclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ21vdmVlbmQnLCAoZXZlbnQ6IE1hcEV2ZW50KSA9PiB0aGlzLm9uTW92ZUVuZC5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdwb2ludGVyZHJhZycsIChldmVudDogTWFwQnJvd3NlckV2ZW50KSA9PiB0aGlzLm9uUG9pbnRlckRyYWcuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbigncG9pbnRlcm1vdmUnLCAoZXZlbnQ6IE1hcEJyb3dzZXJFdmVudCkgPT4gdGhpcy5vblBvaW50ZXJNb3ZlLmVtaXQoZXZlbnQpKTtcclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ3Bvc3Rjb21wb3NlJywgKGV2ZW50OiByZW5kZXIuRXZlbnQpID0+IHRoaXMub25Qb3N0Q29tcG9zZS5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdwb3N0cmVuZGVyJywgKGV2ZW50OiBNYXBFdmVudCkgPT4gdGhpcy5vblBvc3RSZW5kZXIuZW1pdChldmVudCkpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5vbigncHJlY29tcG9zZScsIChldmVudDogcmVuZGVyLkV2ZW50KSA9PiB0aGlzLm9uUHJlQ29tcG9zZS5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdwcm9wZXJ0eWNoYW5nZScsIChldmVudDogT2JqZWN0RXZlbnQpID0+IHRoaXMub25Qcm9wZXJ0eUNoYW5nZS5lbWl0KGV2ZW50KSk7XHJcbiAgICB0aGlzLmluc3RhbmNlLm9uKCdzaW5nbGVjbGljaycsIChldmVudDogTWFwQnJvd3NlckV2ZW50KSA9PiB0aGlzLm9uU2luZ2xlQ2xpY2suZW1pdChldmVudCkpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgY29uc3QgcHJvcGVydGllczogeyBbaW5kZXg6IHN0cmluZ106IGFueSB9ID0ge307XHJcbiAgICBpZiAoIXRoaXMuaW5zdGFuY2UpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgZm9yIChjb25zdCBrZXkgaW4gY2hhbmdlcykge1xyXG4gICAgICBpZiAoY2hhbmdlcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgcHJvcGVydGllc1trZXldID0gY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLW1hcCwgc2V0dGluZyBuZXcgcHJvcGVydGllczogJywgcHJvcGVydGllcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlLnNldFByb3BlcnRpZXMocHJvcGVydGllcywgZmFsc2UpO1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlclZpZXdJbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZS51cGRhdGVTaXplKCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/overlay.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/overlay.component.js
@@ -89,4 +89,4 @@ if (false) {
      */
     OverlayComponent.prototype.map;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9vdmVybGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNsRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLE9BQU8sRUFBc0IsTUFBTSxZQUFZLENBQUM7QUFDekQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFdkQ7SUE0QkUsMEJBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUF2QnJDLGtCQUFhLEdBQUcsU0FBUyxDQUFDO0lBdUJjLENBQUM7Ozs7SUFFekMsbUNBQVE7OztJQUFSO1FBQ0UsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDakIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUM7WUFDckQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNsQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzlDLENBQUM7SUFDSCxDQUFDOzs7O0lBRUQsc0NBQVc7OztJQUFYO1FBQ0UsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNqRCxDQUFDO0lBQ0gsQ0FBQzs7Z0JBMUNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsUUFBUSxFQUFFLDJCQUEyQjtpQkFDdEM7OztnQkFQUSxZQUFZOzs7MEJBWWxCLFlBQVksU0FBQyxnQkFBZ0I7cUJBRzdCLEtBQUs7eUJBRUwsS0FBSzs4QkFFTCxLQUFLOzRCQUVMLEtBQUs7OEJBRUwsS0FBSzswQkFFTCxLQUFLO21DQUVMLEtBQUs7Z0NBRUwsS0FBSzs7SUFrQlIsdUJBQUM7Q0FBQSxBQTNDRCxJQTJDQztTQXZDWSxnQkFBZ0I7OztJQUMzQix5Q0FBMEI7O0lBQzFCLG9DQUFrQjs7SUFDbEIsbUNBQWlCOztJQUNqQixtQ0FDMEI7O0lBRTFCLDhCQUNvQjs7SUFDcEIsa0NBQ2lCOztJQUNqQix1Q0FDeUM7O0lBQ3pDLHFDQUNtQjs7SUFDbkIsdUNBQ3FCOztJQUNyQixtQ0FDaUI7O0lBQ2pCLDRDQUMyQzs7SUFDM0MseUNBQ3NCOzs7OztJQUVWLCtCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ29udGVudENoaWxkLCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hcENvbXBvbmVudCB9IGZyb20gJy4vbWFwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPdmVybGF5LCBPdmVybGF5UG9zaXRpb25pbmcgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IENvbnRlbnRDb21wb25lbnQgfSBmcm9tICcuL2NvbnRlbnQuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLW92ZXJsYXknLFxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nLFxufSlcbmV4cG9ydCBjbGFzcyBPdmVybGF5Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBjb21wb25lbnRUeXBlID0gJ292ZXJsYXknO1xuICBpbnN0YW5jZTogT3ZlcmxheTtcbiAgZWxlbWVudDogRWxlbWVudDtcbiAgQENvbnRlbnRDaGlsZChDb250ZW50Q29tcG9uZW50KVxuICBjb250ZW50OiBDb250ZW50Q29tcG9uZW50O1xuXG4gIEBJbnB1dCgpXG4gIGlkOiBudW1iZXIgfCBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIG9mZnNldDogbnVtYmVyW107XG4gIEBJbnB1dCgpXG4gIHBvc2l0aW9uaW5nOiBPdmVybGF5UG9zaXRpb25pbmcgfCBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHN0b3BFdmVudDogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgaW5zZXJ0Rmlyc3Q6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIGF1dG9QYW46IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIGF1dG9QYW5BbmltYXRpb246IG9seC5hbmltYXRpb24uUGFuT3B0aW9ucztcbiAgQElucHV0KClcbiAgYXV0b1Bhbk1hcmdpbjogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKHRoaXMuY29udGVudCkge1xuICAgICAgdGhpcy5lbGVtZW50ID0gdGhpcy5jb250ZW50LmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgT3ZlcmxheSh0aGlzKTtcbiAgICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZE92ZXJsYXkodGhpcy5pbnN0YW5jZSk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMuaW5zdGFuY2UpIHtcbiAgICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZU92ZXJsYXkodGhpcy5pbnN0YW5jZSk7XG4gICAgfVxuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9vdmVybGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNsRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLE9BQU8sRUFBc0IsTUFBTSxZQUFZLENBQUM7QUFDekQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFdkQ7SUE0QkUsMEJBQW9CLEdBQWlCO1FBQWpCLFFBQUcsR0FBSCxHQUFHLENBQWM7UUF2QnJDLGtCQUFhLEdBQUcsU0FBUyxDQUFDO0lBdUJjLENBQUM7Ozs7SUFFekMsbUNBQVE7OztJQUFSO1FBQ0UsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDakIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUM7WUFDckQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNsQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzlDLENBQUM7SUFDSCxDQUFDOzs7O0lBRUQsc0NBQVc7OztJQUFYO1FBQ0UsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNqRCxDQUFDO0lBQ0gsQ0FBQzs7Z0JBMUNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsUUFBUSxFQUFFLDJCQUEyQjtpQkFDdEM7OztnQkFQUSxZQUFZOzs7MEJBWWxCLFlBQVksU0FBQyxnQkFBZ0I7cUJBRzdCLEtBQUs7eUJBRUwsS0FBSzs4QkFFTCxLQUFLOzRCQUVMLEtBQUs7OEJBRUwsS0FBSzswQkFFTCxLQUFLO21DQUVMLEtBQUs7Z0NBRUwsS0FBSzs7SUFrQlIsdUJBQUM7Q0FBQSxBQTNDRCxJQTJDQztTQXZDWSxnQkFBZ0I7OztJQUMzQix5Q0FBMEI7O0lBQzFCLG9DQUFrQjs7SUFDbEIsbUNBQWlCOztJQUNqQixtQ0FDMEI7O0lBRTFCLDhCQUNvQjs7SUFDcEIsa0NBQ2lCOztJQUNqQix1Q0FDeUM7O0lBQ3pDLHFDQUNtQjs7SUFDbkIsdUNBQ3FCOztJQUNyQixtQ0FDaUI7O0lBQ2pCLDRDQUMyQzs7SUFDM0MseUNBQ3NCOzs7OztJQUVWLCtCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ29udGVudENoaWxkLCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi9tYXAuY29tcG9uZW50JztcclxuaW1wb3J0IHsgT3ZlcmxheSwgT3ZlcmxheVBvc2l0aW9uaW5nIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IENvbnRlbnRDb21wb25lbnQgfSBmcm9tICcuL2NvbnRlbnQuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLW92ZXJsYXknLFxyXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBPdmVybGF5Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIGNvbXBvbmVudFR5cGUgPSAnb3ZlcmxheSc7XHJcbiAgaW5zdGFuY2U6IE92ZXJsYXk7XHJcbiAgZWxlbWVudDogRWxlbWVudDtcclxuICBAQ29udGVudENoaWxkKENvbnRlbnRDb21wb25lbnQpXHJcbiAgY29udGVudDogQ29udGVudENvbXBvbmVudDtcclxuXHJcbiAgQElucHV0KClcclxuICBpZDogbnVtYmVyIHwgc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgb2Zmc2V0OiBudW1iZXJbXTtcclxuICBASW5wdXQoKVxyXG4gIHBvc2l0aW9uaW5nOiBPdmVybGF5UG9zaXRpb25pbmcgfCBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBzdG9wRXZlbnQ6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICBpbnNlcnRGaXJzdDogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIGF1dG9QYW46IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICBhdXRvUGFuQW5pbWF0aW9uOiBvbHguYW5pbWF0aW9uLlBhbk9wdGlvbnM7XHJcbiAgQElucHV0KClcclxuICBhdXRvUGFuTWFyZ2luOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWFwOiBNYXBDb21wb25lbnQpIHt9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgaWYgKHRoaXMuY29udGVudCkge1xyXG4gICAgICB0aGlzLmVsZW1lbnQgPSB0aGlzLmNvbnRlbnQuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xyXG4gICAgICB0aGlzLmluc3RhbmNlID0gbmV3IE92ZXJsYXkodGhpcyk7XHJcbiAgICAgIHRoaXMubWFwLmluc3RhbmNlLmFkZE92ZXJsYXkodGhpcy5pbnN0YW5jZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIGlmICh0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHRoaXMubWFwLmluc3RhbmNlLnJlbW92ZU92ZXJsYXkodGhpcy5pbnN0YW5jZSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/bingmaps.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/bingmaps.component.js
@@ -70,4 +70,4 @@ if (false) {
     /** @type {?} */
     SourceBingmapsComponent.prototype.wrapX;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluZ21hcHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy9iaW5nbWFwcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQVUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxNQUFNLEVBQXdCLE1BQU0sWUFBWSxDQUFDO0FBQzFELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUVuRTtJQU82QyxtREFBZTtJQXNCMUQsaUNBQW9CLEtBQXlCO1FBQTdDLFlBQ0Usa0JBQU0sS0FBSyxDQUFDLFNBQ2I7UUFaRCxnQkFBVSxHQUE4RSxRQUFRLENBQUM7O0lBWWpHLENBQUM7Ozs7SUFFRCwwQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7O2dCQXBDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsUUFBUSxFQUFFLHFEQUVUO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSx1QkFBdUIsRUFBdkIsQ0FBdUIsQ0FBQyxFQUFFLENBQUM7aUJBQ2xHOzs7Z0JBUlEsa0JBQWtCLHVCQStCWixJQUFJOzs7NEJBbkJoQixLQUFLO3dCQUVMLEtBQUs7MEJBRUwsS0FBSztzQkFFTCxLQUFLOzZCQUVMLEtBQUs7MEJBRUwsS0FBSzs2Q0FFTCxLQUFLO21DQUVMLEtBQUs7d0JBRUwsS0FBSzs7SUFXUiw4QkFBQztDQUFBLEFBckNELENBTzZDLGVBQWUsR0E4QjNEO1NBOUJZLHVCQUF1Qjs7O0lBQ2xDLDJDQUEwQjs7SUFFMUIsNENBQ2tCOztJQUNsQix3Q0FDZTs7SUFDZiwwQ0FDZ0I7O0lBQ2hCLHNDQUNZOztJQUNaLDZDQUNpRzs7SUFDakcsMENBQ2dCOztJQUNoQiw2REFDbUM7O0lBQ25DLG1EQUN1Qzs7SUFDdkMsd0NBQ2UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBPbkluaXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNvdXJjZSwgVGlsZUxvYWRGdW5jdGlvblR5cGUgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMYXllclRpbGVDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJ0aWxlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtYmluZ21hcHMnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgY2xhc3M9XCJhb2wtc291cmNlLWJpbmdtYXBzXCI+PC9kaXY+XG4gIGAsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VCaW5nbWFwc0NvbXBvbmVudCkgfV0sXG59KVxuZXhwb3J0IGNsYXNzIFNvdXJjZUJpbmdtYXBzQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgaW5zdGFuY2U6IHNvdXJjZS5CaW5nTWFwcztcblxuICBASW5wdXQoKVxuICBjYWNoZVNpemU6IG51bWJlcjtcbiAgQElucHV0KClcbiAgaGlkcGk6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIGN1bHR1cmU6IHN0cmluZztcbiAgQElucHV0KClcbiAga2V5OiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGltYWdlcnlTZXQ6ICdSb2FkJyB8ICdBZXJpYWwnIHwgJ0FlcmlhbFdpdGhMYWJlbHMnIHwgJ2NvbGxpbnNCYXJ0JyB8ICdvcmRuYW5jZVN1cnZleScgPSAnQWVyaWFsJztcbiAgQElucHV0KClcbiAgbWF4Wm9vbTogbnVtYmVyO1xuICBASW5wdXQoKVxuICByZXByb2plY3Rpb25FcnJvclRocmVzaG9sZDogbnVtYmVyO1xuICBASW5wdXQoKVxuICB0aWxlTG9hZEZ1bmN0aW9uOiBUaWxlTG9hZEZ1bmN0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgd3JhcFg6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJUaWxlQ29tcG9uZW50KSB7XG4gICAgc3VwZXIobGF5ZXIpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuQmluZ01hcHModGhpcyk7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluZ21hcHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy9iaW5nbWFwcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQVUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxNQUFNLEVBQXdCLE1BQU0sWUFBWSxDQUFDO0FBQzFELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUVuRTtJQU82QyxtREFBZTtJQXNCMUQsaUNBQW9CLEtBQXlCO1FBQTdDLFlBQ0Usa0JBQU0sS0FBSyxDQUFDLFNBQ2I7UUFaRCxnQkFBVSxHQUE4RSxRQUFRLENBQUM7O0lBWWpHLENBQUM7Ozs7SUFFRCwwQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7O2dCQXBDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsUUFBUSxFQUFFLHFEQUVUO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSx1QkFBdUIsRUFBdkIsQ0FBdUIsQ0FBQyxFQUFFLENBQUM7aUJBQ2xHOzs7Z0JBUlEsa0JBQWtCLHVCQStCWixJQUFJOzs7NEJBbkJoQixLQUFLO3dCQUVMLEtBQUs7MEJBRUwsS0FBSztzQkFFTCxLQUFLOzZCQUVMLEtBQUs7MEJBRUwsS0FBSzs2Q0FFTCxLQUFLO21DQUVMLEtBQUs7d0JBRUwsS0FBSzs7SUFXUiw4QkFBQztDQUFBLEFBckNELENBTzZDLGVBQWUsR0E4QjNEO1NBOUJZLHVCQUF1Qjs7O0lBQ2xDLDJDQUEwQjs7SUFFMUIsNENBQ2tCOztJQUNsQix3Q0FDZTs7SUFDZiwwQ0FDZ0I7O0lBQ2hCLHNDQUNZOztJQUNaLDZDQUNpRzs7SUFDakcsMENBQ2dCOztJQUNoQiw2REFDbUM7O0lBQ25DLG1EQUN1Qzs7SUFDdkMsd0NBQ2UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBPbkluaXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc291cmNlLCBUaWxlTG9hZEZ1bmN0aW9uVHlwZSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMYXllclRpbGVDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJ0aWxlLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtYmluZ21hcHMnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLXNvdXJjZS1iaW5nbWFwc1wiPjwvZGl2PlxyXG4gIGAsXHJcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZUJpbmdtYXBzQ29tcG9uZW50KSB9XSxcclxufSlcclxuZXhwb3J0IGNsYXNzIFNvdXJjZUJpbmdtYXBzQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBpbnN0YW5jZTogc291cmNlLkJpbmdNYXBzO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGNhY2hlU2l6ZTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgaGlkcGk6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICBjdWx0dXJlOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBrZXk6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGltYWdlcnlTZXQ6ICdSb2FkJyB8ICdBZXJpYWwnIHwgJ0FlcmlhbFdpdGhMYWJlbHMnIHwgJ2NvbGxpbnNCYXJ0JyB8ICdvcmRuYW5jZVN1cnZleScgPSAnQWVyaWFsJztcclxuICBASW5wdXQoKVxyXG4gIG1heFpvb206IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHJlcHJvamVjdGlvbkVycm9yVGhyZXNob2xkOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICB0aWxlTG9hZEZ1bmN0aW9uOiBUaWxlTG9hZEZ1bmN0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIHdyYXBYOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllclRpbGVDb21wb25lbnQpIHtcclxuICAgIHN1cGVyKGxheWVyKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuQmluZ01hcHModGhpcyk7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/cluster.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/cluster.component.js
@@ -54,4 +54,4 @@ if (false) {
     /** @type {?} */
     SourceClusterComponent.prototype.source;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2x1c3Rlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL2NsdXN0ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBQ25HLE9BQU8sRUFBRSxNQUFNLEVBQWlCLE1BQU0sWUFBWSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUUzRDtJQU80QyxrREFBZTtJQVl6RCxnQ0FBb0IsS0FBMkI7ZUFDN0Msa0JBQU0sS0FBSyxDQUFDO0lBQ2QsQ0FBQzs7OztJQUVELG1EQUFrQjs7O0lBQWxCO1FBQ0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsUUFBUSxDQUFDO1FBRWxELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7Z0JBNUJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixRQUFRLEVBQUUscUNBRVQ7b0JBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLHNCQUFzQixFQUF0QixDQUFzQixDQUFDLEVBQUUsQ0FBQztpQkFDakc7OztnQkFWUSxvQkFBb0IsdUJBdUJkLElBQUk7OzsyQkFUaEIsS0FBSzttQ0FFTCxLQUFLO3dDQUdMLFlBQVksU0FBQyxxQkFBcUI7O0lBY3JDLDZCQUFDO0NBQUEsQUE3QkQsQ0FPNEMsZUFBZSxHQXNCMUQ7U0F0Qlksc0JBQXNCOzs7SUFDakMsMENBQXlCOztJQUV6QiwwQ0FDaUI7O0lBQ2pCLGtEQUNzRDs7SUFFdEQsdURBQzZDOztJQUM3Qyx3Q0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBmb3J3YXJkUmVmLCBDb250ZW50Q2hpbGQsIEFmdGVyQ29udGVudEluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNvdXJjZSwgRmVhdHVyZSwgZ2VvbSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTGF5ZXJWZWN0b3JDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJ2ZWN0b3IuY29tcG9uZW50JztcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb3VyY2VWZWN0b3JDb21wb25lbnQgfSBmcm9tICcuL3ZlY3Rvci5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLWNsdXN0ZXInLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZUNsdXN0ZXJDb21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VDbHVzdGVyQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XG4gIGluc3RhbmNlOiBzb3VyY2UuQ2x1c3RlcjtcblxuICBASW5wdXQoKVxuICBkaXN0YW5jZTogbnVtYmVyO1xuICBASW5wdXQoKVxuICBnZW9tZXRyeUZ1bmN0aW9uPzogKChmZWF0dXJlOiBGZWF0dXJlKSA9PiBnZW9tLlBvaW50KTtcblxuICBAQ29udGVudENoaWxkKFNvdXJjZVZlY3RvckNvbXBvbmVudClcbiAgc291cmNlVmVjdG9yQ29tcG9uZW50OiBTb3VyY2VWZWN0b3JDb21wb25lbnQ7XG4gIHNvdXJjZTogc291cmNlLlZlY3RvcjtcblxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllclZlY3RvckNvbXBvbmVudCkge1xuICAgIHN1cGVyKGxheWVyKTtcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICB0aGlzLnNvdXJjZSA9IHRoaXMuc291cmNlVmVjdG9yQ29tcG9uZW50Lmluc3RhbmNlO1xuXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuQ2x1c3Rlcih0aGlzKTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2x1c3Rlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL2NsdXN0ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBQ25HLE9BQU8sRUFBRSxNQUFNLEVBQWlCLE1BQU0sWUFBWSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUUzRDtJQU80QyxrREFBZTtJQVl6RCxnQ0FBb0IsS0FBMkI7ZUFDN0Msa0JBQU0sS0FBSyxDQUFDO0lBQ2QsQ0FBQzs7OztJQUVELG1EQUFrQjs7O0lBQWxCO1FBQ0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsUUFBUSxDQUFDO1FBRWxELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7Z0JBNUJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixRQUFRLEVBQUUscUNBRVQ7b0JBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLHNCQUFzQixFQUF0QixDQUFzQixDQUFDLEVBQUUsQ0FBQztpQkFDakc7OztnQkFWUSxvQkFBb0IsdUJBdUJkLElBQUk7OzsyQkFUaEIsS0FBSzttQ0FFTCxLQUFLO3dDQUdMLFlBQVksU0FBQyxxQkFBcUI7O0lBY3JDLDZCQUFDO0NBQUEsQUE3QkQsQ0FPNEMsZUFBZSxHQXNCMUQ7U0F0Qlksc0JBQXNCOzs7SUFDakMsMENBQXlCOztJQUV6QiwwQ0FDaUI7O0lBQ2pCLGtEQUNzRDs7SUFFdEQsdURBQzZDOztJQUM3Qyx3Q0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBmb3J3YXJkUmVmLCBDb250ZW50Q2hpbGQsIEFmdGVyQ29udGVudEluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc291cmNlLCBGZWF0dXJlLCBnZW9tIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IExheWVyVmVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydmVjdG9yLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNvdXJjZVZlY3RvckNvbXBvbmVudCB9IGZyb20gJy4vdmVjdG9yLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtY2x1c3RlcicsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VDbHVzdGVyQ29tcG9uZW50KSB9XSxcclxufSlcclxuZXhwb3J0IGNsYXNzIFNvdXJjZUNsdXN0ZXJDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcclxuICBpbnN0YW5jZTogc291cmNlLkNsdXN0ZXI7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgZGlzdGFuY2U6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIGdlb21ldHJ5RnVuY3Rpb24/OiAoKGZlYXR1cmU6IEZlYXR1cmUpID0+IGdlb20uUG9pbnQpO1xyXG5cclxuICBAQ29udGVudENoaWxkKFNvdXJjZVZlY3RvckNvbXBvbmVudClcclxuICBzb3VyY2VWZWN0b3JDb21wb25lbnQ6IFNvdXJjZVZlY3RvckNvbXBvbmVudDtcclxuICBzb3VyY2U6IHNvdXJjZS5WZWN0b3I7XHJcblxyXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVyVmVjdG9yQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XHJcbiAgICB0aGlzLnNvdXJjZSA9IHRoaXMuc291cmNlVmVjdG9yQ29tcG9uZW50Lmluc3RhbmNlO1xyXG5cclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLkNsdXN0ZXIodGhpcyk7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/geojson.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/geojson.component.js
@@ -56,4 +56,4 @@ if (false) {
     /** @type {?} */
     SourceGeoJSONComponent.prototype.url;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VvanNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL2dlb2pzb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFVLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUUsTUFBTSxFQUFrQixNQUFNLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDNUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDdkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJEO0lBTzRDLGtEQUFlO0lBWXpELGdDQUFvQixLQUEyQjtlQUM3QyxrQkFBTSxLQUFLLENBQUM7SUFDZCxDQUFDOzs7O0lBRUQseUNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOztnQkEzQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLFFBQVEsRUFBRSxxQ0FFVDtvQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEsc0JBQXNCLEVBQXRCLENBQXNCLENBQUMsRUFBRSxDQUFDO2lCQUNqRzs7O2dCQVRRLG9CQUFvQix1QkFzQmQsSUFBSTs7O3dDQVRoQixLQUFLO29DQUVMLEtBQUs7K0JBRUwsS0FBSztzQkFFTCxLQUFLOztJQVlSLDZCQUFDO0NBQUEsQUE1QkQsQ0FPNEMsZUFBZSxHQXFCMUQ7U0FyQlksc0JBQXNCOzs7SUFDakMsMENBQXdCOztJQUN4Qix3Q0FBdUI7O0lBQ3ZCLHVEQUNzQzs7SUFDdEMsbURBQ2tDOztJQUNsQyw4Q0FDcUI7O0lBQ3JCLHFDQUNZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25Jbml0LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzb3VyY2UsIFByb2plY3Rpb25MaWtlLCBmb3JtYXQgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IExheWVyVmVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydmVjdG9yLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLWdlb2pzb24nLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZUdlb0pTT05Db21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VHZW9KU09OQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgaW5zdGFuY2U6IHNvdXJjZS5WZWN0b3I7XG4gIGZvcm1hdDogZm9ybWF0LkZlYXR1cmU7XG4gIEBJbnB1dCgpXG4gIGRlZmF1bHREYXRhUHJvamVjdGlvbjogUHJvamVjdGlvbkxpa2U7XG4gIEBJbnB1dCgpXG4gIGZlYXR1cmVQcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZTtcbiAgQElucHV0KClcbiAgZ2VvbWV0cnlOYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHVybDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVyVmVjdG9yQ29tcG9uZW50KSB7XG4gICAgc3VwZXIobGF5ZXIpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5mb3JtYXQgPSBuZXcgZm9ybWF0Lkdlb0pTT04odGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuVmVjdG9yKHRoaXMpO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VvanNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL2dlb2pzb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFVLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUUsTUFBTSxFQUFrQixNQUFNLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDNUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDdkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJEO0lBTzRDLGtEQUFlO0lBWXpELGdDQUFvQixLQUEyQjtlQUM3QyxrQkFBTSxLQUFLLENBQUM7SUFDZCxDQUFDOzs7O0lBRUQseUNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOztnQkEzQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLFFBQVEsRUFBRSxxQ0FFVDtvQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEsc0JBQXNCLEVBQXRCLENBQXNCLENBQUMsRUFBRSxDQUFDO2lCQUNqRzs7O2dCQVRRLG9CQUFvQix1QkFzQmQsSUFBSTs7O3dDQVRoQixLQUFLO29DQUVMLEtBQUs7K0JBRUwsS0FBSztzQkFFTCxLQUFLOztJQVlSLDZCQUFDO0NBQUEsQUE1QkQsQ0FPNEMsZUFBZSxHQXFCMUQ7U0FyQlksc0JBQXNCOzs7SUFDakMsMENBQXdCOztJQUN4Qix3Q0FBdUI7O0lBQ3ZCLHVEQUNzQzs7SUFDdEMsbURBQ2tDOztJQUNsQyw4Q0FDcUI7O0lBQ3JCLHFDQUNZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25Jbml0LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHNvdXJjZSwgUHJvamVjdGlvbkxpa2UsIGZvcm1hdCB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBMYXllclZlY3RvckNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcnZlY3Rvci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLWdlb2pzb24nLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlR2VvSlNPTkNvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VHZW9KU09OQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBpbnN0YW5jZTogc291cmNlLlZlY3RvcjtcclxuICBmb3JtYXQ6IGZvcm1hdC5GZWF0dXJlO1xyXG4gIEBJbnB1dCgpXHJcbiAgZGVmYXVsdERhdGFQcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZTtcclxuICBASW5wdXQoKVxyXG4gIGZlYXR1cmVQcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZTtcclxuICBASW5wdXQoKVxyXG4gIGdlb21ldHJ5TmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgdXJsOiBzdHJpbmc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVyVmVjdG9yQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuZm9ybWF0ID0gbmV3IGZvcm1hdC5HZW9KU09OKHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuVmVjdG9yKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/imagearcgisrest.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/imagearcgisrest.component.js
@@ -70,4 +70,4 @@ if (false) {
     /** @type {?} */
     SourceImageArcGISRestComponent.prototype.logo;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2VhcmNnaXNyZXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvaW1hZ2VhcmNnaXNyZXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFFLE1BQU0sRUFBc0QsTUFBTSxZQUFZLENBQUM7QUFDeEYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDckUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJEO0lBT29ELDBEQUFlO0lBYWpFLHdDQUFvQixLQUEwQjtRQUE5QyxZQUNFLGtCQUFNLEtBQUssQ0FBQyxTQUNiO1FBTlEsV0FBSyxHQUFHLENBQUMsQ0FBQzs7SUFNbkIsQ0FBQzs7OztJQUVELGlEQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7Z0JBM0JGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsNEJBQTRCO29CQUN0QyxRQUFRLEVBQUUscUNBRVQ7b0JBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLDhCQUE4QixFQUE5QixDQUE4QixDQUFDLEVBQUUsQ0FBQztpQkFDekc7OztnQkFUUSxtQkFBbUIsdUJBdUJiLElBQUk7Ozs2QkFWaEIsS0FBSztzQkFDTCxLQUFLOytCQUNMLEtBQUs7OEJBQ0wsS0FBSztvQ0FDTCxLQUFLO3lCQUNMLEtBQUs7d0JBQ0wsS0FBSzs4QkFDTCxLQUFLO3VCQUNMLEtBQUs7O0lBVVIscUNBQUM7Q0FBQSxBQTVCRCxDQU9vRCxlQUFlLEdBcUJsRTtTQXJCWSw4QkFBOEI7OztJQUN6QyxrREFBaUM7O0lBRWpDLG9EQUE2Qzs7SUFDN0MsNkNBQXFCOztJQUNyQixzREFBcUM7O0lBQ3JDLHFEQUE4Qjs7SUFDOUIsMkRBQW1EOztJQUNuRCxnREFBdUM7O0lBQ3ZDLCtDQUFtQjs7SUFDbkIscURBQWdDOztJQUNoQyw4Q0FBeUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIGZvcndhcmRSZWYsIEhvc3QsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNvdXJjZSwgUHJvamVjdGlvbkxpa2UsIEF0dHJpYnV0aW9uLCBJbWFnZUxvYWRGdW5jdGlvblR5cGUgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IExheWVySW1hZ2VDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJpbWFnZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS1pbWFnZWFyY2dpc3Jlc3QnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZUltYWdlQXJjR0lTUmVzdENvbXBvbmVudCkgfV0sXG59KVxuZXhwb3J0IGNsYXNzIFNvdXJjZUltYWdlQXJjR0lTUmVzdENvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGluc3RhbmNlOiBzb3VyY2UuSW1hZ2VBcmNHSVNSZXN0O1xuXG4gIEBJbnB1dCgpIHByb2plY3Rpb246IFByb2plY3Rpb25MaWtlIHwgc3RyaW5nO1xuICBASW5wdXQoKSB1cmw6IHN0cmluZztcbiAgQElucHV0KCkgYXR0cmlidXRpb25zOiBBdHRyaWJ1dGlvbltdO1xuICBASW5wdXQoKSBjcm9zc09yaWdpbj86IHN0cmluZztcbiAgQElucHV0KCkgaW1hZ2VMb2FkRnVuY3Rpb24/OiBJbWFnZUxvYWRGdW5jdGlvblR5cGU7XG4gIEBJbnB1dCgpIHBhcmFtcz86IHsgW2s6IHN0cmluZ106IGFueSB9O1xuICBASW5wdXQoKSByYXRpbyA9IDE7XG4gIEBJbnB1dCgpIHJlc29sdXRpb25zPzogbnVtYmVyW107XG4gIEBJbnB1dCgpIGxvZ28/OiBzdHJpbmcgfCBvbHguTG9nb09wdGlvbnM7XG5cbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJJbWFnZUNvbXBvbmVudCkge1xuICAgIHN1cGVyKGxheWVyKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLkltYWdlQXJjR0lTUmVzdCh0aGlzKTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2VhcmNnaXNyZXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvaW1hZ2VhcmNnaXNyZXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFFLE1BQU0sRUFBc0QsTUFBTSxZQUFZLENBQUM7QUFDeEYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDckUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJEO0lBT29ELDBEQUFlO0lBYWpFLHdDQUFvQixLQUEwQjtRQUE5QyxZQUNFLGtCQUFNLEtBQUssQ0FBQyxTQUNiO1FBTlEsV0FBSyxHQUFHLENBQUMsQ0FBQzs7SUFNbkIsQ0FBQzs7OztJQUVELGlEQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7Z0JBM0JGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsNEJBQTRCO29CQUN0QyxRQUFRLEVBQUUscUNBRVQ7b0JBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLDhCQUE4QixFQUE5QixDQUE4QixDQUFDLEVBQUUsQ0FBQztpQkFDekc7OztnQkFUUSxtQkFBbUIsdUJBdUJiLElBQUk7Ozs2QkFWaEIsS0FBSztzQkFDTCxLQUFLOytCQUNMLEtBQUs7OEJBQ0wsS0FBSztvQ0FDTCxLQUFLO3lCQUNMLEtBQUs7d0JBQ0wsS0FBSzs4QkFDTCxLQUFLO3VCQUNMLEtBQUs7O0lBVVIscUNBQUM7Q0FBQSxBQTVCRCxDQU9vRCxlQUFlLEdBcUJsRTtTQXJCWSw4QkFBOEI7OztJQUN6QyxrREFBaUM7O0lBRWpDLG9EQUE2Qzs7SUFDN0MsNkNBQXFCOztJQUNyQixzREFBcUM7O0lBQ3JDLHFEQUE4Qjs7SUFDOUIsMkRBQW1EOztJQUNuRCxnREFBdUM7O0lBQ3ZDLCtDQUFtQjs7SUFDbkIscURBQWdDOztJQUNoQyw4Q0FBeUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIGZvcndhcmRSZWYsIEhvc3QsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc291cmNlLCBQcm9qZWN0aW9uTGlrZSwgQXR0cmlidXRpb24sIEltYWdlTG9hZEZ1bmN0aW9uVHlwZSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBMYXllckltYWdlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVyaW1hZ2UuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS1pbWFnZWFyY2dpc3Jlc3QnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlSW1hZ2VBcmNHSVNSZXN0Q29tcG9uZW50KSB9XSxcclxufSlcclxuZXhwb3J0IGNsYXNzIFNvdXJjZUltYWdlQXJjR0lTUmVzdENvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgaW5zdGFuY2U6IHNvdXJjZS5JbWFnZUFyY0dJU1Jlc3Q7XHJcblxyXG4gIEBJbnB1dCgpIHByb2plY3Rpb246IFByb2plY3Rpb25MaWtlIHwgc3RyaW5nO1xyXG4gIEBJbnB1dCgpIHVybDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIGF0dHJpYnV0aW9uczogQXR0cmlidXRpb25bXTtcclxuICBASW5wdXQoKSBjcm9zc09yaWdpbj86IHN0cmluZztcclxuICBASW5wdXQoKSBpbWFnZUxvYWRGdW5jdGlvbj86IEltYWdlTG9hZEZ1bmN0aW9uVHlwZTtcclxuICBASW5wdXQoKSBwYXJhbXM/OiB7IFtrOiBzdHJpbmddOiBhbnkgfTtcclxuICBASW5wdXQoKSByYXRpbyA9IDE7XHJcbiAgQElucHV0KCkgcmVzb2x1dGlvbnM/OiBudW1iZXJbXTtcclxuICBASW5wdXQoKSBsb2dvPzogc3RyaW5nIHwgb2x4LkxvZ29PcHRpb25zO1xyXG5cclxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllckltYWdlQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLkltYWdlQXJjR0lTUmVzdCh0aGlzKTtcclxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/imagestatic.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/imagestatic.component.js
@@ -65,4 +65,4 @@ if (false) {
     /** @type {?} */
     SourceImageStaticComponent.prototype.imageSize;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2VzdGF0aWMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy9pbWFnZXN0YXRpYy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQVUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBa0IsTUFBTSxFQUF3RCxNQUFNLFlBQVksQ0FBQztBQUMxRyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFckU7SUFPZ0Qsc0RBQWU7SUFvQjdELG9DQUFvQixLQUEwQjtlQUM1QyxrQkFBTSxLQUFLLENBQUM7SUFDZCxDQUFDOzs7O0lBRUQsNkNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOztnQkFsQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLFFBQVEsRUFBRSxxQ0FFVDtvQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEsMEJBQTBCLEVBQTFCLENBQTBCLENBQUMsRUFBRSxDQUFDO2lCQUNyRzs7O2dCQVJRLG1CQUFtQix1QkE2QmIsSUFBSTs7OzZCQWpCaEIsS0FBSzs4QkFFTCxLQUFLO3NCQUVMLEtBQUs7K0JBRUwsS0FBSzs4QkFFTCxLQUFLO29DQUVMLEtBQUs7dUJBRUwsS0FBSzs0QkFFTCxLQUFLOztJQVdSLGlDQUFDO0NBQUEsQUFuQ0QsQ0FPZ0QsZUFBZSxHQTRCOUQ7U0E1QlksMEJBQTBCOzs7SUFDckMsOENBQTZCOztJQUU3QixnREFDb0M7O0lBQ3BDLGlEQUNvQjs7SUFDcEIseUNBQ1k7O0lBQ1osa0RBQzhCOztJQUM5QixpREFDcUI7O0lBQ3JCLHVEQUMwQzs7SUFDMUMsMENBQ2dDOztJQUNoQywrQ0FDaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBPbkluaXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFByb2plY3Rpb25MaWtlLCBzb3VyY2UsIEV4dGVudCwgQXR0cmlidXRpb25MaWtlLCBJbWFnZUxvYWRGdW5jdGlvblR5cGUsIFNpemUgfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMYXllckltYWdlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVyaW1hZ2UuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS1pbWFnZXN0YXRpYycsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlSW1hZ2VTdGF0aWNDb21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VJbWFnZVN0YXRpY0NvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGluc3RhbmNlOiBzb3VyY2UuSW1hZ2VTdGF0aWM7XG5cbiAgQElucHV0KClcbiAgcHJvamVjdGlvbjogUHJvamVjdGlvbkxpa2UgfCBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGltYWdlRXh0ZW50OiBFeHRlbnQ7XG4gIEBJbnB1dCgpXG4gIHVybDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBhdHRyaWJ1dGlvbnM6IEF0dHJpYnV0aW9uTGlrZTtcbiAgQElucHV0KClcbiAgY3Jvc3NPcmlnaW4/OiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGltYWdlTG9hZEZ1bmN0aW9uPzogSW1hZ2VMb2FkRnVuY3Rpb25UeXBlO1xuICBASW5wdXQoKVxuICBsb2dvPzogc3RyaW5nIHwgb2x4LkxvZ29PcHRpb25zO1xuICBASW5wdXQoKVxuICBpbWFnZVNpemU/OiBTaXplO1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVySW1hZ2VDb21wb25lbnQpIHtcbiAgICBzdXBlcihsYXllcik7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5JbWFnZVN0YXRpYyh0aGlzKTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2VzdGF0aWMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy9pbWFnZXN0YXRpYy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQVUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBa0IsTUFBTSxFQUF3RCxNQUFNLFlBQVksQ0FBQztBQUMxRyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFckU7SUFPZ0Qsc0RBQWU7SUFvQjdELG9DQUFvQixLQUEwQjtlQUM1QyxrQkFBTSxLQUFLLENBQUM7SUFDZCxDQUFDOzs7O0lBRUQsNkNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOztnQkFsQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLFFBQVEsRUFBRSxxQ0FFVDtvQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEsMEJBQTBCLEVBQTFCLENBQTBCLENBQUMsRUFBRSxDQUFDO2lCQUNyRzs7O2dCQVJRLG1CQUFtQix1QkE2QmIsSUFBSTs7OzZCQWpCaEIsS0FBSzs4QkFFTCxLQUFLO3NCQUVMLEtBQUs7K0JBRUwsS0FBSzs4QkFFTCxLQUFLO29DQUVMLEtBQUs7dUJBRUwsS0FBSzs0QkFFTCxLQUFLOztJQVdSLGlDQUFDO0NBQUEsQUFuQ0QsQ0FPZ0QsZUFBZSxHQTRCOUQ7U0E1QlksMEJBQTBCOzs7SUFDckMsOENBQTZCOztJQUU3QixnREFDb0M7O0lBQ3BDLGlEQUNvQjs7SUFDcEIseUNBQ1k7O0lBQ1osa0RBQzhCOztJQUM5QixpREFDcUI7O0lBQ3JCLHVEQUMwQzs7SUFDMUMsMENBQ2dDOztJQUNoQywrQ0FDaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBPbkluaXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUHJvamVjdGlvbkxpa2UsIHNvdXJjZSwgRXh0ZW50LCBBdHRyaWJ1dGlvbkxpa2UsIEltYWdlTG9hZEZ1bmN0aW9uVHlwZSwgU2l6ZSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMYXllckltYWdlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVyaW1hZ2UuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS1pbWFnZXN0YXRpYycsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VJbWFnZVN0YXRpY0NvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VJbWFnZVN0YXRpY0NvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgaW5zdGFuY2U6IHNvdXJjZS5JbWFnZVN0YXRpYztcclxuXHJcbiAgQElucHV0KClcclxuICBwcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZSB8IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGltYWdlRXh0ZW50OiBFeHRlbnQ7XHJcbiAgQElucHV0KClcclxuICB1cmw6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGF0dHJpYnV0aW9uczogQXR0cmlidXRpb25MaWtlO1xyXG4gIEBJbnB1dCgpXHJcbiAgY3Jvc3NPcmlnaW4/OiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBpbWFnZUxvYWRGdW5jdGlvbj86IEltYWdlTG9hZEZ1bmN0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIGxvZ28/OiBzdHJpbmcgfCBvbHguTG9nb09wdGlvbnM7XHJcbiAgQElucHV0KClcclxuICBpbWFnZVNpemU/OiBTaXplO1xyXG5cclxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllckltYWdlQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLkltYWdlU3RhdGljKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/imagewms.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/imagewms.component.js
@@ -87,4 +87,4 @@ if (false) {
     /** @type {?} */
     SourceImageWMSComponent.prototype.url;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2V3bXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy9pbWFnZXdtcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQXFCLFVBQVUsRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDckcsT0FBTyxFQUEwRCxNQUFNLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDNUYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDckUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJEO0lBTzZDLG1EQUFlO0lBMEIxRCxpQ0FBb0IsS0FBMEI7ZUFDNUMsa0JBQU0sS0FBSyxDQUFDO0lBQ2QsQ0FBQzs7OztJQUVELDBDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7Ozs7SUFFRCw2Q0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxPQUFPLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0RCxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDMUMsQ0FBQztJQUNILENBQUM7O2dCQTlDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsUUFBUSxFQUFFLHFDQUVUO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSx1QkFBdUIsRUFBdkIsQ0FBdUIsQ0FBQyxFQUFFLENBQUM7aUJBQ2xHOzs7Z0JBVFEsbUJBQW1CLHVCQW9DYixJQUFJOzs7K0JBdkJoQixLQUFLOzhCQUVMLEtBQUs7d0JBRUwsS0FBSzs2QkFFTCxLQUFLO29DQUVMLEtBQUs7dUJBRUwsS0FBSzt5QkFFTCxLQUFLOzZCQUVMLEtBQUs7d0JBRUwsS0FBSzs4QkFFTCxLQUFLO3NCQUVMLEtBQUs7O0lBaUJSLDhCQUFDO0NBQUEsQUEvQ0QsQ0FPNkMsZUFBZSxHQXdDM0Q7U0F4Q1ksdUJBQXVCOzs7SUFDbEMsMkNBQTBCOztJQUUxQiwrQ0FDOEI7O0lBQzlCLDhDQUNvQjs7SUFDcEIsd0NBQ2U7O0lBQ2YsNkNBQ21COztJQUNuQixvREFDMEM7O0lBQzFDLHVDQUMrQjs7SUFDL0IseUNBQ2U7O0lBQ2YsNkNBQ29DOztJQUNwQyx3Q0FDYzs7SUFDZCw4Q0FDMkI7O0lBQzNCLHNDQUNZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIGZvcndhcmRSZWYsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEF0dHJpYnV0aW9uTGlrZSwgSW1hZ2VMb2FkRnVuY3Rpb25UeXBlLCBQcm9qZWN0aW9uTGlrZSwgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBMYXllckltYWdlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVyaW1hZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtaW1hZ2V3bXMnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZUltYWdlV01TQ29tcG9uZW50KSB9XSxcbn0pXG5leHBvcnQgY2xhc3MgU291cmNlSW1hZ2VXTVNDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uSW5pdCB7XG4gIGluc3RhbmNlOiBzb3VyY2UuSW1hZ2VXTVM7XG5cbiAgQElucHV0KClcbiAgYXR0cmlidXRpb25zOiBBdHRyaWJ1dGlvbkxpa2U7XG4gIEBJbnB1dCgpXG4gIGNyb3NzT3JpZ2luOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGhpZHBpOiBib29sZWFuO1xuICBASW5wdXQoKVxuICBzZXJ2ZXJUeXBlOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGltYWdlTG9hZEZ1bmN0aW9uPzogSW1hZ2VMb2FkRnVuY3Rpb25UeXBlO1xuICBASW5wdXQoKVxuICBsb2dvOiBzdHJpbmcgfCBvbHguTG9nb09wdGlvbnM7XG4gIEBJbnB1dCgpXG4gIHBhcmFtczogT2JqZWN0O1xuICBASW5wdXQoKVxuICBwcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZSB8IHN0cmluZztcbiAgQElucHV0KClcbiAgcmF0aW86IG51bWJlcjtcbiAgQElucHV0KClcbiAgcmVzb2x1dGlvbnM6IEFycmF5PG51bWJlcj47XG4gIEBJbnB1dCgpXG4gIHVybDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVySW1hZ2VDb21wb25lbnQpIHtcbiAgICBzdXBlcihsYXllcik7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5JbWFnZVdNUyh0aGlzKTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGlmICh0aGlzLmluc3RhbmNlICYmIGNoYW5nZXMuaGFzT3duUHJvcGVydHkoJ3BhcmFtcycpKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnVwZGF0ZVBhcmFtcyh0aGlzLnBhcmFtcyk7XG4gICAgfVxuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2V3bXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy9pbWFnZXdtcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQXFCLFVBQVUsRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDckcsT0FBTyxFQUEwRCxNQUFNLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDNUYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDckUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJEO0lBTzZDLG1EQUFlO0lBMEIxRCxpQ0FBb0IsS0FBMEI7ZUFDNUMsa0JBQU0sS0FBSyxDQUFDO0lBQ2QsQ0FBQzs7OztJQUVELDBDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7Ozs7SUFFRCw2Q0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxPQUFPLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0RCxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDMUMsQ0FBQztJQUNILENBQUM7O2dCQTlDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsUUFBUSxFQUFFLHFDQUVUO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSx1QkFBdUIsRUFBdkIsQ0FBdUIsQ0FBQyxFQUFFLENBQUM7aUJBQ2xHOzs7Z0JBVFEsbUJBQW1CLHVCQW9DYixJQUFJOzs7K0JBdkJoQixLQUFLOzhCQUVMLEtBQUs7d0JBRUwsS0FBSzs2QkFFTCxLQUFLO29DQUVMLEtBQUs7dUJBRUwsS0FBSzt5QkFFTCxLQUFLOzZCQUVMLEtBQUs7d0JBRUwsS0FBSzs4QkFFTCxLQUFLO3NCQUVMLEtBQUs7O0lBaUJSLDhCQUFDO0NBQUEsQUEvQ0QsQ0FPNkMsZUFBZSxHQXdDM0Q7U0F4Q1ksdUJBQXVCOzs7SUFDbEMsMkNBQTBCOztJQUUxQiwrQ0FDOEI7O0lBQzlCLDhDQUNvQjs7SUFDcEIsd0NBQ2U7O0lBQ2YsNkNBQ21COztJQUNuQixvREFDMEM7O0lBQzFDLHVDQUMrQjs7SUFDL0IseUNBQ2U7O0lBQ2YsNkNBQ29DOztJQUNwQyx3Q0FDYzs7SUFDZCw4Q0FDMkI7O0lBQzNCLHNDQUNZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIGZvcndhcmRSZWYsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQXR0cmlidXRpb25MaWtlLCBJbWFnZUxvYWRGdW5jdGlvblR5cGUsIFByb2plY3Rpb25MaWtlLCBzb3VyY2UgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTGF5ZXJJbWFnZUNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcmltYWdlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtaW1hZ2V3bXMnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlSW1hZ2VXTVNDb21wb25lbnQpIH1dLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU291cmNlSW1hZ2VXTVNDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uSW5pdCB7XHJcbiAgaW5zdGFuY2U6IHNvdXJjZS5JbWFnZVdNUztcclxuXHJcbiAgQElucHV0KClcclxuICBhdHRyaWJ1dGlvbnM6IEF0dHJpYnV0aW9uTGlrZTtcclxuICBASW5wdXQoKVxyXG4gIGNyb3NzT3JpZ2luOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBoaWRwaTogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIHNlcnZlclR5cGU6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGltYWdlTG9hZEZ1bmN0aW9uPzogSW1hZ2VMb2FkRnVuY3Rpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgbG9nbzogc3RyaW5nIHwgb2x4LkxvZ29PcHRpb25zO1xyXG4gIEBJbnB1dCgpXHJcbiAgcGFyYW1zOiBPYmplY3Q7XHJcbiAgQElucHV0KClcclxuICBwcm9qZWN0aW9uOiBQcm9qZWN0aW9uTGlrZSB8IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHJhdGlvOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICByZXNvbHV0aW9uczogQXJyYXk8bnVtYmVyPjtcclxuICBASW5wdXQoKVxyXG4gIHVybDogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllckltYWdlQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLkltYWdlV01TKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGlmICh0aGlzLmluc3RhbmNlICYmIGNoYW5nZXMuaGFzT3duUHJvcGVydHkoJ3BhcmFtcycpKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2UudXBkYXRlUGFyYW1zKHRoaXMucGFyYW1zKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/osm.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/osm.component.js
@@ -74,4 +74,4 @@ if (false) {
     /** @type {?} */
     SourceOsmComponent.prototype.wrapX;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3NtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvb3NtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQW9CLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRixPQUFPLEVBQUUsTUFBTSxFQUF5QyxNQUFNLFlBQVksQ0FBQztBQUMzRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDckQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFM0Q7SUFPd0MsOENBQWtCO0lBc0J4RCw0QkFHRSxLQUF5QixFQUd6QixNQUE4QjtlQUU5QixrQkFBTSxLQUFLLEVBQUUsTUFBTSxDQUFDO0lBQ3RCLENBQUM7Ozs7SUFFRCwrQ0FBa0I7OztJQUFsQjtRQUNFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBQ3JCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUM7UUFDNUMsQ0FBQztRQUNELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7O2dCQTlDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFLGdEQUVUO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxrQkFBa0IsRUFBbEIsQ0FBa0IsQ0FBQyxFQUFFLENBQUM7aUJBQzdGOzs7Z0JBWFEsa0JBQWtCLHVCQW1DdEIsSUFBSSxZQUNKLFFBQVE7Z0JBakNKLHFCQUFxQix1QkFtQ3pCLElBQUksWUFDSixRQUFROzs7K0JBeEJWLEtBQUs7NEJBRUwsS0FBSzs4QkFFTCxLQUFLOzBCQUVMLEtBQUs7eUJBRUwsS0FBSzs2Q0FFTCxLQUFLO21DQUVMLEtBQUs7c0JBRUwsS0FBSzt3QkFFTCxLQUFLOztJQXFCUix5QkFBQztDQUFBLEFBL0NELENBT3dDLGtCQUFrQixHQXdDekQ7U0F4Q1ksa0JBQWtCOzs7SUFDN0Isc0NBQXFCOztJQUVyQiwwQ0FDOEI7O0lBQzlCLHVDQUNrQjs7SUFDbEIseUNBQ29COztJQUNwQixxQ0FDZ0I7O0lBQ2hCLG9DQUNnQjs7SUFDaEIsd0RBQ21DOztJQUNuQyw4Q0FDdUM7O0lBQ3ZDLGlDQUNZOztJQUNaLG1DQUNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBmb3J3YXJkUmVmLCBJbnB1dCwgQWZ0ZXJDb250ZW50SW5pdCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNvdXJjZSwgQXR0cmlidXRpb25MaWtlLCBUaWxlTG9hZEZ1bmN0aW9uVHlwZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTGF5ZXJUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydGlsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcbmltcG9ydCB7IFNvdXJjZVhZWkNvbXBvbmVudCB9IGZyb20gJy4veHl6LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb3VyY2VSYXN0ZXJDb21wb25lbnQgfSBmcm9tICcuL3Jhc3Rlci5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLW9zbScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImFvbC1zb3VyY2Utb3NtXCI+PC9kaXY+XG4gIGAsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VPc21Db21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VPc21Db21wb25lbnQgZXh0ZW5kcyBTb3VyY2VYWVpDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgaW5zdGFuY2U6IHNvdXJjZS5PU007XG5cbiAgQElucHV0KClcbiAgYXR0cmlidXRpb25zOiBBdHRyaWJ1dGlvbkxpa2U7XG4gIEBJbnB1dCgpXG4gIGNhY2hlU2l6ZTogbnVtYmVyO1xuICBASW5wdXQoKVxuICBjcm9zc09yaWdpbjogc3RyaW5nO1xuICBASW5wdXQoKVxuICBtYXhab29tOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIG9wYXF1ZTogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgcmVwcm9qZWN0aW9uRXJyb3JUaHJlc2hvbGQ6IG51bWJlcjtcbiAgQElucHV0KClcbiAgdGlsZUxvYWRGdW5jdGlvbjogVGlsZUxvYWRGdW5jdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIHVybDogc3RyaW5nO1xuICBASW5wdXQoKVxuICB3cmFwWDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASG9zdCgpXG4gICAgQE9wdGlvbmFsKClcbiAgICBsYXllcjogTGF5ZXJUaWxlQ29tcG9uZW50LFxuICAgIEBIb3N0KClcbiAgICBAT3B0aW9uYWwoKVxuICAgIHJhc3Rlcj86IFNvdXJjZVJhc3RlckNvbXBvbmVudFxuICApIHtcbiAgICBzdXBlcihsYXllciwgcmFzdGVyKTtcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICBpZiAodGhpcy50aWxlR3JpZFhZWikge1xuICAgICAgdGhpcy50aWxlR3JpZCA9IHRoaXMudGlsZUdyaWRYWVouaW5zdGFuY2U7XG4gICAgfVxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLk9TTSh0aGlzKTtcbiAgICB0aGlzLl9yZWdpc3Rlcih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3NtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvb3NtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQW9CLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRixPQUFPLEVBQUUsTUFBTSxFQUF5QyxNQUFNLFlBQVksQ0FBQztBQUMzRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDckQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFM0Q7SUFPd0MsOENBQWtCO0lBc0J4RCw0QkFHRSxLQUF5QixFQUd6QixNQUE4QjtlQUU5QixrQkFBTSxLQUFLLEVBQUUsTUFBTSxDQUFDO0lBQ3RCLENBQUM7Ozs7SUFFRCwrQ0FBa0I7OztJQUFsQjtRQUNFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBQ3JCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUM7UUFDNUMsQ0FBQztRQUNELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7O2dCQTlDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFLGdEQUVUO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxrQkFBa0IsRUFBbEIsQ0FBa0IsQ0FBQyxFQUFFLENBQUM7aUJBQzdGOzs7Z0JBWFEsa0JBQWtCLHVCQW1DdEIsSUFBSSxZQUNKLFFBQVE7Z0JBakNKLHFCQUFxQix1QkFtQ3pCLElBQUksWUFDSixRQUFROzs7K0JBeEJWLEtBQUs7NEJBRUwsS0FBSzs4QkFFTCxLQUFLOzBCQUVMLEtBQUs7eUJBRUwsS0FBSzs2Q0FFTCxLQUFLO21DQUVMLEtBQUs7c0JBRUwsS0FBSzt3QkFFTCxLQUFLOztJQXFCUix5QkFBQztDQUFBLEFBL0NELENBT3dDLGtCQUFrQixHQXdDekQ7U0F4Q1ksa0JBQWtCOzs7SUFDN0Isc0NBQXFCOztJQUVyQiwwQ0FDOEI7O0lBQzlCLHVDQUNrQjs7SUFDbEIseUNBQ29COztJQUNwQixxQ0FDZ0I7O0lBQ2hCLG9DQUNnQjs7SUFDaEIsd0RBQ21DOztJQUNuQyw4Q0FDdUM7O0lBQ3ZDLGlDQUNZOztJQUNaLG1DQUNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBmb3J3YXJkUmVmLCBJbnB1dCwgQWZ0ZXJDb250ZW50SW5pdCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc291cmNlLCBBdHRyaWJ1dGlvbkxpa2UsIFRpbGVMb2FkRnVuY3Rpb25UeXBlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IExheWVyVGlsZUNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcnRpbGUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU291cmNlWFlaQ29tcG9uZW50IH0gZnJvbSAnLi94eXouY29tcG9uZW50JztcclxuaW1wb3J0IHsgU291cmNlUmFzdGVyQ29tcG9uZW50IH0gZnJvbSAnLi9yYXN0ZXIuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS1vc20nLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLXNvdXJjZS1vc21cIj48L2Rpdj5cclxuICBgLFxyXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VPc21Db21wb25lbnQpIH1dLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU291cmNlT3NtQ29tcG9uZW50IGV4dGVuZHMgU291cmNlWFlaQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XHJcbiAgaW5zdGFuY2U6IHNvdXJjZS5PU007XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgYXR0cmlidXRpb25zOiBBdHRyaWJ1dGlvbkxpa2U7XHJcbiAgQElucHV0KClcclxuICBjYWNoZVNpemU6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIGNyb3NzT3JpZ2luOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBtYXhab29tOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBvcGFxdWU6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICByZXByb2plY3Rpb25FcnJvclRocmVzaG9sZDogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlsZUxvYWRGdW5jdGlvbjogVGlsZUxvYWRGdW5jdGlvblR5cGU7XHJcbiAgQElucHV0KClcclxuICB1cmw6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHdyYXBYOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIEBIb3N0KClcclxuICAgIEBPcHRpb25hbCgpXHJcbiAgICBsYXllcjogTGF5ZXJUaWxlQ29tcG9uZW50LFxyXG4gICAgQEhvc3QoKVxyXG4gICAgQE9wdGlvbmFsKClcclxuICAgIHJhc3Rlcj86IFNvdXJjZVJhc3RlckNvbXBvbmVudFxyXG4gICkge1xyXG4gICAgc3VwZXIobGF5ZXIsIHJhc3Rlcik7XHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XHJcbiAgICBpZiAodGhpcy50aWxlR3JpZFhZWikge1xyXG4gICAgICB0aGlzLnRpbGVHcmlkID0gdGhpcy50aWxlR3JpZFhZWi5pbnN0YW5jZTtcclxuICAgIH1cclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLk9TTSh0aGlzKTtcclxuICAgIHRoaXMuX3JlZ2lzdGVyKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/raster.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/raster.component.js
@@ -73,4 +73,4 @@ if (false) {
     /** @type {?} */
     SourceRasterComponent.prototype.sources;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFzdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvcmFzdGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBb0IsU0FBUyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0csT0FBTyxFQUF3QyxNQUFNLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFMUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDckUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJEO0lBWTJDLGlEQUFlO0lBbUJ4RCwrQkFBb0IsS0FBMEI7UUFBOUMsWUFDRSxrQkFBTSxLQUFLLENBQUMsU0FDYjtRQVJELHNCQUFnQixHQUFxQyxJQUFJLFlBQVksRUFBc0IsQ0FBQztRQUU1RixxQkFBZSxHQUFxQyxJQUFJLFlBQVksRUFBc0IsQ0FBQztRQUUzRixhQUFPLEdBQW9CLEVBQUUsQ0FBQzs7SUFJOUIsQ0FBQzs7OztJQUVELGtEQUFrQjs7O0lBQWxCO1FBQUEsaUJBT0M7UUFOQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV4QyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxVQUFDLEtBQXlCLElBQUssT0FBQSxLQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFqQyxDQUFpQyxDQUFDLENBQUM7UUFDdkcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsaUJBQWlCLEVBQUUsVUFBQyxLQUF5QixJQUFLLE9BQUEsS0FBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQWhDLENBQWdDLENBQUMsQ0FBQztRQUVyRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoQyxDQUFDOztnQkExQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFFBQVEsRUFBRSxxQ0FFVDtvQkFDRCxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLGVBQWU7NEJBQ3hCLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLHFCQUFxQixFQUFyQixDQUFxQixDQUFDO3lCQUNyRDtxQkFDRjtpQkFDRjs7O2dCQWRRLG1CQUFtQix1QkFrQ2IsSUFBSTs7OzRCQWhCaEIsS0FBSzswQkFFTCxLQUFLO3NCQUVMLEtBQUs7Z0NBRUwsS0FBSzttQ0FHTCxNQUFNO2tDQUVOLE1BQU07O0lBaUJULDRCQUFDO0NBQUEsQUEzQ0QsQ0FZMkMsZUFBZSxHQStCekQ7U0EvQlkscUJBQXFCOzs7SUFDaEMseUNBQXdCOztJQUV4QiwwQ0FDNEI7O0lBQzVCLHdDQUNpQjs7SUFDakIsb0NBQ2E7O0lBQ2IsOENBQ29DOztJQUVwQyxpREFDNEY7O0lBQzVGLGdEQUMyRjs7SUFFM0Ysd0NBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJDb250ZW50SW5pdCwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIGZvcndhcmRSZWYsIEhvc3QsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJhc3Rlck9wZXJhdGlvbiwgUmFzdGVyT3BlcmF0aW9uVHlwZSwgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5cbmltcG9ydCB7IExheWVySW1hZ2VDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJpbWFnZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS1yYXN0ZXInLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlUmFzdGVyQ29tcG9uZW50KSxcbiAgICB9LFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VSYXN0ZXJDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgaW5zdGFuY2U6IHNvdXJjZS5SYXN0ZXI7XG5cbiAgQElucHV0KClcbiAgb3BlcmF0aW9uPzogUmFzdGVyT3BlcmF0aW9uO1xuICBASW5wdXQoKVxuICB0aHJlYWRzPzogbnVtYmVyO1xuICBASW5wdXQoKVxuICBsaWI/OiBPYmplY3Q7XG4gIEBJbnB1dCgpXG4gIG9wZXJhdGlvblR5cGU/OiBSYXN0ZXJPcGVyYXRpb25UeXBlO1xuXG4gIEBPdXRwdXQoKVxuICBiZWZvcmVPcGVyYXRpb25zOiBFdmVudEVtaXR0ZXI8c291cmNlLlJhc3RlckV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8c291cmNlLlJhc3RlckV2ZW50PigpO1xuICBAT3V0cHV0KClcbiAgYWZ0ZXJPcGVyYXRpb25zOiBFdmVudEVtaXR0ZXI8c291cmNlLlJhc3RlckV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8c291cmNlLlJhc3RlckV2ZW50PigpO1xuXG4gIHNvdXJjZXM6IHNvdXJjZS5Tb3VyY2VbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVySW1hZ2VDb21wb25lbnQpIHtcbiAgICBzdXBlcihsYXllcik7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuUmFzdGVyKHRoaXMpO1xuXG4gICAgdGhpcy5pbnN0YW5jZS5vbignYmVmb3Jlb3BlcmF0aW9ucycsIChldmVudDogc291cmNlLlJhc3RlckV2ZW50KSA9PiB0aGlzLmJlZm9yZU9wZXJhdGlvbnMuZW1pdChldmVudCkpO1xuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2FmdGVyb3BlcmF0aW9ucycsIChldmVudDogc291cmNlLlJhc3RlckV2ZW50KSA9PiB0aGlzLmFmdGVyT3BlcmF0aW9ucy5lbWl0KGV2ZW50KSk7XG5cbiAgICB0aGlzLl9yZWdpc3Rlcih0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFzdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvcmFzdGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBb0IsU0FBUyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0csT0FBTyxFQUF3QyxNQUFNLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFMUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDckUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJEO0lBWTJDLGlEQUFlO0lBbUJ4RCwrQkFBb0IsS0FBMEI7UUFBOUMsWUFDRSxrQkFBTSxLQUFLLENBQUMsU0FDYjtRQVJELHNCQUFnQixHQUFxQyxJQUFJLFlBQVksRUFBc0IsQ0FBQztRQUU1RixxQkFBZSxHQUFxQyxJQUFJLFlBQVksRUFBc0IsQ0FBQztRQUUzRixhQUFPLEdBQW9CLEVBQUUsQ0FBQzs7SUFJOUIsQ0FBQzs7OztJQUVELGtEQUFrQjs7O0lBQWxCO1FBQUEsaUJBT0M7UUFOQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV4QyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxVQUFDLEtBQXlCLElBQUssT0FBQSxLQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFqQyxDQUFpQyxDQUFDLENBQUM7UUFDdkcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsaUJBQWlCLEVBQUUsVUFBQyxLQUF5QixJQUFLLE9BQUEsS0FBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQWhDLENBQWdDLENBQUMsQ0FBQztRQUVyRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoQyxDQUFDOztnQkExQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFFBQVEsRUFBRSxxQ0FFVDtvQkFDRCxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLGVBQWU7NEJBQ3hCLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLHFCQUFxQixFQUFyQixDQUFxQixDQUFDO3lCQUNyRDtxQkFDRjtpQkFDRjs7O2dCQWRRLG1CQUFtQix1QkFrQ2IsSUFBSTs7OzRCQWhCaEIsS0FBSzswQkFFTCxLQUFLO3NCQUVMLEtBQUs7Z0NBRUwsS0FBSzttQ0FHTCxNQUFNO2tDQUVOLE1BQU07O0lBaUJULDRCQUFDO0NBQUEsQUEzQ0QsQ0FZMkMsZUFBZSxHQStCekQ7U0EvQlkscUJBQXFCOzs7SUFDaEMseUNBQXdCOztJQUV4QiwwQ0FDNEI7O0lBQzVCLHdDQUNpQjs7SUFDakIsb0NBQ2E7O0lBQ2IsOENBQ29DOztJQUVwQyxpREFDNEY7O0lBQzVGLGdEQUMyRjs7SUFFM0Ysd0NBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJDb250ZW50SW5pdCwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIGZvcndhcmRSZWYsIEhvc3QsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUmFzdGVyT3BlcmF0aW9uLCBSYXN0ZXJPcGVyYXRpb25UeXBlLCBzb3VyY2UgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuXHJcbmltcG9ydCB7IExheWVySW1hZ2VDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJpbWFnZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLXJhc3RlcicsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAge1xyXG4gICAgICBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsXHJcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZVJhc3RlckNvbXBvbmVudCksXHJcbiAgICB9LFxyXG4gIF0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VSYXN0ZXJDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcclxuICBpbnN0YW5jZTogc291cmNlLlJhc3RlcjtcclxuXHJcbiAgQElucHV0KClcclxuICBvcGVyYXRpb24/OiBSYXN0ZXJPcGVyYXRpb247XHJcbiAgQElucHV0KClcclxuICB0aHJlYWRzPzogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGliPzogT2JqZWN0O1xyXG4gIEBJbnB1dCgpXHJcbiAgb3BlcmF0aW9uVHlwZT86IFJhc3Rlck9wZXJhdGlvblR5cGU7XHJcblxyXG4gIEBPdXRwdXQoKVxyXG4gIGJlZm9yZU9wZXJhdGlvbnM6IEV2ZW50RW1pdHRlcjxzb3VyY2UuUmFzdGVyRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcjxzb3VyY2UuUmFzdGVyRXZlbnQ+KCk7XHJcbiAgQE91dHB1dCgpXHJcbiAgYWZ0ZXJPcGVyYXRpb25zOiBFdmVudEVtaXR0ZXI8c291cmNlLlJhc3RlckV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8c291cmNlLlJhc3RlckV2ZW50PigpO1xyXG5cclxuICBzb3VyY2VzOiBzb3VyY2UuU291cmNlW10gPSBbXTtcclxuXHJcbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJJbWFnZUNvbXBvbmVudCkge1xyXG4gICAgc3VwZXIobGF5ZXIpO1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuUmFzdGVyKHRoaXMpO1xyXG5cclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2JlZm9yZW9wZXJhdGlvbnMnLCAoZXZlbnQ6IHNvdXJjZS5SYXN0ZXJFdmVudCkgPT4gdGhpcy5iZWZvcmVPcGVyYXRpb25zLmVtaXQoZXZlbnQpKTtcclxuICAgIHRoaXMuaW5zdGFuY2Uub24oJ2FmdGVyb3BlcmF0aW9ucycsIChldmVudDogc291cmNlLlJhc3RlckV2ZW50KSA9PiB0aGlzLmFmdGVyT3BlcmF0aW9ucy5lbWl0KGV2ZW50KSk7XHJcblxyXG4gICAgdGhpcy5fcmVnaXN0ZXIodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/source.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/source.component.js
@@ -65,4 +65,4 @@ if (false) {
      */
     SourceComponent.prototype.raster;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291cmNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvc291cmNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLEtBQUssRUFBYSxNQUFNLGVBQWUsQ0FBQztBQU1qRDtJQU9FLHlCQUFzQixJQUFvQixFQUFZLE1BQThCO1FBQTlELFNBQUksR0FBSixJQUFJLENBQWdCO1FBQVksV0FBTSxHQUFOLE1BQU0sQ0FBd0I7UUFMN0Usa0JBQWEsR0FBRyxRQUFRLENBQUM7SUFLdUQsQ0FBQzs7OztJQUV4RixxQ0FBVzs7O0lBQVg7UUFDRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNwQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2hCLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUMzQixDQUFDO0lBQ0gsQ0FBQzs7Ozs7O0lBRVMsbUNBQVM7Ozs7O0lBQW5CLFVBQW9CLENBQWdCO1FBQ2xDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNoQixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVCLENBQUM7SUFDSCxDQUFDOzsrQkF2QkEsS0FBSzs7SUF3QlIsc0JBQUM7Q0FBQSxBQTVCRCxJQTRCQztTQTVCWSxlQUFlOzs7SUFDMUIsbUNBQStCOztJQUMvQix3Q0FBZ0M7O0lBRWhDLHVDQUM4Qjs7Ozs7SUFFbEIsK0JBQThCOzs7OztJQUFFLGlDQUF3QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNvdXJjZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTGF5ZXJDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXIuY29tcG9uZW50JztcbmltcG9ydCBBdHRyaWJ1dGlvbkxpa2UgPSBvbC5BdHRyaWJ1dGlvbkxpa2U7XG5pbXBvcnQgeyBTb3VyY2VSYXN0ZXJDb21wb25lbnQgfSBmcm9tICcuL3Jhc3Rlci5jb21wb25lbnQnO1xuXG5leHBvcnQgY2xhc3MgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgcHVibGljIGluc3RhbmNlOiBzb3VyY2UuU291cmNlO1xuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdzb3VyY2UnO1xuXG4gIEBJbnB1dCgpXG4gIGF0dHJpYnV0aW9uczogQXR0cmlidXRpb25MaWtlO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBob3N0OiBMYXllckNvbXBvbmVudCwgcHJvdGVjdGVkIHJhc3Rlcj86IFNvdXJjZVJhc3RlckNvbXBvbmVudCkge31cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy5ob3N0ICYmIHRoaXMuaG9zdC5pbnN0YW5jZSkge1xuICAgICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZShudWxsKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5yYXN0ZXIpIHtcbiAgICAgIHRoaXMucmFzdGVyLnNvdXJjZXMgPSBbXTtcbiAgICB9XG4gIH1cblxuICBwcm90ZWN0ZWQgX3JlZ2lzdGVyKHM6IHNvdXJjZS5Tb3VyY2UpIHtcbiAgICBpZiAodGhpcy5ob3N0KSB7XG4gICAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHMpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnJhc3Rlcikge1xuICAgICAgdGhpcy5yYXN0ZXIuc291cmNlcyA9IFtzXTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291cmNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvc291cmNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLEtBQUssRUFBYSxNQUFNLGVBQWUsQ0FBQztBQU1qRDtJQU9FLHlCQUFzQixJQUFvQixFQUFZLE1BQThCO1FBQTlELFNBQUksR0FBSixJQUFJLENBQWdCO1FBQVksV0FBTSxHQUFOLE1BQU0sQ0FBd0I7UUFMN0Usa0JBQWEsR0FBRyxRQUFRLENBQUM7SUFLdUQsQ0FBQzs7OztJQUV4RixxQ0FBVzs7O0lBQVg7UUFDRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNwQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2hCLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUMzQixDQUFDO0lBQ0gsQ0FBQzs7Ozs7O0lBRVMsbUNBQVM7Ozs7O0lBQW5CLFVBQW9CLENBQWdCO1FBQ2xDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNoQixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVCLENBQUM7SUFDSCxDQUFDOzsrQkF2QkEsS0FBSzs7SUF3QlIsc0JBQUM7Q0FBQSxBQTVCRCxJQTRCQztTQTVCWSxlQUFlOzs7SUFDMUIsbUNBQStCOztJQUMvQix3Q0FBZ0M7O0lBRWhDLHVDQUM4Qjs7Ozs7SUFFbEIsK0JBQThCOzs7OztJQUFFLGlDQUF3QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IExheWVyQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCBBdHRyaWJ1dGlvbkxpa2UgPSBvbC5BdHRyaWJ1dGlvbkxpa2U7XHJcbmltcG9ydCB7IFNvdXJjZVJhc3RlckNvbXBvbmVudCB9IGZyb20gJy4vcmFzdGVyLmNvbXBvbmVudCc7XHJcblxyXG5leHBvcnQgY2xhc3MgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcclxuICBwdWJsaWMgaW5zdGFuY2U6IHNvdXJjZS5Tb3VyY2U7XHJcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnc291cmNlJztcclxuXHJcbiAgQElucHV0KClcclxuICBhdHRyaWJ1dGlvbnM6IEF0dHJpYnV0aW9uTGlrZTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGhvc3Q6IExheWVyQ29tcG9uZW50LCBwcm90ZWN0ZWQgcmFzdGVyPzogU291cmNlUmFzdGVyQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIGlmICh0aGlzLmhvc3QgJiYgdGhpcy5ob3N0Lmluc3RhbmNlKSB7XHJcbiAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UobnVsbCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMucmFzdGVyKSB7XHJcbiAgICAgIHRoaXMucmFzdGVyLnNvdXJjZXMgPSBbXTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBfcmVnaXN0ZXIoczogc291cmNlLlNvdXJjZSkge1xyXG4gICAgaWYgKHRoaXMuaG9zdCkge1xyXG4gICAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHMpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLnJhc3Rlcikge1xyXG4gICAgICB0aGlzLnJhc3Rlci5zb3VyY2VzID0gW3NdO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/tilejson.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/tilejson.component.js
@@ -44,4 +44,4 @@ if (false) {
     /** @type {?} */
     SourceTileJSONComponent.prototype.url;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZWpzb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy90aWxlanNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQVUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDcEMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJEO0lBTzZDLG1EQUFlO0lBTTFELGlDQUFvQixLQUF5QjtlQUMzQyxrQkFBTSxLQUFLLENBQUM7SUFDZCxDQUFDOzs7O0lBRUQsMENBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOztnQkFwQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLFFBQVEsRUFBRSxxQ0FFVDtvQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEsdUJBQXVCLEVBQXZCLENBQXVCLENBQUMsRUFBRSxDQUFDO2lCQUNsRzs7O2dCQVRRLGtCQUFrQix1QkFnQlosSUFBSTs7O3NCQUhoQixLQUFLOztJQVdSLDhCQUFDO0NBQUEsQUFyQkQsQ0FPNkMsZUFBZSxHQWMzRDtTQWRZLHVCQUF1Qjs7O0lBQ2xDLDJDQUEwQjs7SUFFMUIsc0NBQ1kiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBPbkluaXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNvdXJjZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTGF5ZXJUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydGlsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS10aWxlanNvbicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlVGlsZUpTT05Db21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VUaWxlSlNPTkNvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGluc3RhbmNlOiBzb3VyY2UuVGlsZUpTT047XG5cbiAgQElucHV0KClcbiAgdXJsOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJUaWxlQ29tcG9uZW50KSB7XG4gICAgc3VwZXIobGF5ZXIpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuVGlsZUpTT04odGhpcyk7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZWpzb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy90aWxlanNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQVUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDcEMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJEO0lBTzZDLG1EQUFlO0lBTTFELGlDQUFvQixLQUF5QjtlQUMzQyxrQkFBTSxLQUFLLENBQUM7SUFDZCxDQUFDOzs7O0lBRUQsMENBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOztnQkFwQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLFFBQVEsRUFBRSxxQ0FFVDtvQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEsdUJBQXVCLEVBQXZCLENBQXVCLENBQUMsRUFBRSxDQUFDO2lCQUNsRzs7O2dCQVRRLGtCQUFrQix1QkFnQlosSUFBSTs7O3NCQUhoQixLQUFLOztJQVdSLDhCQUFDO0NBQUEsQUFyQkQsQ0FPNkMsZUFBZSxHQWMzRDtTQWRZLHVCQUF1Qjs7O0lBQ2xDLDJDQUEwQjs7SUFFMUIsc0NBQ1kiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBPbkluaXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IExheWVyVGlsZUNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcnRpbGUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS10aWxlanNvbicsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VUaWxlSlNPTkNvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VUaWxlSlNPTkNvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgaW5zdGFuY2U6IHNvdXJjZS5UaWxlSlNPTjtcclxuXHJcbiAgQElucHV0KClcclxuICB1cmw6IHN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJUaWxlQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLlRpbGVKU09OKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/tilewms.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/tilewms.component.js
@@ -93,4 +93,4 @@ if (false) {
     /** @type {?} */
     SourceTileWMSComponent.prototype.wrapX;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZXdtcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL3RpbGV3bXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFxQixVQUFVLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3JHLE9BQU8sRUFBRSxNQUFNLEVBQXdCLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNwRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFckQ7SUFPNEMsa0RBQWU7SUE2QnpELGdDQUFvQixLQUF5QjtlQUMzQyxrQkFBTSxLQUFLLENBQUM7SUFDZCxDQUFDOzs7O0lBRUQseUNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7OztJQUVELDRDQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjtRQUNoQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLE9BQU8sQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RELElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMxQyxDQUFDO0lBQ0gsQ0FBQzs7Z0JBakRGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixRQUFRLEVBQUUscUNBRVQ7b0JBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLHNCQUFzQixFQUF0QixDQUFzQixDQUFDLEVBQUUsQ0FBQztpQkFDakc7OztnQkFUUSxrQkFBa0IsdUJBdUNaLElBQUk7Ozs0QkEzQmhCLEtBQUs7OEJBRUwsS0FBSzt5QkFFTCxLQUFLO3dCQUVMLEtBQUs7eUJBRUwsS0FBSzs2QkFFTCxLQUFLOzZDQUVMLEtBQUs7NkJBRUwsS0FBSzsyQkFFTCxLQUFLO21DQUVMLEtBQUs7c0JBRUwsS0FBSzt1QkFFTCxLQUFLO3dCQUVMLEtBQUs7O0lBaUJSLDZCQUFDO0NBQUEsQUFsREQsQ0FPNEMsZUFBZSxHQTJDMUQ7U0EzQ1ksc0JBQXNCOzs7SUFDakMsMENBQXlCOztJQUN6QiwyQ0FDa0I7O0lBQ2xCLDZDQUNvQjs7SUFDcEIsd0NBQ2U7O0lBQ2YsdUNBQ2U7O0lBQ2Ysd0NBQ2U7O0lBQ2YsNENBQ21COztJQUNuQiw0REFDbUM7O0lBQ25DLDRDQUNtQjs7SUFDbkIsMENBQzRCOztJQUM1QixrREFDdUM7O0lBQ3ZDLHFDQUNZOztJQUNaLHNDQUNlOztJQUNmLHVDQUNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIGZvcndhcmRSZWYsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNvdXJjZSwgVGlsZUxvYWRGdW5jdGlvblR5cGUsIHRpbGVncmlkIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBMYXllclRpbGVDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJ0aWxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLXRpbGV3bXMnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZVRpbGVXTVNDb21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VUaWxlV01TQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkluaXQge1xuICBpbnN0YW5jZTogc291cmNlLlRpbGVXTVM7XG4gIEBJbnB1dCgpXG4gIGNhY2hlU2l6ZTogbnVtYmVyO1xuICBASW5wdXQoKVxuICBjcm9zc09yaWdpbjogc3RyaW5nO1xuICBASW5wdXQoKVxuICBndXR0ZXI6IG51bWJlcjtcbiAgQElucHV0KClcbiAgaGlkcGk6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIHBhcmFtczogT2JqZWN0O1xuICBASW5wdXQoKVxuICBwcm9qZWN0aW9uOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHJlcHJvamVjdGlvbkVycm9yVGhyZXNob2xkOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHNlcnZlclR5cGU6IHN0cmluZztcbiAgQElucHV0KClcbiAgdGlsZUdyaWQ6IHRpbGVncmlkLlRpbGVHcmlkO1xuICBASW5wdXQoKVxuICB0aWxlTG9hZEZ1bmN0aW9uOiBUaWxlTG9hZEZ1bmN0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgdXJsOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHVybHM6IHN0cmluZ1tdO1xuICBASW5wdXQoKVxuICB3cmFwWDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllclRpbGVDb21wb25lbnQpIHtcbiAgICBzdXBlcihsYXllcik7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5UaWxlV01TKHRoaXMpO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKHRoaXMuaW5zdGFuY2UgJiYgY2hhbmdlcy5oYXNPd25Qcm9wZXJ0eSgncGFyYW1zJykpIHtcbiAgICAgIHRoaXMuaW5zdGFuY2UudXBkYXRlUGFyYW1zKHRoaXMucGFyYW1zKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZXdtcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL3RpbGV3bXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFxQixVQUFVLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3JHLE9BQU8sRUFBRSxNQUFNLEVBQXdCLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNwRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFckQ7SUFPNEMsa0RBQWU7SUE2QnpELGdDQUFvQixLQUF5QjtlQUMzQyxrQkFBTSxLQUFLLENBQUM7SUFDZCxDQUFDOzs7O0lBRUQseUNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOzs7OztJQUVELDRDQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjtRQUNoQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLE9BQU8sQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RELElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMxQyxDQUFDO0lBQ0gsQ0FBQzs7Z0JBakRGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixRQUFRLEVBQUUscUNBRVQ7b0JBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLHNCQUFzQixFQUF0QixDQUFzQixDQUFDLEVBQUUsQ0FBQztpQkFDakc7OztnQkFUUSxrQkFBa0IsdUJBdUNaLElBQUk7Ozs0QkEzQmhCLEtBQUs7OEJBRUwsS0FBSzt5QkFFTCxLQUFLO3dCQUVMLEtBQUs7eUJBRUwsS0FBSzs2QkFFTCxLQUFLOzZDQUVMLEtBQUs7NkJBRUwsS0FBSzsyQkFFTCxLQUFLO21DQUVMLEtBQUs7c0JBRUwsS0FBSzt1QkFFTCxLQUFLO3dCQUVMLEtBQUs7O0lBaUJSLDZCQUFDO0NBQUEsQUFsREQsQ0FPNEMsZUFBZSxHQTJDMUQ7U0EzQ1ksc0JBQXNCOzs7SUFDakMsMENBQXlCOztJQUN6QiwyQ0FDa0I7O0lBQ2xCLDZDQUNvQjs7SUFDcEIsd0NBQ2U7O0lBQ2YsdUNBQ2U7O0lBQ2Ysd0NBQ2U7O0lBQ2YsNENBQ21COztJQUNuQiw0REFDbUM7O0lBQ25DLDRDQUNtQjs7SUFDbkIsMENBQzRCOztJQUM1QixrREFDdUM7O0lBQ3ZDLHFDQUNZOztJQUNaLHNDQUNlOztJQUNmLHVDQUNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIGZvcndhcmRSZWYsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc291cmNlLCBUaWxlTG9hZEZ1bmN0aW9uVHlwZSwgdGlsZWdyaWQgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTGF5ZXJUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydGlsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLXRpbGV3bXMnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlVGlsZVdNU0NvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VUaWxlV01TQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkluaXQge1xyXG4gIGluc3RhbmNlOiBzb3VyY2UuVGlsZVdNUztcclxuICBASW5wdXQoKVxyXG4gIGNhY2hlU2l6ZTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgY3Jvc3NPcmlnaW46IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGd1dHRlcjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgaGlkcGk6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICBwYXJhbXM6IE9iamVjdDtcclxuICBASW5wdXQoKVxyXG4gIHByb2plY3Rpb246IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHJlcHJvamVjdGlvbkVycm9yVGhyZXNob2xkOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBzZXJ2ZXJUeXBlOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICB0aWxlR3JpZDogdGlsZWdyaWQuVGlsZUdyaWQ7XHJcbiAgQElucHV0KClcclxuICB0aWxlTG9hZEZ1bmN0aW9uOiBUaWxlTG9hZEZ1bmN0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIHVybDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgdXJsczogc3RyaW5nW107XHJcbiAgQElucHV0KClcclxuICB3cmFwWDogYm9vbGVhbjtcclxuXHJcbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJUaWxlQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLlRpbGVXTVModGhpcyk7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgaWYgKHRoaXMuaW5zdGFuY2UgJiYgY2hhbmdlcy5oYXNPd25Qcm9wZXJ0eSgncGFyYW1zJykpIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZS51cGRhdGVQYXJhbXModGhpcy5wYXJhbXMpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/tilewmts.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/tilewmts.component.js
@@ -143,4 +143,4 @@ if (false) {
     /** @type {?} */
     SourceTileWMTSComponent.prototype.tileGridWMTS;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZXdtdHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy90aWxld210cy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULElBQUksRUFDSixLQUFLLEVBQ0wsVUFBVSxFQUVWLFlBQVksR0FHYixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQXdCLFFBQVEsRUFBa0IsTUFBTSxFQUE4QixNQUFNLFlBQVksQ0FBQztBQUNoSCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFbEU7SUFPNkMsbURBQWU7SUFtRDFELGlDQUFvQixLQUF5QjtlQUMzQyxrQkFBTSxLQUFLLENBQUM7SUFDZCxDQUFDOzs7OztJQUVELDZDQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjs7WUFDMUIsVUFBVSxHQUE2QixFQUFFO1FBQy9DLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbkIsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUNELEdBQUcsQ0FBQyxDQUFDLElBQU0sR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDMUIsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ1osS0FBSyxLQUFLO3dCQUNSLElBQUksQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQzt3QkFDckMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO3dCQUN0QixLQUFLLENBQUM7b0JBQ1I7d0JBQ0UsS0FBSyxDQUFDO2dCQUNWLENBQUM7Z0JBQ0QsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7WUFDOUMsQ0FBQztRQUNILENBQUM7UUFDRCxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDakQsQ0FBQzs7OztJQUVELGdEQUFjOzs7SUFBZDtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELG9EQUFrQjs7O0lBQWxCO1FBQ0UsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7WUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQztZQUMzQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDeEIsQ0FBQztJQUNILENBQUM7O2dCQTdGRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsUUFBUSxFQUFFLHFDQUVUO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSx1QkFBdUIsRUFBdkIsQ0FBdUIsQ0FBQyxFQUFFLENBQUM7aUJBQ2xHOzs7Z0JBVlEsa0JBQWtCLHVCQThEWixJQUFJOzs7NEJBakRoQixLQUFLOzhCQUVMLEtBQUs7dUJBRUwsS0FBSzsyQkFFTCxLQUFLOzZCQUVMLEtBQUs7NkNBRUwsS0FBSztrQ0FFTCxLQUFLO3dCQUVMLEtBQUs7d0JBRUwsS0FBSzs0QkFFTCxLQUFLO2lDQVNMLEtBQUs7MEJBRUwsS0FBSzt5QkFFTCxLQUFLOzRCQUVMLEtBQUs7NkJBRUwsS0FBSztzQkFFTCxLQUFLO21DQUVMLEtBQUs7dUJBRUwsS0FBSzt3QkFFTCxLQUFLOytCQUdMLFlBQVksU0FBQyxxQkFBcUI7O0lBdUNyQyw4QkFBQztDQUFBLEFBOUZELENBTzZDLGVBQWUsR0F1RjNEO1NBdkZZLHVCQUF1Qjs7O0lBQ2xDLDJDQUFzQjs7SUFDdEIsNENBQ21COztJQUNuQiw4Q0FDcUI7O0lBQ3JCLHVDQUNnQzs7SUFDaEMsMkNBQ3dCOztJQUN4Qiw2Q0FDMkI7O0lBQzNCLDZEQUNvQzs7SUFDcEMsa0RBQ3NEOztJQUN0RCx3Q0FDYzs7SUFDZCx3Q0FDYzs7SUFDZCw0Q0FRVTs7SUFDVixpREFDd0I7O0lBQ3hCLDBDQUNpQjs7SUFDakIseUNBQ2dCOztJQUNoQiw0Q0FDa0I7O0lBQ2xCLDZDQUMwQjs7SUFDMUIsc0NBQ2E7O0lBQ2IsbURBQ3dDOztJQUN4Qyx1Q0FDZ0I7O0lBQ2hCLHdDQUNnQjs7SUFFaEIsK0NBQ29DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBIb3N0LFxuICBJbnB1dCxcbiAgZm9yd2FyZFJlZixcbiAgQWZ0ZXJDb250ZW50SW5pdCxcbiAgQ29udGVudENoaWxkLFxuICBTaW1wbGVDaGFuZ2VzLFxuICBPbkNoYW5nZXMsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGlsZUxvYWRGdW5jdGlvblR5cGUsIHRpbGVncmlkLCBQcm9qZWN0aW9uTGlrZSwgc291cmNlLCBJbWFnZVRpbGUsIFRpbGVDb29yZCwgVGlsZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTGF5ZXJUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydGlsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcbmltcG9ydCB7IFRpbGVHcmlkV01UU0NvbXBvbmVudCB9IGZyb20gJy4uL3RpbGVncmlkd210cy5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc291cmNlLXRpbGV3bXRzJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VUaWxlV01UU0NvbXBvbmVudCkgfV0sXG59KVxuZXhwb3J0IGNsYXNzIFNvdXJjZVRpbGVXTVRTQ29tcG9uZW50IGV4dGVuZHMgU291cmNlQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCwgT25DaGFuZ2VzIHtcbiAgaW5zdGFuY2U6IHNvdXJjZS5XTVRTO1xuICBASW5wdXQoKVxuICBjYWNoZVNpemU/OiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIGNyb3NzT3JpZ2luPzogc3RyaW5nO1xuICBASW5wdXQoKVxuICBsb2dvPzogc3RyaW5nIHwgb2x4LkxvZ29PcHRpb25zO1xuICBASW5wdXQoKVxuICB0aWxlR3JpZDogdGlsZWdyaWQuV01UUztcbiAgQElucHV0KClcbiAgcHJvamVjdGlvbjogUHJvamVjdGlvbkxpa2U7XG4gIEBJbnB1dCgpXG4gIHJlcHJvamVjdGlvbkVycm9yVGhyZXNob2xkPzogbnVtYmVyO1xuICBASW5wdXQoKVxuICByZXF1ZXN0RW5jb2Rpbmc/OiBzb3VyY2UuV01UU1JlcXVlc3RFbmNvZGluZyB8IHN0cmluZztcbiAgQElucHV0KClcbiAgbGF5ZXI6IHN0cmluZztcbiAgQElucHV0KClcbiAgc3R5bGU6IHN0cmluZztcbiAgQElucHV0KClcbiAgdGlsZUNsYXNzPzogKChcbiAgICBuOiBJbWFnZVRpbGUsXG4gICAgY29vcmRzOiBUaWxlQ29vcmQsXG4gICAgc3RhdGU6IFRpbGUuU3RhdGUsXG4gICAgczE6IHN0cmluZyxcbiAgICBzMjogc3RyaW5nLFxuICAgIHR5cGU6IFRpbGVMb2FkRnVuY3Rpb25UeXBlXG4gICkgPT4gYW55KTtcbiAgQElucHV0KClcbiAgdGlsZVBpeGVsUmF0aW8/OiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHZlcnNpb24/OiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGZvcm1hdD86IHN0cmluZztcbiAgQElucHV0KClcbiAgbWF0cml4U2V0OiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGRpbWVuc2lvbnM/OiBHbG9iYWxPYmplY3Q7XG4gIEBJbnB1dCgpXG4gIHVybD86IHN0cmluZztcbiAgQElucHV0KClcbiAgdGlsZUxvYWRGdW5jdGlvbj86IFRpbGVMb2FkRnVuY3Rpb25UeXBlO1xuICBASW5wdXQoKVxuICB1cmxzPzogc3RyaW5nW107XG4gIEBJbnB1dCgpXG4gIHdyYXBYPzogYm9vbGVhbjtcblxuICBAQ29udGVudENoaWxkKFRpbGVHcmlkV01UU0NvbXBvbmVudClcbiAgdGlsZUdyaWRXTVRTOiBUaWxlR3JpZFdNVFNDb21wb25lbnQ7XG5cbiAgY29uc3RydWN0b3IoQEhvc3QoKSBsYXllcjogTGF5ZXJUaWxlQ29tcG9uZW50KSB7XG4gICAgc3VwZXIobGF5ZXIpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGNvbnN0IHByb3BlcnRpZXM6IHsgW2luZGV4OiBzdHJpbmddOiBhbnkgfSA9IHt9O1xuICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGtleSBpbiBjaGFuZ2VzKSB7XG4gICAgICBpZiAoY2hhbmdlcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIHN3aXRjaCAoa2V5KSB7XG4gICAgICAgICAgY2FzZSAndXJsJzpcbiAgICAgICAgICAgIHRoaXMudXJsID0gY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZTtcbiAgICAgICAgICAgIHRoaXMuc2V0TGF5ZXJTb3VyY2UoKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBwcm9wZXJ0aWVzW2tleV0gPSBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLmluc3RhbmNlLnNldFByb3BlcnRpZXMocHJvcGVydGllcywgZmFsc2UpO1xuICB9XG5cbiAgc2V0TGF5ZXJTb3VyY2UoKTogdm9pZCB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuV01UUyh0aGlzKTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xuICB9XG5cbiAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnRpbGVHcmlkV01UUykge1xuICAgICAgdGhpcy50aWxlR3JpZCA9IHRoaXMudGlsZUdyaWRXTVRTLmluc3RhbmNlO1xuICAgICAgdGhpcy5zZXRMYXllclNvdXJjZSgpO1xuICAgIH1cbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZXdtdHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc291cmNlcy90aWxld210cy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULElBQUksRUFDSixLQUFLLEVBQ0wsVUFBVSxFQUVWLFlBQVksR0FHYixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQXdCLFFBQVEsRUFBa0IsTUFBTSxFQUE4QixNQUFNLFlBQVksQ0FBQztBQUNoSCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFbEU7SUFPNkMsbURBQWU7SUFtRDFELGlDQUFvQixLQUF5QjtlQUMzQyxrQkFBTSxLQUFLLENBQUM7SUFDZCxDQUFDOzs7OztJQUVELDZDQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjs7WUFDMUIsVUFBVSxHQUE2QixFQUFFO1FBQy9DLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbkIsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUNELEdBQUcsQ0FBQyxDQUFDLElBQU0sR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDMUIsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ1osS0FBSyxLQUFLO3dCQUNSLElBQUksQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQzt3QkFDckMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO3dCQUN0QixLQUFLLENBQUM7b0JBQ1I7d0JBQ0UsS0FBSyxDQUFDO2dCQUNWLENBQUM7Z0JBQ0QsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7WUFDOUMsQ0FBQztRQUNILENBQUM7UUFDRCxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDakQsQ0FBQzs7OztJQUVELGdEQUFjOzs7SUFBZDtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELG9EQUFrQjs7O0lBQWxCO1FBQ0UsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7WUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQztZQUMzQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDeEIsQ0FBQztJQUNILENBQUM7O2dCQTdGRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsUUFBUSxFQUFFLHFDQUVUO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSx1QkFBdUIsRUFBdkIsQ0FBdUIsQ0FBQyxFQUFFLENBQUM7aUJBQ2xHOzs7Z0JBVlEsa0JBQWtCLHVCQThEWixJQUFJOzs7NEJBakRoQixLQUFLOzhCQUVMLEtBQUs7dUJBRUwsS0FBSzsyQkFFTCxLQUFLOzZCQUVMLEtBQUs7NkNBRUwsS0FBSztrQ0FFTCxLQUFLO3dCQUVMLEtBQUs7d0JBRUwsS0FBSzs0QkFFTCxLQUFLO2lDQVNMLEtBQUs7MEJBRUwsS0FBSzt5QkFFTCxLQUFLOzRCQUVMLEtBQUs7NkJBRUwsS0FBSztzQkFFTCxLQUFLO21DQUVMLEtBQUs7dUJBRUwsS0FBSzt3QkFFTCxLQUFLOytCQUdMLFlBQVksU0FBQyxxQkFBcUI7O0lBdUNyQyw4QkFBQztDQUFBLEFBOUZELENBTzZDLGVBQWUsR0F1RjNEO1NBdkZZLHVCQUF1Qjs7O0lBQ2xDLDJDQUFzQjs7SUFDdEIsNENBQ21COztJQUNuQiw4Q0FDcUI7O0lBQ3JCLHVDQUNnQzs7SUFDaEMsMkNBQ3dCOztJQUN4Qiw2Q0FDMkI7O0lBQzNCLDZEQUNvQzs7SUFDcEMsa0RBQ3NEOztJQUN0RCx3Q0FDYzs7SUFDZCx3Q0FDYzs7SUFDZCw0Q0FRVTs7SUFDVixpREFDd0I7O0lBQ3hCLDBDQUNpQjs7SUFDakIseUNBQ2dCOztJQUNoQiw0Q0FDa0I7O0lBQ2xCLDZDQUMwQjs7SUFDMUIsc0NBQ2E7O0lBQ2IsbURBQ3dDOztJQUN4Qyx1Q0FDZ0I7O0lBQ2hCLHdDQUNnQjs7SUFFaEIsK0NBQ29DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBDb21wb25lbnQsXHJcbiAgSG9zdCxcclxuICBJbnB1dCxcclxuICBmb3J3YXJkUmVmLFxyXG4gIEFmdGVyQ29udGVudEluaXQsXHJcbiAgQ29udGVudENoaWxkLFxyXG4gIFNpbXBsZUNoYW5nZXMsXHJcbiAgT25DaGFuZ2VzLFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUaWxlTG9hZEZ1bmN0aW9uVHlwZSwgdGlsZWdyaWQsIFByb2plY3Rpb25MaWtlLCBzb3VyY2UsIEltYWdlVGlsZSwgVGlsZUNvb3JkLCBUaWxlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IExheWVyVGlsZUNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcnRpbGUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVGlsZUdyaWRXTVRTQ29tcG9uZW50IH0gZnJvbSAnLi4vdGlsZWdyaWR3bXRzLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtdGlsZXdtdHMnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlVGlsZVdNVFNDb21wb25lbnQpIH1dLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU291cmNlVGlsZVdNVFNDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMge1xyXG4gIGluc3RhbmNlOiBzb3VyY2UuV01UUztcclxuICBASW5wdXQoKVxyXG4gIGNhY2hlU2l6ZT86IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIGNyb3NzT3JpZ2luPzogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgbG9nbz86IHN0cmluZyB8IG9seC5Mb2dvT3B0aW9ucztcclxuICBASW5wdXQoKVxyXG4gIHRpbGVHcmlkOiB0aWxlZ3JpZC5XTVRTO1xyXG4gIEBJbnB1dCgpXHJcbiAgcHJvamVjdGlvbjogUHJvamVjdGlvbkxpa2U7XHJcbiAgQElucHV0KClcclxuICByZXByb2plY3Rpb25FcnJvclRocmVzaG9sZD86IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHJlcXVlc3RFbmNvZGluZz86IHNvdXJjZS5XTVRTUmVxdWVzdEVuY29kaW5nIHwgc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgbGF5ZXI6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIHN0eWxlOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICB0aWxlQ2xhc3M/OiAoKFxyXG4gICAgbjogSW1hZ2VUaWxlLFxyXG4gICAgY29vcmRzOiBUaWxlQ29vcmQsXHJcbiAgICBzdGF0ZTogVGlsZS5TdGF0ZSxcclxuICAgIHMxOiBzdHJpbmcsXHJcbiAgICBzMjogc3RyaW5nLFxyXG4gICAgdHlwZTogVGlsZUxvYWRGdW5jdGlvblR5cGVcclxuICApID0+IGFueSk7XHJcbiAgQElucHV0KClcclxuICB0aWxlUGl4ZWxSYXRpbz86IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHZlcnNpb24/OiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBmb3JtYXQ/OiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBtYXRyaXhTZXQ6IHN0cmluZztcclxuICBASW5wdXQoKVxyXG4gIGRpbWVuc2lvbnM/OiBHbG9iYWxPYmplY3Q7XHJcbiAgQElucHV0KClcclxuICB1cmw/OiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICB0aWxlTG9hZEZ1bmN0aW9uPzogVGlsZUxvYWRGdW5jdGlvblR5cGU7XHJcbiAgQElucHV0KClcclxuICB1cmxzPzogc3RyaW5nW107XHJcbiAgQElucHV0KClcclxuICB3cmFwWD86IGJvb2xlYW47XHJcblxyXG4gIEBDb250ZW50Q2hpbGQoVGlsZUdyaWRXTVRTQ29tcG9uZW50KVxyXG4gIHRpbGVHcmlkV01UUzogVGlsZUdyaWRXTVRTQ29tcG9uZW50O1xyXG5cclxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllclRpbGVDb21wb25lbnQpIHtcclxuICAgIHN1cGVyKGxheWVyKTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGNvbnN0IHByb3BlcnRpZXM6IHsgW2luZGV4OiBzdHJpbmddOiBhbnkgfSA9IHt9O1xyXG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGZvciAoY29uc3Qga2V5IGluIGNoYW5nZXMpIHtcclxuICAgICAgaWYgKGNoYW5nZXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgICAgIHN3aXRjaCAoa2V5KSB7XHJcbiAgICAgICAgICBjYXNlICd1cmwnOlxyXG4gICAgICAgICAgICB0aGlzLnVybCA9IGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWU7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0TGF5ZXJTb3VyY2UoKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgcHJvcGVydGllc1trZXldID0gY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgdGhpcy5pbnN0YW5jZS5zZXRQcm9wZXJ0aWVzKHByb3BlcnRpZXMsIGZhbHNlKTtcclxuICB9XHJcblxyXG4gIHNldExheWVyU291cmNlKCk6IHZvaWQge1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuV01UUyh0aGlzKTtcclxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy50aWxlR3JpZFdNVFMpIHtcclxuICAgICAgdGhpcy50aWxlR3JpZCA9IHRoaXMudGlsZUdyaWRXTVRTLmluc3RhbmNlO1xyXG4gICAgICB0aGlzLnNldExheWVyU291cmNlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/vector.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/vector.component.js
@@ -59,4 +59,4 @@ if (false) {
     /** @type {?} */
     SourceVectorComponent.prototype.strategy;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVjdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvdmVjdG9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBVSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNwQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFckQ7SUFPMkMsaURBQWU7SUFleEQsK0JBQW9CLEtBQTJCO2VBQzdDLGtCQUFNLEtBQUssQ0FBQztJQUNkLENBQUM7Ozs7SUFFRCx3Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7O2dCQTdCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsUUFBUSxFQUFFLHFDQUVUO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxxQkFBcUIsRUFBckIsQ0FBcUIsQ0FBQyxFQUFFLENBQUM7aUJBQ2hHOzs7Z0JBVFEsb0JBQW9CLHVCQXlCZCxJQUFJOzs7MkJBYmhCLEtBQUs7a0NBRUwsS0FBSzt3QkFFTCxLQUFLO3NCQUVMLEtBQUs7eUJBRUwsS0FBSzsyQkFFTCxLQUFLOztJQVdSLDRCQUFDO0NBQUEsQUE5QkQsQ0FPMkMsZUFBZSxHQXVCekQ7U0F2QlkscUJBQXFCOzs7SUFDaEMseUNBQXdCOztJQUN4Qix5Q0FDa0I7O0lBQ2xCLGdEQUN5Qjs7SUFDekIsc0NBQ2U7O0lBQ2Ysb0NBQ1k7O0lBQ1osdUNBQzBCOztJQUMxQix5Q0FDNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBPbkluaXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNvdXJjZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgTGF5ZXJWZWN0b3JDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJ2ZWN0b3IuY29tcG9uZW50JztcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtdmVjdG9yJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VWZWN0b3JDb21wb25lbnQpIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBTb3VyY2VWZWN0b3JDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBpbnN0YW5jZTogc291cmNlLlZlY3RvcjtcbiAgQElucHV0KClcbiAgb3ZlcmxhcHM6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIHVzZVNwYXRpYWxJbmRleDogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgd3JhcFg6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIHVybDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBmb3JtYXQ6IG9sLmZvcm1hdC5GZWF0dXJlO1xuICBASW5wdXQoKVxuICBzdHJhdGVneTogb2wuTG9hZGluZ1N0cmF0ZWd5O1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVyVmVjdG9yQ29tcG9uZW50KSB7XG4gICAgc3VwZXIobGF5ZXIpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuVmVjdG9yKHRoaXMpO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVjdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMvdmVjdG9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBVSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNwQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFckQ7SUFPMkMsaURBQWU7SUFleEQsK0JBQW9CLEtBQTJCO2VBQzdDLGtCQUFNLEtBQUssQ0FBQztJQUNkLENBQUM7Ozs7SUFFRCx3Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7O2dCQTdCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsUUFBUSxFQUFFLHFDQUVUO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxxQkFBcUIsRUFBckIsQ0FBcUIsQ0FBQyxFQUFFLENBQUM7aUJBQ2hHOzs7Z0JBVFEsb0JBQW9CLHVCQXlCZCxJQUFJOzs7MkJBYmhCLEtBQUs7a0NBRUwsS0FBSzt3QkFFTCxLQUFLO3NCQUVMLEtBQUs7eUJBRUwsS0FBSzsyQkFFTCxLQUFLOztJQVdSLDRCQUFDO0NBQUEsQUE5QkQsQ0FPMkMsZUFBZSxHQXVCekQ7U0F2QlkscUJBQXFCOzs7SUFDaEMseUNBQXdCOztJQUN4Qix5Q0FDa0I7O0lBQ2xCLGdEQUN5Qjs7SUFDekIsc0NBQ2U7O0lBQ2Ysb0NBQ1k7O0lBQ1osdUNBQzBCOztJQUMxQix5Q0FDNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIElucHV0LCBPbkluaXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc291cmNlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IExheWVyVmVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydmVjdG9yLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtdmVjdG9yJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZVZlY3RvckNvbXBvbmVudCkgfV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3VyY2VWZWN0b3JDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIGluc3RhbmNlOiBzb3VyY2UuVmVjdG9yO1xyXG4gIEBJbnB1dCgpXHJcbiAgb3ZlcmxhcHM6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICB1c2VTcGF0aWFsSW5kZXg6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICB3cmFwWDogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIHVybDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgZm9ybWF0OiBvbC5mb3JtYXQuRmVhdHVyZTtcclxuICBASW5wdXQoKVxyXG4gIHN0cmF0ZWd5OiBvbC5Mb2FkaW5nU3RyYXRlZ3k7XHJcblxyXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVyVmVjdG9yQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihsYXllcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc291cmNlLlZlY3Rvcih0aGlzKTtcclxuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTb3VyY2UodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/vectortile.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/vectortile.component.js
@@ -83,4 +83,4 @@ if (false) {
     /** @type {?} */
     SourceVectorTileComponent.prototype.tileGrid;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVjdG9ydGlsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL3ZlY3RvcnRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBQ25HLE9BQU8sRUFBRSxNQUFNLEVBQXlELE1BQU0sWUFBWSxDQUFDO0FBQzNGLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFckQ7SUFPK0MscURBQWU7SUEwQjVELG1DQUFvQixLQUErQjtlQUNqRCxrQkFBTSxLQUFLLENBQUM7SUFDZCxDQUFDO0lBRUQsbURBQW1EOzs7OztJQUNuRCxzREFBa0I7Ozs7SUFBbEI7UUFDRSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDO1FBQzVDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsQ0FBQztRQUNoRCxxRUFBcUU7UUFDckUsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOztnQkE1Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLFFBQVEsRUFBRSxxQ0FFVDtvQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEseUJBQXlCLEVBQXpCLENBQXlCLENBQUMsRUFBRSxDQUFDO2lCQUNwRzs7O2dCQVhRLHdCQUF3Qix1QkFzQ2xCLElBQUk7Ozs0QkF4QmhCLEtBQUs7MkJBRUwsS0FBSzs2QkFFTCxLQUFLO2lDQUVMLEtBQUs7a0NBRUwsS0FBSztzQkFFTCxLQUFLO3VCQUVMLEtBQUs7d0JBRUwsS0FBSztrQ0FHTCxZQUFZLFNBQUMsZUFBZTtvQ0FHNUIsWUFBWSxTQUFDLGlCQUFpQjs7SUFnQmpDLGdDQUFDO0NBQUEsQUE3Q0QsQ0FPK0MsZUFBZSxHQXNDN0Q7U0F0Q1kseUJBQXlCOzs7SUFDcEMsNkNBQW1DOztJQUNuQyw4Q0FDa0I7O0lBQ2xCLDZDQUNrQjs7SUFDbEIsK0NBQzJCOztJQUMzQixtREFDdUI7O0lBQ3ZCLG9EQUNxQzs7SUFDckMsd0NBQ1k7O0lBQ1oseUNBQ2U7O0lBQ2YsMENBQ2U7O0lBRWYsb0RBQ2lDOztJQUNqQywyQ0FBdUI7O0lBQ3ZCLHNEQUNxQzs7SUFDckMsNkNBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgZm9yd2FyZFJlZiwgQ29udGVudENoaWxkLCBBZnRlckNvbnRlbnRJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzb3VyY2UsIFByb2plY3Rpb25MaWtlLCBUaWxlVXJsRnVuY3Rpb25UeXBlLCBmb3JtYXQsIHRpbGVncmlkIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBMYXllclZlY3RvclRpbGVDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJ2ZWN0b3J0aWxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb3JtYXRDb21wb25lbnQgfSBmcm9tICcuLi9mb3JtYXRzL2Zvcm1hdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGlsZUdyaWRDb21wb25lbnQgfSBmcm9tICcuLi90aWxlZ3JpZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgU291cmNlQ29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS12ZWN0b3J0aWxlJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VWZWN0b3JUaWxlQ29tcG9uZW50KSB9XSxcbn0pXG5leHBvcnQgY2xhc3MgU291cmNlVmVjdG9yVGlsZUNvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xuICBwdWJsaWMgaW5zdGFuY2U6IHNvdXJjZS5WZWN0b3JUaWxlO1xuICBASW5wdXQoKVxuICBjYWNoZVNpemU6IG51bWJlcjtcbiAgQElucHV0KClcbiAgb3ZlcmxhcHM6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIHByb2plY3Rpb246IFByb2plY3Rpb25MaWtlO1xuICBASW5wdXQoKVxuICB0aWxlUGl4ZWxSYXRpbzogbnVtYmVyO1xuICBASW5wdXQoKVxuICB0aWxlVXJsRnVuY3Rpb246IFRpbGVVcmxGdW5jdGlvblR5cGU7XG4gIEBJbnB1dCgpXG4gIHVybDogc3RyaW5nO1xuICBASW5wdXQoKVxuICB1cmxzOiBzdHJpbmdbXTtcbiAgQElucHV0KClcbiAgd3JhcFg6IGJvb2xlYW47XG5cbiAgQENvbnRlbnRDaGlsZChGb3JtYXRDb21wb25lbnQpXG4gIGZvcm1hdENvbXBvbmVudDogRm9ybWF0Q29tcG9uZW50O1xuICBmb3JtYXQ6IGZvcm1hdC5GZWF0dXJlO1xuICBAQ29udGVudENoaWxkKFRpbGVHcmlkQ29tcG9uZW50KVxuICB0aWxlR3JpZENvbXBvbmVudDogVGlsZUdyaWRDb21wb25lbnQ7XG4gIHRpbGVHcmlkOiB0aWxlZ3JpZC5UaWxlR3JpZDtcblxuICBjb25zdHJ1Y3RvcihASG9zdCgpIGxheWVyOiBMYXllclZlY3RvclRpbGVDb21wb25lbnQpIHtcbiAgICBzdXBlcihsYXllcik7XG4gIH1cblxuICAvKiBuZWVkIHRoZSBjaGlsZHJlbiB0byBjb25zdHJ1Y3QgdGhlIE9MMyBvYmplY3QgKi9cbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICAgIHRoaXMuZm9ybWF0ID0gdGhpcy5mb3JtYXRDb21wb25lbnQuaW5zdGFuY2U7XG4gICAgdGhpcy50aWxlR3JpZCA9IHRoaXMudGlsZUdyaWRDb21wb25lbnQuaW5zdGFuY2U7XG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIG9sLnNvdXJjZS5WZWN0b3JUaWxlIGluc3RhbmNlIHdpdGg6JywgdGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzb3VyY2UuVmVjdG9yVGlsZSh0aGlzKTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U291cmNlKHRoaXMuaW5zdGFuY2UpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVjdG9ydGlsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL3ZlY3RvcnRpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBQ25HLE9BQU8sRUFBRSxNQUFNLEVBQXlELE1BQU0sWUFBWSxDQUFDO0FBQzNGLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFckQ7SUFPK0MscURBQWU7SUEwQjVELG1DQUFvQixLQUErQjtlQUNqRCxrQkFBTSxLQUFLLENBQUM7SUFDZCxDQUFDO0lBRUQsbURBQW1EOzs7OztJQUNuRCxzREFBa0I7Ozs7SUFBbEI7UUFDRSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDO1FBQzVDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsQ0FBQztRQUNoRCxxRUFBcUU7UUFDckUsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDOztnQkE1Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLFFBQVEsRUFBRSxxQ0FFVDtvQkFDRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEseUJBQXlCLEVBQXpCLENBQXlCLENBQUMsRUFBRSxDQUFDO2lCQUNwRzs7O2dCQVhRLHdCQUF3Qix1QkFzQ2xCLElBQUk7Ozs0QkF4QmhCLEtBQUs7MkJBRUwsS0FBSzs2QkFFTCxLQUFLO2lDQUVMLEtBQUs7a0NBRUwsS0FBSztzQkFFTCxLQUFLO3VCQUVMLEtBQUs7d0JBRUwsS0FBSztrQ0FHTCxZQUFZLFNBQUMsZUFBZTtvQ0FHNUIsWUFBWSxTQUFDLGlCQUFpQjs7SUFnQmpDLGdDQUFDO0NBQUEsQUE3Q0QsQ0FPK0MsZUFBZSxHQXNDN0Q7U0F0Q1kseUJBQXlCOzs7SUFDcEMsNkNBQW1DOztJQUNuQyw4Q0FDa0I7O0lBQ2xCLDZDQUNrQjs7SUFDbEIsK0NBQzJCOztJQUMzQixtREFDdUI7O0lBQ3ZCLG9EQUNxQzs7SUFDckMsd0NBQ1k7O0lBQ1oseUNBQ2U7O0lBQ2YsMENBQ2U7O0lBRWYsb0RBQ2lDOztJQUNqQywyQ0FBdUI7O0lBQ3ZCLHNEQUNxQzs7SUFDckMsNkNBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0LCBJbnB1dCwgZm9yd2FyZFJlZiwgQ29udGVudENoaWxkLCBBZnRlckNvbnRlbnRJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHNvdXJjZSwgUHJvamVjdGlvbkxpa2UsIFRpbGVVcmxGdW5jdGlvblR5cGUsIGZvcm1hdCwgdGlsZWdyaWQgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTGF5ZXJWZWN0b3JUaWxlQ29tcG9uZW50IH0gZnJvbSAnLi4vbGF5ZXJzL2xheWVydmVjdG9ydGlsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBGb3JtYXRDb21wb25lbnQgfSBmcm9tICcuLi9mb3JtYXRzL2Zvcm1hdC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBUaWxlR3JpZENvbXBvbmVudCB9IGZyb20gJy4uL3RpbGVncmlkLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zb3VyY2UtdmVjdG9ydGlsZScsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuICBgLFxyXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogU291cmNlQ29tcG9uZW50LCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb3VyY2VWZWN0b3JUaWxlQ29tcG9uZW50KSB9XSxcclxufSlcclxuZXhwb3J0IGNsYXNzIFNvdXJjZVZlY3RvclRpbGVDb21wb25lbnQgZXh0ZW5kcyBTb3VyY2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcclxuICBwdWJsaWMgaW5zdGFuY2U6IHNvdXJjZS5WZWN0b3JUaWxlO1xyXG4gIEBJbnB1dCgpXHJcbiAgY2FjaGVTaXplOiBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBvdmVybGFwczogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIHByb2plY3Rpb246IFByb2plY3Rpb25MaWtlO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlsZVBpeGVsUmF0aW86IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHRpbGVVcmxGdW5jdGlvbjogVGlsZVVybEZ1bmN0aW9uVHlwZTtcclxuICBASW5wdXQoKVxyXG4gIHVybDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgdXJsczogc3RyaW5nW107XHJcbiAgQElucHV0KClcclxuICB3cmFwWDogYm9vbGVhbjtcclxuXHJcbiAgQENvbnRlbnRDaGlsZChGb3JtYXRDb21wb25lbnQpXHJcbiAgZm9ybWF0Q29tcG9uZW50OiBGb3JtYXRDb21wb25lbnQ7XHJcbiAgZm9ybWF0OiBmb3JtYXQuRmVhdHVyZTtcclxuICBAQ29udGVudENoaWxkKFRpbGVHcmlkQ29tcG9uZW50KVxyXG4gIHRpbGVHcmlkQ29tcG9uZW50OiBUaWxlR3JpZENvbXBvbmVudDtcclxuICB0aWxlR3JpZDogdGlsZWdyaWQuVGlsZUdyaWQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgbGF5ZXI6IExheWVyVmVjdG9yVGlsZUNvbXBvbmVudCkge1xyXG4gICAgc3VwZXIobGF5ZXIpO1xyXG4gIH1cclxuXHJcbiAgLyogbmVlZCB0aGUgY2hpbGRyZW4gdG8gY29uc3RydWN0IHRoZSBPTDMgb2JqZWN0ICovXHJcbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xyXG4gICAgdGhpcy5mb3JtYXQgPSB0aGlzLmZvcm1hdENvbXBvbmVudC5pbnN0YW5jZTtcclxuICAgIHRoaXMudGlsZUdyaWQgPSB0aGlzLnRpbGVHcmlkQ29tcG9uZW50Lmluc3RhbmNlO1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIG9sLnNvdXJjZS5WZWN0b3JUaWxlIGluc3RhbmNlIHdpdGg6JywgdGhpcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5WZWN0b3JUaWxlKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFNvdXJjZSh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/sources/xyz.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/sources/xyz.component.js
@@ -120,4 +120,4 @@ if (false) {
     /** @type {?} */
     SourceXYZComponent.prototype.tileGridXYZ;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieHl6LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMveHl6LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsSUFBSSxFQUNKLEtBQUssRUFFTCxVQUFVLEVBRVYsWUFBWSxFQUVaLFFBQVEsR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsTUFBTSxFQUFtRCxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDL0YsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRTNEO0lBT3dDLDhDQUFlO0lBb0NyRCw0QkFHRSxLQUF5QixFQUd6QixNQUE4QjtlQUU5QixrQkFBTSxLQUFLLEVBQUUsTUFBTSxDQUFDO0lBQ3RCLENBQUM7Ozs7SUFFRCwrQ0FBa0I7OztJQUFsQjtRQUNFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBQ3JCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUM7UUFDNUMsQ0FBQztRQUNELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7Ozs7O0lBRUQsd0NBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCOztZQUMxQixVQUFVLEdBQTZCLEVBQUU7UUFFL0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUMsSUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztZQUMxQixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7WUFDOUMsQ0FBQztRQUNILENBQUM7UUFFRCxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDL0MsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDaEMsQ0FBQztJQUNILENBQUM7O2dCQS9FRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFLHFDQUVUO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxrQkFBa0IsRUFBbEIsQ0FBa0IsQ0FBQyxFQUFFLENBQUM7aUJBQzdGOzs7Z0JBWFEsa0JBQWtCLHVCQWlEdEIsUUFBUSxZQUNSLElBQUk7Z0JBL0NBLHFCQUFxQix1QkFpRHpCLFFBQVEsWUFDUixJQUFJOzs7NEJBdkNOLEtBQUs7OEJBRUwsS0FBSzt5QkFFTCxLQUFLOzZCQUVMLEtBQUs7NkNBRUwsS0FBSzswQkFFTCxLQUFLOzBCQUVMLEtBQUs7MkJBRUwsS0FBSzttQ0FFTCxLQUFLO2lDQUVMLEtBQUs7MkJBRUwsS0FBSztrQ0FFTCxLQUFLO3NCQUVMLEtBQUs7dUJBRUwsS0FBSzt3QkFFTCxLQUFLOzhCQUdMLFlBQVksU0FBQyxpQkFBaUI7O0lBd0NqQyx5QkFBQztDQUFBLEFBaEZELENBT3dDLGVBQWUsR0F5RXREO1NBekVZLGtCQUFrQjs7O0lBQzdCLHNDQUFxQjs7SUFDckIsdUNBQ2tCOztJQUNsQix5Q0FDb0I7O0lBQ3BCLG9DQUNnQjs7SUFDaEIsd0NBQ21COztJQUNuQix3REFDbUM7O0lBQ25DLHFDQUNnQjs7SUFDaEIscUNBQ2dCOztJQUNoQixzQ0FDNEI7O0lBQzVCLDhDQUN3Qzs7SUFDeEMsNENBQ3VCOztJQUN2QixzQ0FDd0I7O0lBQ3hCLDZDQUNxQzs7SUFDckMsaUNBQ1k7O0lBQ1osa0NBQ2U7O0lBQ2YsbUNBQ2U7O0lBRWYseUNBQytCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBIb3N0LFxuICBJbnB1dCxcbiAgQWZ0ZXJDb250ZW50SW5pdCxcbiAgZm9yd2FyZFJlZixcbiAgT25DaGFuZ2VzLFxuICBDb250ZW50Q2hpbGQsXG4gIFNpbXBsZUNoYW5nZXMsXG4gIE9wdGlvbmFsLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNvdXJjZSwgU2l6ZSwgVGlsZVVybEZ1bmN0aW9uVHlwZSwgVGlsZUxvYWRGdW5jdGlvblR5cGUsIHRpbGVncmlkIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBMYXllclRpbGVDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJ0aWxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb3VyY2VDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGlsZUdyaWRDb21wb25lbnQgfSBmcm9tICcuLi90aWxlZ3JpZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgU291cmNlUmFzdGVyQ29tcG9uZW50IH0gZnJvbSAnLi9yYXN0ZXIuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS14eXonLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTb3VyY2VDb21wb25lbnQsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNvdXJjZVhZWkNvbXBvbmVudCkgfV0sXG59KVxuZXhwb3J0IGNsYXNzIFNvdXJjZVhZWkNvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcyB7XG4gIGluc3RhbmNlOiBzb3VyY2UuWFlaO1xuICBASW5wdXQoKVxuICBjYWNoZVNpemU6IG51bWJlcjtcbiAgQElucHV0KClcbiAgY3Jvc3NPcmlnaW46IHN0cmluZztcbiAgQElucHV0KClcbiAgb3BhcXVlOiBib29sZWFuO1xuICBASW5wdXQoKVxuICBwcm9qZWN0aW9uOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHJlcHJvamVjdGlvbkVycm9yVGhyZXNob2xkOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIG1pblpvb206IG51bWJlcjtcbiAgQElucHV0KClcbiAgbWF4Wm9vbTogbnVtYmVyO1xuICBASW5wdXQoKVxuICB0aWxlR3JpZDogdGlsZWdyaWQuVGlsZUdyaWQ7XG4gIEBJbnB1dCgpXG4gIHRpbGVMb2FkRnVuY3Rpb24/OiBUaWxlTG9hZEZ1bmN0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgdGlsZVBpeGVsUmF0aW86IG51bWJlcjtcbiAgQElucHV0KClcbiAgdGlsZVNpemU6IG51bWJlciB8IFNpemU7XG4gIEBJbnB1dCgpXG4gIHRpbGVVcmxGdW5jdGlvbjogVGlsZVVybEZ1bmN0aW9uVHlwZTtcbiAgQElucHV0KClcbiAgdXJsOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIHVybHM6IHN0cmluZ1tdO1xuICBASW5wdXQoKVxuICB3cmFwWDogYm9vbGVhbjtcblxuICBAQ29udGVudENoaWxkKFRpbGVHcmlkQ29tcG9uZW50KVxuICB0aWxlR3JpZFhZWjogVGlsZUdyaWRDb21wb25lbnQ7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQE9wdGlvbmFsKClcbiAgICBASG9zdCgpXG4gICAgbGF5ZXI6IExheWVyVGlsZUNvbXBvbmVudCxcbiAgICBAT3B0aW9uYWwoKVxuICAgIEBIb3N0KClcbiAgICByYXN0ZXI/OiBTb3VyY2VSYXN0ZXJDb21wb25lbnRcbiAgKSB7XG4gICAgc3VwZXIobGF5ZXIsIHJhc3Rlcik7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgaWYgKHRoaXMudGlsZUdyaWRYWVopIHtcbiAgICAgIHRoaXMudGlsZUdyaWQgPSB0aGlzLnRpbGVHcmlkWFlaLmluc3RhbmNlO1xuICAgIH1cbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5YWVoodGhpcyk7XG4gICAgdGhpcy5fcmVnaXN0ZXIodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgY29uc3QgcHJvcGVydGllczogeyBbaW5kZXg6IHN0cmluZ106IGFueSB9ID0ge307XG5cbiAgICBpZiAoIXRoaXMuaW5zdGFuY2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yIChjb25zdCBrZXkgaW4gY2hhbmdlcykge1xuICAgICAgaWYgKGNoYW5nZXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICBwcm9wZXJ0aWVzW2tleV0gPSBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuaW5zdGFuY2Uuc2V0UHJvcGVydGllcyhwcm9wZXJ0aWVzLCBmYWxzZSk7XG4gICAgaWYgKGNoYW5nZXMuaGFzT3duUHJvcGVydHkoJ3VybCcpKSB7XG4gICAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5YWVoodGhpcyk7XG4gICAgICB0aGlzLl9yZWdpc3Rlcih0aGlzLmluc3RhbmNlKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieHl6LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3NvdXJjZXMveHl6LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsSUFBSSxFQUNKLEtBQUssRUFFTCxVQUFVLEVBRVYsWUFBWSxFQUVaLFFBQVEsR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsTUFBTSxFQUFtRCxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDL0YsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRTNEO0lBT3dDLDhDQUFlO0lBb0NyRCw0QkFHRSxLQUF5QixFQUd6QixNQUE4QjtlQUU5QixrQkFBTSxLQUFLLEVBQUUsTUFBTSxDQUFDO0lBQ3RCLENBQUM7Ozs7SUFFRCwrQ0FBa0I7OztJQUFsQjtRQUNFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBQ3JCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUM7UUFDNUMsQ0FBQztRQUNELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7Ozs7O0lBRUQsd0NBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCOztZQUMxQixVQUFVLEdBQTZCLEVBQUU7UUFFL0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUMsSUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztZQUMxQixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7WUFDOUMsQ0FBQztRQUNILENBQUM7UUFFRCxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDL0MsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDaEMsQ0FBQztJQUNILENBQUM7O2dCQS9FRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFLHFDQUVUO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxrQkFBa0IsRUFBbEIsQ0FBa0IsQ0FBQyxFQUFFLENBQUM7aUJBQzdGOzs7Z0JBWFEsa0JBQWtCLHVCQWlEdEIsUUFBUSxZQUNSLElBQUk7Z0JBL0NBLHFCQUFxQix1QkFpRHpCLFFBQVEsWUFDUixJQUFJOzs7NEJBdkNOLEtBQUs7OEJBRUwsS0FBSzt5QkFFTCxLQUFLOzZCQUVMLEtBQUs7NkNBRUwsS0FBSzswQkFFTCxLQUFLOzBCQUVMLEtBQUs7MkJBRUwsS0FBSzttQ0FFTCxLQUFLO2lDQUVMLEtBQUs7MkJBRUwsS0FBSztrQ0FFTCxLQUFLO3NCQUVMLEtBQUs7dUJBRUwsS0FBSzt3QkFFTCxLQUFLOzhCQUdMLFlBQVksU0FBQyxpQkFBaUI7O0lBd0NqQyx5QkFBQztDQUFBLEFBaEZELENBT3dDLGVBQWUsR0F5RXREO1NBekVZLGtCQUFrQjs7O0lBQzdCLHNDQUFxQjs7SUFDckIsdUNBQ2tCOztJQUNsQix5Q0FDb0I7O0lBQ3BCLG9DQUNnQjs7SUFDaEIsd0NBQ21COztJQUNuQix3REFDbUM7O0lBQ25DLHFDQUNnQjs7SUFDaEIscUNBQ2dCOztJQUNoQixzQ0FDNEI7O0lBQzVCLDhDQUN3Qzs7SUFDeEMsNENBQ3VCOztJQUN2QixzQ0FDd0I7O0lBQ3hCLDZDQUNxQzs7SUFDckMsaUNBQ1k7O0lBQ1osa0NBQ2U7O0lBQ2YsbUNBQ2U7O0lBRWYseUNBQytCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBDb21wb25lbnQsXHJcbiAgSG9zdCxcclxuICBJbnB1dCxcclxuICBBZnRlckNvbnRlbnRJbml0LFxyXG4gIGZvcndhcmRSZWYsXHJcbiAgT25DaGFuZ2VzLFxyXG4gIENvbnRlbnRDaGlsZCxcclxuICBTaW1wbGVDaGFuZ2VzLFxyXG4gIE9wdGlvbmFsLFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBzb3VyY2UsIFNpemUsIFRpbGVVcmxGdW5jdGlvblR5cGUsIFRpbGVMb2FkRnVuY3Rpb25UeXBlLCB0aWxlZ3JpZCB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBMYXllclRpbGVDb21wb25lbnQgfSBmcm9tICcuLi9sYXllcnMvbGF5ZXJ0aWxlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNvdXJjZUNvbXBvbmVudCB9IGZyb20gJy4vc291cmNlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFRpbGVHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi4vdGlsZWdyaWQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU291cmNlUmFzdGVyQ29tcG9uZW50IH0gZnJvbSAnLi9yYXN0ZXIuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLXNvdXJjZS14eXonLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFNvdXJjZUNvbXBvbmVudCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU291cmNlWFlaQ29tcG9uZW50KSB9XSxcclxufSlcclxuZXhwb3J0IGNsYXNzIFNvdXJjZVhZWkNvbXBvbmVudCBleHRlbmRzIFNvdXJjZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgaW5zdGFuY2U6IHNvdXJjZS5YWVo7XHJcbiAgQElucHV0KClcclxuICBjYWNoZVNpemU6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIGNyb3NzT3JpZ2luOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICBvcGFxdWU6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICBwcm9qZWN0aW9uOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICByZXByb2plY3Rpb25FcnJvclRocmVzaG9sZDogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWluWm9vbTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWF4Wm9vbTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlsZUdyaWQ6IHRpbGVncmlkLlRpbGVHcmlkO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlsZUxvYWRGdW5jdGlvbj86IFRpbGVMb2FkRnVuY3Rpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlsZVBpeGVsUmF0aW86IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHRpbGVTaXplOiBudW1iZXIgfCBTaXplO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlsZVVybEZ1bmN0aW9uOiBUaWxlVXJsRnVuY3Rpb25UeXBlO1xyXG4gIEBJbnB1dCgpXHJcbiAgdXJsOiBzdHJpbmc7XHJcbiAgQElucHV0KClcclxuICB1cmxzOiBzdHJpbmdbXTtcclxuICBASW5wdXQoKVxyXG4gIHdyYXBYOiBib29sZWFuO1xyXG5cclxuICBAQ29udGVudENoaWxkKFRpbGVHcmlkQ29tcG9uZW50KVxyXG4gIHRpbGVHcmlkWFlaOiBUaWxlR3JpZENvbXBvbmVudDtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBAT3B0aW9uYWwoKVxyXG4gICAgQEhvc3QoKVxyXG4gICAgbGF5ZXI6IExheWVyVGlsZUNvbXBvbmVudCxcclxuICAgIEBPcHRpb25hbCgpXHJcbiAgICBASG9zdCgpXHJcbiAgICByYXN0ZXI/OiBTb3VyY2VSYXN0ZXJDb21wb25lbnRcclxuICApIHtcclxuICAgIHN1cGVyKGxheWVyLCByYXN0ZXIpO1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xyXG4gICAgaWYgKHRoaXMudGlsZUdyaWRYWVopIHtcclxuICAgICAgdGhpcy50aWxlR3JpZCA9IHRoaXMudGlsZUdyaWRYWVouaW5zdGFuY2U7XHJcbiAgICB9XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5YWVoodGhpcyk7XHJcbiAgICB0aGlzLl9yZWdpc3Rlcih0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGNvbnN0IHByb3BlcnRpZXM6IHsgW2luZGV4OiBzdHJpbmddOiBhbnkgfSA9IHt9O1xyXG5cclxuICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBjaGFuZ2VzKSB7XHJcbiAgICAgIGlmIChjaGFuZ2VzLmhhc093blByb3BlcnR5KGtleSkpIHtcclxuICAgICAgICBwcm9wZXJ0aWVzW2tleV0gPSBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5pbnN0YW5jZS5zZXRQcm9wZXJ0aWVzKHByb3BlcnRpZXMsIGZhbHNlKTtcclxuICAgIGlmIChjaGFuZ2VzLmhhc093blByb3BlcnR5KCd1cmwnKSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlID0gbmV3IHNvdXJjZS5YWVoodGhpcyk7XHJcbiAgICAgIHRoaXMuX3JlZ2lzdGVyKHRoaXMuaW5zdGFuY2UpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/styles/circle.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/styles/circle.component.js
@@ -113,4 +113,4 @@ if (false) {
      */
     StyleCircleComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2lyY2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3N0eWxlcy9jaXJjbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQXlELE1BQU0sZUFBZSxDQUFDO0FBQzlHLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbkMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRW5EO0lBcUJFLDhCQUE0QixJQUFvQjtRQUFwQixTQUFJLEdBQUosSUFBSSxDQUFnQjtRQWR6QyxrQkFBYSxHQUFHLGNBQWMsQ0FBQztJQWNhLENBQUM7SUFFcEQ7Ozs7T0FJRzs7Ozs7OztJQUNILHFDQUFNOzs7Ozs7SUFBTjtRQUNFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNwQiw2REFBNkQ7WUFDN0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZDLENBQUM7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFRCxpREFBa0I7OztJQUFsQjtRQUNFLGlFQUFpRTtRQUNqRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDckIsQ0FBQzs7Ozs7SUFFRCwwQ0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0QixJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDMUQsQ0FBQztRQUNELDZHQUE2RztJQUMvRyxDQUFDOzs7O0lBRUQsMENBQVc7OztJQUFYO1FBQ0UsNENBQTRDO1FBQzVDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwQyxDQUFDOztnQkF4REYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLFFBQVEsRUFBRSxxQ0FFVDtpQkFDRjs7O2dCQVBRLGNBQWMsdUJBdUJSLElBQUk7Ozt1QkFYaEIsS0FBSzt5QkFFTCxLQUFLOzhCQUVMLEtBQUs7eUJBRUwsS0FBSzsrQkFFTCxLQUFLOztJQXVDUiwyQkFBQztDQUFBLEFBekRELElBeURDO1NBbkRZLG9CQUFvQjs7O0lBQy9CLDZDQUFzQzs7SUFDdEMsd0NBQThCOztJQUU5QixvQ0FDaUI7O0lBQ2pCLHNDQUNlOztJQUNmLDJDQUNxQjs7SUFDckIsc0NBQ3FCOztJQUNyQiw0Q0FDaUM7Ozs7O0lBRXJCLG9DQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEhvc3QsIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzdHlsZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgU3R5bGVDb21wb25lbnQgfSBmcm9tICcuL3N0eWxlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zdHlsZS1jaXJjbGUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgU3R5bGVDaXJjbGVDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ3N0eWxlLWNpcmNsZSc7XG4gIHB1YmxpYyBpbnN0YW5jZTogc3R5bGUuQ2lyY2xlO1xuXG4gIEBJbnB1dCgpXG4gIGZpbGw6IHN0eWxlLkZpbGw7XG4gIEBJbnB1dCgpXG4gIHJhZGl1czogbnVtYmVyO1xuICBASW5wdXQoKVxuICBzbmFwVG9QaXhlbDogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgc3Ryb2tlOiBzdHlsZS5TdHJva2U7XG4gIEBJbnB1dCgpXG4gIGF0bGFzTWFuYWdlcjogc3R5bGUuQXRsYXNNYW5hZ2VyO1xuXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgcHJpdmF0ZSBob3N0OiBTdHlsZUNvbXBvbmVudCkge31cblxuICAvKipcbiAgICogV09SSy1BUk9VTkQ6IHNpbmNlIHRoZSByZS1yZW5kZXJpbmcgaXMgbm90IHRyaWdnZXJlZCBvbiBzdHlsZSBjaGFuZ2VcbiAgICogd2UgdHJpZ2dlciBhIHJhZGl1cyBjaGFuZ2UuXG4gICAqIHNlZSBvcGVubGF5ZXJzICM2MjMzIGFuZCAjNTc3NVxuICAgKi9cbiAgdXBkYXRlKCkge1xuICAgIGlmICghIXRoaXMuaW5zdGFuY2UpIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdzZXR0aW5nIG9sLnN0eWxlLkNpcmNsZSBpbnN0YW5jZVxcJ3MgcmFkaXVzJyk7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldFJhZGl1cyh0aGlzLnJhZGl1cyk7XG4gICAgfVxuICAgIHRoaXMuaG9zdC51cGRhdGUoKTtcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgb2wuc3R5bGUuQ2lyY2xlIGluc3RhbmNlIHdpdGg6ICcsIHRoaXMpO1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc3R5bGUuQ2lyY2xlKHRoaXMpO1xuICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRJbWFnZSh0aGlzLmluc3RhbmNlKTtcbiAgICB0aGlzLmhvc3QudXBkYXRlKCk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydyYWRpdXMnXSkge1xuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRSYWRpdXMoY2hhbmdlc1sncmFkaXVzJ10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXN0eWxlLWNpcmNsZSwgc2V0dGluZyBuZXcgcmFkaXVzOiAnLCBjaGFuZ2VzWydyYWRpdXMnXS5jdXJyZW50VmFsdWUpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC1zdHlsZS1jaXJjbGUnKTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0SW1hZ2UobnVsbCk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2lyY2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3N0eWxlcy9jaXJjbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQXlELE1BQU0sZUFBZSxDQUFDO0FBQzlHLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbkMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRW5EO0lBcUJFLDhCQUE0QixJQUFvQjtRQUFwQixTQUFJLEdBQUosSUFBSSxDQUFnQjtRQWR6QyxrQkFBYSxHQUFHLGNBQWMsQ0FBQztJQWNhLENBQUM7SUFFcEQ7Ozs7T0FJRzs7Ozs7OztJQUNILHFDQUFNOzs7Ozs7SUFBTjtRQUNFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNwQiw2REFBNkQ7WUFDN0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZDLENBQUM7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFRCxpREFBa0I7OztJQUFsQjtRQUNFLGlFQUFpRTtRQUNqRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDckIsQ0FBQzs7Ozs7SUFFRCwwQ0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0QixJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDMUQsQ0FBQztRQUNELDZHQUE2RztJQUMvRyxDQUFDOzs7O0lBRUQsMENBQVc7OztJQUFYO1FBQ0UsNENBQTRDO1FBQzVDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwQyxDQUFDOztnQkF4REYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLFFBQVEsRUFBRSxxQ0FFVDtpQkFDRjs7O2dCQVBRLGNBQWMsdUJBdUJSLElBQUk7Ozt1QkFYaEIsS0FBSzt5QkFFTCxLQUFLOzhCQUVMLEtBQUs7eUJBRUwsS0FBSzsrQkFFTCxLQUFLOztJQXVDUiwyQkFBQztDQUFBLEFBekRELElBeURDO1NBbkRZLG9CQUFvQjs7O0lBQy9CLDZDQUFzQzs7SUFDdEMsd0NBQThCOztJQUU5QixvQ0FDaUI7O0lBQ2pCLHNDQUNlOztJQUNmLDJDQUNxQjs7SUFDckIsc0NBQ3FCOztJQUNyQiw0Q0FDaUM7Ozs7O0lBRXJCLG9DQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEhvc3QsIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHN0eWxlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IFN0eWxlQ29tcG9uZW50IH0gZnJvbSAnLi9zdHlsZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc3R5bGUtY2lyY2xlJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTdHlsZUNpcmNsZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcclxuICBwdWJsaWMgY29tcG9uZW50VHlwZSA9ICdzdHlsZS1jaXJjbGUnO1xyXG4gIHB1YmxpYyBpbnN0YW5jZTogc3R5bGUuQ2lyY2xlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGZpbGw6IHN0eWxlLkZpbGw7XHJcbiAgQElucHV0KClcclxuICByYWRpdXM6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHNuYXBUb1BpeGVsOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgc3Ryb2tlOiBzdHlsZS5TdHJva2U7XHJcbiAgQElucHV0KClcclxuICBhdGxhc01hbmFnZXI6IHN0eWxlLkF0bGFzTWFuYWdlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoQEhvc3QoKSBwcml2YXRlIGhvc3Q6IFN0eWxlQ29tcG9uZW50KSB7fVxyXG5cclxuICAvKipcclxuICAgKiBXT1JLLUFST1VORDogc2luY2UgdGhlIHJlLXJlbmRlcmluZyBpcyBub3QgdHJpZ2dlcmVkIG9uIHN0eWxlIGNoYW5nZVxyXG4gICAqIHdlIHRyaWdnZXIgYSByYWRpdXMgY2hhbmdlLlxyXG4gICAqIHNlZSBvcGVubGF5ZXJzICM2MjMzIGFuZCAjNTc3NVxyXG4gICAqL1xyXG4gIHVwZGF0ZSgpIHtcclxuICAgIGlmICghIXRoaXMuaW5zdGFuY2UpIHtcclxuICAgICAgLy8gY29uc29sZS5sb2coJ3NldHRpbmcgb2wuc3R5bGUuQ2lyY2xlIGluc3RhbmNlXFwncyByYWRpdXMnKTtcclxuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRSYWRpdXModGhpcy5yYWRpdXMpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5ob3N0LnVwZGF0ZSgpO1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIG9sLnN0eWxlLkNpcmNsZSBpbnN0YW5jZSB3aXRoOiAnLCB0aGlzKTtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc3R5bGUuQ2lyY2xlKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEltYWdlKHRoaXMuaW5zdGFuY2UpO1xyXG4gICAgdGhpcy5ob3N0LnVwZGF0ZSgpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWydyYWRpdXMnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldFJhZGl1cyhjaGFuZ2VzWydyYWRpdXMnXS5jdXJyZW50VmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXN0eWxlLWNpcmNsZSwgc2V0dGluZyBuZXcgcmFkaXVzOiAnLCBjaGFuZ2VzWydyYWRpdXMnXS5jdXJyZW50VmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLXN0eWxlLWNpcmNsZScpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEltYWdlKG51bGwpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/styles/fill.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/styles/fill.component.js
@@ -94,4 +94,4 @@ if (false) {
     /** @type {?} */
     StyleFillComponent.prototype.color;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zdHlsZXMvZmlsbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDN0YsT0FBTyxFQUFFLEtBQUssRUFBb0IsTUFBTSxZQUFZLENBQUM7QUFDckQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzFELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRXREO0lBY0UsNEJBQ2MsU0FBeUIsRUFDekIsZUFBcUMsRUFDckMsYUFBaUM7UUFFN0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ2YsTUFBTSxJQUFJLEtBQUssQ0FBQyxvREFBb0QsQ0FBQyxDQUFDO1FBQ3hFLENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztZQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLGFBQWEsQ0FBQztRQUM1QixDQUFDO1FBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcsZUFBZSxDQUFDO1FBQzlCLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDO1FBQ3hCLENBQUM7UUFDRCx1REFBdUQ7SUFDekQsQ0FBQzs7OztJQUVELHFDQUFROzs7SUFBUjtRQUNFLCtEQUErRDtRQUMvRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7WUFDaEMsS0FBSyxPQUFPO2dCQUNWLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQzFDLGdFQUFnRTtnQkFDaEUsS0FBSyxDQUFDO1lBQ1IsS0FBSyxZQUFZO2dCQUNmLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQzFDLEtBQUssQ0FBQztZQUNSLEtBQUssY0FBYztnQkFDakIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztnQkFDL0IsdUVBQXVFO2dCQUN2RSxLQUFLLENBQUM7WUFDUjtnQkFDRSxNQUFNLElBQUksS0FBSyxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV2RCxDQUFDO0lBQ0gsQ0FBQzs7Ozs7SUFFRCx3Q0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDeEQsQ0FBQztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDbkIsbUZBQW1GO0lBQ3JGLENBQUM7O2dCQTlERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFLGdEQUVUO2lCQUNGOzs7Z0JBVFEsY0FBYyx1QkFtQmxCLFFBQVE7Z0JBbEJKLG9CQUFvQix1QkFtQnhCLFFBQVE7Z0JBbEJKLGtCQUFrQix1QkFtQnRCLFFBQVE7Ozt3QkFOVixLQUFLOztJQW9EUix5QkFBQztDQUFBLEFBL0RELElBK0RDO1NBekRZLGtCQUFrQjs7Ozs7O0lBRTdCLGtDQUE2RTs7SUFDN0Usc0NBQTRCOztJQUU1QixtQ0FDeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPcHRpb25hbCwgT25Jbml0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHN0eWxlLCBDb2xvciwgQ29sb3JMaWtlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBTdHlsZUNvbXBvbmVudCB9IGZyb20gJy4vc3R5bGUuY29tcG9uZW50JztcbmltcG9ydCB7IFN0eWxlQ2lyY2xlQ29tcG9uZW50IH0gZnJvbSAnLi9jaXJjbGUuY29tcG9uZW50JztcbmltcG9ydCB7IFN0eWxlVGV4dENvbXBvbmVudCB9IGZyb20gJy4vdGV4dC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc3R5bGUtZmlsbCcsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImFvbC1zdHlsZS1maWxsXCI+PC9kaXY+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIFN0eWxlRmlsbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgLyogdGhlIHR5cGluZ3MgZG8gbm90IGhhdmUgdGhlIHNldHRlcnMgKi9cbiAgcHJpdmF0ZSBob3N0OiAvKlN0eWxlQ29tcG9uZW50fFN0eWxlQ2lyY2xlQ29tcG9uZW50fFN0eWxlVGV4dENvbXBvbmVudCovIGFueTtcbiAgcHVibGljIGluc3RhbmNlOiBzdHlsZS5GaWxsO1xuXG4gIEBJbnB1dCgpXG4gIGNvbG9yOiBDb2xvciB8IENvbG9yTGlrZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBAT3B0aW9uYWwoKSBzdHlsZUhvc3Q6IFN0eWxlQ29tcG9uZW50LFxuICAgIEBPcHRpb25hbCgpIHN0eWxlQ2lyY2xlSG9zdDogU3R5bGVDaXJjbGVDb21wb25lbnQsXG4gICAgQE9wdGlvbmFsKCkgc3R5bGVUZXh0SG9zdDogU3R5bGVUZXh0Q29tcG9uZW50XG4gICkge1xuICAgIGlmICghc3R5bGVIb3N0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FvbC1zdHlsZS1zdHJva2UgbXVzdCBiZSBhIGRlc2NlbmRhbnQgb2YgYW9sLXN0eWxlJyk7XG4gICAgfVxuICAgIGlmICghIXN0eWxlVGV4dEhvc3QpIHtcbiAgICAgIHRoaXMuaG9zdCA9IHN0eWxlVGV4dEhvc3Q7XG4gICAgfSBlbHNlIGlmICghIXN0eWxlQ2lyY2xlSG9zdCkge1xuICAgICAgdGhpcy5ob3N0ID0gc3R5bGVDaXJjbGVIb3N0O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmhvc3QgPSBzdHlsZUhvc3Q7XG4gICAgfVxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBhb2wtc3R5bGUtZmlsbCB3aXRoOiAnLCB0aGlzKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5zdHlsZS5GaWxsIGluc3RhbmNlIHdpdGg6ICcsIHRoaXMpO1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc3R5bGUuRmlsbCh0aGlzKTtcbiAgICBzd2l0Y2ggKHRoaXMuaG9zdC5jb21wb25lbnRUeXBlKSB7XG4gICAgICBjYXNlICdzdHlsZSc6XG4gICAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRGaWxsKHRoaXMuaW5zdGFuY2UpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZygnc2V0dGluZyBvbC5zdHlsZSBpbnN0YW5jZVxcJ3MgZmlsbDonLCB0aGlzLmhvc3QpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3N0eWxlLXRleHQnOlxuICAgICAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0RmlsbCh0aGlzLmluc3RhbmNlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzdHlsZS1jaXJjbGUnOlxuICAgICAgICB0aGlzLmhvc3QuZmlsbCA9IHRoaXMuaW5zdGFuY2U7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdzZXR0aW5nIG9sLnN0eWxlLmNpcmNsZSBpbnN0YW5jZVxcJ3MgZmlsbDonLCB0aGlzLmhvc3QpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biBob3N0IHR5cGU6ICcgKyB0aGlzLmhvc3QpO1xuICAgICAgLy8gYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoY2hhbmdlc1snY29sb3InXSkge1xuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRDb2xvcihjaGFuZ2VzWydjb2xvciddLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICAgIHRoaXMuaG9zdC51cGRhdGUoKTtcbiAgICAvLyBjb25zb2xlLmxvZygnY2hhbmdlcyBkZXRlY3RlZCBpbiBhb2wtc3R5bGUtZmlsbCwgc2V0dGluZyBuZXcgY29sb3I6ICcsIGNoYW5nZXMpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zdHlsZXMvZmlsbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDN0YsT0FBTyxFQUFFLEtBQUssRUFBb0IsTUFBTSxZQUFZLENBQUM7QUFDckQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzFELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRXREO0lBY0UsNEJBQ2MsU0FBeUIsRUFDekIsZUFBcUMsRUFDckMsYUFBaUM7UUFFN0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ2YsTUFBTSxJQUFJLEtBQUssQ0FBQyxvREFBb0QsQ0FBQyxDQUFDO1FBQ3hFLENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztZQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLGFBQWEsQ0FBQztRQUM1QixDQUFDO1FBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcsZUFBZSxDQUFDO1FBQzlCLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDO1FBQ3hCLENBQUM7UUFDRCx1REFBdUQ7SUFDekQsQ0FBQzs7OztJQUVELHFDQUFROzs7SUFBUjtRQUNFLCtEQUErRDtRQUMvRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7WUFDaEMsS0FBSyxPQUFPO2dCQUNWLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQzFDLGdFQUFnRTtnQkFDaEUsS0FBSyxDQUFDO1lBQ1IsS0FBSyxZQUFZO2dCQUNmLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQzFDLEtBQUssQ0FBQztZQUNSLEtBQUssY0FBYztnQkFDakIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztnQkFDL0IsdUVBQXVFO2dCQUN2RSxLQUFLLENBQUM7WUFDUjtnQkFDRSxNQUFNLElBQUksS0FBSyxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV2RCxDQUFDO0lBQ0gsQ0FBQzs7Ozs7SUFFRCx3Q0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDeEQsQ0FBQztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDbkIsbUZBQW1GO0lBQ3JGLENBQUM7O2dCQTlERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFLGdEQUVUO2lCQUNGOzs7Z0JBVFEsY0FBYyx1QkFtQmxCLFFBQVE7Z0JBbEJKLG9CQUFvQix1QkFtQnhCLFFBQVE7Z0JBbEJKLGtCQUFrQix1QkFtQnRCLFFBQVE7Ozt3QkFOVixLQUFLOztJQW9EUix5QkFBQztDQUFBLEFBL0RELElBK0RDO1NBekRZLGtCQUFrQjs7Ozs7O0lBRTdCLGtDQUE2RTs7SUFDN0Usc0NBQTRCOztJQUU1QixtQ0FDeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPcHRpb25hbCwgT25Jbml0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc3R5bGUsIENvbG9yLCBDb2xvckxpa2UgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgU3R5bGVDb21wb25lbnQgfSBmcm9tICcuL3N0eWxlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFN0eWxlQ2lyY2xlQ29tcG9uZW50IH0gZnJvbSAnLi9jaXJjbGUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU3R5bGVUZXh0Q29tcG9uZW50IH0gZnJvbSAnLi90ZXh0LmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC1zdHlsZS1maWxsJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPGRpdiBjbGFzcz1cImFvbC1zdHlsZS1maWxsXCI+PC9kaXY+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIFN0eWxlRmlsbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuICAvKiB0aGUgdHlwaW5ncyBkbyBub3QgaGF2ZSB0aGUgc2V0dGVycyAqL1xyXG4gIHByaXZhdGUgaG9zdDogLypTdHlsZUNvbXBvbmVudHxTdHlsZUNpcmNsZUNvbXBvbmVudHxTdHlsZVRleHRDb21wb25lbnQqLyBhbnk7XHJcbiAgcHVibGljIGluc3RhbmNlOiBzdHlsZS5GaWxsO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGNvbG9yOiBDb2xvciB8IENvbG9yTGlrZTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBAT3B0aW9uYWwoKSBzdHlsZUhvc3Q6IFN0eWxlQ29tcG9uZW50LFxyXG4gICAgQE9wdGlvbmFsKCkgc3R5bGVDaXJjbGVIb3N0OiBTdHlsZUNpcmNsZUNvbXBvbmVudCxcclxuICAgIEBPcHRpb25hbCgpIHN0eWxlVGV4dEhvc3Q6IFN0eWxlVGV4dENvbXBvbmVudFxyXG4gICkge1xyXG4gICAgaWYgKCFzdHlsZUhvc3QpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdhb2wtc3R5bGUtc3Ryb2tlIG11c3QgYmUgYSBkZXNjZW5kYW50IG9mIGFvbC1zdHlsZScpO1xyXG4gICAgfVxyXG4gICAgaWYgKCEhc3R5bGVUZXh0SG9zdCkge1xyXG4gICAgICB0aGlzLmhvc3QgPSBzdHlsZVRleHRIb3N0O1xyXG4gICAgfSBlbHNlIGlmICghIXN0eWxlQ2lyY2xlSG9zdCkge1xyXG4gICAgICB0aGlzLmhvc3QgPSBzdHlsZUNpcmNsZUhvc3Q7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmhvc3QgPSBzdHlsZUhvc3Q7XHJcbiAgICB9XHJcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgYW9sLXN0eWxlLWZpbGwgd2l0aDogJywgdGhpcyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5zdHlsZS5GaWxsIGluc3RhbmNlIHdpdGg6ICcsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzdHlsZS5GaWxsKHRoaXMpO1xyXG4gICAgc3dpdGNoICh0aGlzLmhvc3QuY29tcG9uZW50VHlwZSkge1xyXG4gICAgICBjYXNlICdzdHlsZSc6XHJcbiAgICAgICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEZpbGwodGhpcy5pbnN0YW5jZSk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3NldHRpbmcgb2wuc3R5bGUgaW5zdGFuY2VcXCdzIGZpbGw6JywgdGhpcy5ob3N0KTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAnc3R5bGUtdGV4dCc6XHJcbiAgICAgICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEZpbGwodGhpcy5pbnN0YW5jZSk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ3N0eWxlLWNpcmNsZSc6XHJcbiAgICAgICAgdGhpcy5ob3N0LmZpbGwgPSB0aGlzLmluc3RhbmNlO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdzZXR0aW5nIG9sLnN0eWxlLmNpcmNsZSBpbnN0YW5jZVxcJ3MgZmlsbDonLCB0aGlzLmhvc3QpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biBob3N0IHR5cGU6ICcgKyB0aGlzLmhvc3QpO1xyXG4gICAgICAvLyBicmVhaztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoY2hhbmdlc1snY29sb3InXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldENvbG9yKGNoYW5nZXNbJ2NvbG9yJ10uY3VycmVudFZhbHVlKTtcclxuICAgIH1cclxuICAgIHRoaXMuaG9zdC51cGRhdGUoKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjaGFuZ2VzIGRldGVjdGVkIGluIGFvbC1zdHlsZS1maWxsLCBzZXR0aW5nIG5ldyBjb2xvcjogJywgY2hhbmdlcyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/styles/icon.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/styles/icon.component.js
@@ -122,4 +122,4 @@ if (false) {
      */
     StyleIconComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zdHlsZXMvaWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDekYsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNuQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQ7SUE0Q0UsNEJBQTRCLElBQW9CO1FBQXBCLFNBQUksR0FBSixJQUFJLENBQWdCO0lBQUcsQ0FBQzs7OztJQUVwRCxxQ0FBUTs7O0lBQVI7UUFDRSwrREFBK0Q7UUFDL0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM3QyxDQUFDOzs7OztJQUVELHdDQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjtRQUNoQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25CLE1BQU0sQ0FBQztRQUNULENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM1RCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN4QixJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDOUQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3hELENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ25CLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3JDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDN0MsQ0FBQztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDbkIsZ0VBQWdFO0lBQ2xFLENBQUM7O2dCQXZFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFLGdEQUVUO2lCQUNGOzs7Z0JBUFEsY0FBYyx1QkE4Q1IsSUFBSTs7O3lCQW5DaEIsS0FBSzsrQkFFTCxLQUFLOytCQUVMLEtBQUs7K0JBRUwsS0FBSzt3QkFFTCxLQUFLOzhCQUVMLEtBQUs7c0JBRUwsS0FBSzt5QkFFTCxLQUFLOytCQUVMLEtBQUs7MEJBRUwsS0FBSzt3QkFFTCxLQUFLOzhCQUVMLEtBQUs7aUNBRUwsS0FBSzsyQkFFTCxLQUFLO3VCQUVMLEtBQUs7MEJBRUwsS0FBSztzQkFFTCxLQUFLOztJQStCUix5QkFBQztDQUFBLEFBeEVELElBd0VDO1NBbEVZLGtCQUFrQjs7O0lBQzdCLHNDQUE0Qjs7SUFFNUIsb0NBQ3lCOztJQUN6QiwwQ0FDb0M7O0lBQ3BDLDBDQUNvQzs7SUFDcEMsMENBQytCOztJQUMvQixtQ0FDd0M7O0lBQ3hDLHlDQUM4Qjs7SUFDOUIsaUNBQ1k7O0lBQ1osb0NBQ3lCOztJQUN6QiwwQ0FDK0I7O0lBQy9CLHFDQUNnQjs7SUFDaEIsbUNBQ2M7O0lBQ2QseUNBQ3FCOztJQUNyQiw0Q0FDd0I7O0lBQ3hCLHNDQUNpQjs7SUFDakIsa0NBQ3VCOztJQUN2QixxQ0FDMEI7O0lBQzFCLGlDQUNZOzs7OztJQUVBLGtDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEhvc3QsIE9uSW5pdCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzdHlsZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgU3R5bGVDb21wb25lbnQgfSBmcm9tICcuL3N0eWxlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zdHlsZS1pY29uJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLXN0eWxlLWljb25cIj48L2Rpdj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgU3R5bGVJY29uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICBwdWJsaWMgaW5zdGFuY2U6IHN0eWxlLkljb247XG5cbiAgQElucHV0KClcbiAgYW5jaG9yOiBbbnVtYmVyLCBudW1iZXJdO1xuICBASW5wdXQoKVxuICBhbmNob3JYVW5pdHM6IHN0eWxlLkljb25BbmNob3JVbml0cztcbiAgQElucHV0KClcbiAgYW5jaG9yWVVuaXRzOiBzdHlsZS5JY29uQW5jaG9yVW5pdHM7XG4gIEBJbnB1dCgpXG4gIGFuY2hvck9yaWdpbjogc3R5bGUuSWNvbk9yaWdpbjtcbiAgQElucHV0KClcbiAgY29sb3I6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICBASW5wdXQoKVxuICBjcm9zc09yaWdpbjogc3R5bGUuSWNvbk9yaWdpbjtcbiAgQElucHV0KClcbiAgaW1nOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIG9mZnNldDogW251bWJlciwgbnVtYmVyXTtcbiAgQElucHV0KClcbiAgb2Zmc2V0T3JpZ2luOiBzdHlsZS5JY29uT3JpZ2luO1xuICBASW5wdXQoKVxuICBvcGFjaXR5OiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHNjYWxlOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHNuYXBUb1BpeGVsOiBib29sZWFuO1xuICBASW5wdXQoKVxuICByb3RhdGVXaXRoVmlldzogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgcm90YXRpb246IG51bWJlcjtcbiAgQElucHV0KClcbiAgc2l6ZTogW251bWJlciwgbnVtYmVyXTtcbiAgQElucHV0KClcbiAgaW1nU2l6ZTogW251bWJlciwgbnVtYmVyXTtcbiAgQElucHV0KClcbiAgc3JjOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoQEhvc3QoKSBwcml2YXRlIGhvc3Q6IFN0eWxlQ29tcG9uZW50KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5zdHlsZS5JY29uIGluc3RhbmNlIHdpdGg6ICcsIHRoaXMpO1xuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc3R5bGUuSWNvbih0aGlzKTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0SW1hZ2UodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydvcGFjaXR5J10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0T3BhY2l0eShjaGFuZ2VzWydvcGFjaXR5J10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXNbJ3JvdGF0aW9uJ10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0Um90YXRpb24oY2hhbmdlc1sncm90YXRpb24nXS5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgICBpZiAoY2hhbmdlc1snc2NhbGUnXSkge1xuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRTY2FsZShjaGFuZ2VzWydzY2FsZSddLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydzcmMnXSkge1xuICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzdHlsZS5JY29uKHRoaXMpO1xuICAgICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEltYWdlKHRoaXMuaW5zdGFuY2UpO1xuICAgIH1cbiAgICB0aGlzLmhvc3QudXBkYXRlKCk7XG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXN0eWxlLWljb246ICcsIGNoYW5nZXMpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zdHlsZXMvaWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDekYsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNuQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQ7SUE0Q0UsNEJBQTRCLElBQW9CO1FBQXBCLFNBQUksR0FBSixJQUFJLENBQWdCO0lBQUcsQ0FBQzs7OztJQUVwRCxxQ0FBUTs7O0lBQVI7UUFDRSwrREFBK0Q7UUFDL0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM3QyxDQUFDOzs7OztJQUVELHdDQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjtRQUNoQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25CLE1BQU0sQ0FBQztRQUNULENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM1RCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN4QixJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDOUQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3hELENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ25CLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3JDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDN0MsQ0FBQztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDbkIsZ0VBQWdFO0lBQ2xFLENBQUM7O2dCQXZFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFLGdEQUVUO2lCQUNGOzs7Z0JBUFEsY0FBYyx1QkE4Q1IsSUFBSTs7O3lCQW5DaEIsS0FBSzsrQkFFTCxLQUFLOytCQUVMLEtBQUs7K0JBRUwsS0FBSzt3QkFFTCxLQUFLOzhCQUVMLEtBQUs7c0JBRUwsS0FBSzt5QkFFTCxLQUFLOytCQUVMLEtBQUs7MEJBRUwsS0FBSzt3QkFFTCxLQUFLOzhCQUVMLEtBQUs7aUNBRUwsS0FBSzsyQkFFTCxLQUFLO3VCQUVMLEtBQUs7MEJBRUwsS0FBSztzQkFFTCxLQUFLOztJQStCUix5QkFBQztDQUFBLEFBeEVELElBd0VDO1NBbEVZLGtCQUFrQjs7O0lBQzdCLHNDQUE0Qjs7SUFFNUIsb0NBQ3lCOztJQUN6QiwwQ0FDb0M7O0lBQ3BDLDBDQUNvQzs7SUFDcEMsMENBQytCOztJQUMvQixtQ0FDd0M7O0lBQ3hDLHlDQUM4Qjs7SUFDOUIsaUNBQ1k7O0lBQ1osb0NBQ3lCOztJQUN6QiwwQ0FDK0I7O0lBQy9CLHFDQUNnQjs7SUFDaEIsbUNBQ2M7O0lBQ2QseUNBQ3FCOztJQUNyQiw0Q0FDd0I7O0lBQ3hCLHNDQUNpQjs7SUFDakIsa0NBQ3VCOztJQUN2QixxQ0FDMEI7O0lBQzFCLGlDQUNZOzs7OztJQUVBLGtDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEhvc3QsIE9uSW5pdCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHN0eWxlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IFN0eWxlQ29tcG9uZW50IH0gZnJvbSAnLi9zdHlsZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc3R5bGUtaWNvbicsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxkaXYgY2xhc3M9XCJhb2wtc3R5bGUtaWNvblwiPjwvZGl2PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTdHlsZUljb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgcHVibGljIGluc3RhbmNlOiBzdHlsZS5JY29uO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGFuY2hvcjogW251bWJlciwgbnVtYmVyXTtcclxuICBASW5wdXQoKVxyXG4gIGFuY2hvclhVbml0czogc3R5bGUuSWNvbkFuY2hvclVuaXRzO1xyXG4gIEBJbnB1dCgpXHJcbiAgYW5jaG9yWVVuaXRzOiBzdHlsZS5JY29uQW5jaG9yVW5pdHM7XHJcbiAgQElucHV0KClcclxuICBhbmNob3JPcmlnaW46IHN0eWxlLkljb25PcmlnaW47XHJcbiAgQElucHV0KClcclxuICBjb2xvcjogW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XHJcbiAgQElucHV0KClcclxuICBjcm9zc09yaWdpbjogc3R5bGUuSWNvbk9yaWdpbjtcclxuICBASW5wdXQoKVxyXG4gIGltZzogc3RyaW5nO1xyXG4gIEBJbnB1dCgpXHJcbiAgb2Zmc2V0OiBbbnVtYmVyLCBudW1iZXJdO1xyXG4gIEBJbnB1dCgpXHJcbiAgb2Zmc2V0T3JpZ2luOiBzdHlsZS5JY29uT3JpZ2luO1xyXG4gIEBJbnB1dCgpXHJcbiAgb3BhY2l0eTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgc2NhbGU6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHNuYXBUb1BpeGVsOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgcm90YXRlV2l0aFZpZXc6IGJvb2xlYW47XHJcbiAgQElucHV0KClcclxuICByb3RhdGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgc2l6ZTogW251bWJlciwgbnVtYmVyXTtcclxuICBASW5wdXQoKVxyXG4gIGltZ1NpemU6IFtudW1iZXIsIG51bWJlcl07XHJcbiAgQElucHV0KClcclxuICBzcmM6IHN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IoQEhvc3QoKSBwcml2YXRlIGhvc3Q6IFN0eWxlQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5zdHlsZS5JY29uIGluc3RhbmNlIHdpdGg6ICcsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzdHlsZS5JY29uKHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldEltYWdlKHRoaXMuaW5zdGFuY2UpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWydvcGFjaXR5J10pIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRPcGFjaXR5KGNoYW5nZXNbJ29wYWNpdHknXS5jdXJyZW50VmFsdWUpO1xyXG4gICAgfVxyXG4gICAgaWYgKGNoYW5nZXNbJ3JvdGF0aW9uJ10pIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRSb3RhdGlvbihjaGFuZ2VzWydyb3RhdGlvbiddLmN1cnJlbnRWYWx1ZSk7XHJcbiAgICB9XHJcbiAgICBpZiAoY2hhbmdlc1snc2NhbGUnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldFNjYWxlKGNoYW5nZXNbJ3NjYWxlJ10uY3VycmVudFZhbHVlKTtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWydzcmMnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlID0gbmV3IHN0eWxlLkljb24odGhpcyk7XHJcbiAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRJbWFnZSh0aGlzLmluc3RhbmNlKTtcclxuICAgIH1cclxuICAgIHRoaXMuaG9zdC51cGRhdGUoKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjaGFuZ2VzIGRldGVjdGVkIGluIGFvbC1zdHlsZS1pY29uOiAnLCBjaGFuZ2VzKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/styles/stroke.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/styles/stroke.component.js
@@ -124,4 +124,4 @@ if (false) {
     /** @type {?} */
     StyleStrokeComponent.prototype.width;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Ryb2tlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3N0eWxlcy9zdHJva2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQW9DLE1BQU0sZUFBZSxDQUFDO0FBQzdGLE9BQU8sRUFBRSxLQUFLLEVBQVMsTUFBTSxZQUFZLENBQUM7QUFDMUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzFELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRXREO0lBd0JFLDhCQUNjLFNBQXlCLEVBQ3pCLGVBQXFDLEVBQ3JDLGFBQWlDO1FBRTdDLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNmLE1BQU0sSUFBSSxLQUFLLENBQUMsb0RBQW9ELENBQUMsQ0FBQztRQUN4RSxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7WUFDcEIsSUFBSSxDQUFDLElBQUksR0FBRyxhQUFhLENBQUM7UUFDNUIsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztZQUM3QixJQUFJLENBQUMsSUFBSSxHQUFHLGVBQWUsQ0FBQztRQUM5QixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixJQUFJLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQztRQUN4QixDQUFDO1FBQ0QseURBQXlEO0lBQzNELENBQUM7Ozs7SUFFRCx1Q0FBUTs7O0lBQVI7UUFDRSxpRUFBaUU7UUFDakUsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxN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d0NBQThCOzs7OztJQUU5QixvQ0FBNkU7O0lBRTdFLHFDQUN5Qjs7SUFDekIsdUNBQzRCOztJQUM1Qix3Q0FDK0I7O0lBQy9CLHdDQUM2Qjs7SUFDN0IsMENBQytCOztJQUMvQixxQ0FDMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPcHRpb25hbCwgT25Jbml0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHN0eWxlLCBDb2xvciB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgU3R5bGVDb21wb25lbnQgfSBmcm9tICcuL3N0eWxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdHlsZUNpcmNsZUNvbXBvbmVudCB9IGZyb20gJy4vY2lyY2xlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdHlsZVRleHRDb21wb25lbnQgfSBmcm9tICcuL3RleHQuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW9sLXN0eWxlLXN0cm9rZScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImFvbC1zdHlsZS1zdHJva2VcIj48L2Rpdj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgU3R5bGVTdHJva2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIHB1YmxpYyBpbnN0YW5jZTogc3R5bGUuU3Ryb2tlO1xuICAvKiB0aGUgdHlwaW5ncyBkbyBub3QgaGF2ZSB0aGUgc2V0dGVycyAqL1xuICBwcml2YXRlIGhvc3Q6IC8qU3R5bGVDb21wb25lbnR8U3R5bGVDaXJjbGVDb21wb25lbnR8U3R5bGVUZXh0Q29tcG9uZW50Ki8gYW55O1xuXG4gIEBJbnB1dCgpXG4gIGNvbG9yOiBDb2xvciB8IHVuZGVmaW5lZDtcbiAgQElucHV0KClcbiAgbGluZUNhcDogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKVxuICBsaW5lRGFzaDogbnVtYmVyW10gfCB1bmRlZmluZWQ7XG4gIEBJbnB1dCgpXG4gIGxpbmVKb2luOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIEBJbnB1dCgpXG4gIG1pdGVyTGltaXQ6IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgQElucHV0KClcbiAgd2lkdGg6IG51bWJlciB8IHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBAT3B0aW9uYWwoKSBzdHlsZUhvc3Q6IFN0eWxlQ29tcG9uZW50LFxuICAgIEBPcHRpb25hbCgpIHN0eWxlQ2lyY2xlSG9zdDogU3R5bGVDaXJjbGVDb21wb25lbnQsXG4gICAgQE9wdGlvbmFsKCkgc3R5bGVUZXh0SG9zdDogU3R5bGVUZXh0Q29tcG9uZW50XG4gICkge1xuICAgIGlmICghc3R5bGVIb3N0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FvbC1zdHlsZS1zdHJva2UgbXVzdCBiZSBhIGRlc2NlbmRhbnQgb2YgYW9sLXN0eWxlJyk7XG4gICAgfVxuICAgIGlmICghIXN0eWxlVGV4dEhvc3QpIHtcbiAgICAgIHRoaXMuaG9zdCA9IHN0eWxlVGV4dEhvc3Q7XG4gICAgfSBlbHNlIGlmICghIXN0eWxlQ2lyY2xlSG9zdCkge1xuICAgICAgdGhpcy5ob3N0ID0gc3R5bGVDaXJjbGVIb3N0O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmhvc3QgPSBzdHlsZUhvc3Q7XG4gICAgfVxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBhb2wtc3R5bGUtc3Ryb2tlIHdpdGg6ICcsIHRoaXMpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIG9sLnN0eWxlLlN0cm9rZSBpbnN0YW5jZSB3aXRoOiAnLCB0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHN0eWxlLlN0cm9rZSh0aGlzKTtcbiAgICBzd2l0Y2ggKHRoaXMuaG9zdC5jb21wb25lbnRUeXBlKSB7XG4gICAgICBjYXNlICdzdHlsZSc6XG4gICAgICAgIHRoaXMuaG9zdC5pbnN0YW5jZS5zZXRTdHJva2UodGhpcy5pbnN0YW5jZSk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdzZXR0aW5nIG9sLnN0eWxlIGluc3RhbmNlXFwncyBzdHJva2U6JywgdGhpcy5ob3N0KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzdHlsZS10ZXh0JzpcbiAgICAgICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFN0cm9rZSh0aGlzLmluc3RhbmNlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzdHlsZS1jaXJjbGUnOlxuICAgICAgICB0aGlzLmhvc3Quc3Ryb2tlID0gdGhpcy5pbnN0YW5jZTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3NldHRpbmcgb2wuc3R5bGUuY2lyY2xlIGluc3RhbmNlXFwncyBzdHJva2U6JywgdGhpcy5ob3N0KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3Vua25vd24gaG9zdCB0eXBlOiAnICsgdGhpcy5ob3N0KTtcbiAgICAgIC8vIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBpZiAoIXRoaXMuaW5zdGFuY2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXNbJ2NvbG9yJ10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0Q29sb3IoY2hhbmdlc1snY29sb3InXS5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgICBpZiAoY2hhbmdlc1snbGluZUNhcCddKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldExpbmVDYXAoY2hhbmdlc1snbGluZUNhcCddLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydsaW5lRGFzaCddKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldExpbmVEYXNoKGNoYW5nZXNbJ2xpbmVEYXNoJ10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXNbJ2xpbmVKb2luJ10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0TGluZUpvaW4oY2hhbmdlc1snbGluZUpvaW4nXS5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgICBpZiAoY2hhbmdlc1snbWl0ZXJMaW1pdCddKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldE1pdGVyTGltaXQoY2hhbmdlc1snbWl0ZXJMaW1pdCddLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWyd3aWR0aCddKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldFdpZHRoKGNoYW5nZXNbJ3dpZHRoJ10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgdGhpcy5ob3N0LnVwZGF0ZSgpO1xuICAgIC8vIGNvbnNvbGUubG9nKCdjaGFuZ2VzIGRldGVjdGVkIGluIGFvbC1zdHlsZS1zdHJva2UsIHNldHRpbmcgbmV3IHByb3BlcnRpZXM6ICcsIGNoYW5nZXMpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/styles/style.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/styles/style.component.js
@@ -80,4 +80,4 @@ if (false) {
     /** @type {?} */
     StyleComponent.prototype.zIndex;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc3R5bGVzL3N0eWxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxLQUFLLEVBQStCLE1BQU0sWUFBWSxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBRXZFO0lBd0JFLHdCQUF3QixXQUE2QixFQUFjLFNBQStCO1FBZjNGLGtCQUFhLEdBQUcsT0FBTyxDQUFDO1FBZ0I3QixxQ0FBcUM7UUFDckMsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUNwRCxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2YsTUFBTSxJQUFJLEtBQUssQ0FBQyxtREFBbUQsQ0FBQyxDQUFDO1FBQ3ZFLENBQUM7SUFDSCxDQUFDOzs7O0lBRUQsK0JBQU07OztJQUFOO1FBQ0Usc0RBQXNEO1FBQ3RELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQy9CLENBQUM7Ozs7SUFFRCxpQ0FBUTs7O0lBQVI7UUFDRSwyREFBMkQ7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM3QyxDQUFDOztnQkF6Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO29CQUNyQixRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFSUSxnQkFBZ0IsdUJBMkJWLFFBQVE7Z0JBMUJkLG9CQUFvQix1QkEwQjZCLFFBQVE7OzsyQkFiL0QsS0FBSzt1QkFFTCxLQUFLO3dCQUVMLEtBQUs7eUJBRUwsS0FBSzt1QkFFTCxLQUFLO3lCQUVMLEtBQUs7O0lBcUJSLHFCQUFDO0NBQUEsQUExQ0QsSUEwQ0M7U0FwQ1ksY0FBYzs7Ozs7O0lBQ3pCLDhCQUFzRDs7SUFDdEQsa0NBQTZCOztJQUM3Qix1Q0FBK0I7O0lBRS9CLGtDQUN5RDs7SUFDekQsOEJBQ2lCOztJQUNqQiwrQkFDbUI7O0lBQ25CLGdDQUNxQjs7SUFDckIsOEJBQ2lCOztJQUNqQixnQ0FDZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9wdGlvbmFsLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHN0eWxlLCBTdHlsZUdlb21ldHJ5RnVuY3Rpb24sIGdlb20gfSBmcm9tICdvcGVubGF5ZXJzJztcbmltcG9ydCB7IEZlYXR1cmVDb21wb25lbnQgfSBmcm9tICcuLi9mZWF0dXJlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMYXllclZlY3RvckNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcnZlY3Rvci5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtc3R5bGUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgU3R5bGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBwcml2YXRlIGhvc3Q6IEZlYXR1cmVDb21wb25lbnQgfCBMYXllclZlY3RvckNvbXBvbmVudDtcbiAgcHVibGljIGluc3RhbmNlOiBzdHlsZS5TdHlsZTtcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnc3R5bGUnO1xuXG4gIEBJbnB1dCgpXG4gIGdlb21ldHJ5OiBzdHJpbmcgfCBnZW9tLkdlb21ldHJ5IHwgU3R5bGVHZW9tZXRyeUZ1bmN0aW9uO1xuICBASW5wdXQoKVxuICBmaWxsOiBzdHlsZS5GaWxsO1xuICBASW5wdXQoKVxuICBpbWFnZTogc3R5bGUuSW1hZ2U7XG4gIEBJbnB1dCgpXG4gIHN0cm9rZTogc3R5bGUuU3Ryb2tlO1xuICBASW5wdXQoKVxuICB0ZXh0OiBzdHlsZS5UZXh0O1xuICBASW5wdXQoKVxuICB6SW5kZXg6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBmZWF0dXJlSG9zdDogRmVhdHVyZUNvbXBvbmVudCwgQE9wdGlvbmFsKCkgbGF5ZXJIb3N0OiBMYXllclZlY3RvckNvbXBvbmVudCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBhb2wtc3R5bGUnKTtcbiAgICB0aGlzLmhvc3QgPSAhIWZlYXR1cmVIb3N0ID8gZmVhdHVyZUhvc3QgOiBsYXllckhvc3Q7XG4gICAgaWYgKCF0aGlzLmhvc3QpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignYW9sLXN0eWxlIG11c3QgYmUgYXBwbGllZCB0byBhIGZlYXR1cmUgb3IgYSBsYXllcicpO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZSgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygndXBkYXRpbmcgc3R5bGVcXCdzIGhvc3Q6ICcsIHRoaXMuaG9zdCk7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLmNoYW5nZWQoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBhb2wtc3R5bGUgaW5zdGFuY2Ugd2l0aDogJywgdGhpcyk7XG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBzdHlsZS5TdHlsZSh0aGlzKTtcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U3R5bGUodGhpcy5pbnN0YW5jZSk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvc3R5bGVzL3N0eWxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxLQUFLLEVBQStCLE1BQU0sWUFBWSxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBRXZFO0lBd0JFLHdCQUF3QixXQUE2QixFQUFjLFNBQStCO1FBZjNGLGtCQUFhLEdBQUcsT0FBTyxDQUFDO1FBZ0I3QixxQ0FBcUM7UUFDckMsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUNwRCxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2YsTUFBTSxJQUFJLEtBQUssQ0FBQyxtREFBbUQsQ0FBQyxDQUFDO1FBQ3ZFLENBQUM7SUFDSCxDQUFDOzs7O0lBRUQsK0JBQU07OztJQUFOO1FBQ0Usc0RBQXNEO1FBQ3RELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQy9CLENBQUM7Ozs7SUFFRCxpQ0FBUTs7O0lBQVI7UUFDRSwyREFBMkQ7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM3QyxDQUFDOztnQkF6Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO29CQUNyQixRQUFRLEVBQUUscUNBRVQ7aUJBQ0Y7OztnQkFSUSxnQkFBZ0IsdUJBMkJWLFFBQVE7Z0JBMUJkLG9CQUFvQix1QkEwQjZCLFFBQVE7OzsyQkFiL0QsS0FBSzt1QkFFTCxLQUFLO3dCQUVMLEtBQUs7eUJBRUwsS0FBSzt1QkFFTCxLQUFLO3lCQUVMLEtBQUs7O0lBcUJSLHFCQUFDO0NBQUEsQUExQ0QsSUEwQ0M7U0FwQ1ksY0FBYzs7Ozs7O0lBQ3pCLDhCQUFzRDs7SUFDdEQsa0NBQTZCOztJQUM3Qix1Q0FBK0I7O0lBRS9CLGtDQUN5RDs7SUFDekQsOEJBQ2lCOztJQUNqQiwrQkFDbUI7O0lBQ25CLGdDQUNxQjs7SUFDckIsOEJBQ2lCOztJQUNqQixnQ0FDZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9wdGlvbmFsLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc3R5bGUsIFN0eWxlR2VvbWV0cnlGdW5jdGlvbiwgZ2VvbSB9IGZyb20gJ29wZW5sYXllcnMnO1xyXG5pbXBvcnQgeyBGZWF0dXJlQ29tcG9uZW50IH0gZnJvbSAnLi4vZmVhdHVyZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMYXllclZlY3RvckNvbXBvbmVudCB9IGZyb20gJy4uL2xheWVycy9sYXllcnZlY3Rvci5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc3R5bGUnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIFN0eWxlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBwcml2YXRlIGhvc3Q6IEZlYXR1cmVDb21wb25lbnQgfCBMYXllclZlY3RvckNvbXBvbmVudDtcclxuICBwdWJsaWMgaW5zdGFuY2U6IHN0eWxlLlN0eWxlO1xyXG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ3N0eWxlJztcclxuXHJcbiAgQElucHV0KClcclxuICBnZW9tZXRyeTogc3RyaW5nIHwgZ2VvbS5HZW9tZXRyeSB8IFN0eWxlR2VvbWV0cnlGdW5jdGlvbjtcclxuICBASW5wdXQoKVxyXG4gIGZpbGw6IHN0eWxlLkZpbGw7XHJcbiAgQElucHV0KClcclxuICBpbWFnZTogc3R5bGUuSW1hZ2U7XHJcbiAgQElucHV0KClcclxuICBzdHJva2U6IHN0eWxlLlN0cm9rZTtcclxuICBASW5wdXQoKVxyXG4gIHRleHQ6IHN0eWxlLlRleHQ7XHJcbiAgQElucHV0KClcclxuICB6SW5kZXg6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgZmVhdHVyZUhvc3Q6IEZlYXR1cmVDb21wb25lbnQsIEBPcHRpb25hbCgpIGxheWVySG9zdDogTGF5ZXJWZWN0b3JDb21wb25lbnQpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBhb2wtc3R5bGUnKTtcclxuICAgIHRoaXMuaG9zdCA9ICEhZmVhdHVyZUhvc3QgPyBmZWF0dXJlSG9zdCA6IGxheWVySG9zdDtcclxuICAgIGlmICghdGhpcy5ob3N0KSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignYW9sLXN0eWxlIG11c3QgYmUgYXBwbGllZCB0byBhIGZlYXR1cmUgb3IgYSBsYXllcicpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdXBkYXRlKCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ3VwZGF0aW5nIHN0eWxlXFwncyBob3N0OiAnLCB0aGlzLmhvc3QpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLmNoYW5nZWQoKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIGFvbC1zdHlsZSBpbnN0YW5jZSB3aXRoOiAnLCB0aGlzKTtcclxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgc3R5bGUuU3R5bGUodGhpcyk7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0U3R5bGUodGhpcy5pbnN0YW5jZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/styles/text.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/styles/text.component.js
@@ -116,4 +116,4 @@ if (false) {
      */
     StyleTextComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zdHlsZXMvdGV4dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDN0YsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNuQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQ7SUE2QkUsNEJBQWdDLElBQW9CO1FBQXBCLFNBQUksR0FBSixJQUFJLENBQWdCO1FBckI3QyxrQkFBYSxHQUFHLFlBQVksQ0FBQztRQXNCbEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ1YsTUFBTSxJQUFJLEtBQUssQ0FBQyxrREFBa0QsQ0FBQyxDQUFDO1FBQ3RFLENBQUM7UUFDRCx1REFBdUQ7SUFDekQsQ0FBQzs7OztJQUVELHFDQUFROzs7SUFBUjtRQUNFLCtEQUErRDtRQUMvRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVDLENBQUM7Ozs7O0lBRUQsd0NBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQ2hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbkIsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDcEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3RELENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM1RCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDNUQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3hELENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM5RCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQixJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDdEQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDekIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ2hFLENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUN0RSxDQUFDO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNuQix3RkFBd0Y7SUFDMUYsQ0FBQzs7Z0JBeEVGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixRQUFRLEVBQUUsZ0RBRVQ7aUJBQ0Y7OztnQkFQUSxjQUFjLHVCQStCUixRQUFROzs7dUJBbkJwQixLQUFLOzBCQUVMLEtBQUs7MEJBRUwsS0FBSzt3QkFFTCxLQUFLO2lDQUVMLEtBQUs7MkJBRUwsS0FBSzt1QkFFTCxLQUFLOzRCQUVMLEtBQUs7K0JBRUwsS0FBSzs7SUErQ1IseUJBQUM7Q0FBQSxBQXpFRCxJQXlFQztTQW5FWSxrQkFBa0I7OztJQUM3QixzQ0FBNEI7O0lBQzVCLDJDQUFvQzs7SUFFcEMsa0NBQ3lCOztJQUN6QixxQ0FDNEI7O0lBQzVCLHFDQUM0Qjs7SUFDNUIsbUNBQzBCOztJQUMxQiw0Q0FDb0M7O0lBQ3BDLHNDQUM2Qjs7SUFDN0Isa0NBQ3lCOztJQUN6Qix1Q0FDOEI7O0lBQzlCLDBDQUNpQzs7Ozs7SUFFckIsa0NBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3B0aW9uYWwsIE9uSW5pdCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzdHlsZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgU3R5bGVDb21wb25lbnQgfSBmcm9tICcuL3N0eWxlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC1zdHlsZS10ZXh0JyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiYW9sLXN0eWxlLXRleHRcIj48L2Rpdj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgU3R5bGVUZXh0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICBwdWJsaWMgaW5zdGFuY2U6IHN0eWxlLlRleHQ7XG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ3N0eWxlLXRleHQnO1xuXG4gIEBJbnB1dCgpXG4gIGZvbnQ6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgQElucHV0KClcbiAgb2Zmc2V0WDogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKVxuICBvZmZzZXRZOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIEBJbnB1dCgpXG4gIHNjYWxlOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIEBJbnB1dCgpXG4gIHJvdGF0ZVdpdGhWaWV3OiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKVxuICByb3RhdGlvbjogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKVxuICB0ZXh0OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIEBJbnB1dCgpXG4gIHRleHRBbGlnbjogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKVxuICB0ZXh0QmFzZUxpbmU6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBwcml2YXRlIGhvc3Q6IFN0eWxlQ29tcG9uZW50KSB7XG4gICAgaWYgKCFob3N0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FvbC1zdHlsZS10ZXh0IG11c3QgYmUgYSBkZXNjZW5kYW50IG9mIGFvbC1zdHlsZScpO1xuICAgIH1cbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgYW9sLXN0eWxlLXRleHQgd2l0aDogJywgdGhpcyk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgb2wuc3R5bGUuVGV4dCBpbnN0YW5jZSB3aXRoOiAnLCB0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHN0eWxlLlRleHQodGhpcyk7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFRleHQodGhpcy5pbnN0YW5jZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydmb250J10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0Rm9udChjaGFuZ2VzWydmb250J10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXNbJ29mZnNldFgnXSkge1xuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRPZmZzZXRYKGNoYW5nZXNbJ29mZnNldFgnXS5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgICBpZiAoY2hhbmdlc1snb2Zmc2V0WSddKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldE9mZnNldFkoY2hhbmdlc1snb2Zmc2V0WSddLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydzY2FsZSddKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldFNjYWxlKGNoYW5nZXNbJ3NjYWxlJ10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXNbJ3JvdGF0aW9uJ10pIHtcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0Um90YXRpb24oY2hhbmdlc1sncm90YXRpb24nXS5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgICBpZiAoY2hhbmdlc1sndGV4dCddKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldFRleHQoY2hhbmdlc1sndGV4dCddLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWyd0ZXh0QWxpZ24nXSkge1xuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRUZXh0QWxpZ24oY2hhbmdlc1sndGV4dEFsaWduJ10uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXNbJ3RleHRCYXNlTGluZSddKSB7XG4gICAgICB0aGlzLmluc3RhbmNlLnNldFRleHRCYXNlbGluZShjaGFuZ2VzWyd0ZXh0QmFzZUxpbmUnXS5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgICB0aGlzLmhvc3QudXBkYXRlKCk7XG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXN0eWxlLXRleHQsIHNldHRpbmcgbmV3IHByb3BlcnRpZXM6ICcsIGNoYW5nZXMpO1xuICB9XG59XG4iXX0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi9zdHlsZXMvdGV4dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDN0YsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNuQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQ7SUE2QkUsNEJBQWdDLElBQW9CO1FBQXBCLFNBQUksR0FBSixJQUFJLENBQWdCO1FBckI3QyxrQkFBYSxHQUFHLFlBQVksQ0FBQztRQXNCbEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ1YsTUFBTSxJQUFJLEtBQUssQ0FBQyxrREFBa0QsQ0FBQyxDQUFDO1FBQ3RFLENBQUM7UUFDRCx1REFBdUQ7SUFDekQsQ0FBQzs7OztJQUVELHFDQUFROzs7SUFBUjtRQUNFLCtEQUErRDtRQUMvRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVDLENBQUM7Ozs7O0lBRUQsd0NBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQ2hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbkIsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDcEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3RELENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM1RCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDNUQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3hELENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM5RCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQixJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDdEQsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDekIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ2hFLENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUN0RSxDQUFDO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNuQix3RkFBd0Y7SUFDMUYsQ0FBQzs7Z0JBeEVGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixRQUFRLEVBQUUsZ0RBRVQ7aUJBQ0Y7OztnQkFQUSxjQUFjLHVCQStCUixRQUFROzs7dUJBbkJwQixLQUFLOzBCQUVMLEtBQUs7MEJBRUwsS0FBSzt3QkFFTCxLQUFLO2lDQUVMLEtBQUs7MkJBRUwsS0FBSzt1QkFFTCxLQUFLOzRCQUVMLEtBQUs7K0JBRUwsS0FBSzs7SUErQ1IseUJBQUM7Q0FBQSxBQXpFRCxJQXlFQztTQW5FWSxrQkFBa0I7OztJQUM3QixzQ0FBNEI7O0lBQzVCLDJDQUFvQzs7SUFFcEMsa0NBQ3lCOztJQUN6QixxQ0FDNEI7O0lBQzVCLHFDQUM0Qjs7SUFDNUIsbUNBQzBCOztJQUMxQiw0Q0FDb0M7O0lBQ3BDLHNDQUM2Qjs7SUFDN0Isa0NBQ3lCOztJQUN6Qix1Q0FDOEI7O0lBQzlCLDBDQUNpQzs7Ozs7SUFFckIsa0NBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3B0aW9uYWwsIE9uSW5pdCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHN0eWxlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IFN0eWxlQ29tcG9uZW50IH0gZnJvbSAnLi9zdHlsZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtc3R5bGUtdGV4dCcsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxkaXYgY2xhc3M9XCJhb2wtc3R5bGUtdGV4dFwiPjwvZGl2PlxyXG4gIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTdHlsZVRleHRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgcHVibGljIGluc3RhbmNlOiBzdHlsZS5UZXh0O1xyXG4gIHB1YmxpYyBjb21wb25lbnRUeXBlID0gJ3N0eWxlLXRleHQnO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGZvbnQ6IHN0cmluZyB8IHVuZGVmaW5lZDtcclxuICBASW5wdXQoKVxyXG4gIG9mZnNldFg6IG51bWJlciB8IHVuZGVmaW5lZDtcclxuICBASW5wdXQoKVxyXG4gIG9mZnNldFk6IG51bWJlciB8IHVuZGVmaW5lZDtcclxuICBASW5wdXQoKVxyXG4gIHNjYWxlOiBudW1iZXIgfCB1bmRlZmluZWQ7XHJcbiAgQElucHV0KClcclxuICByb3RhdGVXaXRoVmlldzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcclxuICBASW5wdXQoKVxyXG4gIHJvdGF0aW9uOiBudW1iZXIgfCB1bmRlZmluZWQ7XHJcbiAgQElucHV0KClcclxuICB0ZXh0OiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcbiAgQElucHV0KClcclxuICB0ZXh0QWxpZ246IHN0cmluZyB8IHVuZGVmaW5lZDtcclxuICBASW5wdXQoKVxyXG4gIHRleHRCYXNlTGluZTogc3RyaW5nIHwgdW5kZWZpbmVkO1xyXG5cclxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBwcml2YXRlIGhvc3Q6IFN0eWxlQ29tcG9uZW50KSB7XHJcbiAgICBpZiAoIWhvc3QpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdhb2wtc3R5bGUtdGV4dCBtdXN0IGJlIGEgZGVzY2VuZGFudCBvZiBhb2wtc3R5bGUnKTtcclxuICAgIH1cclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBhb2wtc3R5bGUtdGV4dCB3aXRoOiAnLCB0aGlzKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NyZWF0aW5nIG9sLnN0eWxlLlRleHQgaW5zdGFuY2Ugd2l0aDogJywgdGhpcyk7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHN0eWxlLlRleHQodGhpcyk7XHJcbiAgICB0aGlzLmhvc3QuaW5zdGFuY2Uuc2V0VGV4dCh0aGlzLmluc3RhbmNlKTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoY2hhbmdlc1snZm9udCddKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0Rm9udChjaGFuZ2VzWydmb250J10uY3VycmVudFZhbHVlKTtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWydvZmZzZXRYJ10pIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRPZmZzZXRYKGNoYW5nZXNbJ29mZnNldFgnXS5jdXJyZW50VmFsdWUpO1xyXG4gICAgfVxyXG4gICAgaWYgKGNoYW5nZXNbJ29mZnNldFknXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldE9mZnNldFkoY2hhbmdlc1snb2Zmc2V0WSddLmN1cnJlbnRWYWx1ZSk7XHJcbiAgICB9XHJcbiAgICBpZiAoY2hhbmdlc1snc2NhbGUnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldFNjYWxlKGNoYW5nZXNbJ3NjYWxlJ10uY3VycmVudFZhbHVlKTtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWydyb3RhdGlvbiddKSB7XHJcbiAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0Um90YXRpb24oY2hhbmdlc1sncm90YXRpb24nXS5jdXJyZW50VmFsdWUpO1xyXG4gICAgfVxyXG4gICAgaWYgKGNoYW5nZXNbJ3RleHQnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldFRleHQoY2hhbmdlc1sndGV4dCddLmN1cnJlbnRWYWx1ZSk7XHJcbiAgICB9XHJcbiAgICBpZiAoY2hhbmdlc1sndGV4dEFsaWduJ10pIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZS5zZXRUZXh0QWxpZ24oY2hhbmdlc1sndGV4dEFsaWduJ10uY3VycmVudFZhbHVlKTtcclxuICAgIH1cclxuICAgIGlmIChjaGFuZ2VzWyd0ZXh0QmFzZUxpbmUnXSkge1xyXG4gICAgICB0aGlzLmluc3RhbmNlLnNldFRleHRCYXNlbGluZShjaGFuZ2VzWyd0ZXh0QmFzZUxpbmUnXS5jdXJyZW50VmFsdWUpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5ob3N0LnVwZGF0ZSgpO1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXN0eWxlLXRleHQsIHNldHRpbmcgbmV3IHByb3BlcnRpZXM6ICcsIGNoYW5nZXMpO1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/tilegrid.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/tilegrid.component.js
@@ -70,4 +70,4 @@ if (false) {
     /** @type {?} */
     TileGridComponent.prototype.resolutions;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZWdyaWQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvdGlsZWdyaWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDbkYsT0FBTyxFQUFFLFFBQVEsRUFBNEIsTUFBTSxZQUFZLENBQUM7QUFFaEU7SUFBQTtJQW1DQSxDQUFDOzs7O0lBZkMsb0NBQVE7OztJQUFSO1FBQ0UsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztZQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDM0MsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUMsQ0FBQztJQUNILENBQUM7Ozs7O0lBRUQsdUNBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQ2hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNDLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlDLENBQUM7SUFDSCxDQUFDOztnQkFsQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxjQUFjO29CQUN4QixRQUFRLEVBQUUsRUFBRTtpQkFDYjs7O3lCQUlFLEtBQUs7MEJBRUwsS0FBSzswQkFFTCxLQUFLOzJCQUVMLEtBQUs7eUJBRUwsS0FBSzs4QkFFTCxLQUFLOztJQWtCUix3QkFBQztDQUFBLEFBbkNELElBbUNDO1NBL0JZLGlCQUFpQjs7O0lBQzVCLHFDQUE0Qjs7SUFFNUIsbUNBQ2U7O0lBQ2Ysb0NBQ2dCOztJQUNoQixvQ0FDZ0I7O0lBQ2hCLHFDQUN3Qjs7SUFDeEIsbUNBQ29COztJQUNwQix3Q0FDc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgdGlsZWdyaWQsIEV4dGVudCwgU2l6ZSwgQ29vcmRpbmF0ZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtdGlsZWdyaWQnLFxuICB0ZW1wbGF0ZTogJycsXG59KVxuZXhwb3J0IGNsYXNzIFRpbGVHcmlkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICBpbnN0YW5jZTogdGlsZWdyaWQuVGlsZUdyaWQ7XG5cbiAgQElucHV0KClcbiAgZXh0ZW50OiBFeHRlbnQ7XG4gIEBJbnB1dCgpXG4gIG1heFpvb206IG51bWJlcjtcbiAgQElucHV0KClcbiAgbWluWm9vbTogbnVtYmVyO1xuICBASW5wdXQoKVxuICB0aWxlU2l6ZTogbnVtYmVyIHwgU2l6ZTtcbiAgQElucHV0KClcbiAgb3JpZ2luPzogQ29vcmRpbmF0ZTtcbiAgQElucHV0KClcbiAgcmVzb2x1dGlvbnM6IG51bWJlcltdO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICghdGhpcy5yZXNvbHV0aW9ucykge1xuICAgICAgdGhpcy5pbnN0YW5jZSA9IHRpbGVncmlkLmNyZWF0ZVhZWih0aGlzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyB0aWxlZ3JpZC5UaWxlR3JpZCh0aGlzKTtcbiAgICB9XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKCF0aGlzLnJlc29sdXRpb25zKSB7XG4gICAgICB0aGlzLmluc3RhbmNlID0gdGlsZWdyaWQuY3JlYXRlWFlaKHRoaXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmluc3RhbmNlID0gbmV3IHRpbGVncmlkLlRpbGVHcmlkKHRoaXMpO1xuICAgIH1cbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZWdyaWQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9wZW5sYXllcnMvIiwic291cmNlcyI6WyJsaWIvdGlsZWdyaWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBb0MsTUFBTSxlQUFlLENBQUM7QUFDbkYsT0FBTyxFQUFFLFFBQVEsRUFBNEIsTUFBTSxZQUFZLENBQUM7QUFFaEU7SUFBQTtJQW1DQSxDQUFDOzs7O0lBZkMsb0NBQVE7OztJQUFSO1FBQ0UsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztZQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDM0MsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUMsQ0FBQztJQUNILENBQUM7Ozs7O0lBRUQsdUNBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQ2hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNDLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlDLENBQUM7SUFDSCxDQUFDOztnQkFsQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxjQUFjO29CQUN4QixRQUFRLEVBQUUsRUFBRTtpQkFDYjs7O3lCQUlFLEtBQUs7MEJBRUwsS0FBSzswQkFFTCxLQUFLOzJCQUVMLEtBQUs7eUJBRUwsS0FBSzs4QkFFTCxLQUFLOztJQWtCUix3QkFBQztDQUFBLEFBbkNELElBbUNDO1NBL0JZLGlCQUFpQjs7O0lBQzVCLHFDQUE0Qjs7SUFFNUIsbUNBQ2U7O0lBQ2Ysb0NBQ2dCOztJQUNoQixvQ0FDZ0I7O0lBQ2hCLHFDQUN3Qjs7SUFDeEIsbUNBQ29COztJQUNwQix3Q0FDc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyB0aWxlZ3JpZCwgRXh0ZW50LCBTaXplLCBDb29yZGluYXRlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FvbC10aWxlZ3JpZCcsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVGlsZUdyaWRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgaW5zdGFuY2U6IHRpbGVncmlkLlRpbGVHcmlkO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGV4dGVudDogRXh0ZW50O1xyXG4gIEBJbnB1dCgpXHJcbiAgbWF4Wm9vbTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWluWm9vbTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlsZVNpemU6IG51bWJlciB8IFNpemU7XHJcbiAgQElucHV0KClcclxuICBvcmlnaW4/OiBDb29yZGluYXRlO1xyXG4gIEBJbnB1dCgpXHJcbiAgcmVzb2x1dGlvbnM6IG51bWJlcltdO1xyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIGlmICghdGhpcy5yZXNvbHV0aW9ucykge1xyXG4gICAgICB0aGlzLmluc3RhbmNlID0gdGlsZWdyaWQuY3JlYXRlWFlaKHRoaXMpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyB0aWxlZ3JpZC5UaWxlR3JpZCh0aGlzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgIGlmICghdGhpcy5yZXNvbHV0aW9ucykge1xyXG4gICAgICB0aGlzLmluc3RhbmNlID0gdGlsZWdyaWQuY3JlYXRlWFlaKHRoaXMpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyB0aWxlZ3JpZC5UaWxlR3JpZCh0aGlzKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/tilegridwmts.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/tilegridwmts.component.js
@@ -56,4 +56,4 @@ if (false) {
     /** @type {?} */
     TileGridWMTSComponent.prototype.widths;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZWdyaWR3bXRzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3RpbGVncmlkd210cy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsUUFBUSxFQUFvQixNQUFNLFlBQVksQ0FBQztBQUN4RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUV6RDtJQUkyQyxpREFBaUI7SUFKNUQ7O0lBeUJBLENBQUM7Ozs7SUFIQyx3Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMxQyxDQUFDOztnQkF4QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7eUJBSUUsS0FBSzswQkFFTCxLQUFLOzhCQUVMLEtBQUs7NEJBRUwsS0FBSzt3QkFFTCxLQUFLOzRCQUVMLEtBQUs7eUJBRUwsS0FBSzs7SUFNUiw0QkFBQztDQUFBLEFBekJELENBSTJDLGlCQUFpQixHQXFCM0Q7U0FyQlkscUJBQXFCOzs7SUFDaEMseUNBQXdCOztJQUV4Qix1Q0FDb0I7O0lBQ3BCLHdDQUN1Qjs7SUFDdkIsNENBQ3NCOztJQUN0QiwwQ0FDb0I7O0lBQ3BCLHNDQUNlOztJQUNmLDBDQUM4Qjs7SUFDOUIsdUNBQ2tCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyB0aWxlZ3JpZCwgU2l6ZSwgQ29vcmRpbmF0ZSB9IGZyb20gJ29wZW5sYXllcnMnO1xuaW1wb3J0IHsgVGlsZUdyaWRDb21wb25lbnQgfSBmcm9tICcuL3RpbGVncmlkLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FvbC10aWxlZ3JpZC13bXRzJyxcbiAgdGVtcGxhdGU6ICcnLFxufSlcbmV4cG9ydCBjbGFzcyBUaWxlR3JpZFdNVFNDb21wb25lbnQgZXh0ZW5kcyBUaWxlR3JpZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGluc3RhbmNlOiB0aWxlZ3JpZC5XTVRTO1xuXG4gIEBJbnB1dCgpXG4gIG9yaWdpbj86IENvb3JkaW5hdGU7XG4gIEBJbnB1dCgpXG4gIG9yaWdpbnM/OiBDb29yZGluYXRlW107XG4gIEBJbnB1dCgpXG4gIHJlc29sdXRpb25zOiBudW1iZXJbXTtcbiAgQElucHV0KClcbiAgbWF0cml4SWRzOiBzdHJpbmdbXTtcbiAgQElucHV0KClcbiAgc2l6ZXM/OiBTaXplW107XG4gIEBJbnB1dCgpXG4gIHRpbGVTaXplcz86IChudW1iZXIgfCBTaXplKVtdO1xuICBASW5wdXQoKVxuICB3aWR0aHM/OiBudW1iZXJbXTtcblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHRpbGVncmlkLldNVFModGhpcyk7XG4gIH1cbn1cbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZWdyaWR3bXRzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcGVubGF5ZXJzLyIsInNvdXJjZXMiOlsibGliL3RpbGVncmlkd210cy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsUUFBUSxFQUFvQixNQUFNLFlBQVksQ0FBQztBQUN4RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUV6RDtJQUkyQyxpREFBaUI7SUFKNUQ7O0lBeUJBLENBQUM7Ozs7SUFIQyx3Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMxQyxDQUFDOztnQkF4QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7eUJBSUUsS0FBSzswQkFFTCxLQUFLOzhCQUVMLEtBQUs7NEJBRUwsS0FBSzt3QkFFTCxLQUFLOzRCQUVMLEtBQUs7eUJBRUwsS0FBSzs7SUFNUiw0QkFBQztDQUFBLEFBekJELENBSTJDLGlCQUFpQixHQXFCM0Q7U0FyQlkscUJBQXFCOzs7SUFDaEMseUNBQXdCOztJQUV4Qix1Q0FDb0I7O0lBQ3BCLHdDQUN1Qjs7SUFDdkIsNENBQ3NCOztJQUN0QiwwQ0FDb0I7O0lBQ3BCLHNDQUNlOztJQUNmLDBDQUM4Qjs7SUFDOUIsdUNBQ2tCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHRpbGVncmlkLCBTaXplLCBDb29yZGluYXRlIH0gZnJvbSAnb3BlbmxheWVycyc7XHJcbmltcG9ydCB7IFRpbGVHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi90aWxlZ3JpZC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhb2wtdGlsZWdyaWQtd210cycsXHJcbiAgdGVtcGxhdGU6ICcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVGlsZUdyaWRXTVRTQ29tcG9uZW50IGV4dGVuZHMgVGlsZUdyaWRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIGluc3RhbmNlOiB0aWxlZ3JpZC5XTVRTO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIG9yaWdpbj86IENvb3JkaW5hdGU7XHJcbiAgQElucHV0KClcclxuICBvcmlnaW5zPzogQ29vcmRpbmF0ZVtdO1xyXG4gIEBJbnB1dCgpXHJcbiAgcmVzb2x1dGlvbnM6IG51bWJlcltdO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWF0cml4SWRzOiBzdHJpbmdbXTtcclxuICBASW5wdXQoKVxyXG4gIHNpemVzPzogU2l6ZVtdO1xyXG4gIEBJbnB1dCgpXHJcbiAgdGlsZVNpemVzPzogKG51bWJlciB8IFNpemUpW107XHJcbiAgQElucHV0KClcclxuICB3aWR0aHM/OiBudW1iZXJbXTtcclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IHRpbGVncmlkLldNVFModGhpcyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/lib/view.component.js
+++ b/node_modules/ngx-openlayers/esm5/lib/view.component.js
@@ -142,4 +142,4 @@ if (false) {
      */
     ViewComponent.prototype.host;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlldy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi92aWV3LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQStDLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEgsT0FBTyxFQUFFLElBQUksRUFBbUMsTUFBTSxZQUFZLENBQUM7QUFDbkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DO0lBNkNFLHVCQUFvQixJQUFrQjtRQUFsQixTQUFJLEdBQUosSUFBSSxDQUFjO1FBckMvQixrQkFBYSxHQUFHLE1BQU0sQ0FBQztRQWdDOUIsa0JBQWEsR0FBRyxLQUFLLENBQUM7UUFHdEIsaUJBQVksR0FBOEIsSUFBSSxZQUFZLEVBQWUsQ0FBQztJQUVqQyxDQUFDOzs7O0lBRTFDLGdDQUFROzs7SUFBUjtRQUFBLGlCQU1DO1FBTEMseURBQXlEO1FBQ3pELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUUxQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsVUFBQyxLQUFrQixJQUFLLE9BQUEsS0FBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQTdCLENBQTZCLENBQUMsQ0FBQztJQUN6RixDQUFDOzs7OztJQUVELG1DQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjs7WUFDMUIsVUFBVSxHQUE2QixFQUFFO1FBQy9DLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbkIsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUNELEdBQUcsQ0FBQyxDQUFDLElBQU0sR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDMUIsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ1osS0FBSyxNQUFNO3dCQUNULHFFQUFxRTt3QkFDckUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7NEJBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDO3dCQUM3RCxDQUFDO3dCQUFDLElBQUksQ0FBQyxDQUFDOzRCQUNOLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQzt3QkFDbkQsQ0FBQzt3QkFDRCxLQUFLLENBQUM7b0JBQ1I7d0JBQ0UsS0FBSyxDQUFDO2dCQUNWLENBQUM7Z0JBQ0QsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7WUFDOUMsQ0FBQztRQUNILENBQUM7UUFDRCxxRkFBcUY7UUFDckYsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2pELENBQUM7Ozs7SUFFRCxtQ0FBVzs7O0lBQVg7UUFDRSxvQ0FBb0M7SUFDdEMsQ0FBQzs7Z0JBbkZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsVUFBVTtvQkFDcEIsUUFBUSxFQUFFLHFDQUVUO2lCQUNGOzs7Z0JBUFEsWUFBWTs7O29DQVlsQixLQUFLO2lDQUVMLEtBQUs7eUJBRUwsS0FBSztnQ0FFTCxLQUFLO2dDQUVMLEtBQUs7MEJBRUwsS0FBSzswQkFFTCxLQUFLOzZCQUVMLEtBQUs7OEJBRUwsS0FBSzsyQkFFTCxLQUFLO3VCQUVMLEtBQUs7NkJBRUwsS0FBSzt5QkFFTCxLQUFLOzZCQUVMLEtBQUs7Z0NBR0wsS0FBSzsrQkFHTCxNQUFNOztJQTBDVCxvQkFBQztDQUFBLEFBcEZELElBb0ZDO1NBOUVZLGFBQWE7OztJQUN4QixpQ0FBc0I7O0lBQ3RCLHNDQUE4Qjs7SUFFOUIsMENBQ29DOztJQUNwQyx1Q0FDd0I7O0lBQ3hCLCtCQUNlOztJQUNmLHNDQUNzQjs7SUFDdEIsc0NBQ3NCOztJQUN0QixnQ0FDZ0I7O0lBQ2hCLGdDQUNnQjs7SUFDaEIsbUNBQ21COztJQUNuQixvQ0FDc0I7O0lBQ3RCLGlDQUNpQjs7SUFDakIsNkJBQ2E7O0lBQ2IsbUNBQ21COztJQUNuQiwrQkFDbUI7O0lBQ25CLG1DQUNtQjs7SUFFbkIsc0NBQ3NCOztJQUV0QixxQ0FDMEU7Ozs7O0lBRTlELDZCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIFNpbXBsZUNoYW5nZXMsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBWaWV3LCBFeHRlbnQsIE9iamVjdEV2ZW50LCBDb29yZGluYXRlIH0gZnJvbSAnb3BlbmxheWVycyc7XG5pbXBvcnQgeyBNYXBDb21wb25lbnQgfSBmcm9tICcuL21hcC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhb2wtdmlldycsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBWaWV3Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gIHB1YmxpYyBpbnN0YW5jZTogVmlldztcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAndmlldyc7XG5cbiAgQElucHV0KClcbiAgY29uc3RyYWluUm90YXRpb246IGJvb2xlYW4gfCBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIGVuYWJsZVJvdGF0aW9uOiBib29sZWFuO1xuICBASW5wdXQoKVxuICBleHRlbnQ6IEV4dGVudDtcbiAgQElucHV0KClcbiAgbWF4UmVzb2x1dGlvbjogbnVtYmVyO1xuICBASW5wdXQoKVxuICBtaW5SZXNvbHV0aW9uOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIG1heFpvb206IG51bWJlcjtcbiAgQElucHV0KClcbiAgbWluWm9vbTogbnVtYmVyO1xuICBASW5wdXQoKVxuICByZXNvbHV0aW9uOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIHJlc29sdXRpb25zOiBudW1iZXJbXTtcbiAgQElucHV0KClcbiAgcm90YXRpb246IG51bWJlcjtcbiAgQElucHV0KClcbiAgem9vbTogbnVtYmVyO1xuICBASW5wdXQoKVxuICB6b29tRmFjdG9yOiBudW1iZXI7XG4gIEBJbnB1dCgpXG4gIGNlbnRlcjogQ29vcmRpbmF0ZTtcbiAgQElucHV0KClcbiAgcHJvamVjdGlvbjogc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIHpvb21BbmltYXRpb24gPSBmYWxzZTtcblxuICBAT3V0cHV0KClcbiAgb25DaGFuZ2Vab29tOiBFdmVudEVtaXR0ZXI8T2JqZWN0RXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcjxPYmplY3RFdmVudD4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGhvc3Q6IE1hcENvbXBvbmVudCkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnY3JlYXRpbmcgb2wuVmlldyBpbnN0YW5jZSB3aXRoOiAnLCB0aGlzKTtcbiAgICB0aGlzLmluc3RhbmNlID0gbmV3IFZpZXcodGhpcyk7XG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFZpZXcodGhpcy5pbnN0YW5jZSk7XG5cbiAgICB0aGlzLmluc3RhbmNlLm9uKCdjaGFuZ2U6em9vbScsIChldmVudDogT2JqZWN0RXZlbnQpID0+IHRoaXMub25DaGFuZ2Vab29tLmVtaXQoZXZlbnQpKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBjb25zdCBwcm9wZXJ0aWVzOiB7IFtpbmRleDogc3RyaW5nXTogYW55IH0gPSB7fTtcbiAgICBpZiAoIXRoaXMuaW5zdGFuY2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yIChjb25zdCBrZXkgaW4gY2hhbmdlcykge1xuICAgICAgaWYgKGNoYW5nZXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICBzd2l0Y2ggKGtleSkge1xuICAgICAgICAgIGNhc2UgJ3pvb20nOlxuICAgICAgICAgICAgLyoqIFdvcmstYXJvdW5kOiBzZXR0aW5nIHRoZSB6b29tIHZpYSBzZXRQcm9wZXJ0aWVzIGRvZXMgbm90IHdvcmsuICovXG4gICAgICAgICAgICBpZiAodGhpcy56b29tQW5pbWF0aW9uKSB7XG4gICAgICAgICAgICAgIHRoaXMuaW5zdGFuY2UuYW5pbWF0ZSh7IHpvb206IGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWUgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0aGlzLmluc3RhbmNlLnNldFpvb20oY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcHJvcGVydGllc1trZXldID0gY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXZpZXcsIHNldHRpbmcgbmV3IHByb3BlcnRpZXM6ICcsIHByb3BlcnRpZXMpO1xuICAgIHRoaXMuaW5zdGFuY2Uuc2V0UHJvcGVydGllcyhwcm9wZXJ0aWVzLCBmYWxzZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygncmVtb3ZpbmcgYW9sLXZpZXcnKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlldy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3BlbmxheWVycy8iLCJzb3VyY2VzIjpbImxpYi92aWV3LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQStDLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEgsT0FBTyxFQUFFLElBQUksRUFBbUMsTUFBTSxZQUFZLENBQUM7QUFDbkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DO0lBNkNFLHVCQUFvQixJQUFrQjtRQUFsQixTQUFJLEdBQUosSUFBSSxDQUFjO1FBckMvQixrQkFBYSxHQUFHLE1BQU0sQ0FBQztRQWdDOUIsa0JBQWEsR0FBRyxLQUFLLENBQUM7UUFHdEIsaUJBQVksR0FBOEIsSUFBSSxZQUFZLEVBQWUsQ0FBQztJQUVqQyxDQUFDOzs7O0lBRTFDLGdDQUFROzs7SUFBUjtRQUFBLGlCQU1DO1FBTEMseURBQXlEO1FBQ3pELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUUxQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsVUFBQyxLQUFrQixJQUFLLE9BQUEsS0FBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQTdCLENBQTZCLENBQUMsQ0FBQztJQUN6RixDQUFDOzs7OztJQUVELG1DQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjs7WUFDMUIsVUFBVSxHQUE2QixFQUFFO1FBQy9DLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDbkIsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUNELEdBQUcsQ0FBQyxDQUFDLElBQU0sR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDMUIsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ1osS0FBSyxNQUFNO3dCQUNULHFFQUFxRTt3QkFDckUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7NEJBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDO3dCQUM3RCxDQUFDO3dCQUFDLElBQUksQ0FBQyxDQUFDOzRCQUNOLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQzt3QkFDbkQsQ0FBQzt3QkFDRCxLQUFLLENBQUM7b0JBQ1I7d0JBQ0UsS0FBSyxDQUFDO2dCQUNWLENBQUM7Z0JBQ0QsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7WUFDOUMsQ0FBQztRQUNILENBQUM7UUFDRCxxRkFBcUY7UUFDckYsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2pELENBQUM7Ozs7SUFFRCxtQ0FBVzs7O0lBQVg7UUFDRSxvQ0FBb0M7SUFDdEMsQ0FBQzs7Z0JBbkZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsVUFBVTtvQkFDcEIsUUFBUSxFQUFFLHFDQUVUO2lCQUNGOzs7Z0JBUFEsWUFBWTs7O29DQVlsQixLQUFLO2lDQUVMLEtBQUs7eUJBRUwsS0FBSztnQ0FFTCxLQUFLO2dDQUVMLEtBQUs7MEJBRUwsS0FBSzswQkFFTCxLQUFLOzZCQUVMLEtBQUs7OEJBRUwsS0FBSzsyQkFFTCxLQUFLO3VCQUVMLEtBQUs7NkJBRUwsS0FBSzt5QkFFTCxLQUFLOzZCQUVMLEtBQUs7Z0NBR0wsS0FBSzsrQkFHTCxNQUFNOztJQTBDVCxvQkFBQztDQUFBLEFBcEZELElBb0ZDO1NBOUVZLGFBQWE7OztJQUN4QixpQ0FBc0I7O0lBQ3RCLHNDQUE4Qjs7SUFFOUIsMENBQ29DOztJQUNwQyx1Q0FDd0I7O0lBQ3hCLCtCQUNlOztJQUNmLHNDQUNzQjs7SUFDdEIsc0NBQ3NCOztJQUN0QixnQ0FDZ0I7O0lBQ2hCLGdDQUNnQjs7SUFDaEIsbUNBQ21COztJQUNuQixvQ0FDc0I7O0lBQ3RCLGlDQUNpQjs7SUFDakIsNkJBQ2E7O0lBQ2IsbUNBQ21COztJQUNuQiwrQkFDbUI7O0lBQ25CLG1DQUNtQjs7SUFFbkIsc0NBQ3NCOztJQUV0QixxQ0FDMEU7Ozs7O0lBRTlELDZCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIFNpbXBsZUNoYW5nZXMsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFZpZXcsIEV4dGVudCwgT2JqZWN0RXZlbnQsIENvb3JkaW5hdGUgfSBmcm9tICdvcGVubGF5ZXJzJztcclxuaW1wb3J0IHsgTWFwQ29tcG9uZW50IH0gZnJvbSAnLi9tYXAuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW9sLXZpZXcnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIFZpZXdDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcclxuICBwdWJsaWMgaW5zdGFuY2U6IFZpZXc7XHJcbiAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAndmlldyc7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY29uc3RyYWluUm90YXRpb246IGJvb2xlYW4gfCBudW1iZXI7XHJcbiAgQElucHV0KClcclxuICBlbmFibGVSb3RhdGlvbjogYm9vbGVhbjtcclxuICBASW5wdXQoKVxyXG4gIGV4dGVudDogRXh0ZW50O1xyXG4gIEBJbnB1dCgpXHJcbiAgbWF4UmVzb2x1dGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWluUmVzb2x1dGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWF4Wm9vbTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgbWluWm9vbTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgcmVzb2x1dGlvbjogbnVtYmVyO1xyXG4gIEBJbnB1dCgpXHJcbiAgcmVzb2x1dGlvbnM6IG51bWJlcltdO1xyXG4gIEBJbnB1dCgpXHJcbiAgcm90YXRpb246IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHpvb206IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIHpvb21GYWN0b3I6IG51bWJlcjtcclxuICBASW5wdXQoKVxyXG4gIGNlbnRlcjogQ29vcmRpbmF0ZTtcclxuICBASW5wdXQoKVxyXG4gIHByb2plY3Rpb246IHN0cmluZztcclxuXHJcbiAgQElucHV0KClcclxuICB6b29tQW5pbWF0aW9uID0gZmFsc2U7XHJcblxyXG4gIEBPdXRwdXQoKVxyXG4gIG9uQ2hhbmdlWm9vbTogRXZlbnRFbWl0dGVyPE9iamVjdEV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8T2JqZWN0RXZlbnQ+KCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaG9zdDogTWFwQ29tcG9uZW50KSB7fVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjcmVhdGluZyBvbC5WaWV3IGluc3RhbmNlIHdpdGg6ICcsIHRoaXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBWaWV3KHRoaXMpO1xyXG4gICAgdGhpcy5ob3N0Lmluc3RhbmNlLnNldFZpZXcodGhpcy5pbnN0YW5jZSk7XHJcblxyXG4gICAgdGhpcy5pbnN0YW5jZS5vbignY2hhbmdlOnpvb20nLCAoZXZlbnQ6IE9iamVjdEV2ZW50KSA9PiB0aGlzLm9uQ2hhbmdlWm9vbS5lbWl0KGV2ZW50KSk7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICBjb25zdCBwcm9wZXJ0aWVzOiB7IFtpbmRleDogc3RyaW5nXTogYW55IH0gPSB7fTtcclxuICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBjaGFuZ2VzKSB7XHJcbiAgICAgIGlmIChjaGFuZ2VzLmhhc093blByb3BlcnR5KGtleSkpIHtcclxuICAgICAgICBzd2l0Y2ggKGtleSkge1xyXG4gICAgICAgICAgY2FzZSAnem9vbSc6XHJcbiAgICAgICAgICAgIC8qKiBXb3JrLWFyb3VuZDogc2V0dGluZyB0aGUgem9vbSB2aWEgc2V0UHJvcGVydGllcyBkb2VzIG5vdCB3b3JrLiAqL1xyXG4gICAgICAgICAgICBpZiAodGhpcy56b29tQW5pbWF0aW9uKSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5pbnN0YW5jZS5hbmltYXRlKHsgem9vbTogY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZSB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICB0aGlzLmluc3RhbmNlLnNldFpvb20oY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgcHJvcGVydGllc1trZXldID0gY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gY29uc29sZS5sb2coJ2NoYW5nZXMgZGV0ZWN0ZWQgaW4gYW9sLXZpZXcsIHNldHRpbmcgbmV3IHByb3BlcnRpZXM6ICcsIHByb3BlcnRpZXMpO1xyXG4gICAgdGhpcy5pbnN0YW5jZS5zZXRQcm9wZXJ0aWVzKHByb3BlcnRpZXMsIGZhbHNlKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ3JlbW92aW5nIGFvbC12aWV3Jyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==
\ No newline at end of file
--- a/node_modules/ngx-openlayers/esm5/public_api.js
+++ b/node_modules/ngx-openlayers/esm5/public_api.js
@@ -154,4 +154,4 @@ var AngularOpenlayersModule = /** @class */ (function () {
     return AngularOpenlayersModule;
 }());
 export { AngularOpenlayersModule };
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
--- a/node_modules/ngx-openlayers/fesm2015/ngx-openlayers.js
+++ b/node_modules/ngx-openlayers/fesm2015/ngx-openlayers.js
@@ -496,7 +496,10 @@ LayerVectorComponent.ctorParameters = () => [
     { type: LayerGroupComponent, decorators: [{ type: Optional }] }
 ];
 LayerVectorComponent.propDecorators = {
-    renderBuffer: [{ type: Input }]
+    renderBuffer: [{ type: Input }],
+    style: [{ type: Input }],
+    updateWhileAnimating: [{ type: Input }],
+    updateWhileInteracting: [{ type: Input }]
 };
 
 /**
@@ -3584,4 +3587,4 @@ AngularOpenlayersModule.decorators = [
 
 export { MapComponent, ViewComponent, GraticuleComponent, LayerGroupComponent, LayerImageComponent, LayerTileComponent, LayerVectorComponent, LayerVectorTileComponent, SourceOsmComponent, SourceBingmapsComponent, SourceClusterComponent, SourceVectorComponent, SourceXYZComponent, SourceVectorTileComponent, SourceTileWMSComponent, SourceTileWMTSComponent, SourceTileJSONComponent, SourceGeoJSONComponent, SourceImageStaticComponent, SourceImageWMSComponent, SourceRasterComponent, SourceImageArcGISRestComponent, FeatureComponent, GeometryLinestringComponent, GeometryPointComponent, GeometryPolygonComponent, GeometryCircleComponent, CoordinateComponent, CollectionCoordinatesComponent, StyleComponent, StyleCircleComponent, StyleFillComponent, StyleIconComponent, StyleStrokeComponent, StyleTextComponent, DefaultControlComponent, ControlComponent, ControlAttributionComponent, ControlFullScreenComponent, ControlMousePositionComponent, ControlOverviewMapComponent, ControlRotateComponent, ControlScaleLineComponent, ControlZoomComponent, ControlZoomSliderComponent, ControlZoomToExtentComponent, FormatMVTComponent, TileGridComponent, TileGridWMTSComponent, DefaultInteractionComponent, DoubleClickZoomInteractionComponent, DragAndDropInteractionComponent, DragBoxInteractionComponent, DragPanInteractionComponent, DragRotateInteractionComponent, DragRotateAndZoomInteractionComponent, DragZoomInteractionComponent, MouseWheelZoomInteractionComponent, PinchZoomInteractionComponent, DrawInteractionComponent, SelectInteractionComponent, ModifyInteractionComponent, TranslateInteractionComponent, OverlayComponent, ContentComponent, AttributionComponent, AttributionsComponent, AngularOpenlayersModule, FormatComponent as ɵc, LayerComponent as ɵa, SourceComponent as ɵb };
 
-//# sourceMappingURL=data:application/json;charset=utf-8;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,
\ No newline at end of file
--- a/node_modules/ngx-openlayers/fesm2015/ngx-openlayers.js.map
+++ b/node_modules/ngx-openlayers/fesm2015/ngx-openlayers.js.map
@@ -1 +1 @@
-{"version":3,"file":"ngx-openlayers.js.map","sources":["ng://ngx-openlayers/lib/map.component.ts","ng://ngx-openlayers/lib/view.component.ts","ng://ngx-openlayers/lib/graticule.component.ts","ng://ngx-openlayers/lib/layers/layer.component.ts","ng://ngx-openlayers/lib/layers/layergroup.component.ts","ng://ngx-openlayers/lib/layers/layerimage.component.ts","ng://ngx-openlayers/lib/layers/layertile.component.ts","ng://ngx-openlayers/lib/layers/layervector.component.ts","ng://ngx-openlayers/lib/layers/layervectortile.component.ts","ng://ngx-openlayers/lib/sources/source.component.ts","ng://ngx-openlayers/lib/tilegrid.component.ts","ng://ngx-openlayers/lib/sources/raster.component.ts","ng://ngx-openlayers/lib/sources/xyz.component.ts","ng://ngx-openlayers/lib/sources/osm.component.ts","ng://ngx-openlayers/lib/sources/bingmaps.component.ts","ng://ngx-openlayers/lib/sources/vector.component.ts","ng://ngx-openlayers/lib/sources/cluster.component.ts","ng://ngx-openlayers/lib/tilegridwmts.component.ts","ng://ngx-openlayers/lib/sources/tilewmts.component.ts","ng://ngx-openlayers/lib/formats/format.component.ts","ng://ngx-openlayers/lib/sources/vectortile.component.ts","ng://ngx-openlayers/lib/sources/tilewms.component.ts","ng://ngx-openlayers/lib/sources/tilejson.component.ts","ng://ngx-openlayers/lib/sources/geojson.component.ts","ng://ngx-openlayers/lib/sources/imagestatic.component.ts","ng://ngx-openlayers/lib/sources/imagewms.component.ts","ng://ngx-openlayers/lib/sources/imagearcgisrest.component.ts","ng://ngx-openlayers/lib/feature.component.ts","ng://ngx-openlayers/lib/geometry.components.ts","ng://ngx-openlayers/lib/content.component.ts","ng://ngx-openlayers/lib/overlay.component.ts","ng://ngx-openlayers/lib/coordinate.component.ts","ng://ngx-openlayers/lib/styles/style.component.ts","ng://ngx-openlayers/lib/styles/circle.component.ts","ng://ngx-openlayers/lib/styles/text.component.ts","ng://ngx-openlayers/lib/styles/stroke.component.ts","ng://ngx-openlayers/lib/styles/icon.component.ts","ng://ngx-openlayers/lib/styles/fill.component.ts","ng://ngx-openlayers/lib/controls/default.component.ts","ng://ngx-openlayers/lib/controls/control.component.ts","ng://ngx-openlayers/lib/controls/attribution.component.ts","ng://ngx-openlayers/lib/controls/fullscreen.component.ts","ng://ngx-openlayers/lib/controls/mouseposition.component.ts","ng://ngx-openlayers/lib/controls/overviewmap.component.ts","ng://ngx-openlayers/lib/controls/rotate.component.ts","ng://ngx-openlayers/lib/controls/scaleline.component.ts","ng://ngx-openlayers/lib/controls/zoom.component.ts","ng://ngx-openlayers/lib/controls/zoomslider.component.ts","ng://ngx-openlayers/lib/controls/zoomtoextent.component.ts","ng://ngx-openlayers/lib/formats/mvt.component.ts","ng://ngx-openlayers/lib/interactions/default.component.ts","ng://ngx-openlayers/lib/interactions/doubleclickzoom.component.ts","ng://ngx-openlayers/lib/interactions/draganddrop.component.ts","ng://ngx-openlayers/lib/interactions/dragbox.component.ts","ng://ngx-openlayers/lib/interactions/dragpan.component.ts","ng://ngx-openlayers/lib/interactions/dragrotate.component.ts","ng://ngx-openlayers/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-openlayers/lib/interactions/dragzoom.component.ts","ng://ngx-openlayers/lib/interactions/mousewheelzoom.component.ts","ng://ngx-openlayers/lib/interactions/pinchzoom.component.ts","ng://ngx-openlayers/lib/interactions/draw.component.ts","ng://ngx-openlayers/lib/interactions/select.component.ts","ng://ngx-openlayers/lib/interactions/modify.component.ts","ng://ngx-openlayers/lib/interactions/translate.component.ts","ng://ngx-openlayers/lib/attribution.component.ts","ng://ngx-openlayers/lib/attributions.component.ts","ng://ngx-openlayers/public_api.ts"],"sourcesContent":["import {\n  Component,\n  OnInit,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { Map, MapBrowserEvent, MapEvent, render, ObjectEvent, control, interaction } from 'openlayers';\n\n@Component({\n  selector: 'aol-map',\n  template: `\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\n    <ng-content></ng-content>\n  `,\n})\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\n  public instance: Map;\n  public componentType = 'map';\n\n  @Input()\n  width = '100%';\n  @Input()\n  height = '100%';\n  @Input()\n  pixelRatio: number;\n  @Input()\n  keyboardEventTarget: Element | string;\n  @Input()\n  loadTilesWhileAnimating: boolean;\n  @Input()\n  loadTilesWhileInteracting: boolean;\n  @Input()\n  logo: string | boolean;\n  @Input()\n  renderer: 'canvas' | 'webgl';\n\n  @Output()\n  onClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onDblClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onMoveEnd: EventEmitter<MapEvent>;\n  @Output()\n  onPointerDrag: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onPointerMove: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onPostCompose: EventEmitter<render.Event>;\n  @Output()\n  onPostRender: EventEmitter<MapEvent>;\n  @Output()\n  onPreCompose: EventEmitter<render.Event>;\n  @Output()\n  onPropertyChange: EventEmitter<ObjectEvent>;\n  @Output()\n  onSingleClick: EventEmitter<MapBrowserEvent>;\n\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\n  controls: control.Control[] = [];\n  interactions: interaction.Interaction[] = [];\n\n  constructor(private host: ElementRef) {\n    this.onClick = new EventEmitter<MapBrowserEvent>();\n    this.onDblClick = new EventEmitter<MapBrowserEvent>();\n    this.onMoveEnd = new EventEmitter<MapEvent>();\n    this.onPointerDrag = new EventEmitter<MapBrowserEvent>();\n    this.onPointerMove = new EventEmitter<MapBrowserEvent>();\n    this.onPostCompose = new EventEmitter<render.Event>();\n    this.onPostRender = new EventEmitter<MapEvent>();\n    this.onPreCompose = new EventEmitter<render.Event>();\n    this.onPropertyChange = new EventEmitter<ObjectEvent>();\n    this.onSingleClick = new EventEmitter<MapBrowserEvent>();\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.Map instance with:', this);\n    this.instance = new Map(this);\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\n    this.instance.on('click', (event: MapBrowserEvent) => this.onClick.emit(event));\n    this.instance.on('dblclick', (event: MapBrowserEvent) => this.onDblClick.emit(event));\n    this.instance.on('moveend', (event: MapEvent) => this.onMoveEnd.emit(event));\n    this.instance.on('pointerdrag', (event: MapBrowserEvent) => this.onPointerDrag.emit(event));\n    this.instance.on('pointermove', (event: MapBrowserEvent) => this.onPointerMove.emit(event));\n    this.instance.on('postcompose', (event: render.Event) => this.onPostCompose.emit(event));\n    this.instance.on('postrender', (event: MapEvent) => this.onPostRender.emit(event));\n    this.instance.on('precompose', (event: render.Event) => this.onPreCompose.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.onPropertyChange.emit(event));\n    this.instance.on('singleclick', (event: MapBrowserEvent) => this.onSingleClick.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngAfterViewInit() {\n    this.instance.updateSize();\n  }\n}\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { View, Extent, ObjectEvent, Coordinate } from 'openlayers';\nimport { MapComponent } from './map.component';\n\n@Component({\n  selector: 'aol-view',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: View;\n  public componentType = 'view';\n\n  @Input()\n  constrainRotation: boolean | number;\n  @Input()\n  enableRotation: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  resolution: number;\n  @Input()\n  resolutions: number[];\n  @Input()\n  rotation: number;\n  @Input()\n  zoom: number;\n  @Input()\n  zoomFactor: number;\n  @Input()\n  center: Coordinate;\n  @Input()\n  projection: string;\n\n  @Input()\n  zoomAnimation = false;\n\n  @Output()\n  onChangeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n\n  constructor(private host: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.View instance with: ', this);\n    this.instance = new View(this);\n    this.host.instance.setView(this.instance);\n\n    this.instance.on('change:zoom', (event: ObjectEvent) => this.onChangeZoom.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'zoom':\n            /** Work-around: setting the zoom via setProperties does not work. */\n            if (this.zoomAnimation) {\n              this.instance.animate({ zoom: changes[key].currentValue });\n            } else {\n              this.instance.setZoom(changes[key].currentValue);\n            }\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-view');\n  }\n}\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Graticule, style } from 'openlayers';\nimport { MapComponent } from './map.component';\n\n@Component({\n  selector: 'aol-graticule',\n  template: '<ng-content></ng-content>',\n})\nexport class GraticuleComponent implements AfterContentInit, OnChanges {\n  instance: any;\n  public componentType = 'graticule';\n\n  @Input()\n  strokeStyle: style.Stroke;\n  @Input()\n  showLabels: boolean;\n  @Input()\n  lonLabelPosition: number;\n  @Input()\n  latLabelPosition: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    if (properties) {\n      this.instance = new Graticule(properties);\n    }\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngAfterContentInit(): void {\n    this.instance = new Graticule({\n      strokeStyle: this.strokeStyle,\n      showLabels: this.showLabels,\n      lonLabelPosition: this.lonLabelPosition,\n      latLabelPosition: this.latLabelPosition,\n    });\n    this.instance.setMap(this.map.instance);\n  }\n}\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Extent } from 'openlayers';\nimport { LayerGroupComponent } from './layergroup.component';\n\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: any;\n  public componentType = 'layer';\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  zIndex: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n\n  @Input()\n  precompose: (evt: ol.events.Event) => void;\n  @Input()\n  postcompose: (evt: ol.events.Event) => void;\n\n  constructor(protected host: LayerGroupComponent | MapComponent) {}\n\n  ngOnInit() {\n    if (this.precompose !== null && this.precompose !== undefined) {\n      this.instance.on('precompose', this.precompose);\n    }\n    if (this.postcompose !== null && this.postcompose !== undefined) {\n      this.instance.on('postcompose', this.postcompose);\n    }\n    this.host.instance.getLayers().push(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.getLayers().remove(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n        if (key === 'precompose') {\n          this.instance.un('precompose', changes[key].previousValue);\n          this.instance.on('precompose', changes[key].currentValue);\n        }\n        if (key === 'postcompose') {\n          this.instance.un('postcompose', changes[key].previousValue);\n          this.instance.on('postcompose', changes[key].currentValue);\n        }\n      }\n    }\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n}\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\nimport { layer } from 'openlayers';\nimport { LayerComponent } from './layer.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-layer-group',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\n  public instance: ol.layer.Group;\n\n  constructor(\n    map: MapComponent,\n    @SkipSelf()\n    @Optional()\n    group?: LayerGroupComponent\n  ) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log(`creating ol.layer.Group instance with:`, this);\n    this.instance = new layer.Group(this);\n    super.ngOnInit();\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { Extent, layer, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-image',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\n  public source: source.Image;\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  zIndex: number;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    this.instance = new layer.Image(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { layer, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-tile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: source.Tile;\n\n  @Input()\n  preload: number;\n  @Input()\n  useInterimTilesOnError: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Tile instance with:', this);\n    this.instance = new layer.Tile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { layer, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: source.Vector;\n\n  @Input()\n  renderBuffer: number;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Vector instance with:', this);\n    this.instance = new layer.Vector(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnInit, Input, Optional, SimpleChanges, OnChanges } from '@angular/core';\nimport { layer, style, StyleFunction } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\n  @Input()\n  renderBuffer: number;\n  @Input()\n  renderMode: layer.VectorTileRenderType | string;\n  /* not marked as optional in the typings */\n  @Input()\n  renderOrder: (feature1: ol.Feature, feature2: ol.Feature) => number;\n  @Input()\n  style: style.Style | style.Style[] | StyleFunction;\n  @Input()\n  updateWhileAnimating: boolean;\n  @Input()\n  updateWhileInteracting: boolean;\n  @Input()\n  visible: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.VectorTile instance with:', this);\n    this.instance = new layer.VectorTile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Input, OnDestroy } from '@angular/core';\nimport { source } from 'openlayers';\nimport { LayerComponent } from '../layers/layer.component';\nimport AttributionLike = ol.AttributionLike;\nimport { SourceRasterComponent } from './raster.component';\n\nexport class SourceComponent implements OnDestroy {\n  public instance: source.Source;\n  public componentType = 'source';\n\n  @Input()\n  attributions: AttributionLike;\n\n  constructor(protected host: LayerComponent, protected raster?: SourceRasterComponent) {}\n\n  ngOnDestroy() {\n    if (this.host && this.host.instance) {\n      this.host.instance.setSource(null);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [];\n    }\n  }\n\n  protected _register(s: source.Source) {\n    if (this.host) {\n      this.host.instance.setSource(s);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [s];\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { tilegrid, Extent, Size, Coordinate } from 'openlayers';\n\n@Component({\n  selector: 'aol-tilegrid',\n  template: '',\n})\nexport class TileGridComponent implements OnInit, OnChanges {\n  instance: tilegrid.TileGrid;\n\n  @Input()\n  extent: Extent;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  resolutions: number[];\n\n  ngOnInit() {\n    if (!this.resolutions) {\n      this.instance = tilegrid.createXYZ(this);\n    } else {\n      this.instance = new tilegrid.TileGrid(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.resolutions) {\n      this.instance = tilegrid.createXYZ(this);\n    } else {\n      this.instance = new tilegrid.TileGrid(this);\n    }\n  }\n}\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Output } from '@angular/core';\nimport { RasterOperation, RasterOperationType, source } from 'openlayers';\n\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-raster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [\n    {\n      provide: SourceComponent,\n      useExisting: forwardRef(() => SourceRasterComponent),\n    },\n  ],\n})\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\n  instance: source.Raster;\n\n  @Input()\n  operation?: RasterOperation;\n  @Input()\n  threads?: number;\n  @Input()\n  lib?: Object;\n  @Input()\n  operationType?: RasterOperationType;\n\n  @Output()\n  beforeOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\n  @Output()\n  afterOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\n\n  sources: source.Source[] = [];\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.instance = new source.Raster(this);\n\n    this.instance.on('beforeoperations', (event: source.RasterEvent) => this.beforeOperations.emit(event));\n    this.instance.on('afteroperations', (event: source.RasterEvent) => this.afterOperations.emit(event));\n\n    this._register(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  AfterContentInit,\n  forwardRef,\n  OnChanges,\n  ContentChild,\n  SimpleChanges,\n  Optional,\n} from '@angular/core';\nimport { source, Size, TileUrlFunctionType, TileLoadFunctionType, tilegrid } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceRasterComponent } from './raster.component';\n\n@Component({\n  selector: 'aol-source-xyz',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\n})\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: source.XYZ;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  opaque: boolean;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  tileGrid: tilegrid.TileGrid;\n  @Input()\n  tileLoadFunction?: TileLoadFunctionType;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  tileUrlFunction: TileUrlFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(TileGridComponent)\n  tileGridXYZ: TileGridComponent;\n\n  constructor(\n    @Optional()\n    @Host()\n    layer: LayerTileComponent,\n    @Optional()\n    @Host()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n    this.instance = new source.XYZ(this);\n    this._register(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    this.instance.setProperties(properties, false);\n    if (changes.hasOwnProperty('url')) {\n      this.instance = new source.XYZ(this);\n      this._register(this.instance);\n    }\n  }\n}\n","import { Component, Host, forwardRef, Input, AfterContentInit, Optional } from '@angular/core';\nimport { source, AttributionLike, TileLoadFunctionType } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { SourceXYZComponent } from './xyz.component';\nimport { SourceRasterComponent } from './raster.component';\n\n@Component({\n  selector: 'aol-source-osm',\n  template: `\n    <div class=\"aol-source-osm\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\n})\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\n  instance: source.OSM;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  maxZoom: number;\n  @Input()\n  opaque: boolean;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: TileLoadFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  wrapX: boolean;\n\n  constructor(\n    @Host()\n    @Optional()\n    layer: LayerTileComponent,\n    @Host()\n    @Optional()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n    this.instance = new source.OSM(this);\n    this._register(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source, TileLoadFunctionType } from 'openlayers';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\n\n@Component({\n  selector: 'aol-source-bingmaps',\n  template: `\n    <div class=\"aol-source-bingmaps\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\n})\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\n  instance: source.BingMaps;\n\n  @Input()\n  cacheSize: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  culture: string;\n  @Input()\n  key: string;\n  @Input()\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\n  @Input()\n  maxZoom: number;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: TileLoadFunctionType;\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.BingMaps(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source } from 'openlayers';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\n})\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\n  instance: source.Vector;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  useSpatialIndex: boolean;\n  @Input()\n  wrapX: boolean;\n  @Input()\n  url: string;\n  @Input()\n  format: ol.format.Feature;\n  @Input()\n  strategy: ol.LoadingStrategy;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { source, Feature, geom } from 'openlayers';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { SourceVectorComponent } from './vector.component';\n\n@Component({\n  selector: 'aol-source-cluster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\n})\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit {\n  instance: source.Cluster;\n\n  @Input()\n  distance: number;\n  @Input()\n  geometryFunction?: ((feature: Feature) => geom.Point);\n\n  @ContentChild(SourceVectorComponent)\n  sourceVectorComponent: SourceVectorComponent;\n  source: source.Vector;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.source = this.sourceVectorComponent.instance;\n\n    this.instance = new source.Cluster(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { tilegrid, Size, Coordinate } from 'openlayers';\nimport { TileGridComponent } from './tilegrid.component';\n\n@Component({\n  selector: 'aol-tilegrid-wmts',\n  template: '',\n})\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\n  instance: tilegrid.WMTS;\n\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  origins?: Coordinate[];\n  @Input()\n  resolutions: number[];\n  @Input()\n  matrixIds: string[];\n  @Input()\n  sizes?: Size[];\n  @Input()\n  tileSizes?: (number | Size)[];\n  @Input()\n  widths?: number[];\n\n  ngOnInit() {\n    this.instance = new tilegrid.WMTS(this);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  AfterContentInit,\n  ContentChild,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { TileLoadFunctionType, tilegrid, ProjectionLike, source, ImageTile, TileCoord, Tile } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\n\n@Component({\n  selector: 'aol-source-tilewmts',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\n})\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: source.WMTS;\n  @Input()\n  cacheSize?: number;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  logo?: string | olx.LogoOptions;\n  @Input()\n  tileGrid: tilegrid.WMTS;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  reprojectionErrorThreshold?: number;\n  @Input()\n  requestEncoding?: source.WMTSRequestEncoding | string;\n  @Input()\n  layer: string;\n  @Input()\n  style: string;\n  @Input()\n  tileClass?: ((\n    n: ImageTile,\n    coords: TileCoord,\n    state: Tile.State,\n    s1: string,\n    s2: string,\n    type: TileLoadFunctionType\n  ) => any);\n  @Input()\n  tilePixelRatio?: number;\n  @Input()\n  version?: string;\n  @Input()\n  format?: string;\n  @Input()\n  matrixSet: string;\n  @Input()\n  dimensions?: GlobalObject;\n  @Input()\n  url?: string;\n  @Input()\n  tileLoadFunction?: TileLoadFunctionType;\n  @Input()\n  urls?: string[];\n  @Input()\n  wrapX?: boolean;\n\n  @ContentChild(TileGridWMTSComponent)\n  tileGridWMTS: TileGridWMTSComponent;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n\n  setLayerSource(): void {\n    this.instance = new source.WMTS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngAfterContentInit(): void {\n    if (this.tileGridWMTS) {\n      this.tileGrid = this.tileGridWMTS.instance;\n      this.setLayerSource();\n    }\n  }\n}\n","import { format } from 'openlayers';\n\nexport class FormatComponent {\n  public instance: format.Feature;\n  public componentType = 'format';\n}\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { source, ProjectionLike, TileUrlFunctionType, format, tilegrid } from 'openlayers';\nimport { LayerVectorTileComponent } from '../layers/layervectortile.component';\nimport { FormatComponent } from '../formats/format.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent) }],\n})\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\n  public instance: source.VectorTile;\n  @Input()\n  cacheSize: number;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileUrlFunction: TileUrlFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(FormatComponent)\n  formatComponent: FormatComponent;\n  format: format.Feature;\n  @ContentChild(TileGridComponent)\n  tileGridComponent: TileGridComponent;\n  tileGrid: tilegrid.TileGrid;\n\n  constructor(@Host() layer: LayerVectorTileComponent) {\n    super(layer);\n  }\n\n  /* need the children to construct the OL3 object */\n  ngAfterContentInit() {\n    this.format = this.formatComponent.instance;\n    this.tileGrid = this.tileGridComponent.instance;\n    // console.log('creating ol.source.VectorTile instance with:', this);\n    this.instance = new source.VectorTile(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\nimport { source, TileLoadFunctionType, tilegrid } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-tilewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\n})\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: source.TileWMS;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  gutter: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  params: Object;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  serverType: string;\n  @Input()\n  tileGrid: tilegrid.TileGrid;\n  @Input()\n  tileLoadFunction: TileLoadFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.TileWMS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-tilejson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\n})\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\n  instance: source.TileJSON;\n\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.TileJSON(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source, ProjectionLike, format } from 'openlayers';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-geojson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\n})\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\n  instance: source.Vector;\n  format: format.Feature;\n  @Input()\n  defaultDataProjection: ProjectionLike;\n  @Input()\n  featureProjection: ProjectionLike;\n  @Input()\n  geometryName: string;\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.format = new format.GeoJSON(this);\n    this.instance = new source.Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { ProjectionLike, source, Extent, AttributionLike, ImageLoadFunctionType, Size } from 'openlayers';\nimport { SourceComponent } from './source.component';\nimport { LayerImageComponent } from '../layers/layerimage.component';\n\n@Component({\n  selector: 'aol-source-imagestatic',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\n})\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit {\n  instance: source.ImageStatic;\n\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  imageExtent: Extent;\n  @Input()\n  url: string;\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  imageLoadFunction?: ImageLoadFunctionType;\n  @Input()\n  logo?: string | olx.LogoOptions;\n  @Input()\n  imageSize?: Size;\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.ImageStatic(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\nimport { AttributionLike, ImageLoadFunctionType, ProjectionLike, source } from 'openlayers';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-imagewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\n})\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: source.ImageWMS;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  serverType: string;\n  @Input()\n  imageLoadFunction?: ImageLoadFunctionType;\n  @Input()\n  logo: string | olx.LogoOptions;\n  @Input()\n  params: Object;\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  ratio: number;\n  @Input()\n  resolutions: Array<number>;\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.ImageWMS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, forwardRef, Host, Input, OnInit } from '@angular/core';\nimport { source, ProjectionLike, Attribution, ImageLoadFunctionType } from 'openlayers';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-imagearcgisrest',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\n})\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit {\n  instance: source.ImageArcGISRest;\n\n  @Input() projection: ProjectionLike | string;\n  @Input() url: string;\n  @Input() attributions: Attribution[];\n  @Input() crossOrigin?: string;\n  @Input() imageLoadFunction?: ImageLoadFunctionType;\n  @Input() params?: { [k: string]: any };\n  @Input() ratio = 1;\n  @Input() resolutions?: number[];\n  @Input() logo?: string | olx.LogoOptions;\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.ImageArcGISRest(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Feature } from 'openlayers';\nimport { SourceVectorComponent } from './sources/vector.component';\n\n@Component({\n  selector: 'aol-feature',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\n  public componentType = 'feature';\n  public instance: Feature;\n\n  @Input()\n  id: string | number | undefined;\n\n  constructor(private host: SourceVectorComponent) {}\n\n  ngOnInit() {\n    this.instance = new Feature();\n    if (this.id !== undefined) {\n      this.instance.setId(this.id);\n    }\n    this.host.instance.addFeature(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.removeFeature(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance) {\n      this.instance.setId(this.id);\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { geom } from 'openlayers';\nimport { FeatureComponent } from './feature.component';\n\n@Component({\n  selector: 'aol-geometry-linestring',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryLinestringComponent implements OnInit, OnDestroy {\n  public componentType = 'geometry-linestring';\n  public instance: geom.LineString;\n\n  constructor(private host: FeatureComponent) {\n    // console.log('instancing aol-geometry-linestring');\n  }\n\n  ngOnInit() {\n    this.instance = new geom.LineString([]);\n    this.host.instance.setGeometry(this.instance);\n  }\n  ngOnDestroy() {\n    // this.host.setGeometry(null);\n  }\n}\n\n@Component({\n  selector: 'aol-geometry-point',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPointComponent implements OnInit, OnDestroy {\n  public componentType = 'geometry-point';\n  public instance: geom.Point;\n\n  constructor(private host: FeatureComponent) {\n    // console.log('creating aol-geometry-point');\n  }\n\n  ngOnInit() {\n    this.instance = new geom.Point([0, 0]); // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.host.instance.setGeometry(this.instance);\n  }\n\n  ngOnDestroy() {\n    // this.host.setGeometry(null);\n  }\n}\n\n@Component({\n  selector: 'aol-geometry-polygon',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPolygonComponent implements OnInit, OnDestroy {\n  public componentType = 'geometry-polygon';\n  public instance: geom.Polygon;\n\n  constructor(private host: FeatureComponent) {\n    // console.log('creating aol-geometry-polygon');\n  }\n\n  ngOnInit() {\n    // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.instance = new geom.Polygon([[[0, 0], [1, 0], [1, 1]]]);\n    this.host.instance.setGeometry(this.instance);\n  }\n\n  ngOnDestroy() {\n    // this.host.setGeometry(null);\n  }\n}\n\n@Component({\n  selector: 'aol-geometry-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryCircleComponent implements OnInit {\n  public componentType = 'geometry-circle';\n  public instance: geom.Circle;\n\n  @Input()\n  get radius(): number {\n    return this.instance.getRadius();\n  }\n  set radius(radius: number) {\n    this.instance.setRadius(radius);\n  }\n\n  constructor(private host: FeatureComponent) {\n    // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.instance = new geom.Circle([0, 0]);\n  }\n\n  ngOnInit() {\n    this.host.instance.setGeometry(this.instance);\n  }\n}\n","import { Component, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'aol-content',\n  template: '<ng-content></ng-content>',\n})\nexport class ContentComponent {\n  constructor(public elementRef: ElementRef) {}\n}\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport { Overlay, OverlayPositioning } from 'openlayers';\nimport { ContentComponent } from './content.component';\n\n@Component({\n  selector: 'aol-overlay',\n  template: '<ng-content></ng-content>',\n})\nexport class OverlayComponent implements OnInit, OnDestroy {\n  componentType = 'overlay';\n  instance: Overlay;\n  element: Element;\n  @ContentChild(ContentComponent)\n  content: ContentComponent;\n\n  @Input()\n  id: number | string;\n  @Input()\n  offset: number[];\n  @Input()\n  positioning: OverlayPositioning | string;\n  @Input()\n  stopEvent: boolean;\n  @Input()\n  insertFirst: boolean;\n  @Input()\n  autoPan: boolean;\n  @Input()\n  autoPanAnimation: olx.animation.PanOptions;\n  @Input()\n  autoPanMargin: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Overlay(this);\n      this.map.instance.addOverlay(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeOverlay(this.instance);\n    }\n  }\n}\n","import { Component, Optional, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { proj, Coordinate } from 'openlayers';\nimport { MapComponent } from './map.component';\nimport {\n  GeometryPointComponent,\n  GeometryLinestringComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n} from './geometry.components';\nimport { ViewComponent } from './view.component';\nimport { OverlayComponent } from './overlay.component';\n\n@Component({\n  selector: 'aol-coordinate',\n  template: `\n    <div class=\"aol-coordinate\"></div>\n  `,\n})\nexport class CoordinateComponent implements OnChanges {\n  private host: any;\n\n  @Input()\n  x: number;\n  @Input()\n  y: number;\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() viewHost: ViewComponent,\n    @Optional() geometryPointHost: GeometryPointComponent,\n    @Optional() geometryCircleHost: GeometryCircleComponent,\n    @Optional() overlayHost: OverlayComponent\n  ) {\n    // console.log('instancing aol-coordinate');\n    if (geometryPointHost !== null) {\n      this.host = geometryPointHost;\n    } else if (geometryCircleHost !== null) {\n      this.host = geometryCircleHost;\n    } else if (viewHost !== null) {\n      this.host = viewHost;\n    } else if (overlayHost !== null) {\n      this.host = overlayHost;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let referenceProjection: proj.Projection;\n    let referenceProjectionCode: string;\n    let transformedCoordinates: number[];\n\n    referenceProjection = this.map.instance.getView().getProjection();\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\n\n    if (this.srid === referenceProjectionCode) {\n      transformedCoordinates = [this.x, this.y];\n    } else {\n      transformedCoordinates = proj.transform([this.x, this.y], this.srid, referenceProjectionCode);\n    }\n\n    switch (this.host.componentType) {\n      case 'geometry-point':\n        this.host.instance.setCoordinates(transformedCoordinates);\n        break;\n      case 'geometry-circle':\n      case 'view':\n        this.host.instance.setCenter(transformedCoordinates);\n        break;\n      case 'overlay':\n        this.host.instance.setPosition(transformedCoordinates);\n        break;\n    }\n  }\n}\n\n@Component({\n  selector: 'aol-collection-coordinates',\n  template: `\n    <div class=\"aol-collection-coordinates\"></div>\n  `,\n})\nexport class CollectionCoordinatesComponent implements OnChanges {\n  private host: any;\n\n  @Input()\n  coordinates: [number, number][];\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() geometryLinestring: GeometryLinestringComponent,\n    @Optional() geometryPolygon: GeometryPolygonComponent\n  ) {\n    // console.log('creating aol-collection-coordinates');\n    if (!!geometryLinestring) {\n      this.host = geometryLinestring;\n    } else if (!!geometryPolygon) {\n      this.host = geometryPolygon;\n    } else {\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let referenceProjection: proj.Projection;\n    let referenceProjectionCode: string;\n    let transformedCoordinates: Array<Coordinate>;\n\n    // console.log('coordinates change: ', this.coordinates);\n\n    referenceProjection = this.map.instance.getView().getProjection();\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\n\n    if (this.srid === referenceProjectionCode) {\n      transformedCoordinates = this.coordinates;\n    } else {\n      transformedCoordinates = [];\n      this.coordinates.forEach(\n        function(coordinate: Coordinate) {\n          transformedCoordinates.push(proj.transform(coordinate, this.srid, referenceProjectionCode));\n        }.bind(this)\n      );\n    }\n    switch (this.host.componentType) {\n      case 'geometry-linestring':\n        this.host.instance.setCoordinates(transformedCoordinates);\n        break;\n      case 'geometry-polygon':\n        this.host.instance.setCoordinates([transformedCoordinates]);\n        break;\n      default:\n        throw new Error('aol-collection-coordinates host is of unknown type: ' + this.host.componentType);\n      // break;\n    }\n  }\n}\n","import { Component, Input, Optional, OnInit } from '@angular/core';\nimport { style, StyleGeometryFunction, geom } from 'openlayers';\nimport { FeatureComponent } from '../feature.component';\nimport { LayerVectorComponent } from '../layers/layervector.component';\n\n@Component({\n  selector: 'aol-style',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleComponent implements OnInit {\n  private host: FeatureComponent | LayerVectorComponent;\n  public instance: style.Style;\n  public componentType = 'style';\n\n  @Input()\n  geometry: string | geom.Geometry | StyleGeometryFunction;\n  @Input()\n  fill: style.Fill;\n  @Input()\n  image: style.Image;\n  @Input()\n  stroke: style.Stroke;\n  @Input()\n  text: style.Text;\n  @Input()\n  zIndex: number;\n\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\n    // console.log('creating aol-style');\n    this.host = !!featureHost ? featureHost : layerHost;\n    if (!this.host) {\n      throw new Error('aol-style must be applied to a feature or a layer');\n    }\n  }\n\n  update() {\n    // console.log('updating style\\'s host: ', this.host);\n    this.host.instance.changed();\n  }\n\n  ngOnInit() {\n    // console.log('creating aol-style instance with: ', this);\n    this.instance = new style.Style(this);\n    this.host.instance.setStyle(this.instance);\n  }\n}\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { style } from 'openlayers';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  public componentType = 'style-circle';\n  public instance: style.Circle;\n\n  @Input()\n  fill: style.Fill;\n  @Input()\n  radius: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  stroke: style.Stroke;\n  @Input()\n  atlasManager: style.AtlasManager;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  /**\n   * WORK-AROUND: since the re-rendering is not triggered on style change\n   * we trigger a radius change.\n   * see openlayers #6233 and #5775\n   */\n  update() {\n    if (!!this.instance) {\n      // console.log('setting ol.style.Circle instance\\'s radius');\n      this.instance.setRadius(this.radius);\n    }\n    this.host.update();\n  }\n\n  ngAfterContentInit() {\n    // console.log('creating ol.style.Circle instance with: ', this);\n    this.instance = new style.Circle(this);\n    this.host.instance.setImage(this.instance);\n    this.host.update();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['radius']) {\n      this.instance.setRadius(changes['radius'].currentValue);\n    }\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-style-circle');\n    this.host.instance.setImage(null);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style } from 'openlayers';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-text',\n  template: `\n    <div class=\"aol-style-text\"></div>\n  `,\n})\nexport class StyleTextComponent implements OnInit, OnChanges {\n  public instance: style.Text;\n  public componentType = 'style-text';\n\n  @Input()\n  font: string | undefined;\n  @Input()\n  offsetX: number | undefined;\n  @Input()\n  offsetY: number | undefined;\n  @Input()\n  scale: number | undefined;\n  @Input()\n  rotateWithView: boolean | undefined;\n  @Input()\n  rotation: number | undefined;\n  @Input()\n  text: string | undefined;\n  @Input()\n  textAlign: string | undefined;\n  @Input()\n  textBaseLine: string | undefined;\n\n  constructor(@Optional() private host: StyleComponent) {\n    if (!host) {\n      throw new Error('aol-style-text must be a descendant of aol-style');\n    }\n    // console.log('creating aol-style-text with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Text instance with: ', this);\n    this.instance = new style.Text(this);\n    this.host.instance.setText(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['font']) {\n      this.instance.setFont(changes['font'].currentValue);\n    }\n    if (changes['offsetX']) {\n      this.instance.setOffsetX(changes['offsetX'].currentValue);\n    }\n    if (changes['offsetY']) {\n      this.instance.setOffsetY(changes['offsetY'].currentValue);\n    }\n    if (changes['scale']) {\n      this.instance.setScale(changes['scale'].currentValue);\n    }\n    if (changes['rotation']) {\n      this.instance.setRotation(changes['rotation'].currentValue);\n    }\n    if (changes['text']) {\n      this.instance.setText(changes['text'].currentValue);\n    }\n    if (changes['textAlign']) {\n      this.instance.setTextAlign(changes['textAlign'].currentValue);\n    }\n    if (changes['textBaseLine']) {\n      this.instance.setTextBaseline(changes['textBaseLine'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style, Color } from 'openlayers';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\n\n@Component({\n  selector: 'aol-style-stroke',\n  template: `\n    <div class=\"aol-style-stroke\"></div>\n  `,\n})\nexport class StyleStrokeComponent implements OnInit, OnChanges {\n  public instance: style.Stroke;\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n\n  @Input()\n  color: Color | undefined;\n  @Input()\n  lineCap: string | undefined;\n  @Input()\n  lineDash: number[] | undefined;\n  @Input()\n  lineJoin: string | undefined;\n  @Input()\n  miterLimit: number | undefined;\n  @Input()\n  width: number | undefined;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-stroke with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Stroke instance with: ', this);\n    this.instance = new style.Stroke(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setStroke(this.instance);\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setStroke(this.instance);\n        break;\n      case 'style-circle':\n        this.host.stroke = this.instance;\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['color']) {\n      this.instance.setColor(changes['color'].currentValue);\n    }\n    if (changes['lineCap']) {\n      this.instance.setLineCap(changes['lineCap'].currentValue);\n    }\n    if (changes['lineDash']) {\n      this.instance.setLineDash(changes['lineDash'].currentValue);\n    }\n    if (changes['lineJoin']) {\n      this.instance.setLineJoin(changes['lineJoin'].currentValue);\n    }\n    if (changes['miterLimit']) {\n      this.instance.setMiterLimit(changes['miterLimit'].currentValue);\n    }\n    if (changes['width']) {\n      this.instance.setWidth(changes['width'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style } from 'openlayers';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-icon',\n  template: `\n    <div class=\"aol-style-icon\"></div>\n  `,\n})\nexport class StyleIconComponent implements OnInit, OnChanges {\n  public instance: style.Icon;\n\n  @Input()\n  anchor: [number, number];\n  @Input()\n  anchorXUnits: style.IconAnchorUnits;\n  @Input()\n  anchorYUnits: style.IconAnchorUnits;\n  @Input()\n  anchorOrigin: style.IconOrigin;\n  @Input()\n  color: [number, number, number, number];\n  @Input()\n  crossOrigin: style.IconOrigin;\n  @Input()\n  img: string;\n  @Input()\n  offset: [number, number];\n  @Input()\n  offsetOrigin: style.IconOrigin;\n  @Input()\n  opacity: number;\n  @Input()\n  scale: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  rotateWithView: boolean;\n  @Input()\n  rotation: number;\n  @Input()\n  size: [number, number];\n  @Input()\n  imgSize: [number, number];\n  @Input()\n  src: string;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.style.Icon instance with: ', this);\n    this.instance = new style.Icon(this);\n    this.host.instance.setImage(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['opacity']) {\n      this.instance.setOpacity(changes['opacity'].currentValue);\n    }\n    if (changes['rotation']) {\n      this.instance.setRotation(changes['rotation'].currentValue);\n    }\n    if (changes['scale']) {\n      this.instance.setScale(changes['scale'].currentValue);\n    }\n    if (changes['src']) {\n      this.instance = new style.Icon(this);\n      this.host.instance.setImage(this.instance);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-icon: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style, Color, ColorLike } from 'openlayers';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\n\n@Component({\n  selector: 'aol-style-fill',\n  template: `\n    <div class=\"aol-style-fill\"></div>\n  `,\n})\nexport class StyleFillComponent implements OnInit, OnChanges {\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n  public instance: style.Fill;\n\n  @Input()\n  color: Color | ColorLike;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-fill with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Fill instance with: ', this);\n    this.instance = new style.Fill(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setFill(this.instance);\n        // console.log('setting ol.style instance\\'s fill:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setFill(this.instance);\n        break;\n      case 'style-circle':\n        this.host.fill = this.instance;\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['color']) {\n      this.instance.setColor(changes['color'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { control, Collection } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-defaults',\n  template: '',\n})\nexport class DefaultControlComponent implements OnInit, OnDestroy {\n  instance: Collection<control.Control>;\n  @Input()\n  attribution: boolean;\n  @Input()\n  attributionOptions: olx.control.AttributionOptions;\n  @Input()\n  rotate: boolean;\n  @Input()\n  rotateOptions: olx.control.RotateOptions;\n  @Input()\n  zoom: boolean;\n  @Input()\n  zoomOptions: olx.control.ZoomOptions;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('ol.control.defaults init: ', this);\n    this.instance = control.defaults(this);\n    this.instance.forEach(c => this.map.instance.addControl(c));\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-defaults');\n    this.instance.forEach(c => this.map.instance.removeControl(c));\n  }\n}\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { ContentComponent } from '../content.component';\n\n@Component({\n  selector: 'aol-control',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: control.Control;\n  element: Element;\n  @ContentChild(ContentComponent)\n  content: ContentComponent;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new control.Control(this);\n      this.map.instance.addControl(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeControl(this.instance);\n    }\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-attribution',\n  template: ``,\n})\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: control.Attribution;\n  target: Element;\n  @Input()\n  collapsible: boolean;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.Attribution init: ', this);\n    this.instance = new control.Attribution(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-attribution');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-fullscreen',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\n  instance: control.FullScreen;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  labelActive: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  keys: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-fullscreen');\n  }\n\n  ngOnInit() {\n    this.instance = new control.FullScreen(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-fullscreen');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control, CoordinateFormatType, ProjectionLike } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-mouseposition',\n  template: ``,\n})\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\n  instance: control.MousePosition;\n  @Input()\n  coordinateFormat: CoordinateFormatType;\n  @Input()\n  projection: ProjectionLike;\n  target: Element;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.MousePosition init: ', this);\n    this.instance = new control.MousePosition(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-mouseposition');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control, View, layer } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-overviewmap',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlOverviewMapComponent implements OnInit, OnDestroy {\n  instance: control.OverviewMap;\n  @Input()\n  collapsed: boolean;\n  @Input()\n  collapseLabel: string;\n  @Input()\n  collapsible: boolean;\n  @Input()\n  label: string;\n  @Input()\n  layers: layer.Layer[];\n  @Input()\n  target: Element;\n  @Input()\n  tipLabel: string;\n  @Input()\n  view: View;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-overviewmap');\n  }\n\n  ngOnInit() {\n    this.instance = new control.OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-overviewmap');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-rotate',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlRotateComponent implements OnInit, OnDestroy {\n  instance: control.Rotate;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  duration: number;\n  @Input()\n  autoHide: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-rotate');\n  }\n\n  ngOnInit() {\n    this.instance = new control.Rotate(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-rotate');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-scaleline',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\n  instance: control.ScaleLine;\n  @Input()\n  units: string;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-scaleline');\n  }\n\n  ngOnInit() {\n    this.instance = new control.ScaleLine(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-scaleline');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoom',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomComponent implements OnInit, OnDestroy {\n  instance: control.Zoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  zoomInLabel: string | Node;\n  @Input()\n  zoomOutLabel: string | Node;\n  @Input()\n  zoomInTipLabel: string;\n  @Input()\n  zoomOutTipLabel: string;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoom');\n  }\n\n  ngOnInit() {\n    this.instance = new control.Zoom(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoom');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoomslider',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\n  instance: control.ZoomSlider;\n\n  @Input()\n  className: string;\n  @Input()\n  duration: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomslider');\n  }\n\n  ngOnInit() {\n    this.instance = new control.ZoomSlider(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomslider');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control, Extent } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoomtoextent',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\n  instance: control.ZoomToExtent;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string | Node;\n  @Input()\n  tipLabel: string;\n  @Input()\n  extent: Extent;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomtoextent');\n  }\n\n  ngOnInit() {\n    this.instance = new control.ZoomToExtent(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomtoextent');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { format, geom } from 'openlayers';\nimport { FormatComponent } from './format.component';\n\n@Component({\n  selector: 'aol-format-mvt',\n  template: '',\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\n})\nexport class FormatMVTComponent extends FormatComponent {\n  instance: format.MVT;\n\n  @Input()\n  featureClass:\n    | ((geom: geom.Geometry | { [k: string]: any }) => any)\n    | ((geom: geom.GeometryType, arg2: number[], arg3: number[] | number[][], arg4: { [k: string]: any }) => any);\n  @Input()\n  geometryName: string;\n  @Input()\n  layerName: string;\n  @Input()\n  layers: string[];\n\n  constructor() {\n    super();\n    this.instance = new format.MVT(this);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { interaction, Collection } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-default',\n  template: '',\n})\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\n  instance: Collection<interaction.Interaction>;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = interaction.defaults();\n    this.instance.forEach(i => this.map.instance.addInteraction(i));\n  }\n\n  ngOnDestroy() {\n    this.instance.forEach(i => this.map.instance.removeInteraction(i));\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-doubleclickzoom',\n  template: '',\n})\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DoubleClickZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DoubleClickZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { interaction, format, ProjectionLike } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-draganddrop',\n  template: '',\n})\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragAndDrop;\n\n  @Input()\n  formatConstructors: ((n: format.Feature) => any)[];\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  target: Element;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragAndDrop(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType, DragBoxEndConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragbox',\n  template: '',\n})\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragBox;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  boxEndCondition: DragBoxEndConditionType;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragBox(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType, Kinetic } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragpan',\n  template: '',\n})\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragPan;\n\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  kinetic: Kinetic;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragPan(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragrotate',\n  template: '',\n})\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragRotate;\n\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragRotate(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragrotateandzoom',\n  template: '',\n})\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragRotate;\n\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragRotateAndZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragzoom',\n  template: '',\n})\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragZoom;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  duration: number;\n  @Input()\n  out: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-mousewheelzoom',\n  template: '',\n})\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.MouseWheelZoom;\n  @Input()\n  duration: number;\n  @Input()\n  timeout: number;\n  @Input()\n  useAnchor: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.MouseWheelZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-pinchzoom',\n  template: '',\n})\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.PinchZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  constrainResolution: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.PinchZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-draw',\n  template: '',\n})\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Draw;\n\n  @Input()\n  clickTolerance?: number;\n  @Input()\n  features?: ol.Collection<ol.Feature>;\n  @Input()\n  source?: ol.source.Vector;\n  @Input()\n  snapTolerance?: number;\n  @Input()\n  type: ol.geom.GeometryType;\n  @Input()\n  maxPoints?: number;\n  @Input()\n  minPoints?: number;\n  @Input()\n  finishCondition?: ol.EventsConditionType;\n  @Input()\n  style?: ol.style.Style | ol.style.Style[] | ol.StyleFunction;\n  @Input()\n  geometryFunction?: ol.DrawGeometryFunctionType;\n  @Input()\n  geometryName?: string;\n  @Input()\n  condition?: ol.EventsConditionType;\n  @Input()\n  freehandCondition?: ol.EventsConditionType;\n  @Input()\n  freehand?: boolean;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  onChange = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onChangeActive = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onDrawEnd = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onDrawStart = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onPropertyChange = new EventEmitter<ol.interaction.Draw.Event>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.Draw(this);\n    this.instance.on('change', (event: ol.interaction.Draw.Event) => this.onChange.emit(event));\n    this.instance.on('change:active', (event: ol.interaction.Draw.Event) => this.onChangeActive.emit(event));\n    this.instance.on('drawend', (event: ol.interaction.Draw.Event) => this.onDrawEnd.emit(event));\n    this.instance.on('drawstart', (event: ol.interaction.Draw.Event) => this.onDrawStart.emit(event));\n    this.instance.on('propertychange', (event: ol.interaction.Draw.Event) => this.onPropertyChange.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {\n  interaction,\n  EventsConditionType,\n  layer,\n  style,\n  Collection,\n  SelectFilterFunction,\n  StyleFunction,\n  Feature,\n} from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-select',\n  template: '',\n})\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Select;\n\n  @Input()\n  addCondition?: EventsConditionType;\n  @Input()\n  condition?: EventsConditionType;\n  @Input()\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\n  @Input()\n  style?: style.Style | style.Style[] | StyleFunction;\n  @Input()\n  removeCondition?: EventsConditionType;\n  @Input()\n  toggleCondition?: EventsConditionType;\n  @Input()\n  multi?: boolean;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  filter?: SelectFilterFunction;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  onChange = new EventEmitter<interaction.Select.Event>();\n  @Output()\n  onSelect = new EventEmitter<interaction.Select.Event>();\n  @Output()\n  onPropertyChange = new EventEmitter<interaction.Select.Event>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.Select(this);\n\n    this.instance.on('change', (event: interaction.Select.Event) => this.onChange.emit(event));\n    this.instance.on('select', (event: interaction.Select.Event) => this.onSelect.emit(event));\n    this.instance.on('propertychange', (event: interaction.Select.Event) => this.onPropertyChange.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { interaction, EventsConditionType, style, StyleFunction, Collection, Feature, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-modify',\n  template: '',\n})\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Modify;\n\n  @Input()\n  condition?: EventsConditionType;\n  @Input()\n  deleteCondition?: EventsConditionType;\n  @Input()\n  pixelTolerance?: number;\n  @Input()\n  style?: style.Style | style.Style[] | StyleFunction;\n  @Input()\n  features: Collection<Feature>;\n  @Input()\n  wrapX?: boolean;\n  @Input()\n  source?: source.Vector;\n\n  @Output()\n  onModifyEnd = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onModifyStart = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onChange = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onChangeActive = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onPropertyChange = new EventEmitter<interaction.Modify.Event>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.Modify(this);\n    this.instance.on('change', (event: interaction.Modify.Event) => this.onChange.emit(event));\n    this.instance.on('change:active', (event: interaction.Modify.Event) => this.onChangeActive.emit(event));\n    this.instance.on('propertychange', (event: interaction.Modify.Event) => this.onPropertyChange.emit(event));\n    this.instance.on('modifyend', (event: interaction.Modify.Event) => this.onModifyEnd.emit(event));\n    this.instance.on('modifystart', (event: interaction.Modify.Event) => this.onModifyStart.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { interaction, layer, Collection, Feature } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-translate',\n  template: '',\n})\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Translate;\n\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\n  @Input()\n  hitTolerance?: number;\n\n  @Output()\n  onChange: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onPropertyChange: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onTranslateEnd: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onTranslateStart: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onTranslating: EventEmitter<interaction.Translate.Event>;\n\n  constructor(private map: MapComponent) {\n    this.onChange = new EventEmitter<interaction.Translate.Event>();\n    this.onPropertyChange = new EventEmitter<interaction.Translate.Event>();\n    this.onTranslateEnd = new EventEmitter<interaction.Translate.Event>();\n    this.onTranslateStart = new EventEmitter<interaction.Translate.Event>();\n    this.onTranslating = new EventEmitter<interaction.Translate.Event>();\n  }\n\n  ngOnInit() {\n    this.instance = new interaction.Translate(this);\n\n    this.instance.on('change', (event: interaction.Translate.Event) => this.onChange.emit(event));\n    this.instance.on('propertychange', (event: interaction.Translate.Event) => this.onPropertyChange.emit(event));\n    this.instance.on('translateend', (event: interaction.Translate.Event) => this.onTranslateEnd.emit(event));\n    this.instance.on('translatestart', (event: interaction.Translate.Event) => this.onTranslateStart.emit(event));\n    this.instance.on('translating', (event: interaction.Translate.Event) => this.onTranslating.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Attribution } from 'openlayers';\n\n@Component({\n  selector: 'aol-attribution',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionComponent implements OnInit {\n  instance: Attribution;\n  html: string;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    this.html = this.elementRef.nativeElement.innerHTML;\n    this.instance = new Attribution(this);\n  }\n}\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\nimport { Attribution } from 'openlayers';\nimport { SourceComponent } from './sources/source.component';\nimport { AttributionComponent } from './attribution.component';\n\n@Component({\n  selector: 'aol-attributions',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionsComponent implements AfterViewInit {\n  instance: Array<Attribution>;\n\n  @ContentChildren(AttributionComponent)\n  attributions: QueryList<AttributionComponent>;\n\n  constructor(@Host() private source: SourceComponent) {}\n\n  /* we can do this at the very end */\n  ngAfterViewInit() {\n    if (this.attributions.length) {\n      this.instance = this.attributions.map(cmp => cmp.instance);\n      // console.log('setting attributions:', this.instance);\n      this.source.instance.setAttributions(this.instance);\n    }\n  }\n}\n","/*\n * Public API Surface of ngx-openlayers\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewComponent } from './lib/view.component';\nimport { GraticuleComponent } from './lib/graticule.component';\nimport { LayerGroupComponent } from './lib/layers/layergroup.component';\nimport { LayerImageComponent } from './lib/layers/layerimage.component';\nimport { LayerTileComponent } from './lib/layers/layertile.component';\nimport { MapComponent } from './lib/map.component';\nimport { LayerVectorComponent } from './lib/layers/layervector.component';\nimport { LayerVectorTileComponent } from './lib/layers/layervectortile.component';\nimport { SourceOsmComponent } from './lib/sources/osm.component';\nimport { SourceBingmapsComponent } from './lib/sources/bingmaps.component';\nimport { SourceClusterComponent } from './lib/sources/cluster.component';\nimport { SourceVectorComponent } from './lib/sources/vector.component';\nimport { SourceXYZComponent } from './lib/sources/xyz.component';\nimport { SourceTileWMTSComponent } from './lib/sources/tilewmts.component';\nimport { SourceVectorTileComponent } from './lib/sources/vectortile.component';\nimport { SourceTileWMSComponent } from './lib/sources/tilewms.component';\nimport { SourceTileJSONComponent } from './lib/sources/tilejson.component';\nimport { SourceGeoJSONComponent } from './lib/sources/geojson.component';\nimport { SourceImageStaticComponent } from './lib/sources/imagestatic.component';\nimport { SourceImageWMSComponent } from './lib/sources/imagewms.component';\nimport { SourceImageArcGISRestComponent } from './lib/sources/imagearcgisrest.component';\nimport { SourceRasterComponent } from './lib/sources/raster.component';\nimport { FeatureComponent } from './lib/feature.component';\nimport {\n  GeometryLinestringComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n} from './lib/geometry.components';\nimport { CollectionCoordinatesComponent, CoordinateComponent } from './lib/coordinate.component';\nimport { StyleComponent } from './lib/styles/style.component';\nimport { StyleCircleComponent } from './lib/styles/circle.component';\nimport { StyleStrokeComponent } from './lib/styles/stroke.component';\nimport { StyleIconComponent } from './lib/styles/icon.component';\nimport { StyleFillComponent } from './lib/styles/fill.component';\nimport { StyleTextComponent } from './lib/styles/text.component';\nimport { DefaultControlComponent } from './lib/controls/default.component';\nimport { ControlComponent } from './lib/controls/control.component';\nimport { ControlAttributionComponent } from './lib/controls/attribution.component';\nimport { ControlFullScreenComponent } from './lib/controls/fullscreen.component';\nimport { ControlMousePositionComponent } from './lib/controls/mouseposition.component';\nimport { ControlOverviewMapComponent } from './lib/controls/overviewmap.component';\nimport { ControlRotateComponent } from './lib/controls/rotate.component';\nimport { ControlScaleLineComponent } from './lib/controls/scaleline.component';\nimport { ControlZoomComponent } from './lib/controls/zoom.component';\nimport { ControlZoomSliderComponent } from './lib/controls/zoomslider.component';\nimport { ControlZoomToExtentComponent } from './lib/controls/zoomtoextent.component';\nimport { FormatMVTComponent } from './lib/formats/mvt.component';\nimport { TileGridComponent } from './lib/tilegrid.component';\nimport { TileGridWMTSComponent } from './lib/tilegridwmts.component';\nimport { DefaultInteractionComponent } from './lib/interactions/default.component';\nimport { DoubleClickZoomInteractionComponent } from './lib/interactions/doubleclickzoom.component';\nimport { DragAndDropInteractionComponent } from './lib/interactions/draganddrop.component';\nimport { DragBoxInteractionComponent } from './lib/interactions/dragbox.component';\nimport { DragPanInteractionComponent } from './lib/interactions/dragpan.component';\nimport { DragRotateInteractionComponent } from './lib/interactions/dragrotate.component';\nimport { DragRotateAndZoomInteractionComponent } from './lib/interactions/dragrotateandzoom.component';\nimport { DragZoomInteractionComponent } from './lib/interactions/dragzoom.component';\nimport { MouseWheelZoomInteractionComponent } from './lib/interactions/mousewheelzoom.component';\nimport { PinchZoomInteractionComponent } from './lib/interactions/pinchzoom.component';\nimport { DrawInteractionComponent } from './lib/interactions/draw.component';\nimport { SelectInteractionComponent } from './lib/interactions/select.component';\nimport { ModifyInteractionComponent } from './lib/interactions/modify.component';\nimport { TranslateInteractionComponent } from './lib/interactions/translate.component';\nimport { OverlayComponent } from './lib/overlay.component';\nimport { ContentComponent } from './lib/content.component';\nimport { AttributionComponent } from './lib/attribution.component';\nimport { AttributionsComponent } from './lib/attributions.component';\n\nexport {\n  MapComponent,\n  ViewComponent,\n  GraticuleComponent,\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceRasterComponent,\n  SourceImageArcGISRestComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n  OverlayComponent,\n  ContentComponent,\n  AttributionComponent,\n  AttributionsComponent,\n};\n\nconst COMPONENTS = [\n  MapComponent,\n\n  ViewComponent,\n  GraticuleComponent,\n\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceImageArcGISRestComponent,\n  SourceRasterComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n\n  OverlayComponent,\n  ContentComponent,\n  AttributionComponent,\n  AttributionsComponent,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  imports: [CommonModule],\n  exports: COMPONENTS,\n})\nexport class AngularOpenlayersModule {}\n"],"names":["layer","source"],"mappings":"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"}
+{"version":3,"file":"ngx-openlayers.js.map","sources":["ng://ngx-openlayers/lib/map.component.ts","ng://ngx-openlayers/lib/view.component.ts","ng://ngx-openlayers/lib/graticule.component.ts","ng://ngx-openlayers/lib/layers/layer.component.ts","ng://ngx-openlayers/lib/layers/layergroup.component.ts","ng://ngx-openlayers/lib/layers/layerimage.component.ts","ng://ngx-openlayers/lib/layers/layertile.component.ts","ng://ngx-openlayers/lib/layers/layervector.component.ts","ng://ngx-openlayers/lib/layers/layervectortile.component.ts","ng://ngx-openlayers/lib/sources/source.component.ts","ng://ngx-openlayers/lib/tilegrid.component.ts","ng://ngx-openlayers/lib/sources/raster.component.ts","ng://ngx-openlayers/lib/sources/xyz.component.ts","ng://ngx-openlayers/lib/sources/osm.component.ts","ng://ngx-openlayers/lib/sources/bingmaps.component.ts","ng://ngx-openlayers/lib/sources/vector.component.ts","ng://ngx-openlayers/lib/sources/cluster.component.ts","ng://ngx-openlayers/lib/tilegridwmts.component.ts","ng://ngx-openlayers/lib/sources/tilewmts.component.ts","ng://ngx-openlayers/lib/formats/format.component.ts","ng://ngx-openlayers/lib/sources/vectortile.component.ts","ng://ngx-openlayers/lib/sources/tilewms.component.ts","ng://ngx-openlayers/lib/sources/tilejson.component.ts","ng://ngx-openlayers/lib/sources/geojson.component.ts","ng://ngx-openlayers/lib/sources/imagestatic.component.ts","ng://ngx-openlayers/lib/sources/imagewms.component.ts","ng://ngx-openlayers/lib/sources/imagearcgisrest.component.ts","ng://ngx-openlayers/lib/feature.component.ts","ng://ngx-openlayers/lib/geometry.components.ts","ng://ngx-openlayers/lib/content.component.ts","ng://ngx-openlayers/lib/overlay.component.ts","ng://ngx-openlayers/lib/coordinate.component.ts","ng://ngx-openlayers/lib/styles/style.component.ts","ng://ngx-openlayers/lib/styles/circle.component.ts","ng://ngx-openlayers/lib/styles/text.component.ts","ng://ngx-openlayers/lib/styles/stroke.component.ts","ng://ngx-openlayers/lib/styles/icon.component.ts","ng://ngx-openlayers/lib/styles/fill.component.ts","ng://ngx-openlayers/lib/controls/default.component.ts","ng://ngx-openlayers/lib/controls/control.component.ts","ng://ngx-openlayers/lib/controls/attribution.component.ts","ng://ngx-openlayers/lib/controls/fullscreen.component.ts","ng://ngx-openlayers/lib/controls/mouseposition.component.ts","ng://ngx-openlayers/lib/controls/overviewmap.component.ts","ng://ngx-openlayers/lib/controls/rotate.component.ts","ng://ngx-openlayers/lib/controls/scaleline.component.ts","ng://ngx-openlayers/lib/controls/zoom.component.ts","ng://ngx-openlayers/lib/controls/zoomslider.component.ts","ng://ngx-openlayers/lib/controls/zoomtoextent.component.ts","ng://ngx-openlayers/lib/formats/mvt.component.ts","ng://ngx-openlayers/lib/interactions/default.component.ts","ng://ngx-openlayers/lib/interactions/doubleclickzoom.component.ts","ng://ngx-openlayers/lib/interactions/draganddrop.component.ts","ng://ngx-openlayers/lib/interactions/dragbox.component.ts","ng://ngx-openlayers/lib/interactions/dragpan.component.ts","ng://ngx-openlayers/lib/interactions/dragrotate.component.ts","ng://ngx-openlayers/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-openlayers/lib/interactions/dragzoom.component.ts","ng://ngx-openlayers/lib/interactions/mousewheelzoom.component.ts","ng://ngx-openlayers/lib/interactions/pinchzoom.component.ts","ng://ngx-openlayers/lib/interactions/draw.component.ts","ng://ngx-openlayers/lib/interactions/select.component.ts","ng://ngx-openlayers/lib/interactions/modify.component.ts","ng://ngx-openlayers/lib/interactions/translate.component.ts","ng://ngx-openlayers/lib/attribution.component.ts","ng://ngx-openlayers/lib/attributions.component.ts","ng://ngx-openlayers/public_api.ts"],"sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { Map, MapBrowserEvent, MapEvent, render, ObjectEvent, control, interaction } from 'openlayers';\r\n\r\n@Component({\r\n  selector: 'aol-map',\r\n  template: `\r\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\r\n  public instance: Map;\r\n  public componentType = 'map';\r\n\r\n  @Input()\r\n  width = '100%';\r\n  @Input()\r\n  height = '100%';\r\n  @Input()\r\n  pixelRatio: number;\r\n  @Input()\r\n  keyboardEventTarget: Element | string;\r\n  @Input()\r\n  loadTilesWhileAnimating: boolean;\r\n  @Input()\r\n  loadTilesWhileInteracting: boolean;\r\n  @Input()\r\n  logo: string | boolean;\r\n  @Input()\r\n  renderer: 'canvas' | 'webgl';\r\n\r\n  @Output()\r\n  onClick: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onDblClick: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onMoveEnd: EventEmitter<MapEvent>;\r\n  @Output()\r\n  onPointerDrag: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onPointerMove: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onPostCompose: EventEmitter<render.Event>;\r\n  @Output()\r\n  onPostRender: EventEmitter<MapEvent>;\r\n  @Output()\r\n  onPreCompose: EventEmitter<render.Event>;\r\n  @Output()\r\n  onPropertyChange: EventEmitter<ObjectEvent>;\r\n  @Output()\r\n  onSingleClick: EventEmitter<MapBrowserEvent>;\r\n\r\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\r\n  controls: control.Control[] = [];\r\n  interactions: interaction.Interaction[] = [];\r\n\r\n  constructor(private host: ElementRef) {\r\n    this.onClick = new EventEmitter<MapBrowserEvent>();\r\n    this.onDblClick = new EventEmitter<MapBrowserEvent>();\r\n    this.onMoveEnd = new EventEmitter<MapEvent>();\r\n    this.onPointerDrag = new EventEmitter<MapBrowserEvent>();\r\n    this.onPointerMove = new EventEmitter<MapBrowserEvent>();\r\n    this.onPostCompose = new EventEmitter<render.Event>();\r\n    this.onPostRender = new EventEmitter<MapEvent>();\r\n    this.onPreCompose = new EventEmitter<render.Event>();\r\n    this.onPropertyChange = new EventEmitter<ObjectEvent>();\r\n    this.onSingleClick = new EventEmitter<MapBrowserEvent>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.Map instance with:', this);\r\n    this.instance = new Map(this);\r\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\r\n    this.instance.on('click', (event: MapBrowserEvent) => this.onClick.emit(event));\r\n    this.instance.on('dblclick', (event: MapBrowserEvent) => this.onDblClick.emit(event));\r\n    this.instance.on('moveend', (event: MapEvent) => this.onMoveEnd.emit(event));\r\n    this.instance.on('pointerdrag', (event: MapBrowserEvent) => this.onPointerDrag.emit(event));\r\n    this.instance.on('pointermove', (event: MapBrowserEvent) => this.onPointerMove.emit(event));\r\n    this.instance.on('postcompose', (event: render.Event) => this.onPostCompose.emit(event));\r\n    this.instance.on('postrender', (event: MapEvent) => this.onPostRender.emit(event));\r\n    this.instance.on('precompose', (event: render.Event) => this.onPreCompose.emit(event));\r\n    this.instance.on('propertychange', (event: ObjectEvent) => this.onPropertyChange.emit(event));\r\n    this.instance.on('singleclick', (event: MapBrowserEvent) => this.onSingleClick.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.instance.updateSize();\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\r\nimport { View, Extent, ObjectEvent, Coordinate } from 'openlayers';\r\nimport { MapComponent } from './map.component';\r\n\r\n@Component({\r\n  selector: 'aol-view',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\r\n  public instance: View;\r\n  public componentType = 'view';\r\n\r\n  @Input()\r\n  constrainRotation: boolean | number;\r\n  @Input()\r\n  enableRotation: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  resolution: number;\r\n  @Input()\r\n  resolutions: number[];\r\n  @Input()\r\n  rotation: number;\r\n  @Input()\r\n  zoom: number;\r\n  @Input()\r\n  zoomFactor: number;\r\n  @Input()\r\n  center: Coordinate;\r\n  @Input()\r\n  projection: string;\r\n\r\n  @Input()\r\n  zoomAnimation = false;\r\n\r\n  @Output()\r\n  onChangeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\r\n\r\n  constructor(private host: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.View instance with: ', this);\r\n    this.instance = new View(this);\r\n    this.host.instance.setView(this.instance);\r\n\r\n    this.instance.on('change:zoom', (event: ObjectEvent) => this.onChangeZoom.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        switch (key) {\r\n          case 'zoom':\r\n            /** Work-around: setting the zoom via setProperties does not work. */\r\n            if (this.zoomAnimation) {\r\n              this.instance.animate({ zoom: changes[key].currentValue });\r\n            } else {\r\n              this.instance.setZoom(changes[key].currentValue);\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-view');\r\n  }\r\n}\r\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Graticule, style } from 'openlayers';\r\nimport { MapComponent } from './map.component';\r\n\r\n@Component({\r\n  selector: 'aol-graticule',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class GraticuleComponent implements AfterContentInit, OnChanges {\r\n  instance: any;\r\n  public componentType = 'graticule';\r\n\r\n  @Input()\r\n  strokeStyle: style.Stroke;\r\n  @Input()\r\n  showLabels: boolean;\r\n  @Input()\r\n  lonLabelPosition: number;\r\n  @Input()\r\n  latLabelPosition: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n\r\n    if (properties) {\r\n      this.instance = new Graticule(properties);\r\n    }\r\n    this.instance.setMap(this.map.instance);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.instance = new Graticule({\r\n      strokeStyle: this.strokeStyle,\r\n      showLabels: this.showLabels,\r\n      lonLabelPosition: this.lonLabelPosition,\r\n      latLabelPosition: this.latLabelPosition,\r\n    });\r\n    this.instance.setMap(this.map.instance);\r\n  }\r\n}\r\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { MapComponent } from '../map.component';\r\nimport { Extent } from 'openlayers';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\r\n  public instance: any;\r\n  public componentType = 'layer';\r\n\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  zIndex: number;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxResolution: number;\r\n\r\n  @Input()\r\n  precompose: (evt: ol.events.Event) => void;\r\n  @Input()\r\n  postcompose: (evt: ol.events.Event) => void;\r\n\r\n  constructor(protected host: LayerGroupComponent | MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.precompose !== null && this.precompose !== undefined) {\r\n      this.instance.on('precompose', this.precompose);\r\n    }\r\n    if (this.postcompose !== null && this.postcompose !== undefined) {\r\n      this.instance.on('postcompose', this.postcompose);\r\n    }\r\n    this.host.instance.getLayers().push(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.host.instance.getLayers().remove(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n        if (key === 'precompose') {\r\n          this.instance.un('precompose', changes[key].previousValue);\r\n          this.instance.on('precompose', changes[key].currentValue);\r\n        }\r\n        if (key === 'postcompose') {\r\n          this.instance.un('postcompose', changes[key].previousValue);\r\n          this.instance.on('postcompose', changes[key].currentValue);\r\n        }\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\r\nimport { layer } from 'openlayers';\r\nimport { LayerComponent } from './layer.component';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-group',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\r\n  public instance: ol.layer.Group;\r\n\r\n  constructor(\r\n    map: MapComponent,\r\n    @SkipSelf()\r\n    @Optional()\r\n    group?: LayerGroupComponent\r\n  ) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log(`creating ol.layer.Group instance with:`, this);\r\n    this.instance = new layer.Group(this);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\r\nimport { Extent, layer, source } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-image',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\r\n  public source: source.Image;\r\n\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  zIndex: number;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new layer.Image(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { layer, source } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-tile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\r\n  public source: source.Tile;\r\n\r\n  @Input()\r\n  preload: number;\r\n  @Input()\r\n  useInterimTilesOnError: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.Tile instance with:', this);\r\n    this.instance = new layer.Tile(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { layer, source, style, StyleFunction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-vector',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\r\n  public source: source.Vector;\r\n\r\n  @Input()\r\n  renderBuffer: number;\r\n\r\n  @Input()\r\n  style: style.Style | style.Style[] | StyleFunction;\r\n\r\n  @Input()\r\n  updateWhileAnimating: boolean;\r\n\r\n  @Input()\r\n  updateWhileInteracting: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.Vector instance with:', this);\r\n    this.instance = new layer.Vector(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Optional, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { layer, style, StyleFunction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-vectortile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  renderBuffer: number;\r\n  @Input()\r\n  renderMode: layer.VectorTileRenderType | string;\r\n  /* not marked as optional in the typings */\r\n  @Input()\r\n  renderOrder: (feature1: ol.Feature, feature2: ol.Feature) => number;\r\n  @Input()\r\n  style: style.Style | style.Style[] | StyleFunction;\r\n  @Input()\r\n  updateWhileAnimating: boolean;\r\n  @Input()\r\n  updateWhileInteracting: boolean;\r\n  @Input()\r\n  visible: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.VectorTile instance with:', this);\r\n    this.instance = new layer.VectorTile(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Input, OnDestroy } from '@angular/core';\r\nimport { source } from 'openlayers';\r\nimport { LayerComponent } from '../layers/layer.component';\r\nimport AttributionLike = ol.AttributionLike;\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\nexport class SourceComponent implements OnDestroy {\r\n  public instance: source.Source;\r\n  public componentType = 'source';\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n\r\n  constructor(protected host: LayerComponent, protected raster?: SourceRasterComponent) {}\r\n\r\n  ngOnDestroy() {\r\n    if (this.host && this.host.instance) {\r\n      this.host.instance.setSource(null);\r\n    }\r\n\r\n    if (this.raster) {\r\n      this.raster.sources = [];\r\n    }\r\n  }\r\n\r\n  protected _register(s: source.Source) {\r\n    if (this.host) {\r\n      this.host.instance.setSource(s);\r\n    }\r\n\r\n    if (this.raster) {\r\n      this.raster.sources = [s];\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { tilegrid, Extent, Size, Coordinate } from 'openlayers';\r\n\r\n@Component({\r\n  selector: 'aol-tilegrid',\r\n  template: '',\r\n})\r\nexport class TileGridComponent implements OnInit, OnChanges {\r\n  instance: tilegrid.TileGrid;\r\n\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  tileSize: number | Size;\r\n  @Input()\r\n  origin?: Coordinate;\r\n  @Input()\r\n  resolutions: number[];\r\n\r\n  ngOnInit() {\r\n    if (!this.resolutions) {\r\n      this.instance = tilegrid.createXYZ(this);\r\n    } else {\r\n      this.instance = new tilegrid.TileGrid(this);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.resolutions) {\r\n      this.instance = tilegrid.createXYZ(this);\r\n    } else {\r\n      this.instance = new tilegrid.TileGrid(this);\r\n    }\r\n  }\r\n}\r\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Output } from '@angular/core';\r\nimport { RasterOperation, RasterOperationType, source } from 'openlayers';\r\n\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-raster',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [\r\n    {\r\n      provide: SourceComponent,\r\n      useExisting: forwardRef(() => SourceRasterComponent),\r\n    },\r\n  ],\r\n})\r\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\r\n  instance: source.Raster;\r\n\r\n  @Input()\r\n  operation?: RasterOperation;\r\n  @Input()\r\n  threads?: number;\r\n  @Input()\r\n  lib?: Object;\r\n  @Input()\r\n  operationType?: RasterOperationType;\r\n\r\n  @Output()\r\n  beforeOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\r\n  @Output()\r\n  afterOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\r\n\r\n  sources: source.Source[] = [];\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.instance = new source.Raster(this);\r\n\r\n    this.instance.on('beforeoperations', (event: source.RasterEvent) => this.beforeOperations.emit(event));\r\n    this.instance.on('afteroperations', (event: source.RasterEvent) => this.afterOperations.emit(event));\r\n\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  AfterContentInit,\r\n  forwardRef,\r\n  OnChanges,\r\n  ContentChild,\r\n  SimpleChanges,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { source, Size, TileUrlFunctionType, TileLoadFunctionType, tilegrid } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileGridComponent } from '../tilegrid.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-xyz',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\r\n})\r\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\r\n  instance: source.XYZ;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  opaque: boolean;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  tileGrid: tilegrid.TileGrid;\r\n  @Input()\r\n  tileLoadFunction?: TileLoadFunctionType;\r\n  @Input()\r\n  tilePixelRatio: number;\r\n  @Input()\r\n  tileSize: number | Size;\r\n  @Input()\r\n  tileUrlFunction: TileUrlFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @ContentChild(TileGridComponent)\r\n  tileGridXYZ: TileGridComponent;\r\n\r\n  constructor(\r\n    @Optional()\r\n    @Host()\r\n    layer: LayerTileComponent,\r\n    @Optional()\r\n    @Host()\r\n    raster?: SourceRasterComponent\r\n  ) {\r\n    super(layer, raster);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.tileGridXYZ) {\r\n      this.tileGrid = this.tileGridXYZ.instance;\r\n    }\r\n    this.instance = new source.XYZ(this);\r\n    this._register(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n\r\n    this.instance.setProperties(properties, false);\r\n    if (changes.hasOwnProperty('url')) {\r\n      this.instance = new source.XYZ(this);\r\n      this._register(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, forwardRef, Input, AfterContentInit, Optional } from '@angular/core';\r\nimport { source, AttributionLike, TileLoadFunctionType } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { SourceXYZComponent } from './xyz.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-osm',\r\n  template: `\r\n    <div class=\"aol-source-osm\"></div>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\r\n})\r\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\r\n  instance: source.OSM;\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  opaque: boolean;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  tileLoadFunction: TileLoadFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(\r\n    @Host()\r\n    @Optional()\r\n    layer: LayerTileComponent,\r\n    @Host()\r\n    @Optional()\r\n    raster?: SourceRasterComponent\r\n  ) {\r\n    super(layer, raster);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.tileGridXYZ) {\r\n      this.tileGrid = this.tileGridXYZ.instance;\r\n    }\r\n    this.instance = new source.OSM(this);\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source, TileLoadFunctionType } from 'openlayers';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-bingmaps',\r\n  template: `\r\n    <div class=\"aol-source-bingmaps\"></div>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\r\n})\r\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\r\n  instance: source.BingMaps;\r\n\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  culture: string;\r\n  @Input()\r\n  key: string;\r\n  @Input()\r\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  tileLoadFunction: TileLoadFunctionType;\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.BingMaps(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source } from 'openlayers';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-vector',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\r\n})\r\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\r\n  instance: source.Vector;\r\n  @Input()\r\n  overlaps: boolean;\r\n  @Input()\r\n  useSpatialIndex: boolean;\r\n  @Input()\r\n  wrapX: boolean;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  format: ol.format.Feature;\r\n  @Input()\r\n  strategy: ol.LoadingStrategy;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.Vector(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { source, Feature, geom } from 'openlayers';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { SourceVectorComponent } from './vector.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-cluster',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\r\n})\r\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit {\r\n  instance: source.Cluster;\r\n\r\n  @Input()\r\n  distance: number;\r\n  @Input()\r\n  geometryFunction?: ((feature: Feature) => geom.Point);\r\n\r\n  @ContentChild(SourceVectorComponent)\r\n  sourceVectorComponent: SourceVectorComponent;\r\n  source: source.Vector;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.source = this.sourceVectorComponent.instance;\r\n\r\n    this.instance = new source.Cluster(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { tilegrid, Size, Coordinate } from 'openlayers';\r\nimport { TileGridComponent } from './tilegrid.component';\r\n\r\n@Component({\r\n  selector: 'aol-tilegrid-wmts',\r\n  template: '',\r\n})\r\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\r\n  instance: tilegrid.WMTS;\r\n\r\n  @Input()\r\n  origin?: Coordinate;\r\n  @Input()\r\n  origins?: Coordinate[];\r\n  @Input()\r\n  resolutions: number[];\r\n  @Input()\r\n  matrixIds: string[];\r\n  @Input()\r\n  sizes?: Size[];\r\n  @Input()\r\n  tileSizes?: (number | Size)[];\r\n  @Input()\r\n  widths?: number[];\r\n\r\n  ngOnInit() {\r\n    this.instance = new tilegrid.WMTS(this);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  forwardRef,\r\n  AfterContentInit,\r\n  ContentChild,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { TileLoadFunctionType, tilegrid, ProjectionLike, source, ImageTile, TileCoord, Tile } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilewmts',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\r\n})\r\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\r\n  instance: source.WMTS;\r\n  @Input()\r\n  cacheSize?: number;\r\n  @Input()\r\n  crossOrigin?: string;\r\n  @Input()\r\n  logo?: string | olx.LogoOptions;\r\n  @Input()\r\n  tileGrid: tilegrid.WMTS;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  reprojectionErrorThreshold?: number;\r\n  @Input()\r\n  requestEncoding?: source.WMTSRequestEncoding | string;\r\n  @Input()\r\n  layer: string;\r\n  @Input()\r\n  style: string;\r\n  @Input()\r\n  tileClass?: ((\r\n    n: ImageTile,\r\n    coords: TileCoord,\r\n    state: Tile.State,\r\n    s1: string,\r\n    s2: string,\r\n    type: TileLoadFunctionType\r\n  ) => any);\r\n  @Input()\r\n  tilePixelRatio?: number;\r\n  @Input()\r\n  version?: string;\r\n  @Input()\r\n  format?: string;\r\n  @Input()\r\n  matrixSet: string;\r\n  @Input()\r\n  dimensions?: GlobalObject;\r\n  @Input()\r\n  url?: string;\r\n  @Input()\r\n  tileLoadFunction?: TileLoadFunctionType;\r\n  @Input()\r\n  urls?: string[];\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @ContentChild(TileGridWMTSComponent)\r\n  tileGridWMTS: TileGridWMTSComponent;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        switch (key) {\r\n          case 'url':\r\n            this.url = changes[key].currentValue;\r\n            this.setLayerSource();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  setLayerSource(): void {\r\n    this.instance = new source.WMTS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this.tileGridWMTS) {\r\n      this.tileGrid = this.tileGridWMTS.instance;\r\n      this.setLayerSource();\r\n    }\r\n  }\r\n}\r\n","import { format } from 'openlayers';\r\n\r\nexport class FormatComponent {\r\n  public instance: format.Feature;\r\n  public componentType = 'format';\r\n}\r\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { source, ProjectionLike, TileUrlFunctionType, format, tilegrid } from 'openlayers';\r\nimport { LayerVectorTileComponent } from '../layers/layervectortile.component';\r\nimport { FormatComponent } from '../formats/format.component';\r\nimport { TileGridComponent } from '../tilegrid.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-vectortile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent) }],\r\n})\r\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\r\n  public instance: source.VectorTile;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  overlaps: boolean;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  tilePixelRatio: number;\r\n  @Input()\r\n  tileUrlFunction: TileUrlFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @ContentChild(FormatComponent)\r\n  formatComponent: FormatComponent;\r\n  format: format.Feature;\r\n  @ContentChild(TileGridComponent)\r\n  tileGridComponent: TileGridComponent;\r\n  tileGrid: tilegrid.TileGrid;\r\n\r\n  constructor(@Host() layer: LayerVectorTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  /* need the children to construct the OL3 object */\r\n  ngAfterContentInit() {\r\n    this.format = this.formatComponent.instance;\r\n    this.tileGrid = this.tileGridComponent.instance;\r\n    // console.log('creating ol.source.VectorTile instance with:', this);\r\n    this.instance = new source.VectorTile(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\r\nimport { source, TileLoadFunctionType, tilegrid } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilewms',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\r\n})\r\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\r\n  instance: source.TileWMS;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  gutter: number;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  params: Object;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  serverType: string;\r\n  @Input()\r\n  tileGrid: tilegrid.TileGrid;\r\n  @Input()\r\n  tileLoadFunction: TileLoadFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.TileWMS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilejson',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\r\n})\r\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\r\n  instance: source.TileJSON;\r\n\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.TileJSON(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source, ProjectionLike, format } from 'openlayers';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-geojson',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\r\n})\r\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\r\n  instance: source.Vector;\r\n  format: format.Feature;\r\n  @Input()\r\n  defaultDataProjection: ProjectionLike;\r\n  @Input()\r\n  featureProjection: ProjectionLike;\r\n  @Input()\r\n  geometryName: string;\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.format = new format.GeoJSON(this);\r\n    this.instance = new source.Vector(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { ProjectionLike, source, Extent, AttributionLike, ImageLoadFunctionType, Size } from 'openlayers';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagestatic',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\r\n})\r\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit {\r\n  instance: source.ImageStatic;\r\n\r\n  @Input()\r\n  projection: ProjectionLike | string;\r\n  @Input()\r\n  imageExtent: Extent;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  crossOrigin?: string;\r\n  @Input()\r\n  imageLoadFunction?: ImageLoadFunctionType;\r\n  @Input()\r\n  logo?: string | olx.LogoOptions;\r\n  @Input()\r\n  imageSize?: Size;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.ImageStatic(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\r\nimport { AttributionLike, ImageLoadFunctionType, ProjectionLike, source } from 'openlayers';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagewms',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\r\n})\r\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\r\n  instance: source.ImageWMS;\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  serverType: string;\r\n  @Input()\r\n  imageLoadFunction?: ImageLoadFunctionType;\r\n  @Input()\r\n  logo: string | olx.LogoOptions;\r\n  @Input()\r\n  params: Object;\r\n  @Input()\r\n  projection: ProjectionLike | string;\r\n  @Input()\r\n  ratio: number;\r\n  @Input()\r\n  resolutions: Array<number>;\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.ImageWMS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, forwardRef, Host, Input, OnInit } from '@angular/core';\r\nimport { source, ProjectionLike, Attribution, ImageLoadFunctionType } from 'openlayers';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagearcgisrest',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\r\n})\r\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit {\r\n  instance: source.ImageArcGISRest;\r\n\r\n  @Input() projection: ProjectionLike | string;\r\n  @Input() url: string;\r\n  @Input() attributions: Attribution[];\r\n  @Input() crossOrigin?: string;\r\n  @Input() imageLoadFunction?: ImageLoadFunctionType;\r\n  @Input() params?: { [k: string]: any };\r\n  @Input() ratio = 1;\r\n  @Input() resolutions?: number[];\r\n  @Input() logo?: string | olx.LogoOptions;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.ImageArcGISRest(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { Feature } from 'openlayers';\r\nimport { SourceVectorComponent } from './sources/vector.component';\r\n\r\n@Component({\r\n  selector: 'aol-feature',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\r\n  public componentType = 'feature';\r\n  public instance: Feature;\r\n\r\n  @Input()\r\n  id: string | number | undefined;\r\n\r\n  constructor(private host: SourceVectorComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new Feature();\r\n    if (this.id !== undefined) {\r\n      this.instance.setId(this.id);\r\n    }\r\n    this.host.instance.addFeature(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.host.instance.removeFeature(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance) {\r\n      this.instance.setId(this.id);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { geom } from 'openlayers';\r\nimport { FeatureComponent } from './feature.component';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-linestring',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryLinestringComponent implements OnInit, OnDestroy {\r\n  public componentType = 'geometry-linestring';\r\n  public instance: geom.LineString;\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // console.log('instancing aol-geometry-linestring');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new geom.LineString([]);\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n  ngOnDestroy() {\r\n    // this.host.setGeometry(null);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-geometry-point',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryPointComponent implements OnInit, OnDestroy {\r\n  public componentType = 'geometry-point';\r\n  public instance: geom.Point;\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // console.log('creating aol-geometry-point');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new geom.Point([0, 0]); // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.host.setGeometry(null);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-geometry-polygon',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryPolygonComponent implements OnInit, OnDestroy {\r\n  public componentType = 'geometry-polygon';\r\n  public instance: geom.Polygon;\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // console.log('creating aol-geometry-polygon');\r\n  }\r\n\r\n  ngOnInit() {\r\n    // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.instance = new geom.Polygon([[[0, 0], [1, 0], [1, 1]]]);\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.host.setGeometry(null);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-geometry-circle',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryCircleComponent implements OnInit {\r\n  public componentType = 'geometry-circle';\r\n  public instance: geom.Circle;\r\n\r\n  @Input()\r\n  get radius(): number {\r\n    return this.instance.getRadius();\r\n  }\r\n  set radius(radius: number) {\r\n    this.instance.setRadius(radius);\r\n  }\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.instance = new geom.Circle([0, 0]);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aol-content',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class ContentComponent {\r\n  constructor(public elementRef: ElementRef) {}\r\n}\r\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { MapComponent } from './map.component';\r\nimport { Overlay, OverlayPositioning } from 'openlayers';\r\nimport { ContentComponent } from './content.component';\r\n\r\n@Component({\r\n  selector: 'aol-overlay',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class OverlayComponent implements OnInit, OnDestroy {\r\n  componentType = 'overlay';\r\n  instance: Overlay;\r\n  element: Element;\r\n  @ContentChild(ContentComponent)\r\n  content: ContentComponent;\r\n\r\n  @Input()\r\n  id: number | string;\r\n  @Input()\r\n  offset: number[];\r\n  @Input()\r\n  positioning: OverlayPositioning | string;\r\n  @Input()\r\n  stopEvent: boolean;\r\n  @Input()\r\n  insertFirst: boolean;\r\n  @Input()\r\n  autoPan: boolean;\r\n  @Input()\r\n  autoPanAnimation: olx.animation.PanOptions;\r\n  @Input()\r\n  autoPanMargin: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.content) {\r\n      this.element = this.content.elementRef.nativeElement;\r\n      this.instance = new Overlay(this);\r\n      this.map.instance.addOverlay(this.instance);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.instance) {\r\n      this.map.instance.removeOverlay(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, Optional, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { proj, Coordinate } from 'openlayers';\r\nimport { MapComponent } from './map.component';\r\nimport {\r\n  GeometryPointComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n} from './geometry.components';\r\nimport { ViewComponent } from './view.component';\r\nimport { OverlayComponent } from './overlay.component';\r\n\r\n@Component({\r\n  selector: 'aol-coordinate',\r\n  template: `\r\n    <div class=\"aol-coordinate\"></div>\r\n  `,\r\n})\r\nexport class CoordinateComponent implements OnChanges {\r\n  private host: any;\r\n\r\n  @Input()\r\n  x: number;\r\n  @Input()\r\n  y: number;\r\n  @Input()\r\n  srid = 'EPSG:3857';\r\n\r\n  constructor(\r\n    private map: MapComponent,\r\n    @Optional() viewHost: ViewComponent,\r\n    @Optional() geometryPointHost: GeometryPointComponent,\r\n    @Optional() geometryCircleHost: GeometryCircleComponent,\r\n    @Optional() overlayHost: OverlayComponent\r\n  ) {\r\n    // console.log('instancing aol-coordinate');\r\n    if (geometryPointHost !== null) {\r\n      this.host = geometryPointHost;\r\n    } else if (geometryCircleHost !== null) {\r\n      this.host = geometryCircleHost;\r\n    } else if (viewHost !== null) {\r\n      this.host = viewHost;\r\n    } else if (overlayHost !== null) {\r\n      this.host = overlayHost;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    let referenceProjection: proj.Projection;\r\n    let referenceProjectionCode: string;\r\n    let transformedCoordinates: number[];\r\n\r\n    referenceProjection = this.map.instance.getView().getProjection();\r\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\r\n\r\n    if (this.srid === referenceProjectionCode) {\r\n      transformedCoordinates = [this.x, this.y];\r\n    } else {\r\n      transformedCoordinates = proj.transform([this.x, this.y], this.srid, referenceProjectionCode);\r\n    }\r\n\r\n    switch (this.host.componentType) {\r\n      case 'geometry-point':\r\n        this.host.instance.setCoordinates(transformedCoordinates);\r\n        break;\r\n      case 'geometry-circle':\r\n      case 'view':\r\n        this.host.instance.setCenter(transformedCoordinates);\r\n        break;\r\n      case 'overlay':\r\n        this.host.instance.setPosition(transformedCoordinates);\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-collection-coordinates',\r\n  template: `\r\n    <div class=\"aol-collection-coordinates\"></div>\r\n  `,\r\n})\r\nexport class CollectionCoordinatesComponent implements OnChanges {\r\n  private host: any;\r\n\r\n  @Input()\r\n  coordinates: [number, number][];\r\n  @Input()\r\n  srid = 'EPSG:3857';\r\n\r\n  constructor(\r\n    private map: MapComponent,\r\n    @Optional() geometryLinestring: GeometryLinestringComponent,\r\n    @Optional() geometryPolygon: GeometryPolygonComponent\r\n  ) {\r\n    // console.log('creating aol-collection-coordinates');\r\n    if (!!geometryLinestring) {\r\n      this.host = geometryLinestring;\r\n    } else if (!!geometryPolygon) {\r\n      this.host = geometryPolygon;\r\n    } else {\r\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    let referenceProjection: proj.Projection;\r\n    let referenceProjectionCode: string;\r\n    let transformedCoordinates: Array<Coordinate>;\r\n\r\n    // console.log('coordinates change: ', this.coordinates);\r\n\r\n    referenceProjection = this.map.instance.getView().getProjection();\r\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\r\n\r\n    if (this.srid === referenceProjectionCode) {\r\n      transformedCoordinates = this.coordinates;\r\n    } else {\r\n      transformedCoordinates = [];\r\n      this.coordinates.forEach(\r\n        function(coordinate: Coordinate) {\r\n          transformedCoordinates.push(proj.transform(coordinate, this.srid, referenceProjectionCode));\r\n        }.bind(this)\r\n      );\r\n    }\r\n    switch (this.host.componentType) {\r\n      case 'geometry-linestring':\r\n        this.host.instance.setCoordinates(transformedCoordinates);\r\n        break;\r\n      case 'geometry-polygon':\r\n        this.host.instance.setCoordinates([transformedCoordinates]);\r\n        break;\r\n      default:\r\n        throw new Error('aol-collection-coordinates host is of unknown type: ' + this.host.componentType);\r\n      // break;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit } from '@angular/core';\r\nimport { style, StyleGeometryFunction, geom } from 'openlayers';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\n\r\n@Component({\r\n  selector: 'aol-style',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class StyleComponent implements OnInit {\r\n  private host: FeatureComponent | LayerVectorComponent;\r\n  public instance: style.Style;\r\n  public componentType = 'style';\r\n\r\n  @Input()\r\n  geometry: string | geom.Geometry | StyleGeometryFunction;\r\n  @Input()\r\n  fill: style.Fill;\r\n  @Input()\r\n  image: style.Image;\r\n  @Input()\r\n  stroke: style.Stroke;\r\n  @Input()\r\n  text: style.Text;\r\n  @Input()\r\n  zIndex: number;\r\n\r\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\r\n    // console.log('creating aol-style');\r\n    this.host = !!featureHost ? featureHost : layerHost;\r\n    if (!this.host) {\r\n      throw new Error('aol-style must be applied to a feature or a layer');\r\n    }\r\n  }\r\n\r\n  update() {\r\n    // console.log('updating style\\'s host: ', this.host);\r\n    this.host.instance.changed();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating aol-style instance with: ', this);\r\n    this.instance = new style.Style(this);\r\n    this.host.instance.setStyle(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { style } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-circle',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\r\n  public componentType = 'style-circle';\r\n  public instance: style.Circle;\r\n\r\n  @Input()\r\n  fill: style.Fill;\r\n  @Input()\r\n  radius: number;\r\n  @Input()\r\n  snapToPixel: boolean;\r\n  @Input()\r\n  stroke: style.Stroke;\r\n  @Input()\r\n  atlasManager: style.AtlasManager;\r\n\r\n  constructor(@Host() private host: StyleComponent) {}\r\n\r\n  /**\r\n   * WORK-AROUND: since the re-rendering is not triggered on style change\r\n   * we trigger a radius change.\r\n   * see openlayers #6233 and #5775\r\n   */\r\n  update() {\r\n    if (!!this.instance) {\r\n      // console.log('setting ol.style.Circle instance\\'s radius');\r\n      this.instance.setRadius(this.radius);\r\n    }\r\n    this.host.update();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // console.log('creating ol.style.Circle instance with: ', this);\r\n    this.instance = new style.Circle(this);\r\n    this.host.instance.setImage(this.instance);\r\n    this.host.update();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['radius']) {\r\n      this.instance.setRadius(changes['radius'].currentValue);\r\n    }\r\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-style-circle');\r\n    this.host.instance.setImage(null);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-text',\r\n  template: `\r\n    <div class=\"aol-style-text\"></div>\r\n  `,\r\n})\r\nexport class StyleTextComponent implements OnInit, OnChanges {\r\n  public instance: style.Text;\r\n  public componentType = 'style-text';\r\n\r\n  @Input()\r\n  font: string | undefined;\r\n  @Input()\r\n  offsetX: number | undefined;\r\n  @Input()\r\n  offsetY: number | undefined;\r\n  @Input()\r\n  scale: number | undefined;\r\n  @Input()\r\n  rotateWithView: boolean | undefined;\r\n  @Input()\r\n  rotation: number | undefined;\r\n  @Input()\r\n  text: string | undefined;\r\n  @Input()\r\n  textAlign: string | undefined;\r\n  @Input()\r\n  textBaseLine: string | undefined;\r\n\r\n  constructor(@Optional() private host: StyleComponent) {\r\n    if (!host) {\r\n      throw new Error('aol-style-text must be a descendant of aol-style');\r\n    }\r\n    // console.log('creating aol-style-text with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Text instance with: ', this);\r\n    this.instance = new style.Text(this);\r\n    this.host.instance.setText(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['font']) {\r\n      this.instance.setFont(changes['font'].currentValue);\r\n    }\r\n    if (changes['offsetX']) {\r\n      this.instance.setOffsetX(changes['offsetX'].currentValue);\r\n    }\r\n    if (changes['offsetY']) {\r\n      this.instance.setOffsetY(changes['offsetY'].currentValue);\r\n    }\r\n    if (changes['scale']) {\r\n      this.instance.setScale(changes['scale'].currentValue);\r\n    }\r\n    if (changes['rotation']) {\r\n      this.instance.setRotation(changes['rotation'].currentValue);\r\n    }\r\n    if (changes['text']) {\r\n      this.instance.setText(changes['text'].currentValue);\r\n    }\r\n    if (changes['textAlign']) {\r\n      this.instance.setTextAlign(changes['textAlign'].currentValue);\r\n    }\r\n    if (changes['textBaseLine']) {\r\n      this.instance.setTextBaseline(changes['textBaseLine'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style, Color } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\nimport { StyleCircleComponent } from './circle.component';\r\nimport { StyleTextComponent } from './text.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-stroke',\r\n  template: `\r\n    <div class=\"aol-style-stroke\"></div>\r\n  `,\r\n})\r\nexport class StyleStrokeComponent implements OnInit, OnChanges {\r\n  public instance: style.Stroke;\r\n  /* the typings do not have the setters */\r\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\r\n\r\n  @Input()\r\n  color: Color | undefined;\r\n  @Input()\r\n  lineCap: string | undefined;\r\n  @Input()\r\n  lineDash: number[] | undefined;\r\n  @Input()\r\n  lineJoin: string | undefined;\r\n  @Input()\r\n  miterLimit: number | undefined;\r\n  @Input()\r\n  width: number | undefined;\r\n\r\n  constructor(\r\n    @Optional() styleHost: StyleComponent,\r\n    @Optional() styleCircleHost: StyleCircleComponent,\r\n    @Optional() styleTextHost: StyleTextComponent\r\n  ) {\r\n    if (!styleHost) {\r\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\r\n    }\r\n    if (!!styleTextHost) {\r\n      this.host = styleTextHost;\r\n    } else if (!!styleCircleHost) {\r\n      this.host = styleCircleHost;\r\n    } else {\r\n      this.host = styleHost;\r\n    }\r\n    // console.log('creating aol-style-stroke with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Stroke instance with: ', this);\r\n    this.instance = new style.Stroke(this);\r\n    switch (this.host.componentType) {\r\n      case 'style':\r\n        this.host.instance.setStroke(this.instance);\r\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\r\n        break;\r\n      case 'style-text':\r\n        this.host.instance.setStroke(this.instance);\r\n        break;\r\n      case 'style-circle':\r\n        this.host.stroke = this.instance;\r\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\r\n        break;\r\n      default:\r\n        throw new Error('unknown host type: ' + this.host);\r\n      // break;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['color']) {\r\n      this.instance.setColor(changes['color'].currentValue);\r\n    }\r\n    if (changes['lineCap']) {\r\n      this.instance.setLineCap(changes['lineCap'].currentValue);\r\n    }\r\n    if (changes['lineDash']) {\r\n      this.instance.setLineDash(changes['lineDash'].currentValue);\r\n    }\r\n    if (changes['lineJoin']) {\r\n      this.instance.setLineJoin(changes['lineJoin'].currentValue);\r\n    }\r\n    if (changes['miterLimit']) {\r\n      this.instance.setMiterLimit(changes['miterLimit'].currentValue);\r\n    }\r\n    if (changes['width']) {\r\n      this.instance.setWidth(changes['width'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-icon',\r\n  template: `\r\n    <div class=\"aol-style-icon\"></div>\r\n  `,\r\n})\r\nexport class StyleIconComponent implements OnInit, OnChanges {\r\n  public instance: style.Icon;\r\n\r\n  @Input()\r\n  anchor: [number, number];\r\n  @Input()\r\n  anchorXUnits: style.IconAnchorUnits;\r\n  @Input()\r\n  anchorYUnits: style.IconAnchorUnits;\r\n  @Input()\r\n  anchorOrigin: style.IconOrigin;\r\n  @Input()\r\n  color: [number, number, number, number];\r\n  @Input()\r\n  crossOrigin: style.IconOrigin;\r\n  @Input()\r\n  img: string;\r\n  @Input()\r\n  offset: [number, number];\r\n  @Input()\r\n  offsetOrigin: style.IconOrigin;\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  scale: number;\r\n  @Input()\r\n  snapToPixel: boolean;\r\n  @Input()\r\n  rotateWithView: boolean;\r\n  @Input()\r\n  rotation: number;\r\n  @Input()\r\n  size: [number, number];\r\n  @Input()\r\n  imgSize: [number, number];\r\n  @Input()\r\n  src: string;\r\n\r\n  constructor(@Host() private host: StyleComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Icon instance with: ', this);\r\n    this.instance = new style.Icon(this);\r\n    this.host.instance.setImage(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['opacity']) {\r\n      this.instance.setOpacity(changes['opacity'].currentValue);\r\n    }\r\n    if (changes['rotation']) {\r\n      this.instance.setRotation(changes['rotation'].currentValue);\r\n    }\r\n    if (changes['scale']) {\r\n      this.instance.setScale(changes['scale'].currentValue);\r\n    }\r\n    if (changes['src']) {\r\n      this.instance = new style.Icon(this);\r\n      this.host.instance.setImage(this.instance);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-icon: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style, Color, ColorLike } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\nimport { StyleCircleComponent } from './circle.component';\r\nimport { StyleTextComponent } from './text.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-fill',\r\n  template: `\r\n    <div class=\"aol-style-fill\"></div>\r\n  `,\r\n})\r\nexport class StyleFillComponent implements OnInit, OnChanges {\r\n  /* the typings do not have the setters */\r\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\r\n  public instance: style.Fill;\r\n\r\n  @Input()\r\n  color: Color | ColorLike;\r\n\r\n  constructor(\r\n    @Optional() styleHost: StyleComponent,\r\n    @Optional() styleCircleHost: StyleCircleComponent,\r\n    @Optional() styleTextHost: StyleTextComponent\r\n  ) {\r\n    if (!styleHost) {\r\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\r\n    }\r\n    if (!!styleTextHost) {\r\n      this.host = styleTextHost;\r\n    } else if (!!styleCircleHost) {\r\n      this.host = styleCircleHost;\r\n    } else {\r\n      this.host = styleHost;\r\n    }\r\n    // console.log('creating aol-style-fill with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Fill instance with: ', this);\r\n    this.instance = new style.Fill(this);\r\n    switch (this.host.componentType) {\r\n      case 'style':\r\n        this.host.instance.setFill(this.instance);\r\n        // console.log('setting ol.style instance\\'s fill:', this.host);\r\n        break;\r\n      case 'style-text':\r\n        this.host.instance.setFill(this.instance);\r\n        break;\r\n      case 'style-circle':\r\n        this.host.fill = this.instance;\r\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\r\n        break;\r\n      default:\r\n        throw new Error('unknown host type: ' + this.host);\r\n      // break;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['color']) {\r\n      this.instance.setColor(changes['color'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { control, Collection } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-defaults',\r\n  template: '',\r\n})\r\nexport class DefaultControlComponent implements OnInit, OnDestroy {\r\n  instance: Collection<control.Control>;\r\n  @Input()\r\n  attribution: boolean;\r\n  @Input()\r\n  attributionOptions: olx.control.AttributionOptions;\r\n  @Input()\r\n  rotate: boolean;\r\n  @Input()\r\n  rotateOptions: olx.control.RotateOptions;\r\n  @Input()\r\n  zoom: boolean;\r\n  @Input()\r\n  zoomOptions: olx.control.ZoomOptions;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('ol.control.defaults init: ', this);\r\n    this.instance = control.defaults(this);\r\n    this.instance.forEach(c => this.map.instance.addControl(c));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-defaults');\r\n    this.instance.forEach(c => this.map.instance.removeControl(c));\r\n  }\r\n}\r\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { ContentComponent } from '../content.component';\r\n\r\n@Component({\r\n  selector: 'aol-control',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlComponent implements OnInit, OnDestroy {\r\n  public componentType = 'control';\r\n  instance: control.Control;\r\n  element: Element;\r\n  @ContentChild(ContentComponent)\r\n  content: ContentComponent;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.content) {\r\n      this.element = this.content.elementRef.nativeElement;\r\n      this.instance = new control.Control(this);\r\n      this.map.instance.addControl(this.instance);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.instance) {\r\n      this.map.instance.removeControl(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-attribution',\r\n  template: ``,\r\n})\r\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\r\n  public componentType = 'control';\r\n  instance: control.Attribution;\r\n  target: Element;\r\n  @Input()\r\n  collapsible: boolean;\r\n\r\n  constructor(private map: MapComponent, private element: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.target = this.element.nativeElement;\r\n    // console.log('ol.control.Attribution init: ', this);\r\n    this.instance = new control.Attribution(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-attribution');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-fullscreen',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\r\n  instance: control.FullScreen;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  labelActive: string;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  keys: boolean;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-fullscreen');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.FullScreen(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-fullscreen');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control, CoordinateFormatType, ProjectionLike } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-mouseposition',\r\n  template: ``,\r\n})\r\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\r\n  instance: control.MousePosition;\r\n  @Input()\r\n  coordinateFormat: CoordinateFormatType;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  target: Element;\r\n\r\n  constructor(private map: MapComponent, private element: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.target = this.element.nativeElement;\r\n    // console.log('ol.control.MousePosition init: ', this);\r\n    this.instance = new control.MousePosition(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-mouseposition');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control, View, layer } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-overviewmap',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlOverviewMapComponent implements OnInit, OnDestroy {\r\n  instance: control.OverviewMap;\r\n  @Input()\r\n  collapsed: boolean;\r\n  @Input()\r\n  collapseLabel: string;\r\n  @Input()\r\n  collapsible: boolean;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  layers: layer.Layer[];\r\n  @Input()\r\n  target: Element;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  view: View;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-overviewmap');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.OverviewMap(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-overviewmap');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-rotate',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlRotateComponent implements OnInit, OnDestroy {\r\n  instance: control.Rotate;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  autoHide: boolean;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-rotate');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.Rotate(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-rotate');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-scaleline',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\r\n  instance: control.ScaleLine;\r\n  @Input()\r\n  units: string;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-scaleline');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.ScaleLine(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-scaleline');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoom',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomComponent implements OnInit, OnDestroy {\r\n  instance: control.Zoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  zoomInLabel: string | Node;\r\n  @Input()\r\n  zoomOutLabel: string | Node;\r\n  @Input()\r\n  zoomInTipLabel: string;\r\n  @Input()\r\n  zoomOutTipLabel: string;\r\n  @Input()\r\n  delta: number;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoom');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.Zoom(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoom');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoomslider',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\r\n  instance: control.ZoomSlider;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  minResolution: number;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoomslider');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.ZoomSlider(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoomslider');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control, Extent } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoomtoextent',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\r\n  instance: control.ZoomToExtent;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string | Node;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  extent: Extent;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoomtoextent');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.ZoomToExtent(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoomtoextent');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, forwardRef, Input } from '@angular/core';\r\nimport { format, geom } from 'openlayers';\r\nimport { FormatComponent } from './format.component';\r\n\r\n@Component({\r\n  selector: 'aol-format-mvt',\r\n  template: '',\r\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\r\n})\r\nexport class FormatMVTComponent extends FormatComponent {\r\n  instance: format.MVT;\r\n\r\n  @Input()\r\n  featureClass:\r\n    | ((geom: geom.Geometry | { [k: string]: any }) => any)\r\n    | ((geom: geom.GeometryType, arg2: number[], arg3: number[] | number[][], arg4: { [k: string]: any }) => any);\r\n  @Input()\r\n  geometryName: string;\r\n  @Input()\r\n  layerName: string;\r\n  @Input()\r\n  layers: string[];\r\n\r\n  constructor() {\r\n    super();\r\n    this.instance = new format.MVT(this);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction, Collection } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-default',\r\n  template: '',\r\n})\r\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Collection<interaction.Interaction>;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = interaction.defaults();\r\n    this.instance.forEach(i => this.map.instance.addInteraction(i));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.instance.forEach(i => this.map.instance.removeInteraction(i));\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-doubleclickzoom',\r\n  template: '',\r\n})\r\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DoubleClickZoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  delta: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DoubleClickZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction, format, ProjectionLike } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-draganddrop',\r\n  template: '',\r\n})\r\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragAndDrop;\r\n\r\n  @Input()\r\n  formatConstructors: ((n: format.Feature) => any)[];\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  target: Element;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragAndDrop(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType, DragBoxEndConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragbox',\r\n  template: '',\r\n})\r\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragBox;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  boxEndCondition: DragBoxEndConditionType;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragBox(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType, Kinetic } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragpan',\r\n  template: '',\r\n})\r\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragPan;\r\n\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  kinetic: Kinetic;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragPan(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragrotate',\r\n  template: '',\r\n})\r\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragRotate;\r\n\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  duration: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragRotate(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragrotateandzoom',\r\n  template: '',\r\n})\r\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragRotate;\r\n\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  duration: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragRotateAndZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragzoom',\r\n  template: '',\r\n})\r\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragZoom;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  out: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-mousewheelzoom',\r\n  template: '',\r\n})\r\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.MouseWheelZoom;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  timeout: number;\r\n  @Input()\r\n  useAnchor: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.MouseWheelZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-pinchzoom',\r\n  template: '',\r\n})\r\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.PinchZoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  constrainResolution: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.PinchZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-draw',\r\n  template: '',\r\n})\r\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Draw;\r\n\r\n  @Input()\r\n  clickTolerance?: number;\r\n  @Input()\r\n  features?: ol.Collection<ol.Feature>;\r\n  @Input()\r\n  source?: ol.source.Vector;\r\n  @Input()\r\n  snapTolerance?: number;\r\n  @Input()\r\n  type: ol.geom.GeometryType;\r\n  @Input()\r\n  maxPoints?: number;\r\n  @Input()\r\n  minPoints?: number;\r\n  @Input()\r\n  finishCondition?: ol.EventsConditionType;\r\n  @Input()\r\n  style?: ol.style.Style | ol.style.Style[] | ol.StyleFunction;\r\n  @Input()\r\n  geometryFunction?: ol.DrawGeometryFunctionType;\r\n  @Input()\r\n  geometryName?: string;\r\n  @Input()\r\n  condition?: ol.EventsConditionType;\r\n  @Input()\r\n  freehandCondition?: ol.EventsConditionType;\r\n  @Input()\r\n  freehand?: boolean;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @Output()\r\n  onChange = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onChangeActive = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onDrawEnd = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onDrawStart = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<ol.interaction.Draw.Event>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Draw(this);\r\n    this.instance.on('change', (event: ol.interaction.Draw.Event) => this.onChange.emit(event));\r\n    this.instance.on('change:active', (event: ol.interaction.Draw.Event) => this.onChangeActive.emit(event));\r\n    this.instance.on('drawend', (event: ol.interaction.Draw.Event) => this.onDrawEnd.emit(event));\r\n    this.instance.on('drawstart', (event: ol.interaction.Draw.Event) => this.onDrawStart.emit(event));\r\n    this.instance.on('propertychange', (event: ol.interaction.Draw.Event) => this.onPropertyChange.emit(event));\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport {\r\n  interaction,\r\n  EventsConditionType,\r\n  layer,\r\n  style,\r\n  Collection,\r\n  SelectFilterFunction,\r\n  StyleFunction,\r\n  Feature,\r\n} from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-select',\r\n  template: '',\r\n})\r\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Select;\r\n\r\n  @Input()\r\n  addCondition?: EventsConditionType;\r\n  @Input()\r\n  condition?: EventsConditionType;\r\n  @Input()\r\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\r\n  @Input()\r\n  style?: style.Style | style.Style[] | StyleFunction;\r\n  @Input()\r\n  removeCondition?: EventsConditionType;\r\n  @Input()\r\n  toggleCondition?: EventsConditionType;\r\n  @Input()\r\n  multi?: boolean;\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  filter?: SelectFilterFunction;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @Output()\r\n  onChange = new EventEmitter<interaction.Select.Event>();\r\n  @Output()\r\n  onSelect = new EventEmitter<interaction.Select.Event>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<interaction.Select.Event>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Select(this);\r\n\r\n    this.instance.on('change', (event: interaction.Select.Event) => this.onChange.emit(event));\r\n    this.instance.on('select', (event: interaction.Select.Event) => this.onSelect.emit(event));\r\n    this.instance.on('propertychange', (event: interaction.Select.Event) => this.onPropertyChange.emit(event));\r\n\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { interaction, EventsConditionType, style, StyleFunction, Collection, Feature, source } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-modify',\r\n  template: '',\r\n})\r\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Modify;\r\n\r\n  @Input()\r\n  condition?: EventsConditionType;\r\n  @Input()\r\n  deleteCondition?: EventsConditionType;\r\n  @Input()\r\n  pixelTolerance?: number;\r\n  @Input()\r\n  style?: style.Style | style.Style[] | StyleFunction;\r\n  @Input()\r\n  features: Collection<Feature>;\r\n  @Input()\r\n  wrapX?: boolean;\r\n  @Input()\r\n  source?: source.Vector;\r\n\r\n  @Output()\r\n  onModifyEnd = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onModifyStart = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onChange = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onChangeActive = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<interaction.Modify.Event>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Modify(this);\r\n    this.instance.on('change', (event: interaction.Modify.Event) => this.onChange.emit(event));\r\n    this.instance.on('change:active', (event: interaction.Modify.Event) => this.onChangeActive.emit(event));\r\n    this.instance.on('propertychange', (event: interaction.Modify.Event) => this.onPropertyChange.emit(event));\r\n    this.instance.on('modifyend', (event: interaction.Modify.Event) => this.onModifyEnd.emit(event));\r\n    this.instance.on('modifystart', (event: interaction.Modify.Event) => this.onModifyStart.emit(event));\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { interaction, layer, Collection, Feature } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-translate',\r\n  template: '',\r\n})\r\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Translate;\r\n\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\r\n  @Input()\r\n  hitTolerance?: number;\r\n\r\n  @Output()\r\n  onChange: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onPropertyChange: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onTranslateEnd: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onTranslateStart: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onTranslating: EventEmitter<interaction.Translate.Event>;\r\n\r\n  constructor(private map: MapComponent) {\r\n    this.onChange = new EventEmitter<interaction.Translate.Event>();\r\n    this.onPropertyChange = new EventEmitter<interaction.Translate.Event>();\r\n    this.onTranslateEnd = new EventEmitter<interaction.Translate.Event>();\r\n    this.onTranslateStart = new EventEmitter<interaction.Translate.Event>();\r\n    this.onTranslating = new EventEmitter<interaction.Translate.Event>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Translate(this);\r\n\r\n    this.instance.on('change', (event: interaction.Translate.Event) => this.onChange.emit(event));\r\n    this.instance.on('propertychange', (event: interaction.Translate.Event) => this.onPropertyChange.emit(event));\r\n    this.instance.on('translateend', (event: interaction.Translate.Event) => this.onTranslateEnd.emit(event));\r\n    this.instance.on('translatestart', (event: interaction.Translate.Event) => this.onTranslateStart.emit(event));\r\n    this.instance.on('translating', (event: interaction.Translate.Event) => this.onTranslating.emit(event));\r\n\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { Attribution } from 'openlayers';\r\n\r\n@Component({\r\n  selector: 'aol-attribution',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class AttributionComponent implements OnInit {\r\n  instance: Attribution;\r\n  html: string;\r\n\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.html = this.elementRef.nativeElement.innerHTML;\r\n    this.instance = new Attribution(this);\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\r\nimport { Attribution } from 'openlayers';\r\nimport { SourceComponent } from './sources/source.component';\r\nimport { AttributionComponent } from './attribution.component';\r\n\r\n@Component({\r\n  selector: 'aol-attributions',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class AttributionsComponent implements AfterViewInit {\r\n  instance: Array<Attribution>;\r\n\r\n  @ContentChildren(AttributionComponent)\r\n  attributions: QueryList<AttributionComponent>;\r\n\r\n  constructor(@Host() private source: SourceComponent) {}\r\n\r\n  /* we can do this at the very end */\r\n  ngAfterViewInit() {\r\n    if (this.attributions.length) {\r\n      this.instance = this.attributions.map(cmp => cmp.instance);\r\n      // console.log('setting attributions:', this.instance);\r\n      this.source.instance.setAttributions(this.instance);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ngx-openlayers\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ViewComponent } from './lib/view.component';\r\nimport { GraticuleComponent } from './lib/graticule.component';\r\nimport { LayerGroupComponent } from './lib/layers/layergroup.component';\r\nimport { LayerImageComponent } from './lib/layers/layerimage.component';\r\nimport { LayerTileComponent } from './lib/layers/layertile.component';\r\nimport { MapComponent } from './lib/map.component';\r\nimport { LayerVectorComponent } from './lib/layers/layervector.component';\r\nimport { LayerVectorTileComponent } from './lib/layers/layervectortile.component';\r\nimport { SourceOsmComponent } from './lib/sources/osm.component';\r\nimport { SourceBingmapsComponent } from './lib/sources/bingmaps.component';\r\nimport { SourceClusterComponent } from './lib/sources/cluster.component';\r\nimport { SourceVectorComponent } from './lib/sources/vector.component';\r\nimport { SourceXYZComponent } from './lib/sources/xyz.component';\r\nimport { SourceTileWMTSComponent } from './lib/sources/tilewmts.component';\r\nimport { SourceVectorTileComponent } from './lib/sources/vectortile.component';\r\nimport { SourceTileWMSComponent } from './lib/sources/tilewms.component';\r\nimport { SourceTileJSONComponent } from './lib/sources/tilejson.component';\r\nimport { SourceGeoJSONComponent } from './lib/sources/geojson.component';\r\nimport { SourceImageStaticComponent } from './lib/sources/imagestatic.component';\r\nimport { SourceImageWMSComponent } from './lib/sources/imagewms.component';\r\nimport { SourceImageArcGISRestComponent } from './lib/sources/imagearcgisrest.component';\r\nimport { SourceRasterComponent } from './lib/sources/raster.component';\r\nimport { FeatureComponent } from './lib/feature.component';\r\nimport {\r\n  GeometryLinestringComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n} from './lib/geometry.components';\r\nimport { CollectionCoordinatesComponent, CoordinateComponent } from './lib/coordinate.component';\r\nimport { StyleComponent } from './lib/styles/style.component';\r\nimport { StyleCircleComponent } from './lib/styles/circle.component';\r\nimport { StyleStrokeComponent } from './lib/styles/stroke.component';\r\nimport { StyleIconComponent } from './lib/styles/icon.component';\r\nimport { StyleFillComponent } from './lib/styles/fill.component';\r\nimport { StyleTextComponent } from './lib/styles/text.component';\r\nimport { DefaultControlComponent } from './lib/controls/default.component';\r\nimport { ControlComponent } from './lib/controls/control.component';\r\nimport { ControlAttributionComponent } from './lib/controls/attribution.component';\r\nimport { ControlFullScreenComponent } from './lib/controls/fullscreen.component';\r\nimport { ControlMousePositionComponent } from './lib/controls/mouseposition.component';\r\nimport { ControlOverviewMapComponent } from './lib/controls/overviewmap.component';\r\nimport { ControlRotateComponent } from './lib/controls/rotate.component';\r\nimport { ControlScaleLineComponent } from './lib/controls/scaleline.component';\r\nimport { ControlZoomComponent } from './lib/controls/zoom.component';\r\nimport { ControlZoomSliderComponent } from './lib/controls/zoomslider.component';\r\nimport { ControlZoomToExtentComponent } from './lib/controls/zoomtoextent.component';\r\nimport { FormatMVTComponent } from './lib/formats/mvt.component';\r\nimport { TileGridComponent } from './lib/tilegrid.component';\r\nimport { TileGridWMTSComponent } from './lib/tilegridwmts.component';\r\nimport { DefaultInteractionComponent } from './lib/interactions/default.component';\r\nimport { DoubleClickZoomInteractionComponent } from './lib/interactions/doubleclickzoom.component';\r\nimport { DragAndDropInteractionComponent } from './lib/interactions/draganddrop.component';\r\nimport { DragBoxInteractionComponent } from './lib/interactions/dragbox.component';\r\nimport { DragPanInteractionComponent } from './lib/interactions/dragpan.component';\r\nimport { DragRotateInteractionComponent } from './lib/interactions/dragrotate.component';\r\nimport { DragRotateAndZoomInteractionComponent } from './lib/interactions/dragrotateandzoom.component';\r\nimport { DragZoomInteractionComponent } from './lib/interactions/dragzoom.component';\r\nimport { MouseWheelZoomInteractionComponent } from './lib/interactions/mousewheelzoom.component';\r\nimport { PinchZoomInteractionComponent } from './lib/interactions/pinchzoom.component';\r\nimport { DrawInteractionComponent } from './lib/interactions/draw.component';\r\nimport { SelectInteractionComponent } from './lib/interactions/select.component';\r\nimport { ModifyInteractionComponent } from './lib/interactions/modify.component';\r\nimport { TranslateInteractionComponent } from './lib/interactions/translate.component';\r\nimport { OverlayComponent } from './lib/overlay.component';\r\nimport { ContentComponent } from './lib/content.component';\r\nimport { AttributionComponent } from './lib/attribution.component';\r\nimport { AttributionsComponent } from './lib/attributions.component';\r\n\r\nexport {\r\n  MapComponent,\r\n  ViewComponent,\r\n  GraticuleComponent,\r\n  LayerGroupComponent,\r\n  LayerImageComponent,\r\n  LayerTileComponent,\r\n  LayerVectorComponent,\r\n  LayerVectorTileComponent,\r\n  SourceOsmComponent,\r\n  SourceBingmapsComponent,\r\n  SourceClusterComponent,\r\n  SourceVectorComponent,\r\n  SourceXYZComponent,\r\n  SourceVectorTileComponent,\r\n  SourceTileWMSComponent,\r\n  SourceTileWMTSComponent,\r\n  SourceTileJSONComponent,\r\n  SourceGeoJSONComponent,\r\n  SourceImageStaticComponent,\r\n  SourceImageWMSComponent,\r\n  SourceRasterComponent,\r\n  SourceImageArcGISRestComponent,\r\n  FeatureComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n  CoordinateComponent,\r\n  CollectionCoordinatesComponent,\r\n  StyleComponent,\r\n  StyleCircleComponent,\r\n  StyleFillComponent,\r\n  StyleIconComponent,\r\n  StyleStrokeComponent,\r\n  StyleTextComponent,\r\n  DefaultControlComponent,\r\n  ControlComponent,\r\n  ControlAttributionComponent,\r\n  ControlFullScreenComponent,\r\n  ControlMousePositionComponent,\r\n  ControlOverviewMapComponent,\r\n  ControlRotateComponent,\r\n  ControlScaleLineComponent,\r\n  ControlZoomComponent,\r\n  ControlZoomSliderComponent,\r\n  ControlZoomToExtentComponent,\r\n  FormatMVTComponent,\r\n  TileGridComponent,\r\n  TileGridWMTSComponent,\r\n  DefaultInteractionComponent,\r\n  DoubleClickZoomInteractionComponent,\r\n  DragAndDropInteractionComponent,\r\n  DragBoxInteractionComponent,\r\n  DragPanInteractionComponent,\r\n  DragRotateInteractionComponent,\r\n  DragRotateAndZoomInteractionComponent,\r\n  DragZoomInteractionComponent,\r\n  MouseWheelZoomInteractionComponent,\r\n  PinchZoomInteractionComponent,\r\n  DrawInteractionComponent,\r\n  SelectInteractionComponent,\r\n  ModifyInteractionComponent,\r\n  TranslateInteractionComponent,\r\n  OverlayComponent,\r\n  ContentComponent,\r\n  AttributionComponent,\r\n  AttributionsComponent,\r\n};\r\n\r\nconst COMPONENTS = [\r\n  MapComponent,\r\n\r\n  ViewComponent,\r\n  GraticuleComponent,\r\n\r\n  LayerGroupComponent,\r\n  LayerImageComponent,\r\n  LayerTileComponent,\r\n  LayerVectorComponent,\r\n  LayerVectorTileComponent,\r\n\r\n  SourceOsmComponent,\r\n  SourceBingmapsComponent,\r\n  SourceClusterComponent,\r\n  SourceVectorComponent,\r\n  SourceXYZComponent,\r\n  SourceVectorTileComponent,\r\n  SourceTileWMSComponent,\r\n  SourceTileWMTSComponent,\r\n  SourceTileJSONComponent,\r\n  SourceGeoJSONComponent,\r\n  SourceImageStaticComponent,\r\n  SourceImageWMSComponent,\r\n  SourceImageArcGISRestComponent,\r\n  SourceRasterComponent,\r\n  FeatureComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n  CoordinateComponent,\r\n  CollectionCoordinatesComponent,\r\n\r\n  StyleComponent,\r\n  StyleCircleComponent,\r\n  StyleFillComponent,\r\n  StyleIconComponent,\r\n  StyleStrokeComponent,\r\n  StyleTextComponent,\r\n\r\n  DefaultControlComponent,\r\n  ControlComponent,\r\n  ControlAttributionComponent,\r\n  ControlFullScreenComponent,\r\n  ControlMousePositionComponent,\r\n  ControlOverviewMapComponent,\r\n  ControlRotateComponent,\r\n  ControlScaleLineComponent,\r\n  ControlZoomComponent,\r\n  ControlZoomSliderComponent,\r\n  ControlZoomToExtentComponent,\r\n\r\n  FormatMVTComponent,\r\n  TileGridComponent,\r\n  TileGridWMTSComponent,\r\n\r\n  DefaultInteractionComponent,\r\n  DoubleClickZoomInteractionComponent,\r\n  DragAndDropInteractionComponent,\r\n  DragBoxInteractionComponent,\r\n  DragPanInteractionComponent,\r\n  DragRotateInteractionComponent,\r\n  DragRotateAndZoomInteractionComponent,\r\n  DragZoomInteractionComponent,\r\n  MouseWheelZoomInteractionComponent,\r\n  PinchZoomInteractionComponent,\r\n  DrawInteractionComponent,\r\n  SelectInteractionComponent,\r\n  ModifyInteractionComponent,\r\n  TranslateInteractionComponent,\r\n\r\n  OverlayComponent,\r\n  ContentComponent,\r\n  AttributionComponent,\r\n  AttributionsComponent,\r\n];\r\n\r\n@NgModule({\r\n  declarations: COMPONENTS,\r\n  imports: [CommonModule],\r\n  exports: COMPONENTS,\r\n})\r\nexport class AngularOpenlayersModule {}\r\n"],"names":["layer","source"],"mappings":"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"}
--- a/node_modules/ngx-openlayers/fesm5/ngx-openlayers.js
+++ b/node_modules/ngx-openlayers/fesm5/ngx-openlayers.js
@@ -529,7 +529,10 @@ var LayerVectorComponent = /** @class */ (function (_super) {
         { type: LayerGroupComponent, decorators: [{ type: Optional }] }
     ]; };
     LayerVectorComponent.propDecorators = {
-        renderBuffer: [{ type: Input }]
+        renderBuffer: [{ type: Input }],
+        style: [{ type: Input }],
+        updateWhileAnimating: [{ type: Input }],
+        updateWhileInteracting: [{ type: Input }]
     };
     return LayerVectorComponent;
 }(LayerComponent));
@@ -3806,4 +3809,4 @@ var AngularOpenlayersModule = /** @class */ (function () {
 
 export { MapComponent, ViewComponent, GraticuleComponent, LayerGroupComponent, LayerImageComponent, LayerTileComponent, LayerVectorComponent, LayerVectorTileComponent, SourceOsmComponent, SourceBingmapsComponent, SourceClusterComponent, SourceVectorComponent, SourceXYZComponent, SourceVectorTileComponent, SourceTileWMSComponent, SourceTileWMTSComponent, SourceTileJSONComponent, SourceGeoJSONComponent, SourceImageStaticComponent, SourceImageWMSComponent, SourceRasterComponent, SourceImageArcGISRestComponent, FeatureComponent, GeometryLinestringComponent, GeometryPointComponent, GeometryPolygonComponent, GeometryCircleComponent, CoordinateComponent, CollectionCoordinatesComponent, StyleComponent, StyleCircleComponent, StyleFillComponent, StyleIconComponent, StyleStrokeComponent, StyleTextComponent, DefaultControlComponent, ControlComponent, ControlAttributionComponent, ControlFullScreenComponent, ControlMousePositionComponent, ControlOverviewMapComponent, ControlRotateComponent, ControlScaleLineComponent, ControlZoomComponent, ControlZoomSliderComponent, ControlZoomToExtentComponent, FormatMVTComponent, TileGridComponent, TileGridWMTSComponent, DefaultInteractionComponent, DoubleClickZoomInteractionComponent, DragAndDropInteractionComponent, DragBoxInteractionComponent, DragPanInteractionComponent, DragRotateInteractionComponent, DragRotateAndZoomInteractionComponent, DragZoomInteractionComponent, MouseWheelZoomInteractionComponent, PinchZoomInteractionComponent, DrawInteractionComponent, SelectInteractionComponent, ModifyInteractionComponent, TranslateInteractionComponent, OverlayComponent, ContentComponent, AttributionComponent, AttributionsComponent, AngularOpenlayersModule, FormatComponent as ɵc, LayerComponent as ɵa, SourceComponent as ɵb };
 
-//# sourceMappingURL=data:application/json;charset=utf-8;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;charset=utf-8;base64,
\ No newline at end of file
--- a/node_modules/ngx-openlayers/fesm5/ngx-openlayers.js.map
+++ b/node_modules/ngx-openlayers/fesm5/ngx-openlayers.js.map
@@ -1 +1 @@
-{"version":3,"file":"ngx-openlayers.js.map","sources":["ng://ngx-openlayers/lib/map.component.ts","ng://ngx-openlayers/lib/view.component.ts","ng://ngx-openlayers/lib/graticule.component.ts","ng://ngx-openlayers/lib/layers/layer.component.ts","ng://ngx-openlayers/lib/layers/layergroup.component.ts","ng://ngx-openlayers/lib/layers/layerimage.component.ts","ng://ngx-openlayers/lib/layers/layertile.component.ts","ng://ngx-openlayers/lib/layers/layervector.component.ts","ng://ngx-openlayers/lib/layers/layervectortile.component.ts","ng://ngx-openlayers/lib/sources/source.component.ts","ng://ngx-openlayers/lib/tilegrid.component.ts","ng://ngx-openlayers/lib/sources/raster.component.ts","ng://ngx-openlayers/lib/sources/xyz.component.ts","ng://ngx-openlayers/lib/sources/osm.component.ts","ng://ngx-openlayers/lib/sources/bingmaps.component.ts","ng://ngx-openlayers/lib/sources/vector.component.ts","ng://ngx-openlayers/lib/sources/cluster.component.ts","ng://ngx-openlayers/lib/tilegridwmts.component.ts","ng://ngx-openlayers/lib/sources/tilewmts.component.ts","ng://ngx-openlayers/lib/formats/format.component.ts","ng://ngx-openlayers/lib/sources/vectortile.component.ts","ng://ngx-openlayers/lib/sources/tilewms.component.ts","ng://ngx-openlayers/lib/sources/tilejson.component.ts","ng://ngx-openlayers/lib/sources/geojson.component.ts","ng://ngx-openlayers/lib/sources/imagestatic.component.ts","ng://ngx-openlayers/lib/sources/imagewms.component.ts","ng://ngx-openlayers/lib/sources/imagearcgisrest.component.ts","ng://ngx-openlayers/lib/feature.component.ts","ng://ngx-openlayers/lib/geometry.components.ts","ng://ngx-openlayers/lib/content.component.ts","ng://ngx-openlayers/lib/overlay.component.ts","ng://ngx-openlayers/lib/coordinate.component.ts","ng://ngx-openlayers/lib/styles/style.component.ts","ng://ngx-openlayers/lib/styles/circle.component.ts","ng://ngx-openlayers/lib/styles/text.component.ts","ng://ngx-openlayers/lib/styles/stroke.component.ts","ng://ngx-openlayers/lib/styles/icon.component.ts","ng://ngx-openlayers/lib/styles/fill.component.ts","ng://ngx-openlayers/lib/controls/default.component.ts","ng://ngx-openlayers/lib/controls/control.component.ts","ng://ngx-openlayers/lib/controls/attribution.component.ts","ng://ngx-openlayers/lib/controls/fullscreen.component.ts","ng://ngx-openlayers/lib/controls/mouseposition.component.ts","ng://ngx-openlayers/lib/controls/overviewmap.component.ts","ng://ngx-openlayers/lib/controls/rotate.component.ts","ng://ngx-openlayers/lib/controls/scaleline.component.ts","ng://ngx-openlayers/lib/controls/zoom.component.ts","ng://ngx-openlayers/lib/controls/zoomslider.component.ts","ng://ngx-openlayers/lib/controls/zoomtoextent.component.ts","ng://ngx-openlayers/lib/formats/mvt.component.ts","ng://ngx-openlayers/lib/interactions/default.component.ts","ng://ngx-openlayers/lib/interactions/doubleclickzoom.component.ts","ng://ngx-openlayers/lib/interactions/draganddrop.component.ts","ng://ngx-openlayers/lib/interactions/dragbox.component.ts","ng://ngx-openlayers/lib/interactions/dragpan.component.ts","ng://ngx-openlayers/lib/interactions/dragrotate.component.ts","ng://ngx-openlayers/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-openlayers/lib/interactions/dragzoom.component.ts","ng://ngx-openlayers/lib/interactions/mousewheelzoom.component.ts","ng://ngx-openlayers/lib/interactions/pinchzoom.component.ts","ng://ngx-openlayers/lib/interactions/draw.component.ts","ng://ngx-openlayers/lib/interactions/select.component.ts","ng://ngx-openlayers/lib/interactions/modify.component.ts","ng://ngx-openlayers/lib/interactions/translate.component.ts","ng://ngx-openlayers/lib/attribution.component.ts","ng://ngx-openlayers/lib/attributions.component.ts","ng://ngx-openlayers/public_api.ts"],"sourcesContent":["import {\n  Component,\n  OnInit,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { Map, MapBrowserEvent, MapEvent, render, ObjectEvent, control, interaction } from 'openlayers';\n\n@Component({\n  selector: 'aol-map',\n  template: `\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\n    <ng-content></ng-content>\n  `,\n})\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\n  public instance: Map;\n  public componentType = 'map';\n\n  @Input()\n  width = '100%';\n  @Input()\n  height = '100%';\n  @Input()\n  pixelRatio: number;\n  @Input()\n  keyboardEventTarget: Element | string;\n  @Input()\n  loadTilesWhileAnimating: boolean;\n  @Input()\n  loadTilesWhileInteracting: boolean;\n  @Input()\n  logo: string | boolean;\n  @Input()\n  renderer: 'canvas' | 'webgl';\n\n  @Output()\n  onClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onDblClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onMoveEnd: EventEmitter<MapEvent>;\n  @Output()\n  onPointerDrag: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onPointerMove: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onPostCompose: EventEmitter<render.Event>;\n  @Output()\n  onPostRender: EventEmitter<MapEvent>;\n  @Output()\n  onPreCompose: EventEmitter<render.Event>;\n  @Output()\n  onPropertyChange: EventEmitter<ObjectEvent>;\n  @Output()\n  onSingleClick: EventEmitter<MapBrowserEvent>;\n\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\n  controls: control.Control[] = [];\n  interactions: interaction.Interaction[] = [];\n\n  constructor(private host: ElementRef) {\n    this.onClick = new EventEmitter<MapBrowserEvent>();\n    this.onDblClick = new EventEmitter<MapBrowserEvent>();\n    this.onMoveEnd = new EventEmitter<MapEvent>();\n    this.onPointerDrag = new EventEmitter<MapBrowserEvent>();\n    this.onPointerMove = new EventEmitter<MapBrowserEvent>();\n    this.onPostCompose = new EventEmitter<render.Event>();\n    this.onPostRender = new EventEmitter<MapEvent>();\n    this.onPreCompose = new EventEmitter<render.Event>();\n    this.onPropertyChange = new EventEmitter<ObjectEvent>();\n    this.onSingleClick = new EventEmitter<MapBrowserEvent>();\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.Map instance with:', this);\n    this.instance = new Map(this);\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\n    this.instance.on('click', (event: MapBrowserEvent) => this.onClick.emit(event));\n    this.instance.on('dblclick', (event: MapBrowserEvent) => this.onDblClick.emit(event));\n    this.instance.on('moveend', (event: MapEvent) => this.onMoveEnd.emit(event));\n    this.instance.on('pointerdrag', (event: MapBrowserEvent) => this.onPointerDrag.emit(event));\n    this.instance.on('pointermove', (event: MapBrowserEvent) => this.onPointerMove.emit(event));\n    this.instance.on('postcompose', (event: render.Event) => this.onPostCompose.emit(event));\n    this.instance.on('postrender', (event: MapEvent) => this.onPostRender.emit(event));\n    this.instance.on('precompose', (event: render.Event) => this.onPreCompose.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.onPropertyChange.emit(event));\n    this.instance.on('singleclick', (event: MapBrowserEvent) => this.onSingleClick.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngAfterViewInit() {\n    this.instance.updateSize();\n  }\n}\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { View, Extent, ObjectEvent, Coordinate } from 'openlayers';\nimport { MapComponent } from './map.component';\n\n@Component({\n  selector: 'aol-view',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: View;\n  public componentType = 'view';\n\n  @Input()\n  constrainRotation: boolean | number;\n  @Input()\n  enableRotation: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  resolution: number;\n  @Input()\n  resolutions: number[];\n  @Input()\n  rotation: number;\n  @Input()\n  zoom: number;\n  @Input()\n  zoomFactor: number;\n  @Input()\n  center: Coordinate;\n  @Input()\n  projection: string;\n\n  @Input()\n  zoomAnimation = false;\n\n  @Output()\n  onChangeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n\n  constructor(private host: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.View instance with: ', this);\n    this.instance = new View(this);\n    this.host.instance.setView(this.instance);\n\n    this.instance.on('change:zoom', (event: ObjectEvent) => this.onChangeZoom.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'zoom':\n            /** Work-around: setting the zoom via setProperties does not work. */\n            if (this.zoomAnimation) {\n              this.instance.animate({ zoom: changes[key].currentValue });\n            } else {\n              this.instance.setZoom(changes[key].currentValue);\n            }\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-view');\n  }\n}\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Graticule, style } from 'openlayers';\nimport { MapComponent } from './map.component';\n\n@Component({\n  selector: 'aol-graticule',\n  template: '<ng-content></ng-content>',\n})\nexport class GraticuleComponent implements AfterContentInit, OnChanges {\n  instance: any;\n  public componentType = 'graticule';\n\n  @Input()\n  strokeStyle: style.Stroke;\n  @Input()\n  showLabels: boolean;\n  @Input()\n  lonLabelPosition: number;\n  @Input()\n  latLabelPosition: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    if (properties) {\n      this.instance = new Graticule(properties);\n    }\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngAfterContentInit(): void {\n    this.instance = new Graticule({\n      strokeStyle: this.strokeStyle,\n      showLabels: this.showLabels,\n      lonLabelPosition: this.lonLabelPosition,\n      latLabelPosition: this.latLabelPosition,\n    });\n    this.instance.setMap(this.map.instance);\n  }\n}\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Extent } from 'openlayers';\nimport { LayerGroupComponent } from './layergroup.component';\n\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: any;\n  public componentType = 'layer';\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  zIndex: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n\n  @Input()\n  precompose: (evt: ol.events.Event) => void;\n  @Input()\n  postcompose: (evt: ol.events.Event) => void;\n\n  constructor(protected host: LayerGroupComponent | MapComponent) {}\n\n  ngOnInit() {\n    if (this.precompose !== null && this.precompose !== undefined) {\n      this.instance.on('precompose', this.precompose);\n    }\n    if (this.postcompose !== null && this.postcompose !== undefined) {\n      this.instance.on('postcompose', this.postcompose);\n    }\n    this.host.instance.getLayers().push(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.getLayers().remove(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n        if (key === 'precompose') {\n          this.instance.un('precompose', changes[key].previousValue);\n          this.instance.on('precompose', changes[key].currentValue);\n        }\n        if (key === 'postcompose') {\n          this.instance.un('postcompose', changes[key].previousValue);\n          this.instance.on('postcompose', changes[key].currentValue);\n        }\n      }\n    }\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n}\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\nimport { layer } from 'openlayers';\nimport { LayerComponent } from './layer.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-layer-group',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\n  public instance: ol.layer.Group;\n\n  constructor(\n    map: MapComponent,\n    @SkipSelf()\n    @Optional()\n    group?: LayerGroupComponent\n  ) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log(`creating ol.layer.Group instance with:`, this);\n    this.instance = new layer.Group(this);\n    super.ngOnInit();\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { Extent, layer, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-image',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\n  public source: source.Image;\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  zIndex: number;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    this.instance = new layer.Image(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { layer, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-tile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: source.Tile;\n\n  @Input()\n  preload: number;\n  @Input()\n  useInterimTilesOnError: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Tile instance with:', this);\n    this.instance = new layer.Tile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { layer, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: source.Vector;\n\n  @Input()\n  renderBuffer: number;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Vector instance with:', this);\n    this.instance = new layer.Vector(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnInit, Input, Optional, SimpleChanges, OnChanges } from '@angular/core';\nimport { layer, style, StyleFunction } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\n  @Input()\n  renderBuffer: number;\n  @Input()\n  renderMode: layer.VectorTileRenderType | string;\n  /* not marked as optional in the typings */\n  @Input()\n  renderOrder: (feature1: ol.Feature, feature2: ol.Feature) => number;\n  @Input()\n  style: style.Style | style.Style[] | StyleFunction;\n  @Input()\n  updateWhileAnimating: boolean;\n  @Input()\n  updateWhileInteracting: boolean;\n  @Input()\n  visible: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.VectorTile instance with:', this);\n    this.instance = new layer.VectorTile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Input, OnDestroy } from '@angular/core';\nimport { source } from 'openlayers';\nimport { LayerComponent } from '../layers/layer.component';\nimport AttributionLike = ol.AttributionLike;\nimport { SourceRasterComponent } from './raster.component';\n\nexport class SourceComponent implements OnDestroy {\n  public instance: source.Source;\n  public componentType = 'source';\n\n  @Input()\n  attributions: AttributionLike;\n\n  constructor(protected host: LayerComponent, protected raster?: SourceRasterComponent) {}\n\n  ngOnDestroy() {\n    if (this.host && this.host.instance) {\n      this.host.instance.setSource(null);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [];\n    }\n  }\n\n  protected _register(s: source.Source) {\n    if (this.host) {\n      this.host.instance.setSource(s);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [s];\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { tilegrid, Extent, Size, Coordinate } from 'openlayers';\n\n@Component({\n  selector: 'aol-tilegrid',\n  template: '',\n})\nexport class TileGridComponent implements OnInit, OnChanges {\n  instance: tilegrid.TileGrid;\n\n  @Input()\n  extent: Extent;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  resolutions: number[];\n\n  ngOnInit() {\n    if (!this.resolutions) {\n      this.instance = tilegrid.createXYZ(this);\n    } else {\n      this.instance = new tilegrid.TileGrid(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.resolutions) {\n      this.instance = tilegrid.createXYZ(this);\n    } else {\n      this.instance = new tilegrid.TileGrid(this);\n    }\n  }\n}\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Output } from '@angular/core';\nimport { RasterOperation, RasterOperationType, source } from 'openlayers';\n\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-raster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [\n    {\n      provide: SourceComponent,\n      useExisting: forwardRef(() => SourceRasterComponent),\n    },\n  ],\n})\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\n  instance: source.Raster;\n\n  @Input()\n  operation?: RasterOperation;\n  @Input()\n  threads?: number;\n  @Input()\n  lib?: Object;\n  @Input()\n  operationType?: RasterOperationType;\n\n  @Output()\n  beforeOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\n  @Output()\n  afterOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\n\n  sources: source.Source[] = [];\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.instance = new source.Raster(this);\n\n    this.instance.on('beforeoperations', (event: source.RasterEvent) => this.beforeOperations.emit(event));\n    this.instance.on('afteroperations', (event: source.RasterEvent) => this.afterOperations.emit(event));\n\n    this._register(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  AfterContentInit,\n  forwardRef,\n  OnChanges,\n  ContentChild,\n  SimpleChanges,\n  Optional,\n} from '@angular/core';\nimport { source, Size, TileUrlFunctionType, TileLoadFunctionType, tilegrid } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceRasterComponent } from './raster.component';\n\n@Component({\n  selector: 'aol-source-xyz',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\n})\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: source.XYZ;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  opaque: boolean;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  tileGrid: tilegrid.TileGrid;\n  @Input()\n  tileLoadFunction?: TileLoadFunctionType;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  tileUrlFunction: TileUrlFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(TileGridComponent)\n  tileGridXYZ: TileGridComponent;\n\n  constructor(\n    @Optional()\n    @Host()\n    layer: LayerTileComponent,\n    @Optional()\n    @Host()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n    this.instance = new source.XYZ(this);\n    this._register(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    this.instance.setProperties(properties, false);\n    if (changes.hasOwnProperty('url')) {\n      this.instance = new source.XYZ(this);\n      this._register(this.instance);\n    }\n  }\n}\n","import { Component, Host, forwardRef, Input, AfterContentInit, Optional } from '@angular/core';\nimport { source, AttributionLike, TileLoadFunctionType } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { SourceXYZComponent } from './xyz.component';\nimport { SourceRasterComponent } from './raster.component';\n\n@Component({\n  selector: 'aol-source-osm',\n  template: `\n    <div class=\"aol-source-osm\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\n})\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\n  instance: source.OSM;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  maxZoom: number;\n  @Input()\n  opaque: boolean;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: TileLoadFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  wrapX: boolean;\n\n  constructor(\n    @Host()\n    @Optional()\n    layer: LayerTileComponent,\n    @Host()\n    @Optional()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n    this.instance = new source.OSM(this);\n    this._register(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source, TileLoadFunctionType } from 'openlayers';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\n\n@Component({\n  selector: 'aol-source-bingmaps',\n  template: `\n    <div class=\"aol-source-bingmaps\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\n})\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\n  instance: source.BingMaps;\n\n  @Input()\n  cacheSize: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  culture: string;\n  @Input()\n  key: string;\n  @Input()\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\n  @Input()\n  maxZoom: number;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: TileLoadFunctionType;\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.BingMaps(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source } from 'openlayers';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\n})\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\n  instance: source.Vector;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  useSpatialIndex: boolean;\n  @Input()\n  wrapX: boolean;\n  @Input()\n  url: string;\n  @Input()\n  format: ol.format.Feature;\n  @Input()\n  strategy: ol.LoadingStrategy;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { source, Feature, geom } from 'openlayers';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { SourceVectorComponent } from './vector.component';\n\n@Component({\n  selector: 'aol-source-cluster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\n})\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit {\n  instance: source.Cluster;\n\n  @Input()\n  distance: number;\n  @Input()\n  geometryFunction?: ((feature: Feature) => geom.Point);\n\n  @ContentChild(SourceVectorComponent)\n  sourceVectorComponent: SourceVectorComponent;\n  source: source.Vector;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.source = this.sourceVectorComponent.instance;\n\n    this.instance = new source.Cluster(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { tilegrid, Size, Coordinate } from 'openlayers';\nimport { TileGridComponent } from './tilegrid.component';\n\n@Component({\n  selector: 'aol-tilegrid-wmts',\n  template: '',\n})\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\n  instance: tilegrid.WMTS;\n\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  origins?: Coordinate[];\n  @Input()\n  resolutions: number[];\n  @Input()\n  matrixIds: string[];\n  @Input()\n  sizes?: Size[];\n  @Input()\n  tileSizes?: (number | Size)[];\n  @Input()\n  widths?: number[];\n\n  ngOnInit() {\n    this.instance = new tilegrid.WMTS(this);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  AfterContentInit,\n  ContentChild,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { TileLoadFunctionType, tilegrid, ProjectionLike, source, ImageTile, TileCoord, Tile } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\n\n@Component({\n  selector: 'aol-source-tilewmts',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\n})\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: source.WMTS;\n  @Input()\n  cacheSize?: number;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  logo?: string | olx.LogoOptions;\n  @Input()\n  tileGrid: tilegrid.WMTS;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  reprojectionErrorThreshold?: number;\n  @Input()\n  requestEncoding?: source.WMTSRequestEncoding | string;\n  @Input()\n  layer: string;\n  @Input()\n  style: string;\n  @Input()\n  tileClass?: ((\n    n: ImageTile,\n    coords: TileCoord,\n    state: Tile.State,\n    s1: string,\n    s2: string,\n    type: TileLoadFunctionType\n  ) => any);\n  @Input()\n  tilePixelRatio?: number;\n  @Input()\n  version?: string;\n  @Input()\n  format?: string;\n  @Input()\n  matrixSet: string;\n  @Input()\n  dimensions?: GlobalObject;\n  @Input()\n  url?: string;\n  @Input()\n  tileLoadFunction?: TileLoadFunctionType;\n  @Input()\n  urls?: string[];\n  @Input()\n  wrapX?: boolean;\n\n  @ContentChild(TileGridWMTSComponent)\n  tileGridWMTS: TileGridWMTSComponent;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n\n  setLayerSource(): void {\n    this.instance = new source.WMTS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngAfterContentInit(): void {\n    if (this.tileGridWMTS) {\n      this.tileGrid = this.tileGridWMTS.instance;\n      this.setLayerSource();\n    }\n  }\n}\n","import { format } from 'openlayers';\n\nexport class FormatComponent {\n  public instance: format.Feature;\n  public componentType = 'format';\n}\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { source, ProjectionLike, TileUrlFunctionType, format, tilegrid } from 'openlayers';\nimport { LayerVectorTileComponent } from '../layers/layervectortile.component';\nimport { FormatComponent } from '../formats/format.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent) }],\n})\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\n  public instance: source.VectorTile;\n  @Input()\n  cacheSize: number;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileUrlFunction: TileUrlFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(FormatComponent)\n  formatComponent: FormatComponent;\n  format: format.Feature;\n  @ContentChild(TileGridComponent)\n  tileGridComponent: TileGridComponent;\n  tileGrid: tilegrid.TileGrid;\n\n  constructor(@Host() layer: LayerVectorTileComponent) {\n    super(layer);\n  }\n\n  /* need the children to construct the OL3 object */\n  ngAfterContentInit() {\n    this.format = this.formatComponent.instance;\n    this.tileGrid = this.tileGridComponent.instance;\n    // console.log('creating ol.source.VectorTile instance with:', this);\n    this.instance = new source.VectorTile(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\nimport { source, TileLoadFunctionType, tilegrid } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-tilewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\n})\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: source.TileWMS;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  gutter: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  params: Object;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  serverType: string;\n  @Input()\n  tileGrid: tilegrid.TileGrid;\n  @Input()\n  tileLoadFunction: TileLoadFunctionType;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.TileWMS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source } from 'openlayers';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-tilejson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\n})\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\n  instance: source.TileJSON;\n\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.TileJSON(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { source, ProjectionLike, format } from 'openlayers';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-geojson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\n})\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\n  instance: source.Vector;\n  format: format.Feature;\n  @Input()\n  defaultDataProjection: ProjectionLike;\n  @Input()\n  featureProjection: ProjectionLike;\n  @Input()\n  geometryName: string;\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.format = new format.GeoJSON(this);\n    this.instance = new source.Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { ProjectionLike, source, Extent, AttributionLike, ImageLoadFunctionType, Size } from 'openlayers';\nimport { SourceComponent } from './source.component';\nimport { LayerImageComponent } from '../layers/layerimage.component';\n\n@Component({\n  selector: 'aol-source-imagestatic',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\n})\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit {\n  instance: source.ImageStatic;\n\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  imageExtent: Extent;\n  @Input()\n  url: string;\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  imageLoadFunction?: ImageLoadFunctionType;\n  @Input()\n  logo?: string | olx.LogoOptions;\n  @Input()\n  imageSize?: Size;\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.ImageStatic(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\nimport { AttributionLike, ImageLoadFunctionType, ProjectionLike, source } from 'openlayers';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-imagewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\n})\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: source.ImageWMS;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  serverType: string;\n  @Input()\n  imageLoadFunction?: ImageLoadFunctionType;\n  @Input()\n  logo: string | olx.LogoOptions;\n  @Input()\n  params: Object;\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  ratio: number;\n  @Input()\n  resolutions: Array<number>;\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.ImageWMS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, forwardRef, Host, Input, OnInit } from '@angular/core';\nimport { source, ProjectionLike, Attribution, ImageLoadFunctionType } from 'openlayers';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-imagearcgisrest',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\n})\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit {\n  instance: source.ImageArcGISRest;\n\n  @Input() projection: ProjectionLike | string;\n  @Input() url: string;\n  @Input() attributions: Attribution[];\n  @Input() crossOrigin?: string;\n  @Input() imageLoadFunction?: ImageLoadFunctionType;\n  @Input() params?: { [k: string]: any };\n  @Input() ratio = 1;\n  @Input() resolutions?: number[];\n  @Input() logo?: string | olx.LogoOptions;\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new source.ImageArcGISRest(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Feature } from 'openlayers';\nimport { SourceVectorComponent } from './sources/vector.component';\n\n@Component({\n  selector: 'aol-feature',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\n  public componentType = 'feature';\n  public instance: Feature;\n\n  @Input()\n  id: string | number | undefined;\n\n  constructor(private host: SourceVectorComponent) {}\n\n  ngOnInit() {\n    this.instance = new Feature();\n    if (this.id !== undefined) {\n      this.instance.setId(this.id);\n    }\n    this.host.instance.addFeature(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.removeFeature(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance) {\n      this.instance.setId(this.id);\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { geom } from 'openlayers';\nimport { FeatureComponent } from './feature.component';\n\n@Component({\n  selector: 'aol-geometry-linestring',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryLinestringComponent implements OnInit, OnDestroy {\n  public componentType = 'geometry-linestring';\n  public instance: geom.LineString;\n\n  constructor(private host: FeatureComponent) {\n    // console.log('instancing aol-geometry-linestring');\n  }\n\n  ngOnInit() {\n    this.instance = new geom.LineString([]);\n    this.host.instance.setGeometry(this.instance);\n  }\n  ngOnDestroy() {\n    // this.host.setGeometry(null);\n  }\n}\n\n@Component({\n  selector: 'aol-geometry-point',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPointComponent implements OnInit, OnDestroy {\n  public componentType = 'geometry-point';\n  public instance: geom.Point;\n\n  constructor(private host: FeatureComponent) {\n    // console.log('creating aol-geometry-point');\n  }\n\n  ngOnInit() {\n    this.instance = new geom.Point([0, 0]); // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.host.instance.setGeometry(this.instance);\n  }\n\n  ngOnDestroy() {\n    // this.host.setGeometry(null);\n  }\n}\n\n@Component({\n  selector: 'aol-geometry-polygon',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPolygonComponent implements OnInit, OnDestroy {\n  public componentType = 'geometry-polygon';\n  public instance: geom.Polygon;\n\n  constructor(private host: FeatureComponent) {\n    // console.log('creating aol-geometry-polygon');\n  }\n\n  ngOnInit() {\n    // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.instance = new geom.Polygon([[[0, 0], [1, 0], [1, 1]]]);\n    this.host.instance.setGeometry(this.instance);\n  }\n\n  ngOnDestroy() {\n    // this.host.setGeometry(null);\n  }\n}\n\n@Component({\n  selector: 'aol-geometry-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryCircleComponent implements OnInit {\n  public componentType = 'geometry-circle';\n  public instance: geom.Circle;\n\n  @Input()\n  get radius(): number {\n    return this.instance.getRadius();\n  }\n  set radius(radius: number) {\n    this.instance.setRadius(radius);\n  }\n\n  constructor(private host: FeatureComponent) {\n    // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.instance = new geom.Circle([0, 0]);\n  }\n\n  ngOnInit() {\n    this.host.instance.setGeometry(this.instance);\n  }\n}\n","import { Component, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'aol-content',\n  template: '<ng-content></ng-content>',\n})\nexport class ContentComponent {\n  constructor(public elementRef: ElementRef) {}\n}\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport { Overlay, OverlayPositioning } from 'openlayers';\nimport { ContentComponent } from './content.component';\n\n@Component({\n  selector: 'aol-overlay',\n  template: '<ng-content></ng-content>',\n})\nexport class OverlayComponent implements OnInit, OnDestroy {\n  componentType = 'overlay';\n  instance: Overlay;\n  element: Element;\n  @ContentChild(ContentComponent)\n  content: ContentComponent;\n\n  @Input()\n  id: number | string;\n  @Input()\n  offset: number[];\n  @Input()\n  positioning: OverlayPositioning | string;\n  @Input()\n  stopEvent: boolean;\n  @Input()\n  insertFirst: boolean;\n  @Input()\n  autoPan: boolean;\n  @Input()\n  autoPanAnimation: olx.animation.PanOptions;\n  @Input()\n  autoPanMargin: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Overlay(this);\n      this.map.instance.addOverlay(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeOverlay(this.instance);\n    }\n  }\n}\n","import { Component, Optional, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { proj, Coordinate } from 'openlayers';\nimport { MapComponent } from './map.component';\nimport {\n  GeometryPointComponent,\n  GeometryLinestringComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n} from './geometry.components';\nimport { ViewComponent } from './view.component';\nimport { OverlayComponent } from './overlay.component';\n\n@Component({\n  selector: 'aol-coordinate',\n  template: `\n    <div class=\"aol-coordinate\"></div>\n  `,\n})\nexport class CoordinateComponent implements OnChanges {\n  private host: any;\n\n  @Input()\n  x: number;\n  @Input()\n  y: number;\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() viewHost: ViewComponent,\n    @Optional() geometryPointHost: GeometryPointComponent,\n    @Optional() geometryCircleHost: GeometryCircleComponent,\n    @Optional() overlayHost: OverlayComponent\n  ) {\n    // console.log('instancing aol-coordinate');\n    if (geometryPointHost !== null) {\n      this.host = geometryPointHost;\n    } else if (geometryCircleHost !== null) {\n      this.host = geometryCircleHost;\n    } else if (viewHost !== null) {\n      this.host = viewHost;\n    } else if (overlayHost !== null) {\n      this.host = overlayHost;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let referenceProjection: proj.Projection;\n    let referenceProjectionCode: string;\n    let transformedCoordinates: number[];\n\n    referenceProjection = this.map.instance.getView().getProjection();\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\n\n    if (this.srid === referenceProjectionCode) {\n      transformedCoordinates = [this.x, this.y];\n    } else {\n      transformedCoordinates = proj.transform([this.x, this.y], this.srid, referenceProjectionCode);\n    }\n\n    switch (this.host.componentType) {\n      case 'geometry-point':\n        this.host.instance.setCoordinates(transformedCoordinates);\n        break;\n      case 'geometry-circle':\n      case 'view':\n        this.host.instance.setCenter(transformedCoordinates);\n        break;\n      case 'overlay':\n        this.host.instance.setPosition(transformedCoordinates);\n        break;\n    }\n  }\n}\n\n@Component({\n  selector: 'aol-collection-coordinates',\n  template: `\n    <div class=\"aol-collection-coordinates\"></div>\n  `,\n})\nexport class CollectionCoordinatesComponent implements OnChanges {\n  private host: any;\n\n  @Input()\n  coordinates: [number, number][];\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() geometryLinestring: GeometryLinestringComponent,\n    @Optional() geometryPolygon: GeometryPolygonComponent\n  ) {\n    // console.log('creating aol-collection-coordinates');\n    if (!!geometryLinestring) {\n      this.host = geometryLinestring;\n    } else if (!!geometryPolygon) {\n      this.host = geometryPolygon;\n    } else {\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let referenceProjection: proj.Projection;\n    let referenceProjectionCode: string;\n    let transformedCoordinates: Array<Coordinate>;\n\n    // console.log('coordinates change: ', this.coordinates);\n\n    referenceProjection = this.map.instance.getView().getProjection();\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\n\n    if (this.srid === referenceProjectionCode) {\n      transformedCoordinates = this.coordinates;\n    } else {\n      transformedCoordinates = [];\n      this.coordinates.forEach(\n        function(coordinate: Coordinate) {\n          transformedCoordinates.push(proj.transform(coordinate, this.srid, referenceProjectionCode));\n        }.bind(this)\n      );\n    }\n    switch (this.host.componentType) {\n      case 'geometry-linestring':\n        this.host.instance.setCoordinates(transformedCoordinates);\n        break;\n      case 'geometry-polygon':\n        this.host.instance.setCoordinates([transformedCoordinates]);\n        break;\n      default:\n        throw new Error('aol-collection-coordinates host is of unknown type: ' + this.host.componentType);\n      // break;\n    }\n  }\n}\n","import { Component, Input, Optional, OnInit } from '@angular/core';\nimport { style, StyleGeometryFunction, geom } from 'openlayers';\nimport { FeatureComponent } from '../feature.component';\nimport { LayerVectorComponent } from '../layers/layervector.component';\n\n@Component({\n  selector: 'aol-style',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleComponent implements OnInit {\n  private host: FeatureComponent | LayerVectorComponent;\n  public instance: style.Style;\n  public componentType = 'style';\n\n  @Input()\n  geometry: string | geom.Geometry | StyleGeometryFunction;\n  @Input()\n  fill: style.Fill;\n  @Input()\n  image: style.Image;\n  @Input()\n  stroke: style.Stroke;\n  @Input()\n  text: style.Text;\n  @Input()\n  zIndex: number;\n\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\n    // console.log('creating aol-style');\n    this.host = !!featureHost ? featureHost : layerHost;\n    if (!this.host) {\n      throw new Error('aol-style must be applied to a feature or a layer');\n    }\n  }\n\n  update() {\n    // console.log('updating style\\'s host: ', this.host);\n    this.host.instance.changed();\n  }\n\n  ngOnInit() {\n    // console.log('creating aol-style instance with: ', this);\n    this.instance = new style.Style(this);\n    this.host.instance.setStyle(this.instance);\n  }\n}\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { style } from 'openlayers';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  public componentType = 'style-circle';\n  public instance: style.Circle;\n\n  @Input()\n  fill: style.Fill;\n  @Input()\n  radius: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  stroke: style.Stroke;\n  @Input()\n  atlasManager: style.AtlasManager;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  /**\n   * WORK-AROUND: since the re-rendering is not triggered on style change\n   * we trigger a radius change.\n   * see openlayers #6233 and #5775\n   */\n  update() {\n    if (!!this.instance) {\n      // console.log('setting ol.style.Circle instance\\'s radius');\n      this.instance.setRadius(this.radius);\n    }\n    this.host.update();\n  }\n\n  ngAfterContentInit() {\n    // console.log('creating ol.style.Circle instance with: ', this);\n    this.instance = new style.Circle(this);\n    this.host.instance.setImage(this.instance);\n    this.host.update();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['radius']) {\n      this.instance.setRadius(changes['radius'].currentValue);\n    }\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-style-circle');\n    this.host.instance.setImage(null);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style } from 'openlayers';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-text',\n  template: `\n    <div class=\"aol-style-text\"></div>\n  `,\n})\nexport class StyleTextComponent implements OnInit, OnChanges {\n  public instance: style.Text;\n  public componentType = 'style-text';\n\n  @Input()\n  font: string | undefined;\n  @Input()\n  offsetX: number | undefined;\n  @Input()\n  offsetY: number | undefined;\n  @Input()\n  scale: number | undefined;\n  @Input()\n  rotateWithView: boolean | undefined;\n  @Input()\n  rotation: number | undefined;\n  @Input()\n  text: string | undefined;\n  @Input()\n  textAlign: string | undefined;\n  @Input()\n  textBaseLine: string | undefined;\n\n  constructor(@Optional() private host: StyleComponent) {\n    if (!host) {\n      throw new Error('aol-style-text must be a descendant of aol-style');\n    }\n    // console.log('creating aol-style-text with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Text instance with: ', this);\n    this.instance = new style.Text(this);\n    this.host.instance.setText(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['font']) {\n      this.instance.setFont(changes['font'].currentValue);\n    }\n    if (changes['offsetX']) {\n      this.instance.setOffsetX(changes['offsetX'].currentValue);\n    }\n    if (changes['offsetY']) {\n      this.instance.setOffsetY(changes['offsetY'].currentValue);\n    }\n    if (changes['scale']) {\n      this.instance.setScale(changes['scale'].currentValue);\n    }\n    if (changes['rotation']) {\n      this.instance.setRotation(changes['rotation'].currentValue);\n    }\n    if (changes['text']) {\n      this.instance.setText(changes['text'].currentValue);\n    }\n    if (changes['textAlign']) {\n      this.instance.setTextAlign(changes['textAlign'].currentValue);\n    }\n    if (changes['textBaseLine']) {\n      this.instance.setTextBaseline(changes['textBaseLine'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style, Color } from 'openlayers';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\n\n@Component({\n  selector: 'aol-style-stroke',\n  template: `\n    <div class=\"aol-style-stroke\"></div>\n  `,\n})\nexport class StyleStrokeComponent implements OnInit, OnChanges {\n  public instance: style.Stroke;\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n\n  @Input()\n  color: Color | undefined;\n  @Input()\n  lineCap: string | undefined;\n  @Input()\n  lineDash: number[] | undefined;\n  @Input()\n  lineJoin: string | undefined;\n  @Input()\n  miterLimit: number | undefined;\n  @Input()\n  width: number | undefined;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-stroke with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Stroke instance with: ', this);\n    this.instance = new style.Stroke(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setStroke(this.instance);\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setStroke(this.instance);\n        break;\n      case 'style-circle':\n        this.host.stroke = this.instance;\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['color']) {\n      this.instance.setColor(changes['color'].currentValue);\n    }\n    if (changes['lineCap']) {\n      this.instance.setLineCap(changes['lineCap'].currentValue);\n    }\n    if (changes['lineDash']) {\n      this.instance.setLineDash(changes['lineDash'].currentValue);\n    }\n    if (changes['lineJoin']) {\n      this.instance.setLineJoin(changes['lineJoin'].currentValue);\n    }\n    if (changes['miterLimit']) {\n      this.instance.setMiterLimit(changes['miterLimit'].currentValue);\n    }\n    if (changes['width']) {\n      this.instance.setWidth(changes['width'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style } from 'openlayers';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-icon',\n  template: `\n    <div class=\"aol-style-icon\"></div>\n  `,\n})\nexport class StyleIconComponent implements OnInit, OnChanges {\n  public instance: style.Icon;\n\n  @Input()\n  anchor: [number, number];\n  @Input()\n  anchorXUnits: style.IconAnchorUnits;\n  @Input()\n  anchorYUnits: style.IconAnchorUnits;\n  @Input()\n  anchorOrigin: style.IconOrigin;\n  @Input()\n  color: [number, number, number, number];\n  @Input()\n  crossOrigin: style.IconOrigin;\n  @Input()\n  img: string;\n  @Input()\n  offset: [number, number];\n  @Input()\n  offsetOrigin: style.IconOrigin;\n  @Input()\n  opacity: number;\n  @Input()\n  scale: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  rotateWithView: boolean;\n  @Input()\n  rotation: number;\n  @Input()\n  size: [number, number];\n  @Input()\n  imgSize: [number, number];\n  @Input()\n  src: string;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.style.Icon instance with: ', this);\n    this.instance = new style.Icon(this);\n    this.host.instance.setImage(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['opacity']) {\n      this.instance.setOpacity(changes['opacity'].currentValue);\n    }\n    if (changes['rotation']) {\n      this.instance.setRotation(changes['rotation'].currentValue);\n    }\n    if (changes['scale']) {\n      this.instance.setScale(changes['scale'].currentValue);\n    }\n    if (changes['src']) {\n      this.instance = new style.Icon(this);\n      this.host.instance.setImage(this.instance);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-icon: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { style, Color, ColorLike } from 'openlayers';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\n\n@Component({\n  selector: 'aol-style-fill',\n  template: `\n    <div class=\"aol-style-fill\"></div>\n  `,\n})\nexport class StyleFillComponent implements OnInit, OnChanges {\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n  public instance: style.Fill;\n\n  @Input()\n  color: Color | ColorLike;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-fill with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Fill instance with: ', this);\n    this.instance = new style.Fill(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setFill(this.instance);\n        // console.log('setting ol.style instance\\'s fill:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setFill(this.instance);\n        break;\n      case 'style-circle':\n        this.host.fill = this.instance;\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['color']) {\n      this.instance.setColor(changes['color'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { control, Collection } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-defaults',\n  template: '',\n})\nexport class DefaultControlComponent implements OnInit, OnDestroy {\n  instance: Collection<control.Control>;\n  @Input()\n  attribution: boolean;\n  @Input()\n  attributionOptions: olx.control.AttributionOptions;\n  @Input()\n  rotate: boolean;\n  @Input()\n  rotateOptions: olx.control.RotateOptions;\n  @Input()\n  zoom: boolean;\n  @Input()\n  zoomOptions: olx.control.ZoomOptions;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('ol.control.defaults init: ', this);\n    this.instance = control.defaults(this);\n    this.instance.forEach(c => this.map.instance.addControl(c));\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-defaults');\n    this.instance.forEach(c => this.map.instance.removeControl(c));\n  }\n}\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\nimport { ContentComponent } from '../content.component';\n\n@Component({\n  selector: 'aol-control',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: control.Control;\n  element: Element;\n  @ContentChild(ContentComponent)\n  content: ContentComponent;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new control.Control(this);\n      this.map.instance.addControl(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeControl(this.instance);\n    }\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-attribution',\n  template: ``,\n})\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: control.Attribution;\n  target: Element;\n  @Input()\n  collapsible: boolean;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.Attribution init: ', this);\n    this.instance = new control.Attribution(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-attribution');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-fullscreen',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\n  instance: control.FullScreen;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  labelActive: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  keys: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-fullscreen');\n  }\n\n  ngOnInit() {\n    this.instance = new control.FullScreen(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-fullscreen');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control, CoordinateFormatType, ProjectionLike } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-mouseposition',\n  template: ``,\n})\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\n  instance: control.MousePosition;\n  @Input()\n  coordinateFormat: CoordinateFormatType;\n  @Input()\n  projection: ProjectionLike;\n  target: Element;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.MousePosition init: ', this);\n    this.instance = new control.MousePosition(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-mouseposition');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control, View, layer } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-overviewmap',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlOverviewMapComponent implements OnInit, OnDestroy {\n  instance: control.OverviewMap;\n  @Input()\n  collapsed: boolean;\n  @Input()\n  collapseLabel: string;\n  @Input()\n  collapsible: boolean;\n  @Input()\n  label: string;\n  @Input()\n  layers: layer.Layer[];\n  @Input()\n  target: Element;\n  @Input()\n  tipLabel: string;\n  @Input()\n  view: View;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-overviewmap');\n  }\n\n  ngOnInit() {\n    this.instance = new control.OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-overviewmap');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-rotate',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlRotateComponent implements OnInit, OnDestroy {\n  instance: control.Rotate;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  duration: number;\n  @Input()\n  autoHide: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-rotate');\n  }\n\n  ngOnInit() {\n    this.instance = new control.Rotate(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-rotate');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-scaleline',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\n  instance: control.ScaleLine;\n  @Input()\n  units: string;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-scaleline');\n  }\n\n  ngOnInit() {\n    this.instance = new control.ScaleLine(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-scaleline');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoom',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomComponent implements OnInit, OnDestroy {\n  instance: control.Zoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  zoomInLabel: string | Node;\n  @Input()\n  zoomOutLabel: string | Node;\n  @Input()\n  zoomInTipLabel: string;\n  @Input()\n  zoomOutTipLabel: string;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoom');\n  }\n\n  ngOnInit() {\n    this.instance = new control.Zoom(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoom');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoomslider',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\n  instance: control.ZoomSlider;\n\n  @Input()\n  className: string;\n  @Input()\n  duration: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomslider');\n  }\n\n  ngOnInit() {\n    this.instance = new control.ZoomSlider(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomslider');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { control, Extent } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoomtoextent',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\n  instance: control.ZoomToExtent;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string | Node;\n  @Input()\n  tipLabel: string;\n  @Input()\n  extent: Extent;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomtoextent');\n  }\n\n  ngOnInit() {\n    this.instance = new control.ZoomToExtent(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomtoextent');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { format, geom } from 'openlayers';\nimport { FormatComponent } from './format.component';\n\n@Component({\n  selector: 'aol-format-mvt',\n  template: '',\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\n})\nexport class FormatMVTComponent extends FormatComponent {\n  instance: format.MVT;\n\n  @Input()\n  featureClass:\n    | ((geom: geom.Geometry | { [k: string]: any }) => any)\n    | ((geom: geom.GeometryType, arg2: number[], arg3: number[] | number[][], arg4: { [k: string]: any }) => any);\n  @Input()\n  geometryName: string;\n  @Input()\n  layerName: string;\n  @Input()\n  layers: string[];\n\n  constructor() {\n    super();\n    this.instance = new format.MVT(this);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { interaction, Collection } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-default',\n  template: '',\n})\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\n  instance: Collection<interaction.Interaction>;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = interaction.defaults();\n    this.instance.forEach(i => this.map.instance.addInteraction(i));\n  }\n\n  ngOnDestroy() {\n    this.instance.forEach(i => this.map.instance.removeInteraction(i));\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-doubleclickzoom',\n  template: '',\n})\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DoubleClickZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DoubleClickZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { interaction, format, ProjectionLike } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-draganddrop',\n  template: '',\n})\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragAndDrop;\n\n  @Input()\n  formatConstructors: ((n: format.Feature) => any)[];\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  target: Element;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragAndDrop(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType, DragBoxEndConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragbox',\n  template: '',\n})\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragBox;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  boxEndCondition: DragBoxEndConditionType;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragBox(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType, Kinetic } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragpan',\n  template: '',\n})\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragPan;\n\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  kinetic: Kinetic;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragPan(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragrotate',\n  template: '',\n})\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragRotate;\n\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragRotate(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragrotateandzoom',\n  template: '',\n})\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragRotate;\n\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragRotateAndZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction, EventsConditionType } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-dragzoom',\n  template: '',\n})\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.DragZoom;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: EventsConditionType;\n  @Input()\n  duration: number;\n  @Input()\n  out: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.DragZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-mousewheelzoom',\n  template: '',\n})\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.MouseWheelZoom;\n  @Input()\n  duration: number;\n  @Input()\n  timeout: number;\n  @Input()\n  useAnchor: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.MouseWheelZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-pinchzoom',\n  template: '',\n})\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.PinchZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  constrainResolution: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.PinchZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\nimport { interaction } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-draw',\n  template: '',\n})\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Draw;\n\n  @Input()\n  clickTolerance?: number;\n  @Input()\n  features?: ol.Collection<ol.Feature>;\n  @Input()\n  source?: ol.source.Vector;\n  @Input()\n  snapTolerance?: number;\n  @Input()\n  type: ol.geom.GeometryType;\n  @Input()\n  maxPoints?: number;\n  @Input()\n  minPoints?: number;\n  @Input()\n  finishCondition?: ol.EventsConditionType;\n  @Input()\n  style?: ol.style.Style | ol.style.Style[] | ol.StyleFunction;\n  @Input()\n  geometryFunction?: ol.DrawGeometryFunctionType;\n  @Input()\n  geometryName?: string;\n  @Input()\n  condition?: ol.EventsConditionType;\n  @Input()\n  freehandCondition?: ol.EventsConditionType;\n  @Input()\n  freehand?: boolean;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  onChange = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onChangeActive = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onDrawEnd = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onDrawStart = new EventEmitter<ol.interaction.Draw.Event>();\n  @Output()\n  onPropertyChange = new EventEmitter<ol.interaction.Draw.Event>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.Draw(this);\n    this.instance.on('change', (event: ol.interaction.Draw.Event) => this.onChange.emit(event));\n    this.instance.on('change:active', (event: ol.interaction.Draw.Event) => this.onChangeActive.emit(event));\n    this.instance.on('drawend', (event: ol.interaction.Draw.Event) => this.onDrawEnd.emit(event));\n    this.instance.on('drawstart', (event: ol.interaction.Draw.Event) => this.onDrawStart.emit(event));\n    this.instance.on('propertychange', (event: ol.interaction.Draw.Event) => this.onPropertyChange.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {\n  interaction,\n  EventsConditionType,\n  layer,\n  style,\n  Collection,\n  SelectFilterFunction,\n  StyleFunction,\n  Feature,\n} from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-select',\n  template: '',\n})\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Select;\n\n  @Input()\n  addCondition?: EventsConditionType;\n  @Input()\n  condition?: EventsConditionType;\n  @Input()\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\n  @Input()\n  style?: style.Style | style.Style[] | StyleFunction;\n  @Input()\n  removeCondition?: EventsConditionType;\n  @Input()\n  toggleCondition?: EventsConditionType;\n  @Input()\n  multi?: boolean;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  filter?: SelectFilterFunction;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  onChange = new EventEmitter<interaction.Select.Event>();\n  @Output()\n  onSelect = new EventEmitter<interaction.Select.Event>();\n  @Output()\n  onPropertyChange = new EventEmitter<interaction.Select.Event>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.Select(this);\n\n    this.instance.on('change', (event: interaction.Select.Event) => this.onChange.emit(event));\n    this.instance.on('select', (event: interaction.Select.Event) => this.onSelect.emit(event));\n    this.instance.on('propertychange', (event: interaction.Select.Event) => this.onPropertyChange.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { interaction, EventsConditionType, style, StyleFunction, Collection, Feature, source } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-modify',\n  template: '',\n})\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Modify;\n\n  @Input()\n  condition?: EventsConditionType;\n  @Input()\n  deleteCondition?: EventsConditionType;\n  @Input()\n  pixelTolerance?: number;\n  @Input()\n  style?: style.Style | style.Style[] | StyleFunction;\n  @Input()\n  features: Collection<Feature>;\n  @Input()\n  wrapX?: boolean;\n  @Input()\n  source?: source.Vector;\n\n  @Output()\n  onModifyEnd = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onModifyStart = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onChange = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onChangeActive = new EventEmitter<interaction.Modify.Event>();\n  @Output()\n  onPropertyChange = new EventEmitter<interaction.Modify.Event>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new interaction.Modify(this);\n    this.instance.on('change', (event: interaction.Modify.Event) => this.onChange.emit(event));\n    this.instance.on('change:active', (event: interaction.Modify.Event) => this.onChangeActive.emit(event));\n    this.instance.on('propertychange', (event: interaction.Modify.Event) => this.onPropertyChange.emit(event));\n    this.instance.on('modifyend', (event: interaction.Modify.Event) => this.onModifyEnd.emit(event));\n    this.instance.on('modifystart', (event: interaction.Modify.Event) => this.onModifyStart.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { interaction, layer, Collection, Feature } from 'openlayers';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-translate',\n  template: '',\n})\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\n  instance: interaction.Translate;\n\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\n  @Input()\n  hitTolerance?: number;\n\n  @Output()\n  onChange: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onPropertyChange: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onTranslateEnd: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onTranslateStart: EventEmitter<interaction.Translate.Event>;\n  @Output()\n  onTranslating: EventEmitter<interaction.Translate.Event>;\n\n  constructor(private map: MapComponent) {\n    this.onChange = new EventEmitter<interaction.Translate.Event>();\n    this.onPropertyChange = new EventEmitter<interaction.Translate.Event>();\n    this.onTranslateEnd = new EventEmitter<interaction.Translate.Event>();\n    this.onTranslateStart = new EventEmitter<interaction.Translate.Event>();\n    this.onTranslating = new EventEmitter<interaction.Translate.Event>();\n  }\n\n  ngOnInit() {\n    this.instance = new interaction.Translate(this);\n\n    this.instance.on('change', (event: interaction.Translate.Event) => this.onChange.emit(event));\n    this.instance.on('propertychange', (event: interaction.Translate.Event) => this.onPropertyChange.emit(event));\n    this.instance.on('translateend', (event: interaction.Translate.Event) => this.onTranslateEnd.emit(event));\n    this.instance.on('translatestart', (event: interaction.Translate.Event) => this.onTranslateStart.emit(event));\n    this.instance.on('translating', (event: interaction.Translate.Event) => this.onTranslating.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Attribution } from 'openlayers';\n\n@Component({\n  selector: 'aol-attribution',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionComponent implements OnInit {\n  instance: Attribution;\n  html: string;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    this.html = this.elementRef.nativeElement.innerHTML;\n    this.instance = new Attribution(this);\n  }\n}\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\nimport { Attribution } from 'openlayers';\nimport { SourceComponent } from './sources/source.component';\nimport { AttributionComponent } from './attribution.component';\n\n@Component({\n  selector: 'aol-attributions',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionsComponent implements AfterViewInit {\n  instance: Array<Attribution>;\n\n  @ContentChildren(AttributionComponent)\n  attributions: QueryList<AttributionComponent>;\n\n  constructor(@Host() private source: SourceComponent) {}\n\n  /* we can do this at the very end */\n  ngAfterViewInit() {\n    if (this.attributions.length) {\n      this.instance = this.attributions.map(cmp => cmp.instance);\n      // console.log('setting attributions:', this.instance);\n      this.source.instance.setAttributions(this.instance);\n    }\n  }\n}\n","/*\n * Public API Surface of ngx-openlayers\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewComponent } from './lib/view.component';\nimport { GraticuleComponent } from './lib/graticule.component';\nimport { LayerGroupComponent } from './lib/layers/layergroup.component';\nimport { LayerImageComponent } from './lib/layers/layerimage.component';\nimport { LayerTileComponent } from './lib/layers/layertile.component';\nimport { MapComponent } from './lib/map.component';\nimport { LayerVectorComponent } from './lib/layers/layervector.component';\nimport { LayerVectorTileComponent } from './lib/layers/layervectortile.component';\nimport { SourceOsmComponent } from './lib/sources/osm.component';\nimport { SourceBingmapsComponent } from './lib/sources/bingmaps.component';\nimport { SourceClusterComponent } from './lib/sources/cluster.component';\nimport { SourceVectorComponent } from './lib/sources/vector.component';\nimport { SourceXYZComponent } from './lib/sources/xyz.component';\nimport { SourceTileWMTSComponent } from './lib/sources/tilewmts.component';\nimport { SourceVectorTileComponent } from './lib/sources/vectortile.component';\nimport { SourceTileWMSComponent } from './lib/sources/tilewms.component';\nimport { SourceTileJSONComponent } from './lib/sources/tilejson.component';\nimport { SourceGeoJSONComponent } from './lib/sources/geojson.component';\nimport { SourceImageStaticComponent } from './lib/sources/imagestatic.component';\nimport { SourceImageWMSComponent } from './lib/sources/imagewms.component';\nimport { SourceImageArcGISRestComponent } from './lib/sources/imagearcgisrest.component';\nimport { SourceRasterComponent } from './lib/sources/raster.component';\nimport { FeatureComponent } from './lib/feature.component';\nimport {\n  GeometryLinestringComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n} from './lib/geometry.components';\nimport { CollectionCoordinatesComponent, CoordinateComponent } from './lib/coordinate.component';\nimport { StyleComponent } from './lib/styles/style.component';\nimport { StyleCircleComponent } from './lib/styles/circle.component';\nimport { StyleStrokeComponent } from './lib/styles/stroke.component';\nimport { StyleIconComponent } from './lib/styles/icon.component';\nimport { StyleFillComponent } from './lib/styles/fill.component';\nimport { StyleTextComponent } from './lib/styles/text.component';\nimport { DefaultControlComponent } from './lib/controls/default.component';\nimport { ControlComponent } from './lib/controls/control.component';\nimport { ControlAttributionComponent } from './lib/controls/attribution.component';\nimport { ControlFullScreenComponent } from './lib/controls/fullscreen.component';\nimport { ControlMousePositionComponent } from './lib/controls/mouseposition.component';\nimport { ControlOverviewMapComponent } from './lib/controls/overviewmap.component';\nimport { ControlRotateComponent } from './lib/controls/rotate.component';\nimport { ControlScaleLineComponent } from './lib/controls/scaleline.component';\nimport { ControlZoomComponent } from './lib/controls/zoom.component';\nimport { ControlZoomSliderComponent } from './lib/controls/zoomslider.component';\nimport { ControlZoomToExtentComponent } from './lib/controls/zoomtoextent.component';\nimport { FormatMVTComponent } from './lib/formats/mvt.component';\nimport { TileGridComponent } from './lib/tilegrid.component';\nimport { TileGridWMTSComponent } from './lib/tilegridwmts.component';\nimport { DefaultInteractionComponent } from './lib/interactions/default.component';\nimport { DoubleClickZoomInteractionComponent } from './lib/interactions/doubleclickzoom.component';\nimport { DragAndDropInteractionComponent } from './lib/interactions/draganddrop.component';\nimport { DragBoxInteractionComponent } from './lib/interactions/dragbox.component';\nimport { DragPanInteractionComponent } from './lib/interactions/dragpan.component';\nimport { DragRotateInteractionComponent } from './lib/interactions/dragrotate.component';\nimport { DragRotateAndZoomInteractionComponent } from './lib/interactions/dragrotateandzoom.component';\nimport { DragZoomInteractionComponent } from './lib/interactions/dragzoom.component';\nimport { MouseWheelZoomInteractionComponent } from './lib/interactions/mousewheelzoom.component';\nimport { PinchZoomInteractionComponent } from './lib/interactions/pinchzoom.component';\nimport { DrawInteractionComponent } from './lib/interactions/draw.component';\nimport { SelectInteractionComponent } from './lib/interactions/select.component';\nimport { ModifyInteractionComponent } from './lib/interactions/modify.component';\nimport { TranslateInteractionComponent } from './lib/interactions/translate.component';\nimport { OverlayComponent } from './lib/overlay.component';\nimport { ContentComponent } from './lib/content.component';\nimport { AttributionComponent } from './lib/attribution.component';\nimport { AttributionsComponent } from './lib/attributions.component';\n\nexport {\n  MapComponent,\n  ViewComponent,\n  GraticuleComponent,\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceRasterComponent,\n  SourceImageArcGISRestComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n  OverlayComponent,\n  ContentComponent,\n  AttributionComponent,\n  AttributionsComponent,\n};\n\nconst COMPONENTS = [\n  MapComponent,\n\n  ViewComponent,\n  GraticuleComponent,\n\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceImageArcGISRestComponent,\n  SourceRasterComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n\n  OverlayComponent,\n  ContentComponent,\n  AttributionComponent,\n  AttributionsComponent,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  imports: [CommonModule],\n  exports: COMPONENTS,\n})\nexport class AngularOpenlayersModule {}\n"],"names":["tslib_1.__extends","layer","source"],"mappings":"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"}
+{"version":3,"file":"ngx-openlayers.js.map","sources":["ng://ngx-openlayers/lib/map.component.ts","ng://ngx-openlayers/lib/view.component.ts","ng://ngx-openlayers/lib/graticule.component.ts","ng://ngx-openlayers/lib/layers/layer.component.ts","ng://ngx-openlayers/lib/layers/layergroup.component.ts","ng://ngx-openlayers/lib/layers/layerimage.component.ts","ng://ngx-openlayers/lib/layers/layertile.component.ts","ng://ngx-openlayers/lib/layers/layervector.component.ts","ng://ngx-openlayers/lib/layers/layervectortile.component.ts","ng://ngx-openlayers/lib/sources/source.component.ts","ng://ngx-openlayers/lib/tilegrid.component.ts","ng://ngx-openlayers/lib/sources/raster.component.ts","ng://ngx-openlayers/lib/sources/xyz.component.ts","ng://ngx-openlayers/lib/sources/osm.component.ts","ng://ngx-openlayers/lib/sources/bingmaps.component.ts","ng://ngx-openlayers/lib/sources/vector.component.ts","ng://ngx-openlayers/lib/sources/cluster.component.ts","ng://ngx-openlayers/lib/tilegridwmts.component.ts","ng://ngx-openlayers/lib/sources/tilewmts.component.ts","ng://ngx-openlayers/lib/formats/format.component.ts","ng://ngx-openlayers/lib/sources/vectortile.component.ts","ng://ngx-openlayers/lib/sources/tilewms.component.ts","ng://ngx-openlayers/lib/sources/tilejson.component.ts","ng://ngx-openlayers/lib/sources/geojson.component.ts","ng://ngx-openlayers/lib/sources/imagestatic.component.ts","ng://ngx-openlayers/lib/sources/imagewms.component.ts","ng://ngx-openlayers/lib/sources/imagearcgisrest.component.ts","ng://ngx-openlayers/lib/feature.component.ts","ng://ngx-openlayers/lib/geometry.components.ts","ng://ngx-openlayers/lib/content.component.ts","ng://ngx-openlayers/lib/overlay.component.ts","ng://ngx-openlayers/lib/coordinate.component.ts","ng://ngx-openlayers/lib/styles/style.component.ts","ng://ngx-openlayers/lib/styles/circle.component.ts","ng://ngx-openlayers/lib/styles/text.component.ts","ng://ngx-openlayers/lib/styles/stroke.component.ts","ng://ngx-openlayers/lib/styles/icon.component.ts","ng://ngx-openlayers/lib/styles/fill.component.ts","ng://ngx-openlayers/lib/controls/default.component.ts","ng://ngx-openlayers/lib/controls/control.component.ts","ng://ngx-openlayers/lib/controls/attribution.component.ts","ng://ngx-openlayers/lib/controls/fullscreen.component.ts","ng://ngx-openlayers/lib/controls/mouseposition.component.ts","ng://ngx-openlayers/lib/controls/overviewmap.component.ts","ng://ngx-openlayers/lib/controls/rotate.component.ts","ng://ngx-openlayers/lib/controls/scaleline.component.ts","ng://ngx-openlayers/lib/controls/zoom.component.ts","ng://ngx-openlayers/lib/controls/zoomslider.component.ts","ng://ngx-openlayers/lib/controls/zoomtoextent.component.ts","ng://ngx-openlayers/lib/formats/mvt.component.ts","ng://ngx-openlayers/lib/interactions/default.component.ts","ng://ngx-openlayers/lib/interactions/doubleclickzoom.component.ts","ng://ngx-openlayers/lib/interactions/draganddrop.component.ts","ng://ngx-openlayers/lib/interactions/dragbox.component.ts","ng://ngx-openlayers/lib/interactions/dragpan.component.ts","ng://ngx-openlayers/lib/interactions/dragrotate.component.ts","ng://ngx-openlayers/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-openlayers/lib/interactions/dragzoom.component.ts","ng://ngx-openlayers/lib/interactions/mousewheelzoom.component.ts","ng://ngx-openlayers/lib/interactions/pinchzoom.component.ts","ng://ngx-openlayers/lib/interactions/draw.component.ts","ng://ngx-openlayers/lib/interactions/select.component.ts","ng://ngx-openlayers/lib/interactions/modify.component.ts","ng://ngx-openlayers/lib/interactions/translate.component.ts","ng://ngx-openlayers/lib/attribution.component.ts","ng://ngx-openlayers/lib/attributions.component.ts","ng://ngx-openlayers/public_api.ts"],"sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { Map, MapBrowserEvent, MapEvent, render, ObjectEvent, control, interaction } from 'openlayers';\r\n\r\n@Component({\r\n  selector: 'aol-map',\r\n  template: `\r\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\r\n  public instance: Map;\r\n  public componentType = 'map';\r\n\r\n  @Input()\r\n  width = '100%';\r\n  @Input()\r\n  height = '100%';\r\n  @Input()\r\n  pixelRatio: number;\r\n  @Input()\r\n  keyboardEventTarget: Element | string;\r\n  @Input()\r\n  loadTilesWhileAnimating: boolean;\r\n  @Input()\r\n  loadTilesWhileInteracting: boolean;\r\n  @Input()\r\n  logo: string | boolean;\r\n  @Input()\r\n  renderer: 'canvas' | 'webgl';\r\n\r\n  @Output()\r\n  onClick: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onDblClick: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onMoveEnd: EventEmitter<MapEvent>;\r\n  @Output()\r\n  onPointerDrag: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onPointerMove: EventEmitter<MapBrowserEvent>;\r\n  @Output()\r\n  onPostCompose: EventEmitter<render.Event>;\r\n  @Output()\r\n  onPostRender: EventEmitter<MapEvent>;\r\n  @Output()\r\n  onPreCompose: EventEmitter<render.Event>;\r\n  @Output()\r\n  onPropertyChange: EventEmitter<ObjectEvent>;\r\n  @Output()\r\n  onSingleClick: EventEmitter<MapBrowserEvent>;\r\n\r\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\r\n  controls: control.Control[] = [];\r\n  interactions: interaction.Interaction[] = [];\r\n\r\n  constructor(private host: ElementRef) {\r\n    this.onClick = new EventEmitter<MapBrowserEvent>();\r\n    this.onDblClick = new EventEmitter<MapBrowserEvent>();\r\n    this.onMoveEnd = new EventEmitter<MapEvent>();\r\n    this.onPointerDrag = new EventEmitter<MapBrowserEvent>();\r\n    this.onPointerMove = new EventEmitter<MapBrowserEvent>();\r\n    this.onPostCompose = new EventEmitter<render.Event>();\r\n    this.onPostRender = new EventEmitter<MapEvent>();\r\n    this.onPreCompose = new EventEmitter<render.Event>();\r\n    this.onPropertyChange = new EventEmitter<ObjectEvent>();\r\n    this.onSingleClick = new EventEmitter<MapBrowserEvent>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.Map instance with:', this);\r\n    this.instance = new Map(this);\r\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\r\n    this.instance.on('click', (event: MapBrowserEvent) => this.onClick.emit(event));\r\n    this.instance.on('dblclick', (event: MapBrowserEvent) => this.onDblClick.emit(event));\r\n    this.instance.on('moveend', (event: MapEvent) => this.onMoveEnd.emit(event));\r\n    this.instance.on('pointerdrag', (event: MapBrowserEvent) => this.onPointerDrag.emit(event));\r\n    this.instance.on('pointermove', (event: MapBrowserEvent) => this.onPointerMove.emit(event));\r\n    this.instance.on('postcompose', (event: render.Event) => this.onPostCompose.emit(event));\r\n    this.instance.on('postrender', (event: MapEvent) => this.onPostRender.emit(event));\r\n    this.instance.on('precompose', (event: render.Event) => this.onPreCompose.emit(event));\r\n    this.instance.on('propertychange', (event: ObjectEvent) => this.onPropertyChange.emit(event));\r\n    this.instance.on('singleclick', (event: MapBrowserEvent) => this.onSingleClick.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.instance.updateSize();\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\r\nimport { View, Extent, ObjectEvent, Coordinate } from 'openlayers';\r\nimport { MapComponent } from './map.component';\r\n\r\n@Component({\r\n  selector: 'aol-view',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\r\n  public instance: View;\r\n  public componentType = 'view';\r\n\r\n  @Input()\r\n  constrainRotation: boolean | number;\r\n  @Input()\r\n  enableRotation: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  resolution: number;\r\n  @Input()\r\n  resolutions: number[];\r\n  @Input()\r\n  rotation: number;\r\n  @Input()\r\n  zoom: number;\r\n  @Input()\r\n  zoomFactor: number;\r\n  @Input()\r\n  center: Coordinate;\r\n  @Input()\r\n  projection: string;\r\n\r\n  @Input()\r\n  zoomAnimation = false;\r\n\r\n  @Output()\r\n  onChangeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\r\n\r\n  constructor(private host: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.View instance with: ', this);\r\n    this.instance = new View(this);\r\n    this.host.instance.setView(this.instance);\r\n\r\n    this.instance.on('change:zoom', (event: ObjectEvent) => this.onChangeZoom.emit(event));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        switch (key) {\r\n          case 'zoom':\r\n            /** Work-around: setting the zoom via setProperties does not work. */\r\n            if (this.zoomAnimation) {\r\n              this.instance.animate({ zoom: changes[key].currentValue });\r\n            } else {\r\n              this.instance.setZoom(changes[key].currentValue);\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-view');\r\n  }\r\n}\r\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Graticule, style } from 'openlayers';\r\nimport { MapComponent } from './map.component';\r\n\r\n@Component({\r\n  selector: 'aol-graticule',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class GraticuleComponent implements AfterContentInit, OnChanges {\r\n  instance: any;\r\n  public componentType = 'graticule';\r\n\r\n  @Input()\r\n  strokeStyle: style.Stroke;\r\n  @Input()\r\n  showLabels: boolean;\r\n  @Input()\r\n  lonLabelPosition: number;\r\n  @Input()\r\n  latLabelPosition: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n\r\n    if (properties) {\r\n      this.instance = new Graticule(properties);\r\n    }\r\n    this.instance.setMap(this.map.instance);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.instance = new Graticule({\r\n      strokeStyle: this.strokeStyle,\r\n      showLabels: this.showLabels,\r\n      lonLabelPosition: this.lonLabelPosition,\r\n      latLabelPosition: this.latLabelPosition,\r\n    });\r\n    this.instance.setMap(this.map.instance);\r\n  }\r\n}\r\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { MapComponent } from '../map.component';\r\nimport { Extent } from 'openlayers';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\r\n  public instance: any;\r\n  public componentType = 'layer';\r\n\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  zIndex: number;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxResolution: number;\r\n\r\n  @Input()\r\n  precompose: (evt: ol.events.Event) => void;\r\n  @Input()\r\n  postcompose: (evt: ol.events.Event) => void;\r\n\r\n  constructor(protected host: LayerGroupComponent | MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.precompose !== null && this.precompose !== undefined) {\r\n      this.instance.on('precompose', this.precompose);\r\n    }\r\n    if (this.postcompose !== null && this.postcompose !== undefined) {\r\n      this.instance.on('postcompose', this.postcompose);\r\n    }\r\n    this.host.instance.getLayers().push(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.host.instance.getLayers().remove(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n        if (key === 'precompose') {\r\n          this.instance.un('precompose', changes[key].previousValue);\r\n          this.instance.on('precompose', changes[key].currentValue);\r\n        }\r\n        if (key === 'postcompose') {\r\n          this.instance.un('postcompose', changes[key].previousValue);\r\n          this.instance.on('postcompose', changes[key].currentValue);\r\n        }\r\n      }\r\n    }\r\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\r\nimport { layer } from 'openlayers';\r\nimport { LayerComponent } from './layer.component';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-group',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\r\n  public instance: ol.layer.Group;\r\n\r\n  constructor(\r\n    map: MapComponent,\r\n    @SkipSelf()\r\n    @Optional()\r\n    group?: LayerGroupComponent\r\n  ) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log(`creating ol.layer.Group instance with:`, this);\r\n    this.instance = new layer.Group(this);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\r\nimport { Extent, layer, source } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-image',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\r\n  public source: source.Image;\r\n\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  visible: boolean;\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  minResolution: number;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  zIndex: number;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new layer.Image(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { layer, source } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-tile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\r\n  public source: source.Tile;\r\n\r\n  @Input()\r\n  preload: number;\r\n  @Input()\r\n  useInterimTilesOnError: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.Tile instance with:', this);\r\n    this.instance = new layer.Tile(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { layer, source, style, StyleFunction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-vector',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\r\n  public source: source.Vector;\r\n\r\n  @Input()\r\n  renderBuffer: number;\r\n\r\n  @Input()\r\n  style: style.Style | style.Style[] | StyleFunction;\r\n\r\n  @Input()\r\n  updateWhileAnimating: boolean;\r\n\r\n  @Input()\r\n  updateWhileInteracting: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.Vector instance with:', this);\r\n    this.instance = new layer.Vector(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Optional, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { layer, style, StyleFunction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { LayerComponent } from './layer.component';\r\nimport { LayerGroupComponent } from './layergroup.component';\r\n\r\n@Component({\r\n  selector: 'aol-layer-vectortile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  renderBuffer: number;\r\n  @Input()\r\n  renderMode: layer.VectorTileRenderType | string;\r\n  /* not marked as optional in the typings */\r\n  @Input()\r\n  renderOrder: (feature1: ol.Feature, feature2: ol.Feature) => number;\r\n  @Input()\r\n  style: style.Style | style.Style[] | StyleFunction;\r\n  @Input()\r\n  updateWhileAnimating: boolean;\r\n  @Input()\r\n  updateWhileInteracting: boolean;\r\n  @Input()\r\n  visible: boolean;\r\n\r\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\r\n    super(group || map);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.layer.VectorTile instance with:', this);\r\n    this.instance = new layer.VectorTile(this);\r\n    super.ngOnInit();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n  }\r\n}\r\n","import { Input, OnDestroy } from '@angular/core';\r\nimport { source } from 'openlayers';\r\nimport { LayerComponent } from '../layers/layer.component';\r\nimport AttributionLike = ol.AttributionLike;\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\nexport class SourceComponent implements OnDestroy {\r\n  public instance: source.Source;\r\n  public componentType = 'source';\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n\r\n  constructor(protected host: LayerComponent, protected raster?: SourceRasterComponent) {}\r\n\r\n  ngOnDestroy() {\r\n    if (this.host && this.host.instance) {\r\n      this.host.instance.setSource(null);\r\n    }\r\n\r\n    if (this.raster) {\r\n      this.raster.sources = [];\r\n    }\r\n  }\r\n\r\n  protected _register(s: source.Source) {\r\n    if (this.host) {\r\n      this.host.instance.setSource(s);\r\n    }\r\n\r\n    if (this.raster) {\r\n      this.raster.sources = [s];\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { tilegrid, Extent, Size, Coordinate } from 'openlayers';\r\n\r\n@Component({\r\n  selector: 'aol-tilegrid',\r\n  template: '',\r\n})\r\nexport class TileGridComponent implements OnInit, OnChanges {\r\n  instance: tilegrid.TileGrid;\r\n\r\n  @Input()\r\n  extent: Extent;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  tileSize: number | Size;\r\n  @Input()\r\n  origin?: Coordinate;\r\n  @Input()\r\n  resolutions: number[];\r\n\r\n  ngOnInit() {\r\n    if (!this.resolutions) {\r\n      this.instance = tilegrid.createXYZ(this);\r\n    } else {\r\n      this.instance = new tilegrid.TileGrid(this);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.resolutions) {\r\n      this.instance = tilegrid.createXYZ(this);\r\n    } else {\r\n      this.instance = new tilegrid.TileGrid(this);\r\n    }\r\n  }\r\n}\r\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Output } from '@angular/core';\r\nimport { RasterOperation, RasterOperationType, source } from 'openlayers';\r\n\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-raster',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [\r\n    {\r\n      provide: SourceComponent,\r\n      useExisting: forwardRef(() => SourceRasterComponent),\r\n    },\r\n  ],\r\n})\r\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\r\n  instance: source.Raster;\r\n\r\n  @Input()\r\n  operation?: RasterOperation;\r\n  @Input()\r\n  threads?: number;\r\n  @Input()\r\n  lib?: Object;\r\n  @Input()\r\n  operationType?: RasterOperationType;\r\n\r\n  @Output()\r\n  beforeOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\r\n  @Output()\r\n  afterOperations: EventEmitter<source.RasterEvent> = new EventEmitter<source.RasterEvent>();\r\n\r\n  sources: source.Source[] = [];\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.instance = new source.Raster(this);\r\n\r\n    this.instance.on('beforeoperations', (event: source.RasterEvent) => this.beforeOperations.emit(event));\r\n    this.instance.on('afteroperations', (event: source.RasterEvent) => this.afterOperations.emit(event));\r\n\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  AfterContentInit,\r\n  forwardRef,\r\n  OnChanges,\r\n  ContentChild,\r\n  SimpleChanges,\r\n  Optional,\r\n} from '@angular/core';\r\nimport { source, Size, TileUrlFunctionType, TileLoadFunctionType, tilegrid } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileGridComponent } from '../tilegrid.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-xyz',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\r\n})\r\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\r\n  instance: source.XYZ;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  opaque: boolean;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  minZoom: number;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  tileGrid: tilegrid.TileGrid;\r\n  @Input()\r\n  tileLoadFunction?: TileLoadFunctionType;\r\n  @Input()\r\n  tilePixelRatio: number;\r\n  @Input()\r\n  tileSize: number | Size;\r\n  @Input()\r\n  tileUrlFunction: TileUrlFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @ContentChild(TileGridComponent)\r\n  tileGridXYZ: TileGridComponent;\r\n\r\n  constructor(\r\n    @Optional()\r\n    @Host()\r\n    layer: LayerTileComponent,\r\n    @Optional()\r\n    @Host()\r\n    raster?: SourceRasterComponent\r\n  ) {\r\n    super(layer, raster);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.tileGridXYZ) {\r\n      this.tileGrid = this.tileGridXYZ.instance;\r\n    }\r\n    this.instance = new source.XYZ(this);\r\n    this._register(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n\r\n    this.instance.setProperties(properties, false);\r\n    if (changes.hasOwnProperty('url')) {\r\n      this.instance = new source.XYZ(this);\r\n      this._register(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, forwardRef, Input, AfterContentInit, Optional } from '@angular/core';\r\nimport { source, AttributionLike, TileLoadFunctionType } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { SourceXYZComponent } from './xyz.component';\r\nimport { SourceRasterComponent } from './raster.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-osm',\r\n  template: `\r\n    <div class=\"aol-source-osm\"></div>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\r\n})\r\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\r\n  instance: source.OSM;\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  opaque: boolean;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  tileLoadFunction: TileLoadFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(\r\n    @Host()\r\n    @Optional()\r\n    layer: LayerTileComponent,\r\n    @Host()\r\n    @Optional()\r\n    raster?: SourceRasterComponent\r\n  ) {\r\n    super(layer, raster);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.tileGridXYZ) {\r\n      this.tileGrid = this.tileGridXYZ.instance;\r\n    }\r\n    this.instance = new source.OSM(this);\r\n    this._register(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source, TileLoadFunctionType } from 'openlayers';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-bingmaps',\r\n  template: `\r\n    <div class=\"aol-source-bingmaps\"></div>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\r\n})\r\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\r\n  instance: source.BingMaps;\r\n\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  culture: string;\r\n  @Input()\r\n  key: string;\r\n  @Input()\r\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\r\n  @Input()\r\n  maxZoom: number;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  tileLoadFunction: TileLoadFunctionType;\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.BingMaps(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source } from 'openlayers';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-vector',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\r\n})\r\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\r\n  instance: source.Vector;\r\n  @Input()\r\n  overlaps: boolean;\r\n  @Input()\r\n  useSpatialIndex: boolean;\r\n  @Input()\r\n  wrapX: boolean;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  format: ol.format.Feature;\r\n  @Input()\r\n  strategy: ol.LoadingStrategy;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.Vector(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { source, Feature, geom } from 'openlayers';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { SourceVectorComponent } from './vector.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-cluster',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\r\n})\r\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit {\r\n  instance: source.Cluster;\r\n\r\n  @Input()\r\n  distance: number;\r\n  @Input()\r\n  geometryFunction?: ((feature: Feature) => geom.Point);\r\n\r\n  @ContentChild(SourceVectorComponent)\r\n  sourceVectorComponent: SourceVectorComponent;\r\n  source: source.Vector;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.source = this.sourceVectorComponent.instance;\r\n\r\n    this.instance = new source.Cluster(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { tilegrid, Size, Coordinate } from 'openlayers';\r\nimport { TileGridComponent } from './tilegrid.component';\r\n\r\n@Component({\r\n  selector: 'aol-tilegrid-wmts',\r\n  template: '',\r\n})\r\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\r\n  instance: tilegrid.WMTS;\r\n\r\n  @Input()\r\n  origin?: Coordinate;\r\n  @Input()\r\n  origins?: Coordinate[];\r\n  @Input()\r\n  resolutions: number[];\r\n  @Input()\r\n  matrixIds: string[];\r\n  @Input()\r\n  sizes?: Size[];\r\n  @Input()\r\n  tileSizes?: (number | Size)[];\r\n  @Input()\r\n  widths?: number[];\r\n\r\n  ngOnInit() {\r\n    this.instance = new tilegrid.WMTS(this);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Input,\r\n  forwardRef,\r\n  AfterContentInit,\r\n  ContentChild,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { TileLoadFunctionType, tilegrid, ProjectionLike, source, ImageTile, TileCoord, Tile } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilewmts',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\r\n})\r\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\r\n  instance: source.WMTS;\r\n  @Input()\r\n  cacheSize?: number;\r\n  @Input()\r\n  crossOrigin?: string;\r\n  @Input()\r\n  logo?: string | olx.LogoOptions;\r\n  @Input()\r\n  tileGrid: tilegrid.WMTS;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  reprojectionErrorThreshold?: number;\r\n  @Input()\r\n  requestEncoding?: source.WMTSRequestEncoding | string;\r\n  @Input()\r\n  layer: string;\r\n  @Input()\r\n  style: string;\r\n  @Input()\r\n  tileClass?: ((\r\n    n: ImageTile,\r\n    coords: TileCoord,\r\n    state: Tile.State,\r\n    s1: string,\r\n    s2: string,\r\n    type: TileLoadFunctionType\r\n  ) => any);\r\n  @Input()\r\n  tilePixelRatio?: number;\r\n  @Input()\r\n  version?: string;\r\n  @Input()\r\n  format?: string;\r\n  @Input()\r\n  matrixSet: string;\r\n  @Input()\r\n  dimensions?: GlobalObject;\r\n  @Input()\r\n  url?: string;\r\n  @Input()\r\n  tileLoadFunction?: TileLoadFunctionType;\r\n  @Input()\r\n  urls?: string[];\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @ContentChild(TileGridWMTSComponent)\r\n  tileGridWMTS: TileGridWMTSComponent;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const properties: { [index: string]: any } = {};\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    for (const key in changes) {\r\n      if (changes.hasOwnProperty(key)) {\r\n        switch (key) {\r\n          case 'url':\r\n            this.url = changes[key].currentValue;\r\n            this.setLayerSource();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        properties[key] = changes[key].currentValue;\r\n      }\r\n    }\r\n    this.instance.setProperties(properties, false);\r\n  }\r\n\r\n  setLayerSource(): void {\r\n    this.instance = new source.WMTS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this.tileGridWMTS) {\r\n      this.tileGrid = this.tileGridWMTS.instance;\r\n      this.setLayerSource();\r\n    }\r\n  }\r\n}\r\n","import { format } from 'openlayers';\r\n\r\nexport class FormatComponent {\r\n  public instance: format.Feature;\r\n  public componentType = 'format';\r\n}\r\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { source, ProjectionLike, TileUrlFunctionType, format, tilegrid } from 'openlayers';\r\nimport { LayerVectorTileComponent } from '../layers/layervectortile.component';\r\nimport { FormatComponent } from '../formats/format.component';\r\nimport { TileGridComponent } from '../tilegrid.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-vectortile',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent) }],\r\n})\r\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\r\n  public instance: source.VectorTile;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  overlaps: boolean;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  tilePixelRatio: number;\r\n  @Input()\r\n  tileUrlFunction: TileUrlFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  @ContentChild(FormatComponent)\r\n  formatComponent: FormatComponent;\r\n  format: format.Feature;\r\n  @ContentChild(TileGridComponent)\r\n  tileGridComponent: TileGridComponent;\r\n  tileGrid: tilegrid.TileGrid;\r\n\r\n  constructor(@Host() layer: LayerVectorTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  /* need the children to construct the OL3 object */\r\n  ngAfterContentInit() {\r\n    this.format = this.formatComponent.instance;\r\n    this.tileGrid = this.tileGridComponent.instance;\r\n    // console.log('creating ol.source.VectorTile instance with:', this);\r\n    this.instance = new source.VectorTile(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\r\nimport { source, TileLoadFunctionType, tilegrid } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilewms',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\r\n})\r\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\r\n  instance: source.TileWMS;\r\n  @Input()\r\n  cacheSize: number;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  gutter: number;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  params: Object;\r\n  @Input()\r\n  projection: string;\r\n  @Input()\r\n  reprojectionErrorThreshold: number;\r\n  @Input()\r\n  serverType: string;\r\n  @Input()\r\n  tileGrid: tilegrid.TileGrid;\r\n  @Input()\r\n  tileLoadFunction: TileLoadFunctionType;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  urls: string[];\r\n  @Input()\r\n  wrapX: boolean;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.TileWMS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source } from 'openlayers';\r\nimport { LayerTileComponent } from '../layers/layertile.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-tilejson',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\r\n})\r\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\r\n  instance: source.TileJSON;\r\n\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerTileComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.TileJSON(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { source, ProjectionLike, format } from 'openlayers';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-geojson',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\r\n})\r\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\r\n  instance: source.Vector;\r\n  format: format.Feature;\r\n  @Input()\r\n  defaultDataProjection: ProjectionLike;\r\n  @Input()\r\n  featureProjection: ProjectionLike;\r\n  @Input()\r\n  geometryName: string;\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerVectorComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.format = new format.GeoJSON(this);\r\n    this.instance = new source.Vector(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\r\nimport { ProjectionLike, source, Extent, AttributionLike, ImageLoadFunctionType, Size } from 'openlayers';\r\nimport { SourceComponent } from './source.component';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagestatic',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\r\n})\r\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit {\r\n  instance: source.ImageStatic;\r\n\r\n  @Input()\r\n  projection: ProjectionLike | string;\r\n  @Input()\r\n  imageExtent: Extent;\r\n  @Input()\r\n  url: string;\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  crossOrigin?: string;\r\n  @Input()\r\n  imageLoadFunction?: ImageLoadFunctionType;\r\n  @Input()\r\n  logo?: string | olx.LogoOptions;\r\n  @Input()\r\n  imageSize?: Size;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.ImageStatic(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\r\nimport { AttributionLike, ImageLoadFunctionType, ProjectionLike, source } from 'openlayers';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagewms',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\r\n})\r\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\r\n  instance: source.ImageWMS;\r\n\r\n  @Input()\r\n  attributions: AttributionLike;\r\n  @Input()\r\n  crossOrigin: string;\r\n  @Input()\r\n  hidpi: boolean;\r\n  @Input()\r\n  serverType: string;\r\n  @Input()\r\n  imageLoadFunction?: ImageLoadFunctionType;\r\n  @Input()\r\n  logo: string | olx.LogoOptions;\r\n  @Input()\r\n  params: Object;\r\n  @Input()\r\n  projection: ProjectionLike | string;\r\n  @Input()\r\n  ratio: number;\r\n  @Input()\r\n  resolutions: Array<number>;\r\n  @Input()\r\n  url: string;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.ImageWMS(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance && changes.hasOwnProperty('params')) {\r\n      this.instance.updateParams(this.params);\r\n    }\r\n  }\r\n}\r\n","import { Component, forwardRef, Host, Input, OnInit } from '@angular/core';\r\nimport { source, ProjectionLike, Attribution, ImageLoadFunctionType } from 'openlayers';\r\nimport { LayerImageComponent } from '../layers/layerimage.component';\r\nimport { SourceComponent } from './source.component';\r\n\r\n@Component({\r\n  selector: 'aol-source-imagearcgisrest',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\r\n})\r\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit {\r\n  instance: source.ImageArcGISRest;\r\n\r\n  @Input() projection: ProjectionLike | string;\r\n  @Input() url: string;\r\n  @Input() attributions: Attribution[];\r\n  @Input() crossOrigin?: string;\r\n  @Input() imageLoadFunction?: ImageLoadFunctionType;\r\n  @Input() params?: { [k: string]: any };\r\n  @Input() ratio = 1;\r\n  @Input() resolutions?: number[];\r\n  @Input() logo?: string | olx.LogoOptions;\r\n\r\n  constructor(@Host() layer: LayerImageComponent) {\r\n    super(layer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new source.ImageArcGISRest(this);\r\n    this.host.instance.setSource(this.instance);\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { Feature } from 'openlayers';\r\nimport { SourceVectorComponent } from './sources/vector.component';\r\n\r\n@Component({\r\n  selector: 'aol-feature',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\r\n  public componentType = 'feature';\r\n  public instance: Feature;\r\n\r\n  @Input()\r\n  id: string | number | undefined;\r\n\r\n  constructor(private host: SourceVectorComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new Feature();\r\n    if (this.id !== undefined) {\r\n      this.instance.setId(this.id);\r\n    }\r\n    this.host.instance.addFeature(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.host.instance.removeFeature(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.instance) {\r\n      this.instance.setId(this.id);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { geom } from 'openlayers';\r\nimport { FeatureComponent } from './feature.component';\r\n\r\n@Component({\r\n  selector: 'aol-geometry-linestring',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryLinestringComponent implements OnInit, OnDestroy {\r\n  public componentType = 'geometry-linestring';\r\n  public instance: geom.LineString;\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // console.log('instancing aol-geometry-linestring');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new geom.LineString([]);\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n  ngOnDestroy() {\r\n    // this.host.setGeometry(null);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-geometry-point',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryPointComponent implements OnInit, OnDestroy {\r\n  public componentType = 'geometry-point';\r\n  public instance: geom.Point;\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // console.log('creating aol-geometry-point');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new geom.Point([0, 0]); // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.host.setGeometry(null);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-geometry-polygon',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryPolygonComponent implements OnInit, OnDestroy {\r\n  public componentType = 'geometry-polygon';\r\n  public instance: geom.Polygon;\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // console.log('creating aol-geometry-polygon');\r\n  }\r\n\r\n  ngOnInit() {\r\n    // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.instance = new geom.Polygon([[[0, 0], [1, 0], [1, 1]]]);\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.host.setGeometry(null);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-geometry-circle',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class GeometryCircleComponent implements OnInit {\r\n  public componentType = 'geometry-circle';\r\n  public instance: geom.Circle;\r\n\r\n  @Input()\r\n  get radius(): number {\r\n    return this.instance.getRadius();\r\n  }\r\n  set radius(radius: number) {\r\n    this.instance.setRadius(radius);\r\n  }\r\n\r\n  constructor(private host: FeatureComponent) {\r\n    // defaulting coordinates to [0,0]. To be overridden in child component.\r\n    this.instance = new geom.Circle([0, 0]);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.host.instance.setGeometry(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aol-content',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class ContentComponent {\r\n  constructor(public elementRef: ElementRef) {}\r\n}\r\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { MapComponent } from './map.component';\r\nimport { Overlay, OverlayPositioning } from 'openlayers';\r\nimport { ContentComponent } from './content.component';\r\n\r\n@Component({\r\n  selector: 'aol-overlay',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class OverlayComponent implements OnInit, OnDestroy {\r\n  componentType = 'overlay';\r\n  instance: Overlay;\r\n  element: Element;\r\n  @ContentChild(ContentComponent)\r\n  content: ContentComponent;\r\n\r\n  @Input()\r\n  id: number | string;\r\n  @Input()\r\n  offset: number[];\r\n  @Input()\r\n  positioning: OverlayPositioning | string;\r\n  @Input()\r\n  stopEvent: boolean;\r\n  @Input()\r\n  insertFirst: boolean;\r\n  @Input()\r\n  autoPan: boolean;\r\n  @Input()\r\n  autoPanAnimation: olx.animation.PanOptions;\r\n  @Input()\r\n  autoPanMargin: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.content) {\r\n      this.element = this.content.elementRef.nativeElement;\r\n      this.instance = new Overlay(this);\r\n      this.map.instance.addOverlay(this.instance);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.instance) {\r\n      this.map.instance.removeOverlay(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, Optional, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { proj, Coordinate } from 'openlayers';\r\nimport { MapComponent } from './map.component';\r\nimport {\r\n  GeometryPointComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n} from './geometry.components';\r\nimport { ViewComponent } from './view.component';\r\nimport { OverlayComponent } from './overlay.component';\r\n\r\n@Component({\r\n  selector: 'aol-coordinate',\r\n  template: `\r\n    <div class=\"aol-coordinate\"></div>\r\n  `,\r\n})\r\nexport class CoordinateComponent implements OnChanges {\r\n  private host: any;\r\n\r\n  @Input()\r\n  x: number;\r\n  @Input()\r\n  y: number;\r\n  @Input()\r\n  srid = 'EPSG:3857';\r\n\r\n  constructor(\r\n    private map: MapComponent,\r\n    @Optional() viewHost: ViewComponent,\r\n    @Optional() geometryPointHost: GeometryPointComponent,\r\n    @Optional() geometryCircleHost: GeometryCircleComponent,\r\n    @Optional() overlayHost: OverlayComponent\r\n  ) {\r\n    // console.log('instancing aol-coordinate');\r\n    if (geometryPointHost !== null) {\r\n      this.host = geometryPointHost;\r\n    } else if (geometryCircleHost !== null) {\r\n      this.host = geometryCircleHost;\r\n    } else if (viewHost !== null) {\r\n      this.host = viewHost;\r\n    } else if (overlayHost !== null) {\r\n      this.host = overlayHost;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    let referenceProjection: proj.Projection;\r\n    let referenceProjectionCode: string;\r\n    let transformedCoordinates: number[];\r\n\r\n    referenceProjection = this.map.instance.getView().getProjection();\r\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\r\n\r\n    if (this.srid === referenceProjectionCode) {\r\n      transformedCoordinates = [this.x, this.y];\r\n    } else {\r\n      transformedCoordinates = proj.transform([this.x, this.y], this.srid, referenceProjectionCode);\r\n    }\r\n\r\n    switch (this.host.componentType) {\r\n      case 'geometry-point':\r\n        this.host.instance.setCoordinates(transformedCoordinates);\r\n        break;\r\n      case 'geometry-circle':\r\n      case 'view':\r\n        this.host.instance.setCenter(transformedCoordinates);\r\n        break;\r\n      case 'overlay':\r\n        this.host.instance.setPosition(transformedCoordinates);\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'aol-collection-coordinates',\r\n  template: `\r\n    <div class=\"aol-collection-coordinates\"></div>\r\n  `,\r\n})\r\nexport class CollectionCoordinatesComponent implements OnChanges {\r\n  private host: any;\r\n\r\n  @Input()\r\n  coordinates: [number, number][];\r\n  @Input()\r\n  srid = 'EPSG:3857';\r\n\r\n  constructor(\r\n    private map: MapComponent,\r\n    @Optional() geometryLinestring: GeometryLinestringComponent,\r\n    @Optional() geometryPolygon: GeometryPolygonComponent\r\n  ) {\r\n    // console.log('creating aol-collection-coordinates');\r\n    if (!!geometryLinestring) {\r\n      this.host = geometryLinestring;\r\n    } else if (!!geometryPolygon) {\r\n      this.host = geometryPolygon;\r\n    } else {\r\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    let referenceProjection: proj.Projection;\r\n    let referenceProjectionCode: string;\r\n    let transformedCoordinates: Array<Coordinate>;\r\n\r\n    // console.log('coordinates change: ', this.coordinates);\r\n\r\n    referenceProjection = this.map.instance.getView().getProjection();\r\n    referenceProjectionCode = referenceProjection ? referenceProjection.getCode() : 'EPSG:3857';\r\n\r\n    if (this.srid === referenceProjectionCode) {\r\n      transformedCoordinates = this.coordinates;\r\n    } else {\r\n      transformedCoordinates = [];\r\n      this.coordinates.forEach(\r\n        function(coordinate: Coordinate) {\r\n          transformedCoordinates.push(proj.transform(coordinate, this.srid, referenceProjectionCode));\r\n        }.bind(this)\r\n      );\r\n    }\r\n    switch (this.host.componentType) {\r\n      case 'geometry-linestring':\r\n        this.host.instance.setCoordinates(transformedCoordinates);\r\n        break;\r\n      case 'geometry-polygon':\r\n        this.host.instance.setCoordinates([transformedCoordinates]);\r\n        break;\r\n      default:\r\n        throw new Error('aol-collection-coordinates host is of unknown type: ' + this.host.componentType);\r\n      // break;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit } from '@angular/core';\r\nimport { style, StyleGeometryFunction, geom } from 'openlayers';\r\nimport { FeatureComponent } from '../feature.component';\r\nimport { LayerVectorComponent } from '../layers/layervector.component';\r\n\r\n@Component({\r\n  selector: 'aol-style',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class StyleComponent implements OnInit {\r\n  private host: FeatureComponent | LayerVectorComponent;\r\n  public instance: style.Style;\r\n  public componentType = 'style';\r\n\r\n  @Input()\r\n  geometry: string | geom.Geometry | StyleGeometryFunction;\r\n  @Input()\r\n  fill: style.Fill;\r\n  @Input()\r\n  image: style.Image;\r\n  @Input()\r\n  stroke: style.Stroke;\r\n  @Input()\r\n  text: style.Text;\r\n  @Input()\r\n  zIndex: number;\r\n\r\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\r\n    // console.log('creating aol-style');\r\n    this.host = !!featureHost ? featureHost : layerHost;\r\n    if (!this.host) {\r\n      throw new Error('aol-style must be applied to a feature or a layer');\r\n    }\r\n  }\r\n\r\n  update() {\r\n    // console.log('updating style\\'s host: ', this.host);\r\n    this.host.instance.changed();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating aol-style instance with: ', this);\r\n    this.instance = new style.Style(this);\r\n    this.host.instance.setStyle(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { style } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-circle',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\r\n  public componentType = 'style-circle';\r\n  public instance: style.Circle;\r\n\r\n  @Input()\r\n  fill: style.Fill;\r\n  @Input()\r\n  radius: number;\r\n  @Input()\r\n  snapToPixel: boolean;\r\n  @Input()\r\n  stroke: style.Stroke;\r\n  @Input()\r\n  atlasManager: style.AtlasManager;\r\n\r\n  constructor(@Host() private host: StyleComponent) {}\r\n\r\n  /**\r\n   * WORK-AROUND: since the re-rendering is not triggered on style change\r\n   * we trigger a radius change.\r\n   * see openlayers #6233 and #5775\r\n   */\r\n  update() {\r\n    if (!!this.instance) {\r\n      // console.log('setting ol.style.Circle instance\\'s radius');\r\n      this.instance.setRadius(this.radius);\r\n    }\r\n    this.host.update();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // console.log('creating ol.style.Circle instance with: ', this);\r\n    this.instance = new style.Circle(this);\r\n    this.host.instance.setImage(this.instance);\r\n    this.host.update();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['radius']) {\r\n      this.instance.setRadius(changes['radius'].currentValue);\r\n    }\r\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-style-circle');\r\n    this.host.instance.setImage(null);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-text',\r\n  template: `\r\n    <div class=\"aol-style-text\"></div>\r\n  `,\r\n})\r\nexport class StyleTextComponent implements OnInit, OnChanges {\r\n  public instance: style.Text;\r\n  public componentType = 'style-text';\r\n\r\n  @Input()\r\n  font: string | undefined;\r\n  @Input()\r\n  offsetX: number | undefined;\r\n  @Input()\r\n  offsetY: number | undefined;\r\n  @Input()\r\n  scale: number | undefined;\r\n  @Input()\r\n  rotateWithView: boolean | undefined;\r\n  @Input()\r\n  rotation: number | undefined;\r\n  @Input()\r\n  text: string | undefined;\r\n  @Input()\r\n  textAlign: string | undefined;\r\n  @Input()\r\n  textBaseLine: string | undefined;\r\n\r\n  constructor(@Optional() private host: StyleComponent) {\r\n    if (!host) {\r\n      throw new Error('aol-style-text must be a descendant of aol-style');\r\n    }\r\n    // console.log('creating aol-style-text with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Text instance with: ', this);\r\n    this.instance = new style.Text(this);\r\n    this.host.instance.setText(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['font']) {\r\n      this.instance.setFont(changes['font'].currentValue);\r\n    }\r\n    if (changes['offsetX']) {\r\n      this.instance.setOffsetX(changes['offsetX'].currentValue);\r\n    }\r\n    if (changes['offsetY']) {\r\n      this.instance.setOffsetY(changes['offsetY'].currentValue);\r\n    }\r\n    if (changes['scale']) {\r\n      this.instance.setScale(changes['scale'].currentValue);\r\n    }\r\n    if (changes['rotation']) {\r\n      this.instance.setRotation(changes['rotation'].currentValue);\r\n    }\r\n    if (changes['text']) {\r\n      this.instance.setText(changes['text'].currentValue);\r\n    }\r\n    if (changes['textAlign']) {\r\n      this.instance.setTextAlign(changes['textAlign'].currentValue);\r\n    }\r\n    if (changes['textBaseLine']) {\r\n      this.instance.setTextBaseline(changes['textBaseLine'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style, Color } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\nimport { StyleCircleComponent } from './circle.component';\r\nimport { StyleTextComponent } from './text.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-stroke',\r\n  template: `\r\n    <div class=\"aol-style-stroke\"></div>\r\n  `,\r\n})\r\nexport class StyleStrokeComponent implements OnInit, OnChanges {\r\n  public instance: style.Stroke;\r\n  /* the typings do not have the setters */\r\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\r\n\r\n  @Input()\r\n  color: Color | undefined;\r\n  @Input()\r\n  lineCap: string | undefined;\r\n  @Input()\r\n  lineDash: number[] | undefined;\r\n  @Input()\r\n  lineJoin: string | undefined;\r\n  @Input()\r\n  miterLimit: number | undefined;\r\n  @Input()\r\n  width: number | undefined;\r\n\r\n  constructor(\r\n    @Optional() styleHost: StyleComponent,\r\n    @Optional() styleCircleHost: StyleCircleComponent,\r\n    @Optional() styleTextHost: StyleTextComponent\r\n  ) {\r\n    if (!styleHost) {\r\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\r\n    }\r\n    if (!!styleTextHost) {\r\n      this.host = styleTextHost;\r\n    } else if (!!styleCircleHost) {\r\n      this.host = styleCircleHost;\r\n    } else {\r\n      this.host = styleHost;\r\n    }\r\n    // console.log('creating aol-style-stroke with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Stroke instance with: ', this);\r\n    this.instance = new style.Stroke(this);\r\n    switch (this.host.componentType) {\r\n      case 'style':\r\n        this.host.instance.setStroke(this.instance);\r\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\r\n        break;\r\n      case 'style-text':\r\n        this.host.instance.setStroke(this.instance);\r\n        break;\r\n      case 'style-circle':\r\n        this.host.stroke = this.instance;\r\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\r\n        break;\r\n      default:\r\n        throw new Error('unknown host type: ' + this.host);\r\n      // break;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['color']) {\r\n      this.instance.setColor(changes['color'].currentValue);\r\n    }\r\n    if (changes['lineCap']) {\r\n      this.instance.setLineCap(changes['lineCap'].currentValue);\r\n    }\r\n    if (changes['lineDash']) {\r\n      this.instance.setLineDash(changes['lineDash'].currentValue);\r\n    }\r\n    if (changes['lineJoin']) {\r\n      this.instance.setLineJoin(changes['lineJoin'].currentValue);\r\n    }\r\n    if (changes['miterLimit']) {\r\n      this.instance.setMiterLimit(changes['miterLimit'].currentValue);\r\n    }\r\n    if (changes['width']) {\r\n      this.instance.setWidth(changes['width'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-icon',\r\n  template: `\r\n    <div class=\"aol-style-icon\"></div>\r\n  `,\r\n})\r\nexport class StyleIconComponent implements OnInit, OnChanges {\r\n  public instance: style.Icon;\r\n\r\n  @Input()\r\n  anchor: [number, number];\r\n  @Input()\r\n  anchorXUnits: style.IconAnchorUnits;\r\n  @Input()\r\n  anchorYUnits: style.IconAnchorUnits;\r\n  @Input()\r\n  anchorOrigin: style.IconOrigin;\r\n  @Input()\r\n  color: [number, number, number, number];\r\n  @Input()\r\n  crossOrigin: style.IconOrigin;\r\n  @Input()\r\n  img: string;\r\n  @Input()\r\n  offset: [number, number];\r\n  @Input()\r\n  offsetOrigin: style.IconOrigin;\r\n  @Input()\r\n  opacity: number;\r\n  @Input()\r\n  scale: number;\r\n  @Input()\r\n  snapToPixel: boolean;\r\n  @Input()\r\n  rotateWithView: boolean;\r\n  @Input()\r\n  rotation: number;\r\n  @Input()\r\n  size: [number, number];\r\n  @Input()\r\n  imgSize: [number, number];\r\n  @Input()\r\n  src: string;\r\n\r\n  constructor(@Host() private host: StyleComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Icon instance with: ', this);\r\n    this.instance = new style.Icon(this);\r\n    this.host.instance.setImage(this.instance);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['opacity']) {\r\n      this.instance.setOpacity(changes['opacity'].currentValue);\r\n    }\r\n    if (changes['rotation']) {\r\n      this.instance.setRotation(changes['rotation'].currentValue);\r\n    }\r\n    if (changes['scale']) {\r\n      this.instance.setScale(changes['scale'].currentValue);\r\n    }\r\n    if (changes['src']) {\r\n      this.instance = new style.Icon(this);\r\n      this.host.instance.setImage(this.instance);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-icon: ', changes);\r\n  }\r\n}\r\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { style, Color, ColorLike } from 'openlayers';\r\nimport { StyleComponent } from './style.component';\r\nimport { StyleCircleComponent } from './circle.component';\r\nimport { StyleTextComponent } from './text.component';\r\n\r\n@Component({\r\n  selector: 'aol-style-fill',\r\n  template: `\r\n    <div class=\"aol-style-fill\"></div>\r\n  `,\r\n})\r\nexport class StyleFillComponent implements OnInit, OnChanges {\r\n  /* the typings do not have the setters */\r\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\r\n  public instance: style.Fill;\r\n\r\n  @Input()\r\n  color: Color | ColorLike;\r\n\r\n  constructor(\r\n    @Optional() styleHost: StyleComponent,\r\n    @Optional() styleCircleHost: StyleCircleComponent,\r\n    @Optional() styleTextHost: StyleTextComponent\r\n  ) {\r\n    if (!styleHost) {\r\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\r\n    }\r\n    if (!!styleTextHost) {\r\n      this.host = styleTextHost;\r\n    } else if (!!styleCircleHost) {\r\n      this.host = styleCircleHost;\r\n    } else {\r\n      this.host = styleHost;\r\n    }\r\n    // console.log('creating aol-style-fill with: ', this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('creating ol.style.Fill instance with: ', this);\r\n    this.instance = new style.Fill(this);\r\n    switch (this.host.componentType) {\r\n      case 'style':\r\n        this.host.instance.setFill(this.instance);\r\n        // console.log('setting ol.style instance\\'s fill:', this.host);\r\n        break;\r\n      case 'style-text':\r\n        this.host.instance.setFill(this.instance);\r\n        break;\r\n      case 'style-circle':\r\n        this.host.fill = this.instance;\r\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\r\n        break;\r\n      default:\r\n        throw new Error('unknown host type: ' + this.host);\r\n      // break;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    if (changes['color']) {\r\n      this.instance.setColor(changes['color'].currentValue);\r\n    }\r\n    this.host.update();\r\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { control, Collection } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-defaults',\r\n  template: '',\r\n})\r\nexport class DefaultControlComponent implements OnInit, OnDestroy {\r\n  instance: Collection<control.Control>;\r\n  @Input()\r\n  attribution: boolean;\r\n  @Input()\r\n  attributionOptions: olx.control.AttributionOptions;\r\n  @Input()\r\n  rotate: boolean;\r\n  @Input()\r\n  rotateOptions: olx.control.RotateOptions;\r\n  @Input()\r\n  zoom: boolean;\r\n  @Input()\r\n  zoomOptions: olx.control.ZoomOptions;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    // console.log('ol.control.defaults init: ', this);\r\n    this.instance = control.defaults(this);\r\n    this.instance.forEach(c => this.map.instance.addControl(c));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-defaults');\r\n    this.instance.forEach(c => this.map.instance.removeControl(c));\r\n  }\r\n}\r\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\nimport { ContentComponent } from '../content.component';\r\n\r\n@Component({\r\n  selector: 'aol-control',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlComponent implements OnInit, OnDestroy {\r\n  public componentType = 'control';\r\n  instance: control.Control;\r\n  element: Element;\r\n  @ContentChild(ContentComponent)\r\n  content: ContentComponent;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    if (this.content) {\r\n      this.element = this.content.elementRef.nativeElement;\r\n      this.instance = new control.Control(this);\r\n      this.map.instance.addControl(this.instance);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.instance) {\r\n      this.map.instance.removeControl(this.instance);\r\n    }\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-attribution',\r\n  template: ``,\r\n})\r\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\r\n  public componentType = 'control';\r\n  instance: control.Attribution;\r\n  target: Element;\r\n  @Input()\r\n  collapsible: boolean;\r\n\r\n  constructor(private map: MapComponent, private element: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.target = this.element.nativeElement;\r\n    // console.log('ol.control.Attribution init: ', this);\r\n    this.instance = new control.Attribution(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-attribution');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-fullscreen',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\r\n  instance: control.FullScreen;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  labelActive: string;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  keys: boolean;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-fullscreen');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.FullScreen(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-fullscreen');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control, CoordinateFormatType, ProjectionLike } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-mouseposition',\r\n  template: ``,\r\n})\r\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\r\n  instance: control.MousePosition;\r\n  @Input()\r\n  coordinateFormat: CoordinateFormatType;\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  target: Element;\r\n\r\n  constructor(private map: MapComponent, private element: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.target = this.element.nativeElement;\r\n    // console.log('ol.control.MousePosition init: ', this);\r\n    this.instance = new control.MousePosition(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-mouseposition');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control, View, layer } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-overviewmap',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlOverviewMapComponent implements OnInit, OnDestroy {\r\n  instance: control.OverviewMap;\r\n  @Input()\r\n  collapsed: boolean;\r\n  @Input()\r\n  collapseLabel: string;\r\n  @Input()\r\n  collapsible: boolean;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  layers: layer.Layer[];\r\n  @Input()\r\n  target: Element;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  view: View;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-overviewmap');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.OverviewMap(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-overviewmap');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-rotate',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlRotateComponent implements OnInit, OnDestroy {\r\n  instance: control.Rotate;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  autoHide: boolean;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-rotate');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.Rotate(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-rotate');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-scaleline',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\r\n  instance: control.ScaleLine;\r\n  @Input()\r\n  units: string;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-scaleline');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.ScaleLine(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-scaleline');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoom',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomComponent implements OnInit, OnDestroy {\r\n  instance: control.Zoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  zoomInLabel: string | Node;\r\n  @Input()\r\n  zoomOutLabel: string | Node;\r\n  @Input()\r\n  zoomInTipLabel: string;\r\n  @Input()\r\n  zoomOutTipLabel: string;\r\n  @Input()\r\n  delta: number;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoom');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.Zoom(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoom');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoomslider',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\r\n  instance: control.ZoomSlider;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  maxResolution: number;\r\n  @Input()\r\n  minResolution: number;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoomslider');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.ZoomSlider(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoomslider');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { control, Extent } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-control-zoomtoextent',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n})\r\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\r\n  instance: control.ZoomToExtent;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  label: string | Node;\r\n  @Input()\r\n  tipLabel: string;\r\n  @Input()\r\n  extent: Extent;\r\n\r\n  constructor(private map: MapComponent) {\r\n    // console.log('instancing aol-control-zoomtoextent');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new control.ZoomToExtent(this);\r\n    this.map.instance.addControl(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log('removing aol-control-zoomtoextent');\r\n    this.map.instance.removeControl(this.instance);\r\n  }\r\n}\r\n","import { Component, forwardRef, Input } from '@angular/core';\r\nimport { format, geom } from 'openlayers';\r\nimport { FormatComponent } from './format.component';\r\n\r\n@Component({\r\n  selector: 'aol-format-mvt',\r\n  template: '',\r\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\r\n})\r\nexport class FormatMVTComponent extends FormatComponent {\r\n  instance: format.MVT;\r\n\r\n  @Input()\r\n  featureClass:\r\n    | ((geom: geom.Geometry | { [k: string]: any }) => any)\r\n    | ((geom: geom.GeometryType, arg2: number[], arg3: number[] | number[][], arg4: { [k: string]: any }) => any);\r\n  @Input()\r\n  geometryName: string;\r\n  @Input()\r\n  layerName: string;\r\n  @Input()\r\n  layers: string[];\r\n\r\n  constructor() {\r\n    super();\r\n    this.instance = new format.MVT(this);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction, Collection } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-default',\r\n  template: '',\r\n})\r\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\r\n  instance: Collection<interaction.Interaction>;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = interaction.defaults();\r\n    this.instance.forEach(i => this.map.instance.addInteraction(i));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.instance.forEach(i => this.map.instance.removeInteraction(i));\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-doubleclickzoom',\r\n  template: '',\r\n})\r\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DoubleClickZoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  delta: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DoubleClickZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction, format, ProjectionLike } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-draganddrop',\r\n  template: '',\r\n})\r\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragAndDrop;\r\n\r\n  @Input()\r\n  formatConstructors: ((n: format.Feature) => any)[];\r\n  @Input()\r\n  projection: ProjectionLike;\r\n  @Input()\r\n  target: Element;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragAndDrop(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType, DragBoxEndConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragbox',\r\n  template: '',\r\n})\r\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragBox;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  boxEndCondition: DragBoxEndConditionType;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragBox(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType, Kinetic } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragpan',\r\n  template: '',\r\n})\r\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragPan;\r\n\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  kinetic: Kinetic;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragPan(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragrotate',\r\n  template: '',\r\n})\r\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragRotate;\r\n\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  duration: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragRotate(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragrotateandzoom',\r\n  template: '',\r\n})\r\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragRotate;\r\n\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  duration: number;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragRotateAndZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction, EventsConditionType } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-dragzoom',\r\n  template: '',\r\n})\r\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.DragZoom;\r\n\r\n  @Input()\r\n  className: string;\r\n  @Input()\r\n  condition: EventsConditionType;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  out: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.DragZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-mousewheelzoom',\r\n  template: '',\r\n})\r\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.MouseWheelZoom;\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  timeout: number;\r\n  @Input()\r\n  useAnchor: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.MouseWheelZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-pinchzoom',\r\n  template: '',\r\n})\r\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.PinchZoom;\r\n\r\n  @Input()\r\n  duration: number;\r\n  @Input()\r\n  constrainResolution: boolean;\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.PinchZoom(this);\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { interaction } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-draw',\r\n  template: '',\r\n})\r\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Draw;\r\n\r\n  @Input()\r\n  clickTolerance?: number;\r\n  @Input()\r\n  features?: ol.Collection<ol.Feature>;\r\n  @Input()\r\n  source?: ol.source.Vector;\r\n  @Input()\r\n  snapTolerance?: number;\r\n  @Input()\r\n  type: ol.geom.GeometryType;\r\n  @Input()\r\n  maxPoints?: number;\r\n  @Input()\r\n  minPoints?: number;\r\n  @Input()\r\n  finishCondition?: ol.EventsConditionType;\r\n  @Input()\r\n  style?: ol.style.Style | ol.style.Style[] | ol.StyleFunction;\r\n  @Input()\r\n  geometryFunction?: ol.DrawGeometryFunctionType;\r\n  @Input()\r\n  geometryName?: string;\r\n  @Input()\r\n  condition?: ol.EventsConditionType;\r\n  @Input()\r\n  freehandCondition?: ol.EventsConditionType;\r\n  @Input()\r\n  freehand?: boolean;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @Output()\r\n  onChange = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onChangeActive = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onDrawEnd = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onDrawStart = new EventEmitter<ol.interaction.Draw.Event>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<ol.interaction.Draw.Event>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Draw(this);\r\n    this.instance.on('change', (event: ol.interaction.Draw.Event) => this.onChange.emit(event));\r\n    this.instance.on('change:active', (event: ol.interaction.Draw.Event) => this.onChangeActive.emit(event));\r\n    this.instance.on('drawend', (event: ol.interaction.Draw.Event) => this.onDrawEnd.emit(event));\r\n    this.instance.on('drawstart', (event: ol.interaction.Draw.Event) => this.onDrawStart.emit(event));\r\n    this.instance.on('propertychange', (event: ol.interaction.Draw.Event) => this.onPropertyChange.emit(event));\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport {\r\n  interaction,\r\n  EventsConditionType,\r\n  layer,\r\n  style,\r\n  Collection,\r\n  SelectFilterFunction,\r\n  StyleFunction,\r\n  Feature,\r\n} from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-select',\r\n  template: '',\r\n})\r\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Select;\r\n\r\n  @Input()\r\n  addCondition?: EventsConditionType;\r\n  @Input()\r\n  condition?: EventsConditionType;\r\n  @Input()\r\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\r\n  @Input()\r\n  style?: style.Style | style.Style[] | StyleFunction;\r\n  @Input()\r\n  removeCondition?: EventsConditionType;\r\n  @Input()\r\n  toggleCondition?: EventsConditionType;\r\n  @Input()\r\n  multi?: boolean;\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  filter?: SelectFilterFunction;\r\n  @Input()\r\n  wrapX?: boolean;\r\n\r\n  @Output()\r\n  onChange = new EventEmitter<interaction.Select.Event>();\r\n  @Output()\r\n  onSelect = new EventEmitter<interaction.Select.Event>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<interaction.Select.Event>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Select(this);\r\n\r\n    this.instance.on('change', (event: interaction.Select.Event) => this.onChange.emit(event));\r\n    this.instance.on('select', (event: interaction.Select.Event) => this.onSelect.emit(event));\r\n    this.instance.on('propertychange', (event: interaction.Select.Event) => this.onPropertyChange.emit(event));\r\n\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { interaction, EventsConditionType, style, StyleFunction, Collection, Feature, source } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-modify',\r\n  template: '',\r\n})\r\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Modify;\r\n\r\n  @Input()\r\n  condition?: EventsConditionType;\r\n  @Input()\r\n  deleteCondition?: EventsConditionType;\r\n  @Input()\r\n  pixelTolerance?: number;\r\n  @Input()\r\n  style?: style.Style | style.Style[] | StyleFunction;\r\n  @Input()\r\n  features: Collection<Feature>;\r\n  @Input()\r\n  wrapX?: boolean;\r\n  @Input()\r\n  source?: source.Vector;\r\n\r\n  @Output()\r\n  onModifyEnd = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onModifyStart = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onChange = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onChangeActive = new EventEmitter<interaction.Modify.Event>();\r\n  @Output()\r\n  onPropertyChange = new EventEmitter<interaction.Modify.Event>();\r\n\r\n  constructor(private map: MapComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Modify(this);\r\n    this.instance.on('change', (event: interaction.Modify.Event) => this.onChange.emit(event));\r\n    this.instance.on('change:active', (event: interaction.Modify.Event) => this.onChangeActive.emit(event));\r\n    this.instance.on('propertychange', (event: interaction.Modify.Event) => this.onPropertyChange.emit(event));\r\n    this.instance.on('modifyend', (event: interaction.Modify.Event) => this.onModifyEnd.emit(event));\r\n    this.instance.on('modifystart', (event: interaction.Modify.Event) => this.onModifyStart.emit(event));\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { interaction, layer, Collection, Feature } from 'openlayers';\r\nimport { MapComponent } from '../map.component';\r\n\r\n@Component({\r\n  selector: 'aol-interaction-translate',\r\n  template: '',\r\n})\r\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\r\n  instance: interaction.Translate;\r\n\r\n  @Input()\r\n  features?: Collection<Feature>;\r\n  @Input()\r\n  layers?: layer.Layer[] | ((layer: layer.Layer) => boolean);\r\n  @Input()\r\n  hitTolerance?: number;\r\n\r\n  @Output()\r\n  onChange: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onPropertyChange: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onTranslateEnd: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onTranslateStart: EventEmitter<interaction.Translate.Event>;\r\n  @Output()\r\n  onTranslating: EventEmitter<interaction.Translate.Event>;\r\n\r\n  constructor(private map: MapComponent) {\r\n    this.onChange = new EventEmitter<interaction.Translate.Event>();\r\n    this.onPropertyChange = new EventEmitter<interaction.Translate.Event>();\r\n    this.onTranslateEnd = new EventEmitter<interaction.Translate.Event>();\r\n    this.onTranslateStart = new EventEmitter<interaction.Translate.Event>();\r\n    this.onTranslating = new EventEmitter<interaction.Translate.Event>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.instance = new interaction.Translate(this);\r\n\r\n    this.instance.on('change', (event: interaction.Translate.Event) => this.onChange.emit(event));\r\n    this.instance.on('propertychange', (event: interaction.Translate.Event) => this.onPropertyChange.emit(event));\r\n    this.instance.on('translateend', (event: interaction.Translate.Event) => this.onTranslateEnd.emit(event));\r\n    this.instance.on('translatestart', (event: interaction.Translate.Event) => this.onTranslateStart.emit(event));\r\n    this.instance.on('translating', (event: interaction.Translate.Event) => this.onTranslating.emit(event));\r\n\r\n    this.map.instance.addInteraction(this.instance);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.instance.removeInteraction(this.instance);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { Attribution } from 'openlayers';\r\n\r\n@Component({\r\n  selector: 'aol-attribution',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class AttributionComponent implements OnInit {\r\n  instance: Attribution;\r\n  html: string;\r\n\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.html = this.elementRef.nativeElement.innerHTML;\r\n    this.instance = new Attribution(this);\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\r\nimport { Attribution } from 'openlayers';\r\nimport { SourceComponent } from './sources/source.component';\r\nimport { AttributionComponent } from './attribution.component';\r\n\r\n@Component({\r\n  selector: 'aol-attributions',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class AttributionsComponent implements AfterViewInit {\r\n  instance: Array<Attribution>;\r\n\r\n  @ContentChildren(AttributionComponent)\r\n  attributions: QueryList<AttributionComponent>;\r\n\r\n  constructor(@Host() private source: SourceComponent) {}\r\n\r\n  /* we can do this at the very end */\r\n  ngAfterViewInit() {\r\n    if (this.attributions.length) {\r\n      this.instance = this.attributions.map(cmp => cmp.instance);\r\n      // console.log('setting attributions:', this.instance);\r\n      this.source.instance.setAttributions(this.instance);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ngx-openlayers\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ViewComponent } from './lib/view.component';\r\nimport { GraticuleComponent } from './lib/graticule.component';\r\nimport { LayerGroupComponent } from './lib/layers/layergroup.component';\r\nimport { LayerImageComponent } from './lib/layers/layerimage.component';\r\nimport { LayerTileComponent } from './lib/layers/layertile.component';\r\nimport { MapComponent } from './lib/map.component';\r\nimport { LayerVectorComponent } from './lib/layers/layervector.component';\r\nimport { LayerVectorTileComponent } from './lib/layers/layervectortile.component';\r\nimport { SourceOsmComponent } from './lib/sources/osm.component';\r\nimport { SourceBingmapsComponent } from './lib/sources/bingmaps.component';\r\nimport { SourceClusterComponent } from './lib/sources/cluster.component';\r\nimport { SourceVectorComponent } from './lib/sources/vector.component';\r\nimport { SourceXYZComponent } from './lib/sources/xyz.component';\r\nimport { SourceTileWMTSComponent } from './lib/sources/tilewmts.component';\r\nimport { SourceVectorTileComponent } from './lib/sources/vectortile.component';\r\nimport { SourceTileWMSComponent } from './lib/sources/tilewms.component';\r\nimport { SourceTileJSONComponent } from './lib/sources/tilejson.component';\r\nimport { SourceGeoJSONComponent } from './lib/sources/geojson.component';\r\nimport { SourceImageStaticComponent } from './lib/sources/imagestatic.component';\r\nimport { SourceImageWMSComponent } from './lib/sources/imagewms.component';\r\nimport { SourceImageArcGISRestComponent } from './lib/sources/imagearcgisrest.component';\r\nimport { SourceRasterComponent } from './lib/sources/raster.component';\r\nimport { FeatureComponent } from './lib/feature.component';\r\nimport {\r\n  GeometryLinestringComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n} from './lib/geometry.components';\r\nimport { CollectionCoordinatesComponent, CoordinateComponent } from './lib/coordinate.component';\r\nimport { StyleComponent } from './lib/styles/style.component';\r\nimport { StyleCircleComponent } from './lib/styles/circle.component';\r\nimport { StyleStrokeComponent } from './lib/styles/stroke.component';\r\nimport { StyleIconComponent } from './lib/styles/icon.component';\r\nimport { StyleFillComponent } from './lib/styles/fill.component';\r\nimport { StyleTextComponent } from './lib/styles/text.component';\r\nimport { DefaultControlComponent } from './lib/controls/default.component';\r\nimport { ControlComponent } from './lib/controls/control.component';\r\nimport { ControlAttributionComponent } from './lib/controls/attribution.component';\r\nimport { ControlFullScreenComponent } from './lib/controls/fullscreen.component';\r\nimport { ControlMousePositionComponent } from './lib/controls/mouseposition.component';\r\nimport { ControlOverviewMapComponent } from './lib/controls/overviewmap.component';\r\nimport { ControlRotateComponent } from './lib/controls/rotate.component';\r\nimport { ControlScaleLineComponent } from './lib/controls/scaleline.component';\r\nimport { ControlZoomComponent } from './lib/controls/zoom.component';\r\nimport { ControlZoomSliderComponent } from './lib/controls/zoomslider.component';\r\nimport { ControlZoomToExtentComponent } from './lib/controls/zoomtoextent.component';\r\nimport { FormatMVTComponent } from './lib/formats/mvt.component';\r\nimport { TileGridComponent } from './lib/tilegrid.component';\r\nimport { TileGridWMTSComponent } from './lib/tilegridwmts.component';\r\nimport { DefaultInteractionComponent } from './lib/interactions/default.component';\r\nimport { DoubleClickZoomInteractionComponent } from './lib/interactions/doubleclickzoom.component';\r\nimport { DragAndDropInteractionComponent } from './lib/interactions/draganddrop.component';\r\nimport { DragBoxInteractionComponent } from './lib/interactions/dragbox.component';\r\nimport { DragPanInteractionComponent } from './lib/interactions/dragpan.component';\r\nimport { DragRotateInteractionComponent } from './lib/interactions/dragrotate.component';\r\nimport { DragRotateAndZoomInteractionComponent } from './lib/interactions/dragrotateandzoom.component';\r\nimport { DragZoomInteractionComponent } from './lib/interactions/dragzoom.component';\r\nimport { MouseWheelZoomInteractionComponent } from './lib/interactions/mousewheelzoom.component';\r\nimport { PinchZoomInteractionComponent } from './lib/interactions/pinchzoom.component';\r\nimport { DrawInteractionComponent } from './lib/interactions/draw.component';\r\nimport { SelectInteractionComponent } from './lib/interactions/select.component';\r\nimport { ModifyInteractionComponent } from './lib/interactions/modify.component';\r\nimport { TranslateInteractionComponent } from './lib/interactions/translate.component';\r\nimport { OverlayComponent } from './lib/overlay.component';\r\nimport { ContentComponent } from './lib/content.component';\r\nimport { AttributionComponent } from './lib/attribution.component';\r\nimport { AttributionsComponent } from './lib/attributions.component';\r\n\r\nexport {\r\n  MapComponent,\r\n  ViewComponent,\r\n  GraticuleComponent,\r\n  LayerGroupComponent,\r\n  LayerImageComponent,\r\n  LayerTileComponent,\r\n  LayerVectorComponent,\r\n  LayerVectorTileComponent,\r\n  SourceOsmComponent,\r\n  SourceBingmapsComponent,\r\n  SourceClusterComponent,\r\n  SourceVectorComponent,\r\n  SourceXYZComponent,\r\n  SourceVectorTileComponent,\r\n  SourceTileWMSComponent,\r\n  SourceTileWMTSComponent,\r\n  SourceTileJSONComponent,\r\n  SourceGeoJSONComponent,\r\n  SourceImageStaticComponent,\r\n  SourceImageWMSComponent,\r\n  SourceRasterComponent,\r\n  SourceImageArcGISRestComponent,\r\n  FeatureComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n  CoordinateComponent,\r\n  CollectionCoordinatesComponent,\r\n  StyleComponent,\r\n  StyleCircleComponent,\r\n  StyleFillComponent,\r\n  StyleIconComponent,\r\n  StyleStrokeComponent,\r\n  StyleTextComponent,\r\n  DefaultControlComponent,\r\n  ControlComponent,\r\n  ControlAttributionComponent,\r\n  ControlFullScreenComponent,\r\n  ControlMousePositionComponent,\r\n  ControlOverviewMapComponent,\r\n  ControlRotateComponent,\r\n  ControlScaleLineComponent,\r\n  ControlZoomComponent,\r\n  ControlZoomSliderComponent,\r\n  ControlZoomToExtentComponent,\r\n  FormatMVTComponent,\r\n  TileGridComponent,\r\n  TileGridWMTSComponent,\r\n  DefaultInteractionComponent,\r\n  DoubleClickZoomInteractionComponent,\r\n  DragAndDropInteractionComponent,\r\n  DragBoxInteractionComponent,\r\n  DragPanInteractionComponent,\r\n  DragRotateInteractionComponent,\r\n  DragRotateAndZoomInteractionComponent,\r\n  DragZoomInteractionComponent,\r\n  MouseWheelZoomInteractionComponent,\r\n  PinchZoomInteractionComponent,\r\n  DrawInteractionComponent,\r\n  SelectInteractionComponent,\r\n  ModifyInteractionComponent,\r\n  TranslateInteractionComponent,\r\n  OverlayComponent,\r\n  ContentComponent,\r\n  AttributionComponent,\r\n  AttributionsComponent,\r\n};\r\n\r\nconst COMPONENTS = [\r\n  MapComponent,\r\n\r\n  ViewComponent,\r\n  GraticuleComponent,\r\n\r\n  LayerGroupComponent,\r\n  LayerImageComponent,\r\n  LayerTileComponent,\r\n  LayerVectorComponent,\r\n  LayerVectorTileComponent,\r\n\r\n  SourceOsmComponent,\r\n  SourceBingmapsComponent,\r\n  SourceClusterComponent,\r\n  SourceVectorComponent,\r\n  SourceXYZComponent,\r\n  SourceVectorTileComponent,\r\n  SourceTileWMSComponent,\r\n  SourceTileWMTSComponent,\r\n  SourceTileJSONComponent,\r\n  SourceGeoJSONComponent,\r\n  SourceImageStaticComponent,\r\n  SourceImageWMSComponent,\r\n  SourceImageArcGISRestComponent,\r\n  SourceRasterComponent,\r\n  FeatureComponent,\r\n  GeometryLinestringComponent,\r\n  GeometryPointComponent,\r\n  GeometryPolygonComponent,\r\n  GeometryCircleComponent,\r\n  CoordinateComponent,\r\n  CollectionCoordinatesComponent,\r\n\r\n  StyleComponent,\r\n  StyleCircleComponent,\r\n  StyleFillComponent,\r\n  StyleIconComponent,\r\n  StyleStrokeComponent,\r\n  StyleTextComponent,\r\n\r\n  DefaultControlComponent,\r\n  ControlComponent,\r\n  ControlAttributionComponent,\r\n  ControlFullScreenComponent,\r\n  ControlMousePositionComponent,\r\n  ControlOverviewMapComponent,\r\n  ControlRotateComponent,\r\n  ControlScaleLineComponent,\r\n  ControlZoomComponent,\r\n  ControlZoomSliderComponent,\r\n  ControlZoomToExtentComponent,\r\n\r\n  FormatMVTComponent,\r\n  TileGridComponent,\r\n  TileGridWMTSComponent,\r\n\r\n  DefaultInteractionComponent,\r\n  DoubleClickZoomInteractionComponent,\r\n  DragAndDropInteractionComponent,\r\n  DragBoxInteractionComponent,\r\n  DragPanInteractionComponent,\r\n  DragRotateInteractionComponent,\r\n  DragRotateAndZoomInteractionComponent,\r\n  DragZoomInteractionComponent,\r\n  MouseWheelZoomInteractionComponent,\r\n  PinchZoomInteractionComponent,\r\n  DrawInteractionComponent,\r\n  SelectInteractionComponent,\r\n  ModifyInteractionComponent,\r\n  TranslateInteractionComponent,\r\n\r\n  OverlayComponent,\r\n  ContentComponent,\r\n  AttributionComponent,\r\n  AttributionsComponent,\r\n];\r\n\r\n@NgModule({\r\n  declarations: COMPONENTS,\r\n  imports: [CommonModule],\r\n  exports: COMPONENTS,\r\n})\r\nexport class AngularOpenlayersModule {}\r\n"],"names":["tslib_1.__extends","layer","source"],"mappings":";;;;;;;;;AAAA;IAkEE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QA5C7B,kBAAa,GAAG,KAAK,CAAC;QAG7B,UAAK,GAAG,MAAM,CAAC;QAEf,WAAM,GAAG,MAAM,CAAC;;QAoChB,aAAQ,GAAsB,EAAE,CAAC;QACjC,iBAAY,GAA8B,EAAE,CAAC;QAG3C,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,EAAmB,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,EAAmB,CAAC;QACtD,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAY,CAAC;QAC9C,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,EAAmB,CAAC;QACzD,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,EAAmB,CAAC;QACzD,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,EAAgB,CAAC;QACtD,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAY,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAgB,CAAC;QACrD,IAAI,CAAC,gBAAgB,GAAG,IAAI,YAAY,EAAe,CAAC;QACxD,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,EAAmB,CAAC;KAC1D;;;;IAED,+BAAQ;;;IAAR;QAAA,iBAcC;;QAZC,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QACnE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,KAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAChF,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,EAAE,UAAC,KAAsB,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QACtF,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAe,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC7E,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,KAAsB,IAAK,OAAA,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC5F,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,KAAsB,IAAK,OAAA,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC5F,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,KAAmB,IAAK,OAAA,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QACzF,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,KAAe,IAAK,OAAA,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QACnF,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,KAAmB,IAAK,OAAA,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QACvF,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,KAAkB,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC9F,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,KAAsB,IAAK,OAAA,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;KAC7F;;;;;IAED,kCAAW;;;;IAAX,UAAY,OAAsB;;YAC1B,UAAU,GAA6B,EAAE;QAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QACD,KAAK,IAAM,GAAG,IAAI,OAAO,EAAE;YACzB,IAAI,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC/B,UAAU,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;aAC7C;SACF;;QAED,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;KAChD;;;;IAED,sCAAe;;;IAAf;QACE,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;KAC5B;;gBAlGF,SAAS,SAAC;oBACT,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,wGAGT;iBACF;;;gBAhBC,UAAU;;;wBAqBT,KAAK;yBAEL,KAAK;6BAEL,KAAK;sCAEL,KAAK;0CAEL,KAAK;4CAEL,KAAK;uBAEL,KAAK;2BAEL,KAAK;0BAGL,MAAM;6BAEN,MAAM;4BAEN,MAAM;gCAEN,MAAM;gCAEN,MAAM;gCAEN,MAAM;+BAEN,MAAM;+BAEN,MAAM;mCAEN,MAAM;gCAEN,MAAM;;IAqDT,mBAAC;CAAA;;;;;;AChHD;IAiDE,uBAAoB,IAAkB;QAAlB,SAAI,GAAJ,IAAI,CAAc;QArC/B,kBAAa,GAAG,MAAM,CAAC;QAgC9B,kBAAa,GAAG,KAAK,CAAC;QAGtB,iBAAY,GAA8B,IAAI,YAAY,EAAe,CAAC;KAEhC;;;;IAE1C,gCAAQ;;;IAAR;QAAA,iBAMC;;QAJC,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE1C,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,KAAkB,IAAK,OAAA,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;KACxF;;;;;IAED,mCAAW;;;;IAAX,UAAY,OAAsB;;YAC1B,UAAU,GAA6B,EAAE;QAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QACD,KAAK,IAAM,GAAG,IAAI,OAAO,EAAE;YACzB,IAAI,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC/B,QAAQ,GAAG;oBACT,KAAK,MAAM;;wBAET,IAAI,IAAI,CAAC,aAAa,EAAE;4BACtB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC;yBAC5D;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;yBAClD;wBACD,MAAM;oBACR;wBACE,MAAM;iBACT;gBACD,UAAU,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;aAC7C;SACF;;QAED,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;KAChD;;;;IAED,mCAAW;;;IAAX;;KAEC;;gBAnFF,SAAS,SAAC;oBACT,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,qCAET;iBACF;;;gBAPQ,YAAY;;;oCAYlB,KAAK;iCAEL,KAAK;yBAEL,KAAK;gCAEL,KAAK;gCAEL,KAAK;0BAEL,KAAK;0BAEL,KAAK;6BAEL,KAAK;8BAEL,KAAK;2BAEL,KAAK;uBAEL,KAAK;6BAEL,KAAK;yBAEL,KAAK;6BAEL,KAAK;gCAGL,KAAK;+BAGL,MAAM;;IA0CT,oBAAC;CAAA;;;;;;ACxFD;IAqBE,4BAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;QAX9B,kBAAa,GAAG,WAAW,CAAC;KAWM;;;;;IAEzC,wCAAW;;;;IAAX,UAAY,OAAsB;;YAC1B,UAAU,GAA6B,EAAE;QAE/C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QAED,KAAK,IAAM,GAAG,IAAI,OAAO,EAAE;YACzB,IAAI,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC/B,UAAU,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;aAC7C;SACF;QAED,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,QAAQ,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,CAAC;SAC3C;QACD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;KACzC;;;;IAED,+CAAkB;;;IAAlB;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,SAAS,CAAC;YAC5B,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;SACxC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;KACzC;;gBA9CF,SAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,2BAA2B;iBACtC;;;gBALQ,YAAY;;;8BAUlB,KAAK;6BAEL,KAAK;mCAEL,KAAK;mCAEL,KAAK;;IAiCR,yBAAC;CAAA;;;;;;ACnDD;;;AAKA;IAsBE,wBAAsB,IAAwC;QAAxC,SAAI,GAAJ,IAAI,CAAoC;QApBvD,kBAAa,GAAG,OAAO,CAAC;KAoBmC;;;;IAElE,iCAAQ;;;IAAR;QACE,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;YAC7D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SACjD;QACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAC/D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SACnD;QACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;;;IAED,oCAAW;;;IAAX;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtD;;;;;IAED,oCAAW;;;;IAAX,UAAY,OAAsB;;YAC1B,UAAU,GAA6B,EAAE;QAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QACD,KAAK,IAAM,GAAG,IAAI,OAAO,EAAE;YACzB,IAAI,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC/B,UAAU,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;gBAC5C,IAAI,GAAG,KAAK,YAAY,EAAE;oBACxB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC;oBAC3D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;iBAC3D;gBACD,IAAI,GAAG,KAAK,aAAa,EAAE;oBACzB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC;oBAC5D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;iBAC5D;aACF;SACF;;QAED,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;KAChD;;0BAtDA,KAAK;0BAEL,KAAK;yBAEL,KAAK;yBAEL,KAAK;gCAEL,KAAK;gCAEL,KAAK;6BAGL,KAAK;8BAEL,KAAK;;IAwCR,qBAAC;CAAA;;;;;;;ICrDwCA,uCAAc;IAGrD,6BACE,GAAiB,EAGjB,KAA2B;eAE3B,kBAAM,KAAK,IAAI,GAAG,CAAC;KACpB;;;;IAED,sCAAQ;;;IAAR;;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtC,iBAAM,QAAQ,WAAE,CAAC;KAClB;;gBAtBF,SAAS,SAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,QAAQ,EAAE,qCAET;iBACF;;;gBAPQ,YAAY;gBAeT,mBAAmB,uBAF1B,QAAQ,YACR,QAAQ;;IAWb,0BAAC;CAAA,CAjBwC,cAAc;;;;;;;ICCdA,uCAAc;IAgBrD,6BAAY,GAAiB,EAAc,KAA2B;eACpE,kBAAM,KAAK,IAAI,GAAG,CAAC;KACpB;;;;IAED,sCAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtC,iBAAM,QAAQ,WAAE,CAAC;KAClB;;;;;IAED,yCAAW;;;;IAAX,UAAY,OAAsB;QAChC,iBAAM,WAAW,YAAC,OAAO,CAAC,CAAC;KAC5B;;gBAjCF,SAAS,SAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,QAAQ,EAAE,qCAET;iBACF;;;gBATQ,YAAY;gBAEZ,mBAAmB,uBAwBM,QAAQ;;;0BAbvC,KAAK;0BAEL,KAAK;yBAEL,KAAK;gCAEL,KAAK;gCAEL,KAAK;yBAEL,KAAK;;IAeR,0BAAC;CAAA,CA5BwC,cAAc;;;;;;;ICAfA,sCAAc;IAQpD,4BAAY,GAAiB,EAAc,KAA2B;eACpE,kBAAM,KAAK,IAAI,GAAG,CAAC;KACpB;;;;IAED,qCAAQ;;;IAAR;;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,iBAAM,QAAQ,WAAE,CAAC;KAClB;;;;;IAED,wCAAW;;;;IAAX,UAAY,OAAsB;QAChC,iBAAM,WAAW,YAAC,OAAO,CAAC,CAAC;KAC5B;;gBA1BF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,qCAET;iBACF;;;gBATQ,YAAY;gBAEZ,mBAAmB,uBAgBM,QAAQ;;;0BALvC,KAAK;yCAEL,KAAK;;IAgBR,yBAAC;CAAA,CArBuC,cAAc;;;;;;;ICAZA,wCAAc;IAetD,8BAAY,GAAiB,EAAc,KAA2B;eACpE,kBAAM,KAAK,IAAI,GAAG,CAAC;KACpB;;;;IAED,uCAAQ;;;IAAR;;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvC,iBAAM,QAAQ,WAAE,CAAC;KAClB;;;;;IAED,0CAAW;;;;IAAX,UAAY,OAAsB;QAChC,iBAAM,WAAW,YAAC,OAAO,CAAC,CAAC;KAC5B;;gBAjCF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,qCAET;iBACF;;;gBATQ,YAAY;gBAEZ,mBAAmB,uBAuBM,QAAQ;;;+BAZvC,KAAK;wBAGL,KAAK;uCAGL,KAAK;yCAGL,KAAK;;IAgBR,2BAAC;CAAA,CA5ByC,cAAc;;;;;;;ICAVA,4CAAc;IAiB1D,kCAAY,GAAiB,EAAc,KAA2B;eACpE,kBAAM,KAAK,IAAI,GAAG,CAAC;KACpB;;;;IAED,2CAAQ;;;IAAR;;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC3C,iBAAM,QAAQ,WAAE,CAAC;KAClB;;;;;IAED,8CAAW;;;;IAAX,UAAY,OAAsB;QAChC,iBAAM,WAAW,YAAC,OAAO,CAAC,CAAC;KAC5B;;gBAnCF,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE,qCAET;iBACF;;;gBATQ,YAAY;gBAEZ,mBAAmB,uBAyBM,QAAQ;;;+BAhBvC,KAAK;6BAEL,KAAK;8BAGL,KAAK;wBAEL,KAAK;uCAEL,KAAK;yCAEL,KAAK;0BAEL,KAAK;;IAgBR,+BAAC;CAAA,CA9B6C,cAAc;;;;;;ACZ5D;IAaE,yBAAsB,IAAoB,EAAY,MAA8B;QAA9D,SAAI,GAAJ,IAAI,CAAgB;QAAY,WAAM,GAAN,MAAM,CAAwB;QAL7E,kBAAa,GAAG,QAAQ,CAAC;KAKwD;;;;IAExF,qCAAW;;;IAAX;QACE,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACpC;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;SAC1B;KACF;;;;;;IAES,mCAAS;;;;;IAAnB,UAAoB,CAAgB;QAClC,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACjC;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;SAC3B;KACF;;+BAvBA,KAAK;;IAwBR,sBAAC;CAAA;;;;;;AClCD;IAGA;KAmCC;;;;IAfC,oCAAQ;;;IAAR;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC7C;KACF;;;;;IAED,uCAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC7C;KACF;;gBAlCF,SAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,EAAE;iBACb;;;yBAIE,KAAK;0BAEL,KAAK;0BAEL,KAAK;2BAEL,KAAK;yBAEL,KAAK;8BAEL,KAAK;;IAkBR,wBAAC;CAAA;;;;;;;ICpB0CA,yCAAe;IAmBxD,+BAAoBC,QAA0B;QAA9C,YACE,kBAAMA,QAAK,CAAC,SACb;QARD,sBAAgB,GAAqC,IAAI,YAAY,EAAsB,CAAC;QAE5F,qBAAe,GAAqC,IAAI,YAAY,EAAsB,CAAC;QAE3F,aAAO,GAAoB,EAAE,CAAC;;KAI7B;;;;IAED,kDAAkB;;;IAAlB;QAAA,iBAOC;QANC,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAExC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAC,KAAyB,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QACvG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,iBAAiB,EAAE,UAAC,KAAyB,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAErG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/B;;gBA1CF,SAAS,SAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,qCAET;oBACD,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,eAAe;4BACxB,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,qBAAqB,GAAA,CAAC;yBACrD;qBACF;iBACF;;;gBAdQ,mBAAmB,uBAkCb,IAAI;;;4BAhBhB,KAAK;0BAEL,KAAK;sBAEL,KAAK;gCAEL,KAAK;mCAGL,MAAM;kCAEN,MAAM;;IAiBT,4BAAC;CAAA,CA/B0C,eAAe;;;;;;;ICMlBD,sCAAe;IAoCrD,4BAGEC,QAAyB,EAGzB,MAA8B;eAE9B,kBAAMA,QAAK,EAAE,MAAM,CAAC;KACrB;;;;IAED,+CAAkB;;;IAAlB;QACE,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;SAC3C;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/B;;;;;IAED,wCAAW;;;;IAAX,UAAY,OAAsB;;YAC1B,UAAU,GAA6B,EAAE;QAE/C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QACD,KAAK,IAAM,GAAG,IAAI,OAAO,EAAE;YACzB,IAAI,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC/B,UAAU,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;aAC7C;SACF;QAED,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC/C,IAAI,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/B;KACF;;gBA/EF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,qCAET;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,kBAAkB,GAAA,CAAC,EAAE,CAAC;iBAC7F;;;gBAXQ,kBAAkB,uBAiDtB,QAAQ,YACR,IAAI;gBA/CA,qBAAqB,uBAiDzB,QAAQ,YACR,IAAI;;;4BAvCN,KAAK;8BAEL,KAAK;yBAEL,KAAK;6BAEL,KAAK;6CAEL,KAAK;0BAEL,KAAK;0BAEL,KAAK;2BAEL,KAAK;mCAEL,KAAK;iCAEL,KAAK;2BAEL,KAAK;kCAEL,KAAK;sBAEL,KAAK;uBAEL,KAAK;wBAEL,KAAK;8BAGL,YAAY,SAAC,iBAAiB;;IAwCjC,yBAAC;CAAA,CAzEuC,eAAe;;;;;;;ICVfD,sCAAkB;IAsBxD,4BAGEC,QAAyB,EAGzB,MAA8B;eAE9B,kBAAMA,QAAK,EAAE,MAAM,CAAC;KACrB;;;;IAED,+CAAkB;;;IAAlB;QACE,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;SAC3C;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/B;;gBA9CF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,gDAET;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,kBAAkB,GAAA,CAAC,EAAE,CAAC;iBAC7F;;;gBAXQ,kBAAkB,uBAmCtB,IAAI,YACJ,QAAQ;gBAjCJ,qBAAqB,uBAmCzB,IAAI,YACJ,QAAQ;;;+BAxBV,KAAK;4BAEL,KAAK;8BAEL,KAAK;0BAEL,KAAK;yBAEL,KAAK;6CAEL,KAAK;mCAEL,KAAK;sBAEL,KAAK;wBAEL,KAAK;;IAqBR,yBAAC;CAAA,CAxCuC,kBAAkB;;;;;;;ICFbD,2CAAe;IAsB1D,iCAAoBC,QAAyB;QAA7C,YACE,kBAAMA,QAAK,CAAC,SACb;QAZD,gBAAU,GAA8E,QAAQ,CAAC;;KAYhG;;;;IAED,0CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;gBApCF,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,QAAQ,EAAE,qDAET;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,uBAAuB,GAAA,CAAC,EAAE,CAAC;iBAClG;;;gBARQ,kBAAkB,uBA+BZ,IAAI;;;4BAnBhB,KAAK;wBAEL,KAAK;0BAEL,KAAK;sBAEL,KAAK;6BAEL,KAAK;0BAEL,KAAK;6CAEL,KAAK;mCAEL,KAAK;wBAEL,KAAK;;IAWR,8BAAC;CAAA,CA9B4C,eAAe;;;;;;;ICAjBD,yCAAe;IAexD,+BAAoBC,QAA2B;eAC7C,kBAAMA,QAAK,CAAC;KACb;;;;IAED,wCAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;gBA7BF,SAAS,SAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,qCAET;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,qBAAqB,GAAA,CAAC,EAAE,CAAC;iBAChG;;;gBATQ,oBAAoB,uBAyBd,IAAI;;;2BAbhB,KAAK;kCAEL,KAAK;wBAEL,KAAK;sBAEL,KAAK;yBAEL,KAAK;2BAEL,KAAK;;IAWR,4BAAC;CAAA,CAvB0C,eAAe;;;;;;;ICCdD,0CAAe;IAYzD,gCAAoBC,QAA2B;eAC7C,kBAAMA,QAAK,CAAC;KACb;;;;IAED,mDAAkB;;;IAAlB;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC;QAElD,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;gBA5BF,SAAS,SAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,QAAQ,EAAE,qCAET;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,sBAAsB,GAAA,CAAC,EAAE,CAAC;iBACjG;;;gBAVQ,oBAAoB,uBAuBd,IAAI;;;2BAThB,KAAK;mCAEL,KAAK;wCAGL,YAAY,SAAC,qBAAqB;;IAcrC,6BAAC;CAAA,CAtB2C,eAAe;;;;;;;ICLhBD,yCAAiB;IAJ5D;;KAyBC;;;;IAHC,wCAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACzC;;gBAxBF,SAAS,SAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,EAAE;iBACb;;;yBAIE,KAAK;0BAEL,KAAK;8BAEL,KAAK;4BAEL,KAAK;wBAEL,KAAK;4BAEL,KAAK;yBAEL,KAAK;;IAMR,4BAAC;CAAA,CArB0C,iBAAiB;;;;;;;ICcfA,2CAAe;IAmD1D,iCAAoBC,QAAyB;eAC3C,kBAAMA,QAAK,CAAC;KACb;;;;;IAED,6CAAW;;;;IAAX,UAAY,OAAsB;;YAC1B,UAAU,GAA6B,EAAE;QAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QACD,KAAK,IAAM,GAAG,IAAI,OAAO,EAAE;YACzB,IAAI,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC/B,QAAQ,GAAG;oBACT,KAAK,KAAK;wBACR,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;wBACrC,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,MAAM;oBACR;wBACE,MAAM;iBACT;gBACD,UAAU,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;aAC7C;SACF;QACD,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;KAChD;;;;IAED,gDAAc;;;IAAd;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;;;IAED,oDAAkB;;;IAAlB;QACE,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YAC3C,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;;gBA7FF,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,QAAQ,EAAE,qCAET;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,uBAAuB,GAAA,CAAC,EAAE,CAAC;iBAClG;;;gBAVQ,kBAAkB,uBA8DZ,IAAI;;;4BAjDhB,KAAK;8BAEL,KAAK;uBAEL,KAAK;2BAEL,KAAK;6BAEL,KAAK;6CAEL,KAAK;kCAEL,KAAK;wBAEL,KAAK;wBAEL,KAAK;4BAEL,KAAK;iCASL,KAAK;0BAEL,KAAK;yBAEL,KAAK;4BAEL,KAAK;6BAEL,KAAK;sBAEL,KAAK;mCAEL,KAAK;uBAEL,KAAK;wBAEL,KAAK;+BAGL,YAAY,SAAC,qBAAqB;;IAuCrC,8BAAC;CAAA,CAvF4C,eAAe;;;;;;ACpB5D;IAAA;QAES,kBAAa,GAAG,QAAQ,CAAC;KACjC;IAAD,sBAAC;CAAA;;;;;;;ICS8CD,6CAAe;IA0B5D,mCAAoBC,QAA+B;eACjD,kBAAMA,QAAK,CAAC;KACb;;;;;;IAGD,sDAAkB;;;;IAAlB;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;QAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;;QAEhD,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;gBA5CF,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,EAAE,qCAET;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,yBAAyB,GAAA,CAAC,EAAE,CAAC;iBACpG;;;gBAXQ,wBAAwB,uBAsClB,IAAI;;;4BAxBhB,KAAK;2BAEL,KAAK;6BAEL,KAAK;iCAEL,KAAK;kCAEL,KAAK;sBAEL,KAAK;uBAEL,KAAK;wBAEL,KAAK;kCAGL,YAAY,SAAC,eAAe;oCAG5B,YAAY,SAAC,iBAAiB;;IAgBjC,gCAAC;CAAA,CAtC8C,eAAe;;;;;;;ICFlBD,0CAAe;IA6BzD,gCAAoBC,QAAyB;eAC3C,kBAAMA,QAAK,CAAC;KACb;;;;IAED,yCAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;;;;IAED,4CAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;YACrD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzC;KACF;;gBAjDF,SAAS,SAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,QAAQ,EAAE,qCAET;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,sBAAsB,GAAA,CAAC,EAAE,CAAC;iBACjG;;;gBATQ,kBAAkB,uBAuCZ,IAAI;;;4BA3BhB,KAAK;8BAEL,KAAK;yBAEL,KAAK;wBAEL,KAAK;yBAEL,KAAK;6BAEL,KAAK;6CAEL,KAAK;6BAEL,KAAK;2BAEL,KAAK;mCAEL,KAAK;sBAEL,KAAK;uBAEL,KAAK;wBAEL,KAAK;;IAiBR,6BAAC;CAAA,CA3C2C,eAAe;;;;;;;ICAdD,2CAAe;IAM1D,iCAAoBC,QAAyB;eAC3C,kBAAMA,QAAK,CAAC;KACb;;;;IAED,0CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;gBApBF,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,QAAQ,EAAE,qCAET;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,uBAAuB,GAAA,CAAC,EAAE,CAAC;iBAClG;;;gBATQ,kBAAkB,uBAgBZ,IAAI;;;sBAHhB,KAAK;;IAWR,8BAAC;CAAA,CAd4C,eAAe;;;;;;;ICAhBD,0CAAe;IAYzD,gCAAoBC,QAA2B;eAC7C,kBAAMA,QAAK,CAAC;KACb;;;;IAED,yCAAQ;;;IAAR;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;gBA3BF,SAAS,SAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,QAAQ,EAAE,qCAET;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,sBAAsB,GAAA,CAAC,EAAE,CAAC;iBACjG;;;gBATQ,oBAAoB,uBAsBd,IAAI;;;wCAThB,KAAK;oCAEL,KAAK;+BAEL,KAAK;sBAEL,KAAK;;IAYR,6BAAC;CAAA,CArB2C,eAAe;;;;;;;ICAXD,8CAAe;IAoB7D,oCAAoBC,QAA0B;eAC5C,kBAAMA,QAAK,CAAC;KACb;;;;IAED,6CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;gBAlCF,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,qCAET;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,0BAA0B,GAAA,CAAC,EAAE,CAAC;iBACrG;;;gBARQ,mBAAmB,uBA6Bb,IAAI;;;6BAjBhB,KAAK;8BAEL,KAAK;sBAEL,KAAK;+BAEL,KAAK;8BAEL,KAAK;oCAEL,KAAK;uBAEL,KAAK;4BAEL,KAAK;;IAWR,iCAAC;CAAA,CA5B+C,eAAe;;;;;;;ICAlBD,2CAAe;IA0B1D,iCAAoBC,QAA0B;eAC5C,kBAAMA,QAAK,CAAC;KACb;;;;IAED,0CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;;;;IAED,6CAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;YACrD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzC;KACF;;gBA9CF,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,QAAQ,EAAE,qCAET;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,uBAAuB,GAAA,CAAC,EAAE,CAAC;iBAClG;;;gBATQ,mBAAmB,uBAoCb,IAAI;;;+BAvBhB,KAAK;8BAEL,KAAK;wBAEL,KAAK;6BAEL,KAAK;oCAEL,KAAK;uBAEL,KAAK;yBAEL,KAAK;6BAEL,KAAK;wBAEL,KAAK;8BAEL,KAAK;sBAEL,KAAK;;IAiBR,8BAAC;CAAA,CAxC4C,eAAe;;;;;;;ICARD,kDAAe;IAajE,wCAAoBC,QAA0B;QAA9C,YACE,kBAAMA,QAAK,CAAC,SACb;QANQ,WAAK,GAAG,CAAC,CAAC;;KAMlB;;;;IAED,iDAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;gBA3BF,SAAS,SAAC;oBACT,QAAQ,EAAE,4BAA4B;oBACtC,QAAQ,EAAE,qCAET;oBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,8BAA8B,GAAA,CAAC,EAAE,CAAC;iBACzG;;;gBATQ,mBAAmB,uBAuBb,IAAI;;;6BAVhB,KAAK;sBACL,KAAK;+BACL,KAAK;8BACL,KAAK;oCACL,KAAK;yBACL,KAAK;wBACL,KAAK;8BACL,KAAK;uBACL,KAAK;;IAUR,qCAAC;CAAA,CArBmD,eAAe;;;;;;ACZnE;IAiBE,0BAAoB,IAA2B;QAA3B,SAAI,GAAJ,IAAI,CAAuB;QANxC,kBAAa,GAAG,SAAS,CAAC;KAMkB;;;;IAEnD,mCAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;QAC9B,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,EAAE;YACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC9B;QACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC9C;;;;IAED,sCAAW;;;IAAX;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;;IAED,sCAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC9B;KACF;;gBA/BF,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,qCAET;iBACF;;;gBAPQ,qBAAqB;;;qBAY3B,KAAK;;IAsBR,uBAAC;CAAA;;;;;;ACpCD;IAcE,qCAAoB,IAAsB;QAAtB,SAAI,GAAJ,IAAI,CAAkB;QAHnC,kBAAa,GAAG,qBAAqB,CAAC;;KAK5C;;;;IAED,8CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/C;;;;IACD,iDAAW;;;IAAX;;KAEC;;gBApBF,SAAS,SAAC;oBACT,QAAQ,EAAE,yBAAyB;oBACnC,QAAQ,EAAE,qCAET;iBACF;;;gBAPQ,gBAAgB;;IAuBzB,kCAAC;CAAA,IAAA;;IAYC,gCAAoB,IAAsB;QAAtB,SAAI,GAAJ,IAAI,CAAkB;QAHnC,kBAAa,GAAG,gBAAgB,CAAC;;KAKvC;;;;IAED,yCAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/C;;;;IAED,4CAAW;;;IAAX;;KAEC;;gBArBF,SAAS,SAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,QAAQ,EAAE,qCAET;iBACF;;;gBA9BQ,gBAAgB;;IA+CzB,6BAAC;CAAA,IAAA;;IAYC,kCAAoB,IAAsB;QAAtB,SAAI,GAAJ,IAAI,CAAkB;QAHnC,kBAAa,GAAG,kBAAkB,CAAC;;KAKzC;;;;IAED,2CAAQ;;;IAAR;;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/C;;;;IAED,8CAAW;;;IAAX;;KAEC;;gBAtBF,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE,qCAET;iBACF;;;gBAtDQ,gBAAgB;;IAwEzB,+BAAC;CAAA,IAAA;;IAoBC,iCAAoB,IAAsB;QAAtB,SAAI,GAAJ,IAAI,CAAkB;QAXnC,kBAAa,GAAG,iBAAiB,CAAC;;QAavC,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACzC;IAXD,sBACI,2CAAM;;;;QADV;YAEE,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;SAClC;;;;;QACD,UAAW,MAAc;YACvB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACjC;;;OAHA;;;;IAUD,0CAAQ;;;IAAR;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/C;;gBAzBF,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,QAAQ,EAAE,qCAET;iBACF;;;gBA/EQ,gBAAgB;;;yBAoFtB,KAAK;;IAgBR,8BAAC;CAAA;;;;;;ACtGD;IAOE,0BAAmB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;KAAI;;gBAL9C,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,2BAA2B;iBACtC;;;gBALmB,UAAU;;IAQ9B,uBAAC;CAAA;;;;;;ACRD;IAiCE,0BAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;QAvBrC,kBAAa,GAAG,SAAS,CAAC;KAuBe;;;;IAEzC,mCAAQ;;;IAAR;QACE,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC;YACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC7C;KACF;;;;IAED,sCAAW;;;IAAX;QACE,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChD;KACF;;gBA1CF,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,2BAA2B;iBACtC;;;gBAPQ,YAAY;;;0BAYlB,YAAY,SAAC,gBAAgB;qBAG7B,KAAK;yBAEL,KAAK;8BAEL,KAAK;4BAEL,KAAK;8BAEL,KAAK;0BAEL,KAAK;mCAEL,KAAK;gCAEL,KAAK;;IAkBR,uBAAC;CAAA;;;;;;AChDD;IA4BE,6BACU,GAAiB,EACb,QAAuB,EACvB,iBAAyC,EACzC,kBAA2C,EAC3C,WAA6B;QAJjC,QAAG,GAAH,GAAG,CAAc;QAH3B,SAAI,GAAG,WAAW,CAAC;;QAUjB,IAAI,iBAAiB,KAAK,IAAI,EAAE;YAC9B,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;SAC/B;aAAM,IAAI,kBAAkB,KAAK,IAAI,EAAE;YACtC,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;SAChC;aAAM,IAAI,QAAQ,KAAK,IAAI,EAAE;YAC5B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;SACtB;aAAM,IAAI,WAAW,KAAK,IAAI,EAAE;YAC/B,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;SACzB;KACF;;;;;IAED,yCAAW;;;;IAAX,UAAY,OAAsB;;YAC5B,mBAAoC;;YACpC,uBAA+B;;YAC/B,sBAAgC;QAEpC,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,aAAa,EAAE,CAAC;QAClE,uBAAuB,GAAG,mBAAmB,GAAG,mBAAmB,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC;QAE5F,IAAI,IAAI,CAAC,IAAI,KAAK,uBAAuB,EAAE;YACzC,sBAAsB,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;SAC3C;aAAM;YACL,sBAAsB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,uBAAuB,CAAC,CAAC;SAC/F;QAED,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa;YAC7B,KAAK,gBAAgB;gBACnB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;gBAC1D,MAAM;YACR,KAAK,iBAAiB,CAAC;YACvB,KAAK,MAAM;gBACT,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;gBACrD,MAAM;YACR,KAAK,SAAS;gBACZ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;gBACvD,MAAM;SACT;KACF;;gBA7DF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,gDAET;iBACF;;;gBAfQ,YAAY;gBAOZ,aAAa,uBAqBjB,QAAQ;gBA1BX,sBAAsB,uBA2BnB,QAAQ;gBAxBX,uBAAuB,uBAyBpB,QAAQ;gBAtBJ,gBAAgB,uBAuBpB,QAAQ;;;oBAZV,KAAK;oBAEL,KAAK;uBAEL,KAAK;;IAiDR,0BAAC;CAAA,IAAA;;IAgBC,wCACU,GAAiB,EACb,kBAA+C,EAC/C,eAAyC;QAF7C,QAAG,GAAH,GAAG,CAAc;QAH3B,SAAI,GAAG,WAAW,CAAC;;QAQjB,IAAI,CAAC,CAAC,kBAAkB,EAAE;YACxB,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;SAChC;aAAM,IAAI,CAAC,CAAC,eAAe,EAAE;YAC5B,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;SAC7B;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;SACvF;KACF;;;;;IAED,oDAAW;;;;IAAX,UAAY,OAAsB;;YAC5B,mBAAoC;;YACpC,uBAA+B;;YAC/B,sBAAyC;;QAI7C,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,aAAa,EAAE,CAAC;QAClE,uBAAuB,GAAG,mBAAmB,GAAG,mBAAmB,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC;QAE5F,IAAI,IAAI,CAAC,IAAI,KAAK,uBAAuB,EAAE;YACzC,sBAAsB,GAAG,IAAI,CAAC,WAAW,CAAC;SAC3C;aAAM;YACL,sBAAsB,GAAG,EAAE,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,OAAO,CACtB,UAAS,UAAsB;gBAC7B,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,EAAE,uBAAuB,CAAC,CAAC,CAAC;aAC7F,CAAC,IAAI,CAAC,IAAI,CAAC,CACb,CAAC;SACH;QACD,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa;YAC7B,KAAK,qBAAqB;gBACxB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;gBAC1D,MAAM;YACR,KAAK,kBAAkB;gBACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;gBAC5D,MAAM;YACR;gBACE,MAAM,IAAI,KAAK,CAAC,sDAAsD,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAErG;KACF;;gBA5DF,SAAS,SAAC;oBACT,QAAQ,EAAE,4BAA4B;oBACtC,QAAQ,EAAE,4DAET;iBACF;;;gBA/EQ,YAAY;gBAGnB,2BAA2B,uBAuFxB,QAAQ;gBAtFX,wBAAwB,uBAuFrB,QAAQ;;;8BARV,KAAK;uBAEL,KAAK;;IAkDR,qCAAC;CAAA;;;;;;ACzID;IA6BE,wBAAwB,WAA6B,EAAc,SAA+B;QAf3F,kBAAa,GAAG,OAAO,CAAC;;QAiB7B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,WAAW,GAAG,WAAW,GAAG,SAAS,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACtE;KACF;;;;IAED,+BAAM;;;IAAN;;QAEE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;KAC9B;;;;IAED,iCAAQ;;;IAAR;;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC5C;;gBAzCF,SAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,qCAET;iBACF;;;gBARQ,gBAAgB,uBA2BV,QAAQ;gBA1Bd,oBAAoB,uBA0B6B,QAAQ;;;2BAb/D,KAAK;uBAEL,KAAK;wBAEL,KAAK;yBAEL,KAAK;uBAEL,KAAK;yBAEL,KAAK;;IAqBR,qBAAC;CAAA;;;;;;AC/CD;IAyBE,8BAA4B,IAAoB;QAApB,SAAI,GAAJ,IAAI,CAAgB;QAdzC,kBAAa,GAAG,cAAc,CAAC;KAcc;;;;;;;;;;;;IAOpD,qCAAM;;;;;;IAAN;QACE,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE;;YAEnB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;KACpB;;;;IAED,iDAAkB;;;IAAlB;;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;KACpB;;;;;IAED,0CAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QACD,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;SACzD;;KAEF;;;;IAED,0CAAW;;;IAAX;;QAEE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KACnC;;gBAxDF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,qCAET;iBACF;;;gBAPQ,cAAc,uBAuBR,IAAI;;;uBAXhB,KAAK;yBAEL,KAAK;8BAEL,KAAK;yBAEL,KAAK;+BAEL,KAAK;;IAuCR,2BAAC;CAAA;;;;;;AC7DD;IAiCE,4BAAgC,IAAoB;QAApB,SAAI,GAAJ,IAAI,CAAgB;QArB7C,kBAAa,GAAG,YAAY,CAAC;QAsBlC,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;SACrE;;KAEF;;;;IAED,qCAAQ;;;IAAR;;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC3C;;;;;IAED,wCAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QACD,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC;SACrD;QACD,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;YACtB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAAC;SAC3D;QACD,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;YACtB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAAC;SAC3D;QACD,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC;SACvD;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;SAC7D;QACD,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC;SACrD;QACD,IAAI,OAAO,CAAC,WAAW,CAAC,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,CAAC;SAC/D;QACD,IAAI,OAAO,CAAC,cAAc,CAAC,EAAE;YAC3B,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,CAAC;SACrE;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;;KAEpB;;gBAxEF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,gDAET;iBACF;;;gBAPQ,cAAc,uBA+BR,QAAQ;;;uBAnBpB,KAAK;0BAEL,KAAK;0BAEL,KAAK;wBAEL,KAAK;iCAEL,KAAK;2BAEL,KAAK;uBAEL,KAAK;4BAEL,KAAK;+BAEL,KAAK;;IA+CR,yBAAC;CAAA;;;;;;AC7ED;IA8BE,8BACc,SAAyB,EACzB,eAAqC,EACrC,aAAiC;QAE7C,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;SACvE;QACD,IAAI,CAAC,CAAC,aAAa,EAAE;YACnB,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;SAC3B;aAAM,IAAI,CAAC,CAAC,eAAe,EAAE;YAC5B,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;SACvB;;KAEF;;;;IAED,uCAAQ;;;IAAR;;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvC,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa;YAC7B,KAAK,OAAO;gBACV,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;gBAE5C,MAAM;YACR,KAAK,YAAY;gBACf,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC5C,MAAM;YACR,KAAK,cAAc;gBACjB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;;gBAEjC,MAAM;YACR;gBACE,MAAM,IAAI,KAAK,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SAEtD;KACF;;;;;IAED,0CAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QACD,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC;SACvD;QACD,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;YACtB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAAC;SAC3D;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;SAC7D;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;SAC7D;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,EAAE;YACzB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,CAAC;SACjE;QACD,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;;KAEpB;;gBAvFF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,kDAET;iBACF;;;gBATQ,cAAc,uBA6BlB,QAAQ;gBA5BJ,oBAAoB,uBA6BxB,QAAQ;gBA5BJ,kBAAkB,uBA6BtB,QAAQ;;;wBAhBV,KAAK;0BAEL,KAAK;2BAEL,KAAK;2BAEL,KAAK;6BAEL,KAAK;wBAEL,KAAK;;IAmER,2BAAC;CAAA;;;;;;AC9FD;IAgDE,4BAA4B,IAAoB;QAApB,SAAI,GAAJ,IAAI,CAAgB;KAAI;;;;IAEpD,qCAAQ;;;IAAR;;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC5C;;;;;IAED,wCAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QACD,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;YACtB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAAC;SAC3D;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;SAC7D;QACD,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC;SACvD;QACD,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5C;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;;KAEpB;;gBAvEF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,gDAET;iBACF;;;gBAPQ,cAAc,uBA8CR,IAAI;;;yBAnChB,KAAK;+BAEL,KAAK;+BAEL,KAAK;+BAEL,KAAK;wBAEL,KAAK;8BAEL,KAAK;sBAEL,KAAK;yBAEL,KAAK;+BAEL,KAAK;0BAEL,KAAK;wBAEL,KAAK;8BAEL,KAAK;iCAEL,KAAK;2BAEL,KAAK;uBAEL,KAAK;0BAEL,KAAK;sBAEL,KAAK;;IA+BR,yBAAC;CAAA;;;;;;AC5ED;IAoBE,4BACc,SAAyB,EACzB,eAAqC,EACrC,aAAiC;QAE7C,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;SACvE;QACD,IAAI,CAAC,CAAC,aAAa,EAAE;YACnB,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;SAC3B;aAAM,IAAI,CAAC,CAAC,eAAe,EAAE;YAC5B,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;SACvB;;KAEF;;;;IAED,qCAAQ;;;IAAR;;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa;YAC7B,KAAK,OAAO;gBACV,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;gBAE1C,MAAM;YACR,KAAK,YAAY;gBACf,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1C,MAAM;YACR,KAAK,cAAc;gBACjB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;;gBAE/B,MAAM;YACR;gBACE,MAAM,IAAI,KAAK,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SAEtD;KACF;;;;;IAED,wCAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QACD,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;;KAEpB;;gBA9DF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,gDAET;iBACF;;;gBATQ,cAAc,uBAmBlB,QAAQ;gBAlBJ,oBAAoB,uBAmBxB,QAAQ;gBAlBJ,kBAAkB,uBAmBtB,QAAQ;;;wBANV,KAAK;;IAoDR,yBAAC;CAAA;;;;;;ACrED;IAuBE,iCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;KAAI;;;;IAEzC,0CAAQ;;;IAAR;QAAA,iBAIC;;QAFC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;KAC7D;;;;IAED,6CAAW;;;IAAX;QAAA,iBAGC;;QADC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;KAChE;;gBA9BF,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;8BAQlB,KAAK;qCAEL,KAAK;yBAEL,KAAK;gCAEL,KAAK;uBAEL,KAAK;8BAEL,KAAK;;IAeR,8BAAC;CAAA;;;;;;ACnCD;IAkBE,0BAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;QAN9B,kBAAa,GAAG,SAAS,CAAC;KAMQ;;;;IAEzC,mCAAQ;;;IAAR;QACE,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC;YACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC7C;KACF;;;;IAED,sCAAW;;;IAAX;QACE,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChD;KACF;;gBA3BF,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,qCAET;iBACF;;;gBARQ,YAAY;;;0BAalB,YAAY,SAAC,gBAAgB;;IAkBhC,uBAAC;CAAA;;;;;;ACjCD;IAeE,qCAAoB,GAAiB,EAAU,OAAmB;QAA9C,QAAG,GAAH,GAAG,CAAc;QAAU,YAAO,GAAP,OAAO,CAAY;QAN3D,kBAAa,GAAG,SAAS,CAAC;KAMqC;;;;IAEtE,8CAAQ;;;IAAR;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;;QAEzC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;;;IAED,iDAAW;;;IAAX;;QAEE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAChD;;gBAvBF,SAAS,SAAC;oBACT,QAAQ,EAAE,yBAAyB;oBACnC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;gBAFD,UAAU;;;8BAY3B,KAAK;;IAgBR,kCAAC;CAAA;;;;;;AC5BD;IAwBE,oCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;;KAEpC;;;;IAED,6CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;;;IAED,gDAAW;;;IAAX;;QAEE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAChD;;gBAhCF,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,qCAET;iBACF;;;gBAPQ,YAAY;;;4BAWlB,KAAK;wBAEL,KAAK;8BAEL,KAAK;2BAEL,KAAK;uBAEL,KAAK;;IAgBR,iCAAC;CAAA;;;;;;ACrCD;IAgBE,uCAAoB,GAAiB,EAAU,OAAmB;QAA9C,QAAG,GAAH,GAAG,CAAc;QAAU,YAAO,GAAP,OAAO,CAAY;KAAI;;;;IAEtE,gDAAQ;;;IAAR;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;;QAEzC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;;;IAED,mDAAW;;;IAAX;;QAEE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAChD;;gBAxBF,SAAS,SAAC;oBACT,QAAQ,EAAE,2BAA2B;oBACrC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;gBAFD,UAAU;;;mCAU3B,KAAK;6BAEL,KAAK;;IAiBR,oCAAC;CAAA;;;;;;AC7BD;IA6BE,qCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;;KAEpC;;;;IAED,8CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;;;IAED,iDAAW;;;IAAX;;QAEE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAChD;;gBArCF,SAAS,SAAC;oBACT,QAAQ,EAAE,yBAAyB;oBACnC,QAAQ,EAAE,qCAET;iBACF;;;gBAPQ,YAAY;;;4BAUlB,KAAK;gCAEL,KAAK;8BAEL,KAAK;wBAEL,KAAK;yBAEL,KAAK;yBAEL,KAAK;2BAEL,KAAK;uBAEL,KAAK;;IAgBR,kCAAC;CAAA;;;;;;AC1CD;IAwBE,gCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;;KAEpC;;;;IAED,yCAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;;;IAED,4CAAW;;;IAAX;;QAEE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAChD;;gBAhCF,SAAS,SAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,QAAQ,EAAE,qCAET;iBACF;;;gBAPQ,YAAY;;;4BAWlB,KAAK;wBAEL,KAAK;2BAEL,KAAK;2BAEL,KAAK;2BAEL,KAAK;;IAgBR,6BAAC;CAAA;;;;;;ACrCD;IAeE,mCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;;KAEpC;;;;IAED,4CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;;;IAED,+CAAW;;;IAAX;;QAEE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAChD;;gBAvBF,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,EAAE,qCAET;iBACF;;;gBAPQ,YAAY;;;wBAUlB,KAAK;;IAgBR,gCAAC;CAAA;;;;;;AC5BD;IA0BE,8BAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;;KAEpC;;;;IAED,uCAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;;;IAED,0CAAW;;;IAAX;;QAEE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAChD;;gBAlCF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,qCAET;iBACF;;;gBAPQ,YAAY;;;2BAWlB,KAAK;8BAEL,KAAK;+BAEL,KAAK;iCAEL,KAAK;kCAEL,KAAK;wBAEL,KAAK;;IAgBR,2BAAC;CAAA;;;;;;ACvCD;IAsBE,oCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;;KAEpC;;;;IAED,6CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;;;IAED,gDAAW;;;IAAX;;QAEE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAChD;;gBA9BF,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,qCAET;iBACF;;;gBAPQ,YAAY;;;4BAWlB,KAAK;2BAEL,KAAK;gCAEL,KAAK;gCAEL,KAAK;;IAgBR,iCAAC;CAAA;;;;;;ACnCD;IAsBE,sCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;;KAEpC;;;;IAED,+CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;;;;IAED,kDAAW;;;IAAX;;QAEE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAChD;;gBA9BF,SAAS,SAAC;oBACT,QAAQ,EAAE,0BAA0B;oBACpC,QAAQ,EAAE,qCAET;iBACF;;;gBAPQ,YAAY;;;4BAWlB,KAAK;wBAEL,KAAK;2BAEL,KAAK;yBAEL,KAAK;;IAgBR,mCAAC;CAAA;;;;;;;IC1BuCD,sCAAe;IAcrD;QAAA,YACE,iBAAO,SAER;QADC,KAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,KAAI,CAAC,CAAC;;KACtC;;gBAtBF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,kBAAkB,GAAA,CAAC,EAAE,CAAC;iBAC7F;;;;+BAIE,KAAK;+BAIL,KAAK;4BAEL,KAAK;yBAEL,KAAK;;IAOR,yBAAC;CAAA,CAlBuC,eAAe;;;;;;ACTvD;IAWE,qCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;KAAI;;;;IAEzC,8CAAQ;;;IAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;KACjE;;;;IAED,iDAAW;;;IAAX;QAAA,iBAEC;QADC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;KACpE;;gBAhBF,SAAS,SAAC;oBACT,QAAQ,EAAE,yBAAyB;oBACnC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;IAmBrB,kCAAC;CAAA;;;;;;ACrBD;IAgBE,6CAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;KAAI;;;;IAEzC,sDAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;IAED,yDAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;gBArBF,SAAS,SAAC;oBACT,QAAQ,EAAE,iCAAiC;oBAC3C,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;2BASlB,KAAK;wBAEL,KAAK;;IAaR,0CAAC;CAAA;;;;;;AC1BD;IAkBE,yCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;KAAI;;;;IAEzC,kDAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;IAED,qDAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;gBAvBF,SAAS,SAAC;oBACT,QAAQ,EAAE,6BAA6B;oBACvC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;qCASlB,KAAK;6BAEL,KAAK;yBAEL,KAAK;;IAaR,sCAAC;CAAA;;;;;;AC5BD;IAkBE,qCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;KAAI;;;;IAEzC,8CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;IAED,iDAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;gBAvBF,SAAS,SAAC;oBACT,QAAQ,EAAE,yBAAyB;oBACnC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;4BASlB,KAAK;4BAEL,KAAK;kCAEL,KAAK;;IAaR,kCAAC;CAAA;;;;;;AC5BD;IAgBE,qCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;KAAI;;;;IAEzC,8CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;IAED,iDAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;gBArBF,SAAS,SAAC;oBACT,QAAQ,EAAE,yBAAyB;oBACnC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;4BASlB,KAAK;0BAEL,KAAK;;IAaR,kCAAC;CAAA;;;;;;AC1BD;IAgBE,wCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;KAAI;;;;IAEzC,iDAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;IAED,oDAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;gBArBF,SAAS,SAAC;oBACT,QAAQ,EAAE,4BAA4B;oBACtC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;4BASlB,KAAK;2BAEL,KAAK;;IAaR,qCAAC;CAAA;;;;;;AC1BD;IAgBE,+CAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;KAAI;;;;IAEzC,wDAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;IAED,2DAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;gBArBF,SAAS,SAAC;oBACT,QAAQ,EAAE,mCAAmC;oBAC7C,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;4BASlB,KAAK;2BAEL,KAAK;;IAaR,4CAAC;CAAA;;;;;;AC1BD;IAoBE,sCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;KAAI;;;;IAEzC,+CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;IAED,kDAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;gBAzBF,SAAS,SAAC;oBACT,QAAQ,EAAE,0BAA0B;oBACpC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;4BASlB,KAAK;4BAEL,KAAK;2BAEL,KAAK;sBAEL,KAAK;;IAaR,mCAAC;CAAA;;;;;;AC9BD;IAiBE,4CAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;KAAI;;;;IAEzC,qDAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;IAED,wDAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;gBAtBF,SAAS,SAAC;oBACT,QAAQ,EAAE,gCAAgC;oBAC1C,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;2BAQlB,KAAK;0BAEL,KAAK;4BAEL,KAAK;;IAaR,yCAAC;CAAA;;;;;;AC3BD;IAgBE,uCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;KAAI;;;;IAEzC,gDAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;IAED,mDAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;gBArBF,SAAS,SAAC;oBACT,QAAQ,EAAE,2BAA2B;oBACrC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;2BASlB,KAAK;sCAEL,KAAK;;IAaR,oCAAC;CAAA;;;;;;AC1BD;IAqDE,kCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;QAVrC,aAAQ,GAAG,IAAI,YAAY,EAA6B,CAAC;QAEzD,mBAAc,GAAG,IAAI,YAAY,EAA6B,CAAC;QAE/D,cAAS,GAAG,IAAI,YAAY,EAA6B,CAAC;QAE1D,gBAAW,GAAG,IAAI,YAAY,EAA6B,CAAC;QAE5D,qBAAgB,GAAG,IAAI,YAAY,EAA6B,CAAC;KAExB;;;;IAEzC,2CAAQ;;;IAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,KAAgC,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC5F,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,KAAgC,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QACzG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,KAAgC,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC9F,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,EAAE,UAAC,KAAgC,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAClG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,KAAgC,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC5G,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;IAED,8CAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;gBA/DF,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;iCASlB,KAAK;2BAEL,KAAK;yBAEL,KAAK;gCAEL,KAAK;uBAEL,KAAK;4BAEL,KAAK;4BAEL,KAAK;kCAEL,KAAK;wBAEL,KAAK;mCAEL,KAAK;+BAEL,KAAK;4BAEL,KAAK;oCAEL,KAAK;2BAEL,KAAK;wBAEL,KAAK;2BAGL,MAAM;iCAEN,MAAM;4BAEN,MAAM;8BAEN,MAAM;mCAEN,MAAM;;IAkBT,+BAAC;CAAA;;;;;;ACpED;IAgDE,oCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;QANrC,aAAQ,GAAG,IAAI,YAAY,EAA4B,CAAC;QAExD,aAAQ,GAAG,IAAI,YAAY,EAA4B,CAAC;QAExD,qBAAgB,GAAG,IAAI,YAAY,EAA4B,CAAC;KAEvB;;;;IAEzC,6CAAQ;;;IAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAE7C,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,KAA+B,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC3F,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,KAA+B,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC3F,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,KAA+B,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAE3G,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;IAED,gDAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;gBAjDF,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;+BASlB,KAAK;4BAEL,KAAK;yBAEL,KAAK;wBAEL,KAAK;kCAEL,KAAK;kCAEL,KAAK;wBAEL,KAAK;2BAEL,KAAK;yBAEL,KAAK;wBAEL,KAAK;2BAGL,MAAM;2BAEN,MAAM;mCAEN,MAAM;;IAkBT,iCAAC;CAAA;;;;;;AC/DD;IAqCE,oCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;QAVrC,gBAAW,GAAG,IAAI,YAAY,EAA4B,CAAC;QAE3D,kBAAa,GAAG,IAAI,YAAY,EAA4B,CAAC;QAE7D,aAAQ,GAAG,IAAI,YAAY,EAA4B,CAAC;QAExD,mBAAc,GAAG,IAAI,YAAY,EAA4B,CAAC;QAE9D,qBAAgB,GAAG,IAAI,YAAY,EAA4B,CAAC;KAEvB;;;;IAEzC,6CAAQ;;;IAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,KAA+B,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC3F,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,KAA+B,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QACxG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,KAA+B,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC3G,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,EAAE,UAAC,KAA+B,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QACjG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,KAA+B,IAAK,OAAA,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QACrG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;IAED,gDAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;gBA/CF,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;4BASlB,KAAK;kCAEL,KAAK;iCAEL,KAAK;wBAEL,KAAK;2BAEL,KAAK;wBAEL,KAAK;yBAEL,KAAK;8BAGL,MAAM;gCAEN,MAAM;2BAEN,MAAM;iCAEN,MAAM;mCAEN,MAAM;;IAkBT,iCAAC;CAAA;;;;;;ACpDD;IA6BE,uCAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;QACnC,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,EAA+B,CAAC;QAChE,IAAI,CAAC,gBAAgB,GAAG,IAAI,YAAY,EAA+B,CAAC;QACxE,IAAI,CAAC,cAAc,GAAG,IAAI,YAAY,EAA+B,CAAC;QACtE,IAAI,CAAC,gBAAgB,GAAG,IAAI,YAAY,EAA+B,CAAC;QACxE,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,EAA+B,CAAC;KACtE;;;;IAED,gDAAQ;;;IAAR;QAAA,iBAUC;QATC,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAEhD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,KAAkC,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC9F,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,KAAkC,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC9G,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,UAAC,KAAkC,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC1G,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,KAAkC,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAC9G,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,KAAkC,IAAK,OAAA,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QAExG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjD;;;;IAED,mDAAW;;;IAAX;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;;gBA/CF,SAAS,SAAC;oBACT,QAAQ,EAAE,2BAA2B;oBACrC,QAAQ,EAAE,EAAE;iBACb;;;gBALQ,YAAY;;;2BASlB,KAAK;yBAEL,KAAK;+BAEL,KAAK;2BAGL,MAAM;mCAEN,MAAM;iCAEN,MAAM;mCAEN,MAAM;gCAEN,MAAM;;IA0BT,oCAAC;CAAA;;;;;;ACpDD;IAWE,8BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;KAAI;;;;IAE9C,uCAAQ;;;IAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;KACvC;;gBAbF,SAAS,SAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,QAAQ,EAAE,2BAA2B;iBACtC;;;gBANmB,UAAU;;IAiB9B,2BAAC;CAAA;;;;;;ACjBD;IAeE,+BAA4BE,SAAuB;QAAvB,WAAM,GAANA,SAAM,CAAiB;KAAI;;;;;;IAGvD,+CAAe;;;;IAAf;QACE,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,QAAQ,GAAA,CAAC,CAAC;;YAE3D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACrD;KACF;;gBAnBF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,2BAA2B;iBACtC;;;gBANQ,eAAe,uBAaT,IAAI;;;+BAHhB,eAAe,SAAC,oBAAoB;;IAavC,4BAAC;CAAA;;;;;;;ICuHK,UAAU,GAAG;IACjB,YAAY;IAEZ,aAAa;IACb,kBAAkB;IAElB,mBAAmB;IACnB,mBAAmB;IACnB,kBAAkB;IAClB,oBAAoB;IACpB,wBAAwB;IAExB,kBAAkB;IAClB,uBAAuB;IACvB,sBAAsB;IACtB,qBAAqB;IACrB,kBAAkB;IAClB,yBAAyB;IACzB,sBAAsB;IACtB,uBAAuB;IACvB,uBAAuB;IACvB,sBAAsB;IACtB,0BAA0B;IAC1B,uBAAuB;IACvB,8BAA8B;IAC9B,qBAAqB;IACrB,gBAAgB;IAChB,2BAA2B;IAC3B,sBAAsB;IACtB,wBAAwB;IACxB,uBAAuB;IACvB,mBAAmB;IACnB,8BAA8B;IAE9B,cAAc;IACd,oBAAoB;IACpB,kBAAkB;IAClB,kBAAkB;IAClB,oBAAoB;IACpB,kBAAkB;IAElB,uBAAuB;IACvB,gBAAgB;IAChB,2BAA2B;IAC3B,0BAA0B;IAC1B,6BAA6B;IAC7B,2BAA2B;IAC3B,sBAAsB;IACtB,yBAAyB;IACzB,oBAAoB;IACpB,0BAA0B;IAC1B,4BAA4B;IAE5B,kBAAkB;IAClB,iBAAiB;IACjB,qBAAqB;IAErB,2BAA2B;IAC3B,mCAAmC;IACnC,+BAA+B;IAC/B,2BAA2B;IAC3B,2BAA2B;IAC3B,8BAA8B;IAC9B,qCAAqC;IACrC,4BAA4B;IAC5B,kCAAkC;IAClC,6BAA6B;IAC7B,wBAAwB;IACxB,0BAA0B;IAC1B,0BAA0B;IAC1B,6BAA6B;IAE7B,gBAAgB;IAChB,gBAAgB;IAChB,oBAAoB;IACpB,qBAAqB;CACtB;AAED;IAAA;KAKuC;;gBALtC,QAAQ,SAAC;oBACR,YAAY,EAAE,UAAU;oBACxB,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,UAAU;iBACpB;;IACqC,8BAAC;CAAA;;;;;;;;;"}
--- a/node_modules/ngx-openlayers/lib/layers/layervector.component.d.ts
+++ b/node_modules/ngx-openlayers/lib/layers/layervector.component.d.ts
@@ -1,12 +1,15 @@
 /// <reference types="openlayers" />
 import { OnDestroy, OnInit, OnChanges, SimpleChanges } from '@angular/core';
-import { source } from 'openlayers';
+import { source, style, StyleFunction } from 'openlayers';
 import { MapComponent } from '../map.component';
 import { LayerComponent } from './layer.component';
 import { LayerGroupComponent } from './layergroup.component';
 export declare class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {
     source: source.Vector;
     renderBuffer: number;
+    style: style.Style | style.Style[] | StyleFunction;
+    updateWhileAnimating: boolean;
+    updateWhileInteracting: boolean;
     constructor(map: MapComponent, group?: LayerGroupComponent);
     ngOnInit(): void;
     ngOnChanges(changes: SimpleChanges): void;
--- a/node_modules/ngx-openlayers/ngx-openlayers.metadata.json
+++ b/node_modules/ngx-openlayers/ngx-openlayers.metadata.json
@@ -1 +1 @@
-{"__symbolic":"module","version":4,"metadata":{"MapComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"aol-map","template":"\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\n    <ng-content></ng-content>\n  "}]}],"members":{"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"height":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"pixelRatio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"keyboardEventTarget":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"loadTilesWhileAnimating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"loadTilesWhileInteracting":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"logo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"renderer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"onClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":41,"character":3}}]}],"onDblClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":43,"character":3}}]}],"onMoveEnd":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":45,"character":3}}]}],"onPointerDrag":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":47,"character":3}}]}],"onPointerMove":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":49,"character":3}}]}],"onPostCompose":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":51,"character":3}}]}],"onPostRender":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":53,"character":3}}]}],"onPreCompose":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":55,"character":3}}]}],"onPropertyChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":57,"character":3}}]}],"onSingleClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":59,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":66,"character":28}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"ViewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-view","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"constrainRotation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"enableRotation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"extent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"maxResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"minResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"maxZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"minZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"resolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"resolutions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"rotation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"zoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"zoomFactor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"center":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":3}}]}],"zoomAnimation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":3}}]}],"onChangeZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":46,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"GraticuleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-graticule","template":"<ng-content></ng-content>"}]}],"members":{"strokeStyle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"showLabels":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"lonLabelPosition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"latLabelPosition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnChanges":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}]}},"LayerGroupComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵa"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-layer-group","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"SkipSelf","line":16,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":17,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"LayerImageComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵa"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-layer-image","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"opacity":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"visible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"extent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"minResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"maxResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"zIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":28,"character":34}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"LayerTileComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵa"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-layer-tile","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"preload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"useInterimTilesOnError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":20,"character":34}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"LayerVectorComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵa"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-layer-vector","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"renderBuffer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":18,"character":34}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"LayerVectorTileComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵa"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-layer-vectortile","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"renderBuffer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"renderMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"renderOrder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"style":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"updateWhileAnimating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"updateWhileInteracting":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"visible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":29,"character":34}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"SourceOsmComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"SourceXYZComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"aol-source-osm","template":"\n    <div class=\"aol-source-osm\"></div>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceOsmComponent"}}]}]}],"members":{"attributions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"cacheSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"maxZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"opaque":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"reprojectionErrorThreshold":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"tileLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":37,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":38,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":40,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":41,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"LayerTileComponent"},{"__symbolic":"reference","name":"SourceRasterComponent"}]}],"ngAfterContentInit":[{"__symbolic":"method"}]}},"SourceBingmapsComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-bingmaps","template":"\n    <div class=\"aol-source-bingmaps\"></div>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceBingmapsComponent"}}]}]}],"members":{"cacheSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"hidpi":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"culture":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"key":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"imagerySet":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"maxZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"reprojectionErrorThreshold":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"tileLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":34,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerTileComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"SourceClusterComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-source-cluster","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceClusterComponent"}}]}]}],"members":{"distance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"geometryFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"sourceVectorComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":21,"character":3},"arguments":[{"__symbolic":"reference","name":"SourceVectorComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":25,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerVectorComponent"}]}],"ngAfterContentInit":[{"__symbolic":"method"}]}},"SourceVectorComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-vector","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceVectorComponent"}}]}]}],"members":{"overlaps":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"useSpatialIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"format":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"strategy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":27,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerVectorComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"SourceXYZComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":17,"character":1},"arguments":[{"selector":"aol-source-xyz","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceXYZComponent"}}]}]}],"members":{"cacheSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"opaque":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"reprojectionErrorThreshold":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"minZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"maxZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"tileGrid":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":3}}]}],"tileLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":3}}]}],"tilePixelRatio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":44,"character":3}}]}],"tileSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":3}}]}],"tileUrlFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":48,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":50,"character":3}}]}],"urls":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":52,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":54,"character":3}}]}],"tileGridXYZ":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":57,"character":3},"arguments":[{"__symbolic":"reference","name":"TileGridComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":61,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":62,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":64,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":65,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"LayerTileComponent"},{"__symbolic":"reference","name":"SourceRasterComponent"}]}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"SourceVectorTileComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"aol-source-vectortile","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceVectorTileComponent"}}]}]}],"members":{"cacheSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"overlaps":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"tilePixelRatio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"tileUrlFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"urls":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"formatComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":33,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵc"}]}]}],"tileGridComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":36,"character":3},"arguments":[{"__symbolic":"reference","name":"TileGridComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":40,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerVectorTileComponent"}]}],"ngAfterContentInit":[{"__symbolic":"method"}]}},"SourceTileWMSComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-tilewms","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceTileWMSComponent"}}]}]}],"members":{"cacheSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"gutter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"hidpi":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"params":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"reprojectionErrorThreshold":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"serverType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"tileGrid":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"tileLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"urls":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":41,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerTileComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"SourceTileWMTSComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":15,"character":1},"arguments":[{"selector":"aol-source-tilewmts","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceTileWMTSComponent"}}]}]}],"members":{"cacheSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"logo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"tileGrid":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"reprojectionErrorThreshold":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"requestEncoding":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"layer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"style":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":3}}]}],"tileClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":3}}]}],"tilePixelRatio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":3}}]}],"version":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":53,"character":3}}]}],"format":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":3}}]}],"matrixSet":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":3}}]}],"dimensions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":59,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":3}}]}],"tileLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":3}}]}],"urls":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":67,"character":3}}]}],"tileGridWMTS":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":70,"character":3},"arguments":[{"__symbolic":"reference","name":"TileGridWMTSComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":73,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerTileComponent"}]}],"ngOnChanges":[{"__symbolic":"method"}],"setLayerSource":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}]}},"SourceTileJSONComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-tilejson","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceTileJSONComponent"}}]}]}],"members":{"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":18,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerTileComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"SourceGeoJSONComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-geojson","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceGeoJSONComponent"}}]}]}],"members":{"defaultDataProjection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"featureProjection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"geometryName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":24,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerVectorComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"SourceImageStaticComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-imagestatic","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceImageStaticComponent"}}]}]}],"members":{"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"imageExtent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"attributions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"imageLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"logo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"imageSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":32,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerImageComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"SourceImageWMSComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-imagewms","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceImageWMSComponent"}}]}]}],"members":{"attributions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"hidpi":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"serverType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"imageLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"logo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"params":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"ratio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"resolutions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":38,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerImageComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"SourceRasterComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-source-raster","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceRasterComponent"}}]}]}],"members":{"operation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"threads":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"lib":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"operationType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"beforeOperations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":30,"character":3}}]}],"afterOperations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":32,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":37,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerImageComponent"}]}],"ngAfterContentInit":[{"__symbolic":"method"}]}},"SourceImageArcGISRestComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-imagearcgisrest","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceImageArcGISRestComponent"}}]}]}],"members":{"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"attributions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"imageLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"params":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"ratio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"resolutions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"logo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":25,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerImageComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"FeatureComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-feature","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"SourceVectorComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"GeometryLinestringComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-geometry-linestring","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FeatureComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"GeometryPointComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":27,"character":1},"arguments":[{"selector":"aol-geometry-point","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FeatureComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"GeometryPolygonComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":51,"character":1},"arguments":[{"selector":"aol-geometry-polygon","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FeatureComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"GeometryCircleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":76,"character":1},"arguments":[{"selector":"aol-geometry-circle","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"radius":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":86,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FeatureComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"CoordinateComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":12,"character":1},"arguments":[{"selector":"aol-coordinate","template":"\n    <div class=\"aol-coordinate\"></div>\n  "}]}],"members":{"x":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"y":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"srid":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":30,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":31,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":32,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":33,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"ViewComponent"},{"__symbolic":"reference","name":"GeometryPointComponent"},{"__symbolic":"reference","name":"GeometryCircleComponent"},{"__symbolic":"reference","name":"OverlayComponent"}]}],"ngOnChanges":[{"__symbolic":"method"}]}},"CollectionCoordinatesComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":76,"character":1},"arguments":[{"selector":"aol-collection-coordinates","template":"\n    <div class=\"aol-collection-coordinates\"></div>\n  "}]}],"members":{"coordinates":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":85,"character":3}}]}],"srid":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":87,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":92,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":93,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"GeometryLinestringComponent"},{"__symbolic":"reference","name":"GeometryPolygonComponent"}]}],"ngOnChanges":[{"__symbolic":"method"}]}},"StyleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-style","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"geometry":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"fill":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"image":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"stroke":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"text":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"zIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":29,"character":15}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":29,"character":58}}]],"parameters":[{"__symbolic":"reference","name":"FeatureComponent"},{"__symbolic":"reference","name":"LayerVectorComponent"}]}],"update":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}},"StyleCircleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-style-circle","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"fill":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"radius":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"snapToPixel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"stroke":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"atlasManager":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":25,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"StyleComponent"}]}],"update":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"StyleFillComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-style-fill","template":"\n    <div class=\"aol-style-fill\"></div>\n  "}]}],"members":{"color":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":21,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":22,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":23,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"StyleComponent"},{"__symbolic":"reference","name":"StyleCircleComponent"},{"__symbolic":"reference","name":"StyleTextComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"StyleIconComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-style-icon","template":"\n    <div class=\"aol-style-icon\"></div>\n  "}]}],"members":{"anchor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"anchorXUnits":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"anchorYUnits":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"anchorOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"color":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"img":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"offset":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"offsetOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"opacity":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"scale":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"snapToPixel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3}}]}],"rotateWithView":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":3}}]}],"rotation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":3}}]}],"size":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":3}}]}],"imgSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":3}}]}],"src":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":48,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"StyleComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"StyleStrokeComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-style-stroke","template":"\n    <div class=\"aol-style-stroke\"></div>\n  "}]}],"members":{"color":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"lineCap":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"lineDash":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"lineJoin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"miterLimit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":31,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":32,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":33,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"StyleComponent"},{"__symbolic":"reference","name":"StyleCircleComponent"},{"__symbolic":"reference","name":"StyleTextComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"StyleTextComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-style-text","template":"\n    <div class=\"aol-style-text\"></div>\n  "}]}],"members":{"font":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"offsetX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"offsetY":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"scale":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"rotateWithView":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"rotation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"text":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"textAlign":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"textBaseLine":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":33,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"StyleComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"DefaultControlComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-defaults","template":""}]}],"members":{"attribution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"attributionOptions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"rotate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"rotateOptions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"zoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"zoomOptions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-control","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":15,"character":3},"arguments":[{"__symbolic":"reference","name":"ContentComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlAttributionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-attribution","template":""}]}],"members":{"collapsible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":15,"character":58}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlFullScreenComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-fullscreen","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"className":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"labelActive":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"tipLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"keys":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlMousePositionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-mouseposition","template":""}]}],"members":{"coordinateFormat":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":16,"character":58}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlOverviewMapComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-overviewmap","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"collapsed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"collapseLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"collapsible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"layers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"target":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"tipLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"view":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlRotateComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-rotate","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"className":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"tipLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"autoHide":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlScaleLineComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-scaleline","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"units":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlZoomComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-zoom","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"zoomInLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"zoomOutLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"zoomInTipLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"zoomOutTipLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"delta":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlZoomSliderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-zoomslider","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"className":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"maxResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"minResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlZoomToExtentComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-zoomtoextent","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"className":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"tipLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"extent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"FormatMVTComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵc"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-format-mvt","template":"","providers":[{"provide":{"__symbolic":"reference","name":"ɵc"},"useExisting":{"__symbolic":"reference","name":"FormatMVTComponent"}}]}]}],"members":{"featureClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"geometryName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"layerName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"layers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}]}},"TileGridComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"aol-tilegrid","template":""}]}],"members":{"extent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"maxZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"minZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"tileSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"origin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"resolutions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"TileGridWMTSComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"TileGridComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-tilegrid-wmts","template":""}]}],"members":{"origin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"origins":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"resolutions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"matrixIds":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"sizes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"tileSizes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"widths":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"ngOnInit":[{"__symbolic":"method"}]}},"DefaultInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-default","template":""}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DoubleClickZoomInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-doubleclickzoom","template":""}]}],"members":{"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"delta":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DragAndDropInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-draganddrop","template":""}]}],"members":{"formatConstructors":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"target":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DragBoxInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-dragbox","template":""}]}],"members":{"className":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"boxEndCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DragPanInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-dragpan","template":""}]}],"members":{"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"kinetic":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DragRotateInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-dragrotate","template":""}]}],"members":{"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DragRotateAndZoomInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-dragrotateandzoom","template":""}]}],"members":{"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DragZoomInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-dragzoom","template":""}]}],"members":{"className":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"out":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"MouseWheelZoomInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-mousewheelzoom","template":""}]}],"members":{"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"timeout":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"useAnchor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"PinchZoomInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-pinchzoom","template":""}]}],"members":{"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"constrainResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DrawInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-draw","template":""}]}],"members":{"clickTolerance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"features":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"source":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"snapTolerance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"maxPoints":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"minPoints":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"finishCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"style":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"geometryFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"geometryName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"freehandCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3}}]}],"freehand":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":3}}]}],"onChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":42,"character":3}}]}],"onChangeActive":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":44,"character":3}}]}],"onDrawEnd":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":46,"character":3}}]}],"onDrawStart":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":48,"character":3}}]}],"onPropertyChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":50,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"SelectInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"aol-interaction-select","template":""}]}],"members":{"addCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"layers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"style":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"removeCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"toggleCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"multi":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"features":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"filter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"onChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":41,"character":3}}]}],"onSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":43,"character":3}}]}],"onPropertyChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":45,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ModifyInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-modify","template":""}]}],"members":{"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"deleteCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"pixelTolerance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"style":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"features":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"source":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"onModifyEnd":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":26,"character":3}}]}],"onModifyStart":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":28,"character":3}}]}],"onChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":30,"character":3}}]}],"onChangeActive":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":32,"character":3}}]}],"onPropertyChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":34,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"TranslateInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-translate","template":""}]}],"members":{"features":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"layers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"hitTolerance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"onChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":18,"character":3}}]}],"onPropertyChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":20,"character":3}}]}],"onTranslateEnd":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":22,"character":3}}]}],"onTranslateStart":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":3}}]}],"onTranslating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":26,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"OverlayComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-overlay","template":"<ng-content></ng-content>"}]}],"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":13,"character":3},"arguments":[{"__symbolic":"reference","name":"ContentComponent"}]}]}],"id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"offset":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"positioning":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"stopEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"insertFirst":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"autoPan":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"autoPanAnimation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"autoPanMargin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ContentComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"aol-content","template":"<ng-content></ng-content>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":7,"character":33}]}]}},"AttributionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"aol-attribution","template":"<ng-content></ng-content>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":11,"character":34}]}],"ngOnInit":[{"__symbolic":"method"}]}},"AttributionsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-attributions","template":"<ng-content></ng-content>"}]}],"members":{"attributions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren","line":12,"character":3},"arguments":[{"__symbolic":"reference","name":"AttributionComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":15,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"ɵb"}]}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"AngularOpenlayersModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":222,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"ViewComponent"},{"__symbolic":"reference","name":"GraticuleComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"},{"__symbolic":"reference","name":"LayerImageComponent"},{"__symbolic":"reference","name":"LayerTileComponent"},{"__symbolic":"reference","name":"LayerVectorComponent"},{"__symbolic":"reference","name":"LayerVectorTileComponent"},{"__symbolic":"reference","name":"SourceOsmComponent"},{"__symbolic":"reference","name":"SourceBingmapsComponent"},{"__symbolic":"reference","name":"SourceClusterComponent"},{"__symbolic":"reference","name":"SourceVectorComponent"},{"__symbolic":"reference","name":"SourceXYZComponent"},{"__symbolic":"reference","name":"SourceVectorTileComponent"},{"__symbolic":"reference","name":"SourceTileWMSComponent"},{"__symbolic":"reference","name":"SourceTileWMTSComponent"},{"__symbolic":"reference","name":"SourceTileJSONComponent"},{"__symbolic":"reference","name":"SourceGeoJSONComponent"},{"__symbolic":"reference","name":"SourceImageStaticComponent"},{"__symbolic":"reference","name":"SourceImageWMSComponent"},{"__symbolic":"reference","name":"SourceImageArcGISRestComponent"},{"__symbolic":"reference","name":"SourceRasterComponent"},{"__symbolic":"reference","name":"FeatureComponent"},{"__symbolic":"reference","name":"GeometryLinestringComponent"},{"__symbolic":"reference","name":"GeometryPointComponent"},{"__symbolic":"reference","name":"GeometryPolygonComponent"},{"__symbolic":"reference","name":"GeometryCircleComponent"},{"__symbolic":"reference","name":"CoordinateComponent"},{"__symbolic":"reference","name":"CollectionCoordinatesComponent"},{"__symbolic":"reference","name":"StyleComponent"},{"__symbolic":"reference","name":"StyleCircleComponent"},{"__symbolic":"reference","name":"StyleFillComponent"},{"__symbolic":"reference","name":"StyleIconComponent"},{"__symbolic":"reference","name":"StyleStrokeComponent"},{"__symbolic":"reference","name":"StyleTextComponent"},{"__symbolic":"reference","name":"DefaultControlComponent"},{"__symbolic":"reference","name":"ControlComponent"},{"__symbolic":"reference","name":"ControlAttributionComponent"},{"__symbolic":"reference","name":"ControlFullScreenComponent"},{"__symbolic":"reference","name":"ControlMousePositionComponent"},{"__symbolic":"reference","name":"ControlOverviewMapComponent"},{"__symbolic":"reference","name":"ControlRotateComponent"},{"__symbolic":"reference","name":"ControlScaleLineComponent"},{"__symbolic":"reference","name":"ControlZoomComponent"},{"__symbolic":"reference","name":"ControlZoomSliderComponent"},{"__symbolic":"reference","name":"ControlZoomToExtentComponent"},{"__symbolic":"reference","name":"FormatMVTComponent"},{"__symbolic":"reference","name":"TileGridComponent"},{"__symbolic":"reference","name":"TileGridWMTSComponent"},{"__symbolic":"reference","name":"DefaultInteractionComponent"},{"__symbolic":"reference","name":"DoubleClickZoomInteractionComponent"},{"__symbolic":"reference","name":"DragAndDropInteractionComponent"},{"__symbolic":"reference","name":"DragBoxInteractionComponent"},{"__symbolic":"reference","name":"DragPanInteractionComponent"},{"__symbolic":"reference","name":"DragRotateInteractionComponent"},{"__symbolic":"reference","name":"DragRotateAndZoomInteractionComponent"},{"__symbolic":"reference","name":"DragZoomInteractionComponent"},{"__symbolic":"reference","name":"MouseWheelZoomInteractionComponent"},{"__symbolic":"reference","name":"PinchZoomInteractionComponent"},{"__symbolic":"reference","name":"DrawInteractionComponent"},{"__symbolic":"reference","name":"SelectInteractionComponent"},{"__symbolic":"reference","name":"ModifyInteractionComponent"},{"__symbolic":"reference","name":"TranslateInteractionComponent"},{"__symbolic":"reference","name":"OverlayComponent"},{"__symbolic":"reference","name":"ContentComponent"},{"__symbolic":"reference","name":"AttributionComponent"},{"__symbolic":"reference","name":"AttributionsComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":224,"character":12}],"exports":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"ViewComponent"},{"__symbolic":"reference","name":"GraticuleComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"},{"__symbolic":"reference","name":"LayerImageComponent"},{"__symbolic":"reference","name":"LayerTileComponent"},{"__symbolic":"reference","name":"LayerVectorComponent"},{"__symbolic":"reference","name":"LayerVectorTileComponent"},{"__symbolic":"reference","name":"SourceOsmComponent"},{"__symbolic":"reference","name":"SourceBingmapsComponent"},{"__symbolic":"reference","name":"SourceClusterComponent"},{"__symbolic":"reference","name":"SourceVectorComponent"},{"__symbolic":"reference","name":"SourceXYZComponent"},{"__symbolic":"reference","name":"SourceVectorTileComponent"},{"__symbolic":"reference","name":"SourceTileWMSComponent"},{"__symbolic":"reference","name":"SourceTileWMTSComponent"},{"__symbolic":"reference","name":"SourceTileJSONComponent"},{"__symbolic":"reference","name":"SourceGeoJSONComponent"},{"__symbolic":"reference","name":"SourceImageStaticComponent"},{"__symbolic":"reference","name":"SourceImageWMSComponent"},{"__symbolic":"reference","name":"SourceImageArcGISRestComponent"},{"__symbolic":"reference","name":"SourceRasterComponent"},{"__symbolic":"reference","name":"FeatureComponent"},{"__symbolic":"reference","name":"GeometryLinestringComponent"},{"__symbolic":"reference","name":"GeometryPointComponent"},{"__symbolic":"reference","name":"GeometryPolygonComponent"},{"__symbolic":"reference","name":"GeometryCircleComponent"},{"__symbolic":"reference","name":"CoordinateComponent"},{"__symbolic":"reference","name":"CollectionCoordinatesComponent"},{"__symbolic":"reference","name":"StyleComponent"},{"__symbolic":"reference","name":"StyleCircleComponent"},{"__symbolic":"reference","name":"StyleFillComponent"},{"__symbolic":"reference","name":"StyleIconComponent"},{"__symbolic":"reference","name":"StyleStrokeComponent"},{"__symbolic":"reference","name":"StyleTextComponent"},{"__symbolic":"reference","name":"DefaultControlComponent"},{"__symbolic":"reference","name":"ControlComponent"},{"__symbolic":"reference","name":"ControlAttributionComponent"},{"__symbolic":"reference","name":"ControlFullScreenComponent"},{"__symbolic":"reference","name":"ControlMousePositionComponent"},{"__symbolic":"reference","name":"ControlOverviewMapComponent"},{"__symbolic":"reference","name":"ControlRotateComponent"},{"__symbolic":"reference","name":"ControlScaleLineComponent"},{"__symbolic":"reference","name":"ControlZoomComponent"},{"__symbolic":"reference","name":"ControlZoomSliderComponent"},{"__symbolic":"reference","name":"ControlZoomToExtentComponent"},{"__symbolic":"reference","name":"FormatMVTComponent"},{"__symbolic":"reference","name":"TileGridComponent"},{"__symbolic":"reference","name":"TileGridWMTSComponent"},{"__symbolic":"reference","name":"DefaultInteractionComponent"},{"__symbolic":"reference","name":"DoubleClickZoomInteractionComponent"},{"__symbolic":"reference","name":"DragAndDropInteractionComponent"},{"__symbolic":"reference","name":"DragBoxInteractionComponent"},{"__symbolic":"reference","name":"DragPanInteractionComponent"},{"__symbolic":"reference","name":"DragRotateInteractionComponent"},{"__symbolic":"reference","name":"DragRotateAndZoomInteractionComponent"},{"__symbolic":"reference","name":"DragZoomInteractionComponent"},{"__symbolic":"reference","name":"MouseWheelZoomInteractionComponent"},{"__symbolic":"reference","name":"PinchZoomInteractionComponent"},{"__symbolic":"reference","name":"DrawInteractionComponent"},{"__symbolic":"reference","name":"SelectInteractionComponent"},{"__symbolic":"reference","name":"ModifyInteractionComponent"},{"__symbolic":"reference","name":"TranslateInteractionComponent"},{"__symbolic":"reference","name":"OverlayComponent"},{"__symbolic":"reference","name":"ContentComponent"},{"__symbolic":"reference","name":"AttributionComponent"},{"__symbolic":"reference","name":"AttributionsComponent"}]}]}],"members":{}},"ɵa":{"__symbolic":"class","members":{"opacity":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":9,"character":3}}]}],"visible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"extent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"zIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"minResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"maxResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"precompose":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"postcompose":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"LayerGroupComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","members":{"attributions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"SourceRasterComponent"}]}],"ngOnDestroy":[{"__symbolic":"method"}],"_register":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","members":{}}},"origins":{"MapComponent":"./lib/map.component","ViewComponent":"./lib/view.component","GraticuleComponent":"./lib/graticule.component","LayerGroupComponent":"./lib/layers/layergroup.component","LayerImageComponent":"./lib/layers/layerimage.component","LayerTileComponent":"./lib/layers/layertile.component","LayerVectorComponent":"./lib/layers/layervector.component","LayerVectorTileComponent":"./lib/layers/layervectortile.component","SourceOsmComponent":"./lib/sources/osm.component","SourceBingmapsComponent":"./lib/sources/bingmaps.component","SourceClusterComponent":"./lib/sources/cluster.component","SourceVectorComponent":"./lib/sources/vector.component","SourceXYZComponent":"./lib/sources/xyz.component","SourceVectorTileComponent":"./lib/sources/vectortile.component","SourceTileWMSComponent":"./lib/sources/tilewms.component","SourceTileWMTSComponent":"./lib/sources/tilewmts.component","SourceTileJSONComponent":"./lib/sources/tilejson.component","SourceGeoJSONComponent":"./lib/sources/geojson.component","SourceImageStaticComponent":"./lib/sources/imagestatic.component","SourceImageWMSComponent":"./lib/sources/imagewms.component","SourceRasterComponent":"./lib/sources/raster.component","SourceImageArcGISRestComponent":"./lib/sources/imagearcgisrest.component","FeatureComponent":"./lib/feature.component","GeometryLinestringComponent":"./lib/geometry.components","GeometryPointComponent":"./lib/geometry.components","GeometryPolygonComponent":"./lib/geometry.components","GeometryCircleComponent":"./lib/geometry.components","CoordinateComponent":"./lib/coordinate.component","CollectionCoordinatesComponent":"./lib/coordinate.component","StyleComponent":"./lib/styles/style.component","StyleCircleComponent":"./lib/styles/circle.component","StyleFillComponent":"./lib/styles/fill.component","StyleIconComponent":"./lib/styles/icon.component","StyleStrokeComponent":"./lib/styles/stroke.component","StyleTextComponent":"./lib/styles/text.component","DefaultControlComponent":"./lib/controls/default.component","ControlComponent":"./lib/controls/control.component","ControlAttributionComponent":"./lib/controls/attribution.component","ControlFullScreenComponent":"./lib/controls/fullscreen.component","ControlMousePositionComponent":"./lib/controls/mouseposition.component","ControlOverviewMapComponent":"./lib/controls/overviewmap.component","ControlRotateComponent":"./lib/controls/rotate.component","ControlScaleLineComponent":"./lib/controls/scaleline.component","ControlZoomComponent":"./lib/controls/zoom.component","ControlZoomSliderComponent":"./lib/controls/zoomslider.component","ControlZoomToExtentComponent":"./lib/controls/zoomtoextent.component","FormatMVTComponent":"./lib/formats/mvt.component","TileGridComponent":"./lib/tilegrid.component","TileGridWMTSComponent":"./lib/tilegridwmts.component","DefaultInteractionComponent":"./lib/interactions/default.component","DoubleClickZoomInteractionComponent":"./lib/interactions/doubleclickzoom.component","DragAndDropInteractionComponent":"./lib/interactions/draganddrop.component","DragBoxInteractionComponent":"./lib/interactions/dragbox.component","DragPanInteractionComponent":"./lib/interactions/dragpan.component","DragRotateInteractionComponent":"./lib/interactions/dragrotate.component","DragRotateAndZoomInteractionComponent":"./lib/interactions/dragrotateandzoom.component","DragZoomInteractionComponent":"./lib/interactions/dragzoom.component","MouseWheelZoomInteractionComponent":"./lib/interactions/mousewheelzoom.component","PinchZoomInteractionComponent":"./lib/interactions/pinchzoom.component","DrawInteractionComponent":"./lib/interactions/draw.component","SelectInteractionComponent":"./lib/interactions/select.component","ModifyInteractionComponent":"./lib/interactions/modify.component","TranslateInteractionComponent":"./lib/interactions/translate.component","OverlayComponent":"./lib/overlay.component","ContentComponent":"./lib/content.component","AttributionComponent":"./lib/attribution.component","AttributionsComponent":"./lib/attributions.component","AngularOpenlayersModule":"./public_api","ɵa":"./lib/layers/layer.component","ɵb":"./lib/sources/source.component","ɵc":"./lib/formats/format.component"},"importAs":"ngx-openlayers"}
\ No newline at end of file
+{"__symbolic":"module","version":4,"metadata":{"MapComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"aol-map","template":"\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\n    <ng-content></ng-content>\n  "}]}],"members":{"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"height":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"pixelRatio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"keyboardEventTarget":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"loadTilesWhileAnimating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"loadTilesWhileInteracting":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"logo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"renderer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"onClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":41,"character":3}}]}],"onDblClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":43,"character":3}}]}],"onMoveEnd":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":45,"character":3}}]}],"onPointerDrag":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":47,"character":3}}]}],"onPointerMove":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":49,"character":3}}]}],"onPostCompose":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":51,"character":3}}]}],"onPostRender":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":53,"character":3}}]}],"onPreCompose":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":55,"character":3}}]}],"onPropertyChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":57,"character":3}}]}],"onSingleClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":59,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":66,"character":28}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"ViewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-view","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"constrainRotation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"enableRotation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"extent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"maxResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"minResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"maxZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"minZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"resolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"resolutions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"rotation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"zoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"zoomFactor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"center":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":3}}]}],"zoomAnimation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":3}}]}],"onChangeZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":46,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"GraticuleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-graticule","template":"<ng-content></ng-content>"}]}],"members":{"strokeStyle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"showLabels":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"lonLabelPosition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"latLabelPosition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnChanges":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}]}},"LayerGroupComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵa"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-layer-group","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"SkipSelf","line":16,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":17,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"LayerImageComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵa"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-layer-image","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"opacity":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"visible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"extent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"minResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"maxResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"zIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":28,"character":34}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"LayerTileComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵa"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-layer-tile","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"preload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"useInterimTilesOnError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":20,"character":34}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"LayerVectorComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵa"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-layer-vector","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"renderBuffer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"style":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"updateWhileAnimating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"updateWhileInteracting":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":27,"character":34}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"LayerVectorTileComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵa"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-layer-vectortile","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"renderBuffer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"renderMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"renderOrder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"style":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"updateWhileAnimating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"updateWhileInteracting":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"visible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":29,"character":34}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"SourceOsmComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"SourceXYZComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"aol-source-osm","template":"\n    <div class=\"aol-source-osm\"></div>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceOsmComponent"}}]}]}],"members":{"attributions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"cacheSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"maxZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"opaque":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"reprojectionErrorThreshold":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"tileLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":37,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":38,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":40,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":41,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"LayerTileComponent"},{"__symbolic":"reference","name":"SourceRasterComponent"}]}],"ngAfterContentInit":[{"__symbolic":"method"}]}},"SourceBingmapsComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-bingmaps","template":"\n    <div class=\"aol-source-bingmaps\"></div>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceBingmapsComponent"}}]}]}],"members":{"cacheSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"hidpi":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"culture":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"key":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"imagerySet":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"maxZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"reprojectionErrorThreshold":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"tileLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":34,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerTileComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"SourceClusterComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-source-cluster","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceClusterComponent"}}]}]}],"members":{"distance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"geometryFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"sourceVectorComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":21,"character":3},"arguments":[{"__symbolic":"reference","name":"SourceVectorComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":25,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerVectorComponent"}]}],"ngAfterContentInit":[{"__symbolic":"method"}]}},"SourceVectorComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-vector","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceVectorComponent"}}]}]}],"members":{"overlaps":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"useSpatialIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"format":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"strategy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":27,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerVectorComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"SourceXYZComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":17,"character":1},"arguments":[{"selector":"aol-source-xyz","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceXYZComponent"}}]}]}],"members":{"cacheSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"opaque":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"reprojectionErrorThreshold":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"minZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"maxZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"tileGrid":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":3}}]}],"tileLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":3}}]}],"tilePixelRatio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":44,"character":3}}]}],"tileSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":3}}]}],"tileUrlFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":48,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":50,"character":3}}]}],"urls":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":52,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":54,"character":3}}]}],"tileGridXYZ":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":57,"character":3},"arguments":[{"__symbolic":"reference","name":"TileGridComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":61,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":62,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":64,"character":5}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":65,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"LayerTileComponent"},{"__symbolic":"reference","name":"SourceRasterComponent"}]}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"SourceVectorTileComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"aol-source-vectortile","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceVectorTileComponent"}}]}]}],"members":{"cacheSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"overlaps":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"tilePixelRatio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"tileUrlFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"urls":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"formatComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":33,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵc"}]}]}],"tileGridComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":36,"character":3},"arguments":[{"__symbolic":"reference","name":"TileGridComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":40,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerVectorTileComponent"}]}],"ngAfterContentInit":[{"__symbolic":"method"}]}},"SourceTileWMSComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-tilewms","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceTileWMSComponent"}}]}]}],"members":{"cacheSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"gutter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"hidpi":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"params":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"reprojectionErrorThreshold":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"serverType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"tileGrid":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"tileLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"urls":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":41,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerTileComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"SourceTileWMTSComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":15,"character":1},"arguments":[{"selector":"aol-source-tilewmts","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceTileWMTSComponent"}}]}]}],"members":{"cacheSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"logo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"tileGrid":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"reprojectionErrorThreshold":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"requestEncoding":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"layer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"style":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":3}}]}],"tileClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":3}}]}],"tilePixelRatio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":3}}]}],"version":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":53,"character":3}}]}],"format":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":3}}]}],"matrixSet":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":3}}]}],"dimensions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":59,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":3}}]}],"tileLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":3}}]}],"urls":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":67,"character":3}}]}],"tileGridWMTS":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":70,"character":3},"arguments":[{"__symbolic":"reference","name":"TileGridWMTSComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":73,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerTileComponent"}]}],"ngOnChanges":[{"__symbolic":"method"}],"setLayerSource":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}]}},"SourceTileJSONComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-tilejson","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceTileJSONComponent"}}]}]}],"members":{"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":18,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerTileComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"SourceGeoJSONComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-geojson","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceGeoJSONComponent"}}]}]}],"members":{"defaultDataProjection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"featureProjection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"geometryName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":24,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerVectorComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"SourceImageStaticComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-imagestatic","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceImageStaticComponent"}}]}]}],"members":{"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"imageExtent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"attributions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"imageLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"logo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"imageSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":32,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerImageComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"SourceImageWMSComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-imagewms","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceImageWMSComponent"}}]}]}],"members":{"attributions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"hidpi":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"serverType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"imageLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"logo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"params":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"ratio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"resolutions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":38,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerImageComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"SourceRasterComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-source-raster","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceRasterComponent"}}]}]}],"members":{"operation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"threads":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"lib":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"operationType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"beforeOperations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":30,"character":3}}]}],"afterOperations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":32,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":37,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerImageComponent"}]}],"ngAfterContentInit":[{"__symbolic":"method"}]}},"SourceImageArcGISRestComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵb"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-source-imagearcgisrest","template":"\n    <ng-content></ng-content>\n  ","providers":[{"provide":{"__symbolic":"reference","name":"ɵb"},"useExisting":{"__symbolic":"reference","name":"SourceImageArcGISRestComponent"}}]}]}],"members":{"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"attributions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"imageLoadFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"params":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"ratio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"resolutions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"logo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":25,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"LayerImageComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"FeatureComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-feature","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"SourceVectorComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"GeometryLinestringComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-geometry-linestring","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FeatureComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"GeometryPointComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":27,"character":1},"arguments":[{"selector":"aol-geometry-point","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FeatureComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"GeometryPolygonComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":51,"character":1},"arguments":[{"selector":"aol-geometry-polygon","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FeatureComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"GeometryCircleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":76,"character":1},"arguments":[{"selector":"aol-geometry-circle","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"radius":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":86,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FeatureComponent"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"CoordinateComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":12,"character":1},"arguments":[{"selector":"aol-coordinate","template":"\n    <div class=\"aol-coordinate\"></div>\n  "}]}],"members":{"x":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"y":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"srid":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":30,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":31,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":32,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":33,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"ViewComponent"},{"__symbolic":"reference","name":"GeometryPointComponent"},{"__symbolic":"reference","name":"GeometryCircleComponent"},{"__symbolic":"reference","name":"OverlayComponent"}]}],"ngOnChanges":[{"__symbolic":"method"}]}},"CollectionCoordinatesComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":76,"character":1},"arguments":[{"selector":"aol-collection-coordinates","template":"\n    <div class=\"aol-collection-coordinates\"></div>\n  "}]}],"members":{"coordinates":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":85,"character":3}}]}],"srid":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":87,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":92,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":93,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"GeometryLinestringComponent"},{"__symbolic":"reference","name":"GeometryPolygonComponent"}]}],"ngOnChanges":[{"__symbolic":"method"}]}},"StyleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-style","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"geometry":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"fill":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"image":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"stroke":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"text":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"zIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":29,"character":15}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":29,"character":58}}]],"parameters":[{"__symbolic":"reference","name":"FeatureComponent"},{"__symbolic":"reference","name":"LayerVectorComponent"}]}],"update":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}},"StyleCircleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-style-circle","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"fill":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"radius":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"snapToPixel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"stroke":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"atlasManager":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":25,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"StyleComponent"}]}],"update":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"StyleFillComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-style-fill","template":"\n    <div class=\"aol-style-fill\"></div>\n  "}]}],"members":{"color":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":21,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":22,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":23,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"StyleComponent"},{"__symbolic":"reference","name":"StyleCircleComponent"},{"__symbolic":"reference","name":"StyleTextComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"StyleIconComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-style-icon","template":"\n    <div class=\"aol-style-icon\"></div>\n  "}]}],"members":{"anchor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"anchorXUnits":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"anchorYUnits":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"anchorOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"color":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"crossOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"img":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"offset":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"offsetOrigin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"opacity":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"scale":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"snapToPixel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3}}]}],"rotateWithView":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":3}}]}],"rotation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":3}}]}],"size":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":3}}]}],"imgSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":3}}]}],"src":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":48,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"StyleComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"StyleStrokeComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"aol-style-stroke","template":"\n    <div class=\"aol-style-stroke\"></div>\n  "}]}],"members":{"color":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"lineCap":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"lineDash":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"lineJoin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"miterLimit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":31,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":32,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":33,"character":5}}]],"parameters":[{"__symbolic":"reference","name":"StyleComponent"},{"__symbolic":"reference","name":"StyleCircleComponent"},{"__symbolic":"reference","name":"StyleTextComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"StyleTextComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-style-text","template":"\n    <div class=\"aol-style-text\"></div>\n  "}]}],"members":{"font":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"offsetX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"offsetY":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"scale":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"rotateWithView":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"rotation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"text":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"textAlign":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"textBaseLine":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":33,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"StyleComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"DefaultControlComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-defaults","template":""}]}],"members":{"attribution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"attributionOptions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"rotate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"rotateOptions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"zoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"zoomOptions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-control","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":15,"character":3},"arguments":[{"__symbolic":"reference","name":"ContentComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlAttributionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-attribution","template":""}]}],"members":{"collapsible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":15,"character":58}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlFullScreenComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-fullscreen","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"className":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"labelActive":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"tipLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"keys":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlMousePositionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-mouseposition","template":""}]}],"members":{"coordinateFormat":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":16,"character":58}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlOverviewMapComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-overviewmap","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"collapsed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"collapseLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"collapsible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"layers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"target":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"tipLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"view":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlRotateComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-rotate","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"className":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"tipLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"autoHide":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlScaleLineComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-scaleline","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"units":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlZoomComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-zoom","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"zoomInLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"zoomOutLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"zoomInTipLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"zoomOutTipLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"delta":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlZoomSliderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-zoomslider","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"className":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"maxResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"minResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ControlZoomToExtentComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-control-zoomtoextent","template":"\n    <ng-content></ng-content>\n  "}]}],"members":{"className":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"tipLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"extent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"FormatMVTComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵc"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-format-mvt","template":"","providers":[{"provide":{"__symbolic":"reference","name":"ɵc"},"useExisting":{"__symbolic":"reference","name":"FormatMVTComponent"}}]}]}],"members":{"featureClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"geometryName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"layerName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"layers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}]}},"TileGridComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"aol-tilegrid","template":""}]}],"members":{"extent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"maxZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"minZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"tileSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"origin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"resolutions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"TileGridWMTSComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"TileGridComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-tilegrid-wmts","template":""}]}],"members":{"origin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"origins":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"resolutions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"matrixIds":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"sizes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"tileSizes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"widths":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"ngOnInit":[{"__symbolic":"method"}]}},"DefaultInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-default","template":""}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DoubleClickZoomInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-doubleclickzoom","template":""}]}],"members":{"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"delta":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DragAndDropInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-draganddrop","template":""}]}],"members":{"formatConstructors":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"projection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"target":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DragBoxInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-dragbox","template":""}]}],"members":{"className":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"boxEndCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DragPanInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-dragpan","template":""}]}],"members":{"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"kinetic":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DragRotateInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-dragrotate","template":""}]}],"members":{"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DragRotateAndZoomInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-dragrotateandzoom","template":""}]}],"members":{"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DragZoomInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-dragzoom","template":""}]}],"members":{"className":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"out":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"MouseWheelZoomInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-mousewheelzoom","template":""}]}],"members":{"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"timeout":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"useAnchor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"PinchZoomInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-pinchzoom","template":""}]}],"members":{"duration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"constrainResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DrawInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-draw","template":""}]}],"members":{"clickTolerance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"features":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"source":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"snapTolerance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"maxPoints":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"minPoints":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"finishCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"style":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"geometryFunction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"geometryName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"freehandCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3}}]}],"freehand":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":3}}]}],"onChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":42,"character":3}}]}],"onChangeActive":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":44,"character":3}}]}],"onDrawEnd":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":46,"character":3}}]}],"onDrawStart":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":48,"character":3}}]}],"onPropertyChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":50,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"SelectInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"aol-interaction-select","template":""}]}],"members":{"addCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"layers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"style":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"removeCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"toggleCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"multi":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"features":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"filter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"onChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":41,"character":3}}]}],"onSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":43,"character":3}}]}],"onPropertyChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":45,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ModifyInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-modify","template":""}]}],"members":{"condition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"deleteCondition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"pixelTolerance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"style":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"features":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"wrapX":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"source":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"onModifyEnd":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":26,"character":3}}]}],"onModifyStart":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":28,"character":3}}]}],"onChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":30,"character":3}}]}],"onChangeActive":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":32,"character":3}}]}],"onPropertyChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":34,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"TranslateInteractionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"aol-interaction-translate","template":""}]}],"members":{"features":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"layers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"hitTolerance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"onChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":18,"character":3}}]}],"onPropertyChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":20,"character":3}}]}],"onTranslateEnd":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":22,"character":3}}]}],"onTranslateStart":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":3}}]}],"onTranslating":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":26,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"OverlayComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-overlay","template":"<ng-content></ng-content>"}]}],"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":13,"character":3},"arguments":[{"__symbolic":"reference","name":"ContentComponent"}]}]}],"id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"offset":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"positioning":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"stopEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"insertFirst":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"autoPan":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"autoPanAnimation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"autoPanMargin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MapComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ContentComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"aol-content","template":"<ng-content></ng-content>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":7,"character":33}]}]}},"AttributionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"aol-attribution","template":"<ng-content></ng-content>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":11,"character":34}]}],"ngOnInit":[{"__symbolic":"method"}]}},"AttributionsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"aol-attributions","template":"<ng-content></ng-content>"}]}],"members":{"attributions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren","line":12,"character":3},"arguments":[{"__symbolic":"reference","name":"AttributionComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Host","line":15,"character":15}}]],"parameters":[{"__symbolic":"reference","name":"ɵb"}]}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"AngularOpenlayersModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":222,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"ViewComponent"},{"__symbolic":"reference","name":"GraticuleComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"},{"__symbolic":"reference","name":"LayerImageComponent"},{"__symbolic":"reference","name":"LayerTileComponent"},{"__symbolic":"reference","name":"LayerVectorComponent"},{"__symbolic":"reference","name":"LayerVectorTileComponent"},{"__symbolic":"reference","name":"SourceOsmComponent"},{"__symbolic":"reference","name":"SourceBingmapsComponent"},{"__symbolic":"reference","name":"SourceClusterComponent"},{"__symbolic":"reference","name":"SourceVectorComponent"},{"__symbolic":"reference","name":"SourceXYZComponent"},{"__symbolic":"reference","name":"SourceVectorTileComponent"},{"__symbolic":"reference","name":"SourceTileWMSComponent"},{"__symbolic":"reference","name":"SourceTileWMTSComponent"},{"__symbolic":"reference","name":"SourceTileJSONComponent"},{"__symbolic":"reference","name":"SourceGeoJSONComponent"},{"__symbolic":"reference","name":"SourceImageStaticComponent"},{"__symbolic":"reference","name":"SourceImageWMSComponent"},{"__symbolic":"reference","name":"SourceImageArcGISRestComponent"},{"__symbolic":"reference","name":"SourceRasterComponent"},{"__symbolic":"reference","name":"FeatureComponent"},{"__symbolic":"reference","name":"GeometryLinestringComponent"},{"__symbolic":"reference","name":"GeometryPointComponent"},{"__symbolic":"reference","name":"GeometryPolygonComponent"},{"__symbolic":"reference","name":"GeometryCircleComponent"},{"__symbolic":"reference","name":"CoordinateComponent"},{"__symbolic":"reference","name":"CollectionCoordinatesComponent"},{"__symbolic":"reference","name":"StyleComponent"},{"__symbolic":"reference","name":"StyleCircleComponent"},{"__symbolic":"reference","name":"StyleFillComponent"},{"__symbolic":"reference","name":"StyleIconComponent"},{"__symbolic":"reference","name":"StyleStrokeComponent"},{"__symbolic":"reference","name":"StyleTextComponent"},{"__symbolic":"reference","name":"DefaultControlComponent"},{"__symbolic":"reference","name":"ControlComponent"},{"__symbolic":"reference","name":"ControlAttributionComponent"},{"__symbolic":"reference","name":"ControlFullScreenComponent"},{"__symbolic":"reference","name":"ControlMousePositionComponent"},{"__symbolic":"reference","name":"ControlOverviewMapComponent"},{"__symbolic":"reference","name":"ControlRotateComponent"},{"__symbolic":"reference","name":"ControlScaleLineComponent"},{"__symbolic":"reference","name":"ControlZoomComponent"},{"__symbolic":"reference","name":"ControlZoomSliderComponent"},{"__symbolic":"reference","name":"ControlZoomToExtentComponent"},{"__symbolic":"reference","name":"FormatMVTComponent"},{"__symbolic":"reference","name":"TileGridComponent"},{"__symbolic":"reference","name":"TileGridWMTSComponent"},{"__symbolic":"reference","name":"DefaultInteractionComponent"},{"__symbolic":"reference","name":"DoubleClickZoomInteractionComponent"},{"__symbolic":"reference","name":"DragAndDropInteractionComponent"},{"__symbolic":"reference","name":"DragBoxInteractionComponent"},{"__symbolic":"reference","name":"DragPanInteractionComponent"},{"__symbolic":"reference","name":"DragRotateInteractionComponent"},{"__symbolic":"reference","name":"DragRotateAndZoomInteractionComponent"},{"__symbolic":"reference","name":"DragZoomInteractionComponent"},{"__symbolic":"reference","name":"MouseWheelZoomInteractionComponent"},{"__symbolic":"reference","name":"PinchZoomInteractionComponent"},{"__symbolic":"reference","name":"DrawInteractionComponent"},{"__symbolic":"reference","name":"SelectInteractionComponent"},{"__symbolic":"reference","name":"ModifyInteractionComponent"},{"__symbolic":"reference","name":"TranslateInteractionComponent"},{"__symbolic":"reference","name":"OverlayComponent"},{"__symbolic":"reference","name":"ContentComponent"},{"__symbolic":"reference","name":"AttributionComponent"},{"__symbolic":"reference","name":"AttributionsComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":224,"character":12}],"exports":[{"__symbolic":"reference","name":"MapComponent"},{"__symbolic":"reference","name":"ViewComponent"},{"__symbolic":"reference","name":"GraticuleComponent"},{"__symbolic":"reference","name":"LayerGroupComponent"},{"__symbolic":"reference","name":"LayerImageComponent"},{"__symbolic":"reference","name":"LayerTileComponent"},{"__symbolic":"reference","name":"LayerVectorComponent"},{"__symbolic":"reference","name":"LayerVectorTileComponent"},{"__symbolic":"reference","name":"SourceOsmComponent"},{"__symbolic":"reference","name":"SourceBingmapsComponent"},{"__symbolic":"reference","name":"SourceClusterComponent"},{"__symbolic":"reference","name":"SourceVectorComponent"},{"__symbolic":"reference","name":"SourceXYZComponent"},{"__symbolic":"reference","name":"SourceVectorTileComponent"},{"__symbolic":"reference","name":"SourceTileWMSComponent"},{"__symbolic":"reference","name":"SourceTileWMTSComponent"},{"__symbolic":"reference","name":"SourceTileJSONComponent"},{"__symbolic":"reference","name":"SourceGeoJSONComponent"},{"__symbolic":"reference","name":"SourceImageStaticComponent"},{"__symbolic":"reference","name":"SourceImageWMSComponent"},{"__symbolic":"reference","name":"SourceImageArcGISRestComponent"},{"__symbolic":"reference","name":"SourceRasterComponent"},{"__symbolic":"reference","name":"FeatureComponent"},{"__symbolic":"reference","name":"GeometryLinestringComponent"},{"__symbolic":"reference","name":"GeometryPointComponent"},{"__symbolic":"reference","name":"GeometryPolygonComponent"},{"__symbolic":"reference","name":"GeometryCircleComponent"},{"__symbolic":"reference","name":"CoordinateComponent"},{"__symbolic":"reference","name":"CollectionCoordinatesComponent"},{"__symbolic":"reference","name":"StyleComponent"},{"__symbolic":"reference","name":"StyleCircleComponent"},{"__symbolic":"reference","name":"StyleFillComponent"},{"__symbolic":"reference","name":"StyleIconComponent"},{"__symbolic":"reference","name":"StyleStrokeComponent"},{"__symbolic":"reference","name":"StyleTextComponent"},{"__symbolic":"reference","name":"DefaultControlComponent"},{"__symbolic":"reference","name":"ControlComponent"},{"__symbolic":"reference","name":"ControlAttributionComponent"},{"__symbolic":"reference","name":"ControlFullScreenComponent"},{"__symbolic":"reference","name":"ControlMousePositionComponent"},{"__symbolic":"reference","name":"ControlOverviewMapComponent"},{"__symbolic":"reference","name":"ControlRotateComponent"},{"__symbolic":"reference","name":"ControlScaleLineComponent"},{"__symbolic":"reference","name":"ControlZoomComponent"},{"__symbolic":"reference","name":"ControlZoomSliderComponent"},{"__symbolic":"reference","name":"ControlZoomToExtentComponent"},{"__symbolic":"reference","name":"FormatMVTComponent"},{"__symbolic":"reference","name":"TileGridComponent"},{"__symbolic":"reference","name":"TileGridWMTSComponent"},{"__symbolic":"reference","name":"DefaultInteractionComponent"},{"__symbolic":"reference","name":"DoubleClickZoomInteractionComponent"},{"__symbolic":"reference","name":"DragAndDropInteractionComponent"},{"__symbolic":"reference","name":"DragBoxInteractionComponent"},{"__symbolic":"reference","name":"DragPanInteractionComponent"},{"__symbolic":"reference","name":"DragRotateInteractionComponent"},{"__symbolic":"reference","name":"DragRotateAndZoomInteractionComponent"},{"__symbolic":"reference","name":"DragZoomInteractionComponent"},{"__symbolic":"reference","name":"MouseWheelZoomInteractionComponent"},{"__symbolic":"reference","name":"PinchZoomInteractionComponent"},{"__symbolic":"reference","name":"DrawInteractionComponent"},{"__symbolic":"reference","name":"SelectInteractionComponent"},{"__symbolic":"reference","name":"ModifyInteractionComponent"},{"__symbolic":"reference","name":"TranslateInteractionComponent"},{"__symbolic":"reference","name":"OverlayComponent"},{"__symbolic":"reference","name":"ContentComponent"},{"__symbolic":"reference","name":"AttributionComponent"},{"__symbolic":"reference","name":"AttributionsComponent"}]}]}],"members":{}},"ɵa":{"__symbolic":"class","members":{"opacity":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":9,"character":3}}]}],"visible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"extent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"zIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"minResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"maxResolution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"precompose":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"postcompose":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"LayerGroupComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","members":{"attributions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"SourceRasterComponent"}]}],"ngOnDestroy":[{"__symbolic":"method"}],"_register":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","members":{}}},"origins":{"MapComponent":"./lib/map.component","ViewComponent":"./lib/view.component","GraticuleComponent":"./lib/graticule.component","LayerGroupComponent":"./lib/layers/layergroup.component","LayerImageComponent":"./lib/layers/layerimage.component","LayerTileComponent":"./lib/layers/layertile.component","LayerVectorComponent":"./lib/layers/layervector.component","LayerVectorTileComponent":"./lib/layers/layervectortile.component","SourceOsmComponent":"./lib/sources/osm.component","SourceBingmapsComponent":"./lib/sources/bingmaps.component","SourceClusterComponent":"./lib/sources/cluster.component","SourceVectorComponent":"./lib/sources/vector.component","SourceXYZComponent":"./lib/sources/xyz.component","SourceVectorTileComponent":"./lib/sources/vectortile.component","SourceTileWMSComponent":"./lib/sources/tilewms.component","SourceTileWMTSComponent":"./lib/sources/tilewmts.component","SourceTileJSONComponent":"./lib/sources/tilejson.component","SourceGeoJSONComponent":"./lib/sources/geojson.component","SourceImageStaticComponent":"./lib/sources/imagestatic.component","SourceImageWMSComponent":"./lib/sources/imagewms.component","SourceRasterComponent":"./lib/sources/raster.component","SourceImageArcGISRestComponent":"./lib/sources/imagearcgisrest.component","FeatureComponent":"./lib/feature.component","GeometryLinestringComponent":"./lib/geometry.components","GeometryPointComponent":"./lib/geometry.components","GeometryPolygonComponent":"./lib/geometry.components","GeometryCircleComponent":"./lib/geometry.components","CoordinateComponent":"./lib/coordinate.component","CollectionCoordinatesComponent":"./lib/coordinate.component","StyleComponent":"./lib/styles/style.component","StyleCircleComponent":"./lib/styles/circle.component","StyleFillComponent":"./lib/styles/fill.component","StyleIconComponent":"./lib/styles/icon.component","StyleStrokeComponent":"./lib/styles/stroke.component","StyleTextComponent":"./lib/styles/text.component","DefaultControlComponent":"./lib/controls/default.component","ControlComponent":"./lib/controls/control.component","ControlAttributionComponent":"./lib/controls/attribution.component","ControlFullScreenComponent":"./lib/controls/fullscreen.component","ControlMousePositionComponent":"./lib/controls/mouseposition.component","ControlOverviewMapComponent":"./lib/controls/overviewmap.component","ControlRotateComponent":"./lib/controls/rotate.component","ControlScaleLineComponent":"./lib/controls/scaleline.component","ControlZoomComponent":"./lib/controls/zoom.component","ControlZoomSliderComponent":"./lib/controls/zoomslider.component","ControlZoomToExtentComponent":"./lib/controls/zoomtoextent.component","FormatMVTComponent":"./lib/formats/mvt.component","TileGridComponent":"./lib/tilegrid.component","TileGridWMTSComponent":"./lib/tilegridwmts.component","DefaultInteractionComponent":"./lib/interactions/default.component","DoubleClickZoomInteractionComponent":"./lib/interactions/doubleclickzoom.component","DragAndDropInteractionComponent":"./lib/interactions/draganddrop.component","DragBoxInteractionComponent":"./lib/interactions/dragbox.component","DragPanInteractionComponent":"./lib/interactions/dragpan.component","DragRotateInteractionComponent":"./lib/interactions/dragrotate.component","DragRotateAndZoomInteractionComponent":"./lib/interactions/dragrotateandzoom.component","DragZoomInteractionComponent":"./lib/interactions/dragzoom.component","MouseWheelZoomInteractionComponent":"./lib/interactions/mousewheelzoom.component","PinchZoomInteractionComponent":"./lib/interactions/pinchzoom.component","DrawInteractionComponent":"./lib/interactions/draw.component","SelectInteractionComponent":"./lib/interactions/select.component","ModifyInteractionComponent":"./lib/interactions/modify.component","TranslateInteractionComponent":"./lib/interactions/translate.component","OverlayComponent":"./lib/overlay.component","ContentComponent":"./lib/content.component","AttributionComponent":"./lib/attribution.component","AttributionsComponent":"./lib/attributions.component","AngularOpenlayersModule":"./public_api","ɵa":"./lib/layers/layer.component","ɵb":"./lib/sources/source.component","ɵc":"./lib/formats/format.component"},"importAs":"ngx-openlayers"}
\ No newline at end of file
